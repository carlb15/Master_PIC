

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
<<<<<<< HEAD
                                                                                               Tue Apr 01 15:17:41 2014
=======
                                                                                               Mon Mar 17 20:02:15 2014
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	param0,global,class=BANK0,space=1,delta=1
    78  0000                     _BAUDCONbits	set	4024
    79  0000                     _INTCONbits	set	4082
    80  0000                     _IPR1bits	set	3999
    81  0000                     _LATB	set	3978
    82  0000                     _OSCCON	set	4051
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _OSCTUNEbits	set	3995
    85  0000                     _PIE1bits	set	3997
    86  0000                     _PIR1bits	set	3998
    87  0000                     _RCONbits	set	4048
    88  0000                     _RCREG	set	4014
    89  0000                     _RCSTA	set	4011
    90  0000                     _RCSTAbits	set	4011
    91  0000                     _SPBRG	set	4015
    92  0000                     _SPBRGH	set	4016
    93  0000                     _SSP1CON2bits	set	4037
    94  0000                     _SSPADD	set	4040
    95  0000                     _SSPBUF	set	4041
    96  0000                     _SSPCON1	set	4038
    97  0000                     _SSPCON2bits	set	4037
    98  0000                     _T0CON	set	4053
    99  0000                     _T0CONbits	set	4053
   100  0000                     _T1CON	set	4045
   101  0000                     _T1CONbits	set	4045
   102  0000                     _TMR0H	set	4055
   103  0000                     _TMR0L	set	4054
   104  0000                     _TMR1H	set	4047
   105  0000                     _TMR1L	set	4046
   106  0000                     _TRISB	set	3987
   107  0000                     _TRISCbits	set	3988
   108  0000                     _TXREG	set	4013
   109  0000                     _TXSTA	set	4012
   110  0000                     _TXSTAbits	set	4012
   111                           
   112                           	psect	nvCOMRAM
   113  000065                     __pnvCOMRAM:
   114                           	opt stack 0
   115  000065                     _uc_ptr:
   116                           	opt stack 0
   117  000065                     	ds	2
   118                           
   119                           	psect	nvBANK0
   120  0000E8                     __pnvBANK0:
   121                           	opt stack 0
   122  0000E8                     _ic_ptr:
   123                           	opt stack 0
   124  0000E8                     	ds	2
   125                           
   126                           ; #config settings
   127  0000                     
   128                           	psect	cinit
   129  001DA8                     __pcinit:
   130                           	opt stack 0
   131  001DA8                     start_initialization:
   132                           	opt stack 0
   133  001DA8                     __initialization:
   134                           	opt stack 0
   135                           
   136                           ; Clear objects allocated to BANK2 (54 bytes)
   137  001DA8  EE02  F000         	lfsr	0,__pbssBANK2
   138  001DAC  0E36               	movlw	54
   139  001DAE                     clear_0:
   140  001DAE  6AEE               	clrf	postinc0,c
   141  001DB0  06E8               	decf	wreg,f,c
   142  001DB2  E1FD               	bnz	clear_0
   143                           
   144                           ; Clear objects allocated to BANK1 (130 bytes)
   145  001DB4  EE01  F000         	lfsr	0,__pbssBANK1
   146  001DB8  0E82               	movlw	130
   147  001DBA                     clear_1:
   148  001DBA  6AEE               	clrf	postinc0,c
   149  001DBC  06E8               	decf	wreg,f,c
   150  001DBE  E1FD               	bnz	clear_1
   151                           
   152                           ; Clear objects allocated to BANK0 (54 bytes)
   153  001DC0  EE00  F080         	lfsr	0,__pbssBANK0
   154  001DC4  0E36               	movlw	54
   155  001DC6                     clear_2:
   156  001DC6  6AEE               	clrf	postinc0,c
   157  001DC8  06E8               	decf	wreg,f,c
   158  001DCA  E1FD               	bnz	clear_2
   159                           
   160                           ; Clear objects allocated to COMRAM (49 bytes)
   161  001DCC  EE00  F034         	lfsr	0,__pbssCOMRAM
   162  001DD0  0E31               	movlw	49
   163  001DD2                     clear_3:
   164  001DD2  6AEE               	clrf	postinc0,c
   165  001DD4  06E8               	decf	wreg,f,c
   166  001DD6  E1FD               	bnz	clear_3
   167  001DD8                     end_of_initialization:
   168                           	opt stack 0
   169  001DD8                     __end_of__initialization:
   170                           	opt stack 0
   171  001DD8  0E00               	movlw	low (__Lmediumconst shr (0+16))
   172  001DDA  6EF8               	movwf	tblptru,c
   173  001DDC  0100               	movlb	0
   174  001DDE  EF26  F002         	goto	_main	;jump to C main() function
   175                           tblptru	equ	0xFF8
   176                           postinc0	equ	0xFEE
   177                           wreg	equ	0xFE8
   178                           
   179                           	psect	bssCOMRAM
   180  000034                     __pbssCOMRAM:
   181                           	opt stack 0
   182  000034                     _buf:
   183                           	opt stack 0
   184  000034                     	ds	10
   185  00003E                     _ADCBuffer0:
   186                           	opt stack 0
   187  00003E                     	ds	5
   188  000043                     _ADCBuffer1:
   189                           	opt stack 0
   190  000043                     	ds	5
   191  000048                     _buff:
   192                           	opt stack 0
   193  000048                     	ds	5
   194  00004D                     _voltage:
   195                           	opt stack 0
   196  00004D                     	ds	3
   197  000050                     _ADCResult:
   198                           	opt stack 0
   199  000050                     	ds	2
   200  000052                     _bufferLen:
   201                           	opt stack 0
   202  000052                     	ds	2
   203  000054                     _length:
   204                           	opt stack 0
   205  000054                     	ds	2
   206  000056                     _previousValue:
   207                           	opt stack 0
   208  000056                     	ds	2
   209  000058                     _MQ_Main_Willing_to_block:
   210                           	opt stack 0
   211  000058                     	ds	1
   212  000059                     _USART_Status:
   213                           	opt stack 0
   214  000059                     	ds	1
   215  00005A                     _checksum_flag:
   216                           	opt stack 0
   217  00005A                     	ds	1
   218  00005B                     _count:
   219                           	opt stack 0
   220  00005B                     	ds	1
   221  00005C                     _last_reg_recvd:
   222                           	opt stack 0
   223  00005C                     	ds	1
   224  00005D                     _length_flag:
   225                           	opt stack 0
   226  00005D                     	ds	1
   227  00005E                     _msg_flag:
   228                           	opt stack 0
   229  00005E                     	ds	1
   230  00005F                     _msgtype:
   231                           	opt stack 0
   232  00005F                     	ds	1
   233  000060                     _msgtype_flag:
   234                           	opt stack 0
   235  000060                     	ds	1
   236  000061                     _sendToMotorPIC_flag:
   237                           	opt stack 0
   238  000061                     	ds	1
   239  000062                     _sendToSensorPIC_flag:
   240                           	opt stack 0
   241  000062                     	ds	1
   242  000063                     _sent_i2c_msg:
   243                           	opt stack 0
   244  000063                     	ds	1
   245  000064                     _uartData:
   246                           	opt stack 0
   247  000064                     	ds	1
   248                           tblptru	equ	0xFF8
   249                           postinc0	equ	0xFEE
   250                           wreg	equ	0xFE8
   251                           
   252                           	psect	bssBANK0
   253  000080                     __pbssBANK0:
   254                           	opt stack 0
   255  000080                     _ToMainHigh_MQ:
   256                           	opt stack 0
   257  000080                     	ds	54
   258                           tblptru	equ	0xFF8
   259                           postinc0	equ	0xFEE
   260                           wreg	equ	0xFE8
   261                           
   262                           	psect	bssBANK1
   263  000100                     __pbssBANK1:
   264                           	opt stack 0
   265  000100                     _msgbuffer:
   266                           	opt stack 0
   267  000100                     	ds	20
   268  000114                     _bufferFlag:
   269                           	opt stack 0
   270  000114                     	ds	2
   271  000116                     _FromMainLow_MQ:
   272                           	opt stack 0
   273  000116                     	ds	54
   274  00014C                     _ToMainLow_MQ:
   275                           	opt stack 0
   276  00014C                     	ds	54
   277                           tblptru	equ	0xFF8
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           
   281                           	psect	bssBANK2
   282  000200                     __pbssBANK2:
   283                           	opt stack 0
   284  000200                     _FromMainHigh_MQ:
   285                           	opt stack 0
   286  000200                     	ds	54
   287                           tblptru	equ	0xFF8
   288                           postinc0	equ	0xFEE
   289                           wreg	equ	0xFE8
   290                           
   291                           	psect	cstackBANK1
   292  000182                     __pcstackBANK1:
   293                           	opt stack 0
   294  000182                     ?_in_high_int:
   295                           	opt stack 0
   296  000182                     ?___lwmod:
   297                           	opt stack 0
   298  000182                     i2c_configure_master@slave_addr:
   299                           	opt stack 0
   300  000182                     i2c_master_recv@length:
   301                           	opt stack 0
   302  000182                     OpenTimer0@config:
   303                           	opt stack 0
   304  000182                     OpenTimer1@config:
   305                           	opt stack 0
   306  000182                     Delay1KTCYx@unit:
   307                           	opt stack 0
   308  000182                     init_queue@qptr:
   309                           	opt stack 0
   310  000182                     check_msg@qptr:
   311                           	opt stack 0
   312  000182                     i2c_master_send@msg:
   313                           	opt stack 0
   314  000182                     init_i2c@ic:
   315                           	opt stack 0
   316  000182                     init_uart_recv@uc:
   317                           	opt stack 0
   318  000182                     uart_retrieve_buffer@length:
   319                           	opt stack 0
   320  000182                     timer0_lthread@tptr:
   321                           	opt stack 0
   322  000182                     init_timer1_lthread@tptr:
   323                           	opt stack 0
   324  000182                     OpenUSART@spbrg:
   325                           	opt stack 0
   326  000182                     ___lwmod@dividend:
   327                           	opt stack 0
   328  000182                     memcpy@d1:
   329                           	opt stack 0
   330                           
   331                           ; 2 bytes @ 0x0
   332  000182                     	ds	2
   333  000184                     ??_OpenUSART:
   334  000184                     ??_init_queue:
   335  000184                     ??_check_msg:
   336  000184                     ??_i2c_master_send:
   337  000184                     ?_in_low_int:
   338                           	opt stack 0
   339  000184                     uart_retrieve_buffer@msgbuffer:
   340                           	opt stack 0
   341  000184                     timer0_lthread@msgtype:
   342                           	opt stack 0
   343  000184                     ___lwmod@divisor:
   344                           	opt stack 0
   345  000184                     memcpy@s1:
   346                           	opt stack 0
   347                           
   348                           ; 2 bytes @ 0x2
   349  000184                     	ds	1
   350  000185                     init_queue@i:
   351                           	opt stack 0
   352                           
   353                           ; 1 bytes @ 0x3
   354  000185                     	ds	1
   355  000186                     ??_init_queues:
   356  000186                     ??_uart_retrieve_buffer:
   357  000186                     ??___lwmod:
   358  000186                     ?_in_main:
   359                           	opt stack 0
   360  000186                     timer0_lthread@length:
   361                           	opt stack 0
   362  000186                     memcpy@n:
   363                           	opt stack 0
   364                           
   365                           ; 2 bytes @ 0x4
   366  000186                     	ds	1
   367  000187                     OpenUSART@config:
   368                           	opt stack 0
   369  000187                     ___lwmod@counter:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x5
   373  000187                     	ds	1
   374  000188                     ??_block_on_To_msgqueues:
   375  000188                     timer0_lthread@msgbuffer:
   376                           	opt stack 0
   377  000188                     memcpy@d:
   378                           	opt stack 0
   379                           
   380                           ; 2 bytes @ 0x6
   381  000188                     	ds	1
   382  000189                     uart_retrieve_buffer@i:
   383                           	opt stack 0
   384                           
   385                           ; 2 bytes @ 0x7
   386  000189                     	ds	1
   387  00018A                     i2c_master_send@length:
   388                           	opt stack 0
   389  00018A                     timer0_lthread@msgval:
   390                           	opt stack 0
   391  00018A                     memcpy@s:
   392                           	opt stack 0
   393                           
   394                           ; 2 bytes @ 0x8
   395  00018A                     	ds	1
   396  00018B                     i2c_master_send@i:
   397                           	opt stack 0
   398  00018B                     uart_lthread@uptr:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0x9
   402  00018B                     	ds	1
   403  00018C                     send_msg@qptr:
   404                           	opt stack 0
   405  00018C                     recv_msg@qptr:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0xA
   409  00018C                     	ds	1
   410  00018D                     uart_lthread@msgtype:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xB
   414  00018D                     	ds	1
   415  00018E                     send_msg@length:
   416                           	opt stack 0
   417  00018E                     recv_msg@maxlength:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0xC
   421  00018E                     	ds	1
   422  00018F                     send_msg@msgtype:
   423                           	opt stack 0
   424  00018F                     recv_msg@msgtype:
   425                           	opt stack 0
   426  00018F                     uart_lthread@length:
   427                           	opt stack 0
   428                           
   429                           ; 2 bytes @ 0xD
   430  00018F                     	ds	1
   431  000190                     send_msg@data:
   432                           	opt stack 0
   433                           
   434                           ; 2 bytes @ 0xE
   435  000190                     	ds	1
   436  000191                     recv_msg@data:
   437                           	opt stack 0
   438  000191                     uart_lthread@msgbuffer:
   439                           	opt stack 0
   440                           
   441                           ; 2 bytes @ 0xF
   442  000191                     	ds	1
   443  000192                     ??_send_msg:
   444                           
   445                           ; 0 bytes @ 0x10
   446  000192                     	ds	1
   447  000193                     ??_recv_msg:
   448  000193                     send_msg@tlength:
   449                           	opt stack 0
   450                           
   451                           ; 2 bytes @ 0x11
   452  000193                     	ds	2
   453  000195                     send_msg@slot:
   454                           	opt stack 0
   455  000195                     recv_msg@slot:
   456                           	opt stack 0
   457                           
   458                           ; 1 bytes @ 0x13
   459  000195                     	ds	1
   460  000196                     send_msg@qmsg:
   461                           	opt stack 0
   462  000196                     recv_msg@tlength:
   463                           	opt stack 0
   464                           
   465                           ; 2 bytes @ 0x14
   466  000196                     	ds	2
   467  000198                     ToMainHigh_sendmsg@msgtype:
   468                           	opt stack 0
   469  000198                     FromMainHigh_sendmsg@msgtype:
   470                           	opt stack 0
   471  000198                     recv_msg@qmsg:
   472                           	opt stack 0
   473                           
   474                           ; 2 bytes @ 0x16
   475  000198                     	ds	1
   476  000199                     ToMainHigh_sendmsg@data:
   477                           	opt stack 0
   478  000199                     FromMainHigh_sendmsg@data:
   479                           	opt stack 0
   480                           
   481                           ; 2 bytes @ 0x17
   482  000199                     	ds	1
   483  00019A                     ToMainLow_recvmsg@msgtype:
   484                           	opt stack 0
   485  00019A                     ToMainHigh_recvmsg@msgtype:
   486                           	opt stack 0
   487                           
   488                           ; 2 bytes @ 0x18
   489  00019A                     	ds	1
   490  00019B                     ToMainHigh_sendmsg@length:
   491                           	opt stack 0
   492  00019B                     FromMainHigh_sendmsg@length:
   493                           	opt stack 0
   494                           
   495                           ; 1 bytes @ 0x19
   496  00019B                     	ds	1
   497  00019C                     ToMainLow_recvmsg@data:
   498                           	opt stack 0
   499  00019C                     ToMainHigh_recvmsg@data:
   500                           	opt stack 0
   501  00019C                     timer1_lthread@tptr:
   502                           	opt stack 0
   503  00019C                     i2c_lthread@i2cptr:
   504                           	opt stack 0
   505                           
   506                           ; 2 bytes @ 0x1A
   507  00019C                     	ds	2
   508  00019E                     ToMainLow_recvmsg@maxlength:
   509                           	opt stack 0
   510  00019E                     ToMainHigh_recvmsg@maxlength:
   511                           	opt stack 0
   512  00019E                     timer1_lthread@msgtype:
   513                           	opt stack 0
   514  00019E                     i2c_lthread@msgtype:
   515                           	opt stack 0
   516                           
   517                           ; 2 bytes @ 0x1C
   518  00019E                     	ds	2
   519  0001A0                     timer1_lthread@length:
   520                           	opt stack 0
   521  0001A0                     i2c_lthread@length:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x1E
   525  0001A0                     	ds	2
   526  0001A2                     timer1_lthread@msgbuffer:
   527                           	opt stack 0
   528  0001A2                     i2c_lthread@msgbuffer:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0x20
   532  0001A2                     	ds	2
   533  0001A4                     ??_i2c_lthread:
   534  0001A4                     ??_timer1_lthread:
   535                           
   536                           ; 0 bytes @ 0x22
   537  0001A4                     	ds	1
   538  0001A5                     timer1_lthread@retval:
   539                           	opt stack 0
   540                           
   541                           ; 1 bytes @ 0x23
   542  0001A5                     	ds	1
   543  0001A6                     ??_main:
   544                           
   545                           ; 0 bytes @ 0x24
   546  0001A6                     	ds	1
   547  0001A7                     main@msgbuffer:
   548                           	opt stack 0
   549                           
   550                           ; 11 bytes @ 0x25
   551  0001A7                     	ds	11
   552  0001B2                     main@t0thread_data:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0x30
   556  0001B2                     	ds	2
   557  0001B4                     main@slave_address:
   558                           	opt stack 0
   559                           
   560                           ; 1 bytes @ 0x32
   561  0001B4                     	ds	1
   562  0001B5                     main@uthread_data:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x33
   566  0001B5                     	ds	2
   567  0001B7                     main@i2cthread_data:
   568                           	opt stack 0
   569                           
   570                           ; 2 bytes @ 0x35
   571  0001B7                     	ds	2
   572  0001B9                     main@t1thread_data:
   573                           	opt stack 0
   574                           
   575                           ; 2 bytes @ 0x37
   576  0001B9                     	ds	2
   577  0001BB                     main@length:
   578                           	opt stack 0
   579                           
   580                           ; 1 bytes @ 0x39
   581  0001BB                     	ds	1
   582  0001BC                     main@msgtype:
   583                           	opt stack 0
   584                           
   585                           ; 1 bytes @ 0x3A
   586  0001BC                     	ds	1
   587  0001BD                     main@uc:
   588                           	opt stack 0
   589                           
   590                           ; 23 bytes @ 0x3B
   591  0001BD                     	ds	23
   592  0001D4                     main@ic:
   593                           	opt stack 0
   594                           
   595                           ; 35 bytes @ 0x52
   596  0001D4                     	ds	35
   597                           tblptru	equ	0xFF8
   598                           postinc0	equ	0xFEE
   599                           wreg	equ	0xFE8
   600                           
   601                           	psect	cstackBANK0
   602  0000B6                     __pcstackBANK0:
   603                           	opt stack 0
   604  0000B6                     ??_i2c_int_handler_master_rx:
   605  0000B6                     ??_i2c_int_handler_master_tx:
   606  0000B6                     ?i2_in_high_int:
   607                           	opt stack 0
   608  0000B6                     WriteTimer0@timer0:
   609                           	opt stack 0
   610  0000B6                     i2check_msg@qptr:
   611                           	opt stack 0
   612  0000B6                     i2memcpy@d1:
   613                           	opt stack 0
   614                           
   615                           ; 2 bytes @ 0x0
   616  0000B6                     	ds	2
   617  0000B8                     ??i2_check_msg:
   618  0000B8                     ?i2_in_low_int:
   619                           	opt stack 0
   620  0000B8                     WriteTimer0@timer:
   621                           	opt stack 0
   622  0000B8                     i2memcpy@s1:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x2
   626  0000B8                     	ds	2
   627  0000BA                     i2memcpy@n:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0x4
   631  0000BA                     	ds	2
   632  0000BC                     i2memcpy@d:
   633                           	opt stack 0
   634                           
   635                           ; 2 bytes @ 0x6
   636  0000BC                     	ds	2
   637  0000BE                     i2memcpy@s:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x8
   641  0000BE                     	ds	2
   642  0000C0                     i2send_msg@qptr:
   643                           	opt stack 0
   644  0000C0                     i2recv_msg@qptr:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0xA
   648  0000C0                     	ds	2
   649  0000C2                     i2send_msg@length:
   650                           	opt stack 0
   651  0000C2                     i2recv_msg@maxlength:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0xC
   655  0000C2                     	ds	1
   656  0000C3                     i2send_msg@msgtype:
   657                           	opt stack 0
   658  0000C3                     i2recv_msg@msgtype:
   659                           	opt stack 0
   660                           
   661                           ; 2 bytes @ 0xD
   662  0000C3                     	ds	1
   663  0000C4                     i2send_msg@data:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0xE
   667  0000C4                     	ds	1
   668  0000C5                     i2recv_msg@data:
   669                           	opt stack 0
   670                           
   671                           ; 2 bytes @ 0xF
   672  0000C5                     	ds	1
   673  0000C6                     ??i2_send_msg:
   674                           
   675                           ; 0 bytes @ 0x10
   676  0000C6                     	ds	1
   677  0000C7                     ??i2_recv_msg:
   678  0000C7                     i2send_msg@tlength:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x11
   682  0000C7                     	ds	2
   683  0000C9                     i2send_msg@slot:
   684                           	opt stack 0
   685  0000C9                     i2recv_msg@slot:
   686                           	opt stack 0
   687                           
   688                           ; 1 bytes @ 0x13
   689  0000C9                     	ds	1
   690  0000CA                     i2send_msg@qmsg:
   691                           	opt stack 0
   692  0000CA                     i2recv_msg@tlength:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x14
   696  0000CA                     	ds	2
   697  0000CC                     i2ToMainHigh_sendmsg@msgtype:
   698                           	opt stack 0
   699  0000CC                     i2recv_msg@qmsg:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x16
   703  0000CC                     	ds	1
   704  0000CD                     i2ToMainHigh_sendmsg@data:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x17
   708  0000CD                     	ds	1
   709  0000CE                     FromMainHigh_recvmsg@msgtype:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x18
   713  0000CE                     	ds	1
   714  0000CF                     i2ToMainHigh_sendmsg@length:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x19
   718  0000CF                     	ds	1
   719  0000D0                     FromMainHigh_recvmsg@data:
   720                           	opt stack 0
   721                           
   722                           ; 2 bytes @ 0x1A
   723  0000D0                     	ds	2
   724  0000D2                     FromMainHigh_recvmsg@maxlength:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x1C
   728  0000D2                     	ds	1
   729  0000D3                     ??_timer0_int_handler:
   730                           
   731                           ; 0 bytes @ 0x1D
   732  0000D3                     	ds	1
   733  0000D4                     timer0_int_handler@length:
   734                           	opt stack 0
   735                           
   736                           ; 2 bytes @ 0x1E
   737  0000D4                     	ds	2
   738  0000D6                     timer0_int_handler@msgtype:
   739                           	opt stack 0
   740                           
   741                           ; 2 bytes @ 0x20
   742  0000D6                     	ds	2
   743  0000D8                     timer0_int_handler@val:
   744                           	opt stack 0
   745                           
   746                           ; 2 bytes @ 0x22
   747  0000D8                     	ds	2
   748  0000DA                     ??_InterruptHandlerHigh:
   749                           
   750                           ; 0 bytes @ 0x24
   751  0000DA                     	ds	14
   752                           tblptru	equ	0xFF8
   753                           postinc0	equ	0xFEE
   754                           wreg	equ	0xFE8
   755                           
   756                           	psect	cstackCOMRAM
   757  000001                     __pcstackCOMRAM:
   758                           	opt stack 0
   759  000001                     ?_ReadTimer1:
   760                           	opt stack 0
   761  000001                     ReadUSART@data:
   762                           	opt stack 0
   763  000001                     WriteUSART@data:
   764                           	opt stack 0
   765  000001                     WriteTimer1@timer1:
   766                           	opt stack 0
   767  000001                     i1memcpy@d1:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x0
   771  000001                     	ds	1
   772  000002                     ??_uart_send_int_handler:
   773                           
   774                           ; 0 bytes @ 0x1
   775  000002                     	ds	1
   776  000003                     ReadTimer1@timer:
   777                           	opt stack 0
   778  000003                     WriteTimer1@timer:
   779                           	opt stack 0
   780  000003                     i1memcpy@s1:
   781                           	opt stack 0
   782                           
   783                           ; 2 bytes @ 0x2
   784  000003                     	ds	2
   785  000005                     i1memcpy@n:
   786                           	opt stack 0
   787                           
   788                           ; 2 bytes @ 0x4
   789  000005                     	ds	2
   790  000007                     i1memcpy@d:
   791                           	opt stack 0
   792                           
   793                           ; 2 bytes @ 0x6
   794  000007                     	ds	2
   795  000009                     i1memcpy@s:
   796                           	opt stack 0
   797                           
   798                           ; 2 bytes @ 0x8
   799  000009                     	ds	2
   800  00000B                     i1send_msg@qptr:
   801                           	opt stack 0
   802                           
   803                           ; 2 bytes @ 0xA
   804  00000B                     	ds	2
   805  00000D                     i1send_msg@length:
   806                           	opt stack 0
   807                           
   808                           ; 1 bytes @ 0xC
   809  00000D                     	ds	1
   810  00000E                     i1send_msg@msgtype:
   811                           	opt stack 0
   812                           
   813                           ; 1 bytes @ 0xD
   814  00000E                     	ds	1
   815  00000F                     i1send_msg@data:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0xE
   819  00000F                     	ds	2
   820  000011                     ??i1_send_msg:
   821                           
   822                           ; 0 bytes @ 0x10
   823  000011                     	ds	1
   824  000012                     i1send_msg@tlength:
   825                           	opt stack 0
   826                           
   827                           ; 2 bytes @ 0x11
   828  000012                     	ds	2
   829  000014                     i1send_msg@slot:
   830                           	opt stack 0
   831                           
   832                           ; 1 bytes @ 0x13
   833  000014                     	ds	1
   834  000015                     i1send_msg@qmsg:
   835                           	opt stack 0
   836                           
   837                           ; 2 bytes @ 0x14
   838  000015                     	ds	2
   839  000017                     ToMainLow_sendmsg@msgtype:
   840                           	opt stack 0
   841  000017                     i1ToMainHigh_sendmsg@msgtype:
   842                           	opt stack 0
   843                           
   844                           ; 1 bytes @ 0x16
   845  000017                     	ds	1
   846  000018                     ToMainLow_sendmsg@data:
   847                           	opt stack 0
   848  000018                     i1ToMainHigh_sendmsg@data:
   849                           	opt stack 0
   850                           
   851                           ; 2 bytes @ 0x17
   852  000018                     	ds	2
   853  00001A                     ToMainLow_sendmsg@length:
   854                           	opt stack 0
   855  00001A                     i1ToMainHigh_sendmsg@length:
   856                           	opt stack 0
   857                           
   858                           ; 1 bytes @ 0x19
   859  00001A                     	ds	1
   860  00001B                     ??_timer1_int_handler:
   861  00001B                     ??_uart_recv_int_handler:
   862                           
   863                           ; 0 bytes @ 0x1A
   864  00001B                     	ds	1
   865  00001C                     timer1_int_handler@result:
   866                           	opt stack 0
   867                           
   868                           ; 2 bytes @ 0x1B
   869  00001C                     	ds	2
   870  00001E                     uart_recv_int_handler@bufLength:
   871                           	opt stack 0
   872                           
   873                           ; 1 bytes @ 0x1D
   874  00001E                     	ds	1
   875  00001F                     uart_recv_int_handler@checkSum:
   876                           	opt stack 0
   877                           
   878                           ; 1 bytes @ 0x1E
   879  00001F                     	ds	1
   880  000020                     uart_recv_int_handler@i:
   881                           	opt stack 0
   882                           
   883                           ; 2 bytes @ 0x1F
   884  000020                     	ds	2
   885  000022                     uart_recv_int_handler@data:
   886                           	opt stack 0
   887                           
   888                           ; 1 bytes @ 0x21
   889  000022                     	ds	1
   890  000023                     ??_InterruptHandlerLow:
   891                           
   892                           ; 0 bytes @ 0x22
   893  000023                     	ds	17
   894                           tblptru	equ	0xFF8
   895                           postinc0	equ	0xFEE
   896                           wreg	equ	0xFE8
   897                           
   898 ;;
   899 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   900 ;;
   901 ;; *************** function _main *****************
   902 ;; Defined at:
   903 ;;		line 189 in file "../src/main.c"
   904 ;; Parameters:    Size  Location     Type
   905 ;;		None
   906 ;; Auto vars:     Size  Location     Type
   907 ;;  ic             35   82[BANK1 ] struct __i2c_comm
   908 ;;  uc             23   59[BANK1 ] struct __uart_comm
   909 ;;  msgbuffer      11   37[BANK1 ] unsigned char [11]
   910 ;;  t1thread_dat    2   55[BANK1 ] struct __timer1_thread_s
   911 ;;  i2cthread_da    2   53[BANK1 ] struct __i2c_thread_stru
   912 ;;  uthread_data    2   51[BANK1 ] struct __uart_thread_str
   913 ;;  t0thread_dat    2   48[BANK1 ] struct __timer0_thread_s
   914 ;;  msgtype         1   58[BANK1 ] unsigned char 
   915 ;;  length          1   57[BANK1 ] char 
   916 ;;  slave_addres    1   50[BANK1 ] unsigned char 
   917 ;;  i               1    0        unsigned char 
   918 ;;  last_reg_rec    1    0        unsigned char 
   919 ;;  c               1    0        unsigned char 
   920 ;; Return value:  Size  Location     Type
   921 ;;		None               void
   922 ;; Registers used:
   923 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   924 ;; Tracked objects:
   925 ;;		On entry : 0/0
   926 ;;		On exit  : 0/0
   927 ;;		Unchanged: 0/0
   928 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   929 ;;      Params:         0       0       0       0       0
   930 ;;      Locals:         0       0      80       0       0
   931 ;;      Temps:          0       0       1       0       0
   932 ;;      Totals:         0       0      81       0       0
   933 ;;Total ram usage:       81 bytes
   934 ;; Hardware stack levels required when called:   14
   935 ;; This function calls:
   936 ;;		_OpenTimer0
   937 ;;		_OpenTimer1
   938 ;;		_OpenUSART
   939 ;;		_ToMainHigh_recvmsg
   940 ;;		_ToMainLow_recvmsg
   941 ;;		_block_on_To_msgqueues
   942 ;;		_enable_interrupts
   943 ;;		_i2c_configure_master
   944 ;;		_i2c_lthread
   945 ;;		_init_i2c
   946 ;;		_init_queues
   947 ;;		_init_timer1_lthread
   948 ;;		_init_uart_recv
   949 ;;		_timer0_lthread
   950 ;;		_timer1_lthread
   951 ;;		_uart_lthread
   952 ;; This function is called by:
   953 ;;		Startup code after reset
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           	psect	text0
   958  00044C                     __ptext0:
   959                           	opt stack 0
   960  00044C                     _main:
   961                           	opt stack 17
   962                           
   963                           ;main.c: 190: char c;
   964                           ;main.c: 191: signed char length;
   965                           ;main.c: 192: unsigned char msgtype;
   966                           ;main.c: 193: unsigned char last_reg_recvd;
   967                           ;main.c: 194: uart_comm uc;
   968                           ;main.c: 195: i2c_comm ic;
   969                           ;main.c: 196: unsigned char msgbuffer[10 + 1];
   970                           ;main.c: 197: unsigned char i;
   971                           ;main.c: 198: uart_thread_struct uthread_data;
   972                           ;main.c: 199: timer1_thread_struct t1thread_data;
   973                           ;main.c: 200: timer0_thread_struct t0thread_data;
   974                           ;main.c: 201: i2c_thread_struct i2cthread_data;
   975                           ;main.c: 209: OSCCON = 0x82;
   976                           
   977                           ;incstack = 0
   978  00044C  0E82               	movlw	130
   979  00044E  6ED3               	movwf	4051,c	;volatile
   980                           
   981                           ;main.c: 210: OSCTUNEbits.PLLEN = 1;
   982  000450  8C9B               	bsf	3995,6,c	;volatile
   983                           
   984                           ;main.c: 229: init_uart_recv(&uc);
   985  000452  0101               	movlb	1	; () banked
   986  000454  0E01               	movlw	high main@uc
   987  000456  0101               	movlb	1	; () banked
   988  000458  0101               	movlb	1	; () banked
   989  00045A  6F83               	movwf	(init_uart_recv@uc+1)& (0+255),b
   990  00045C  0101               	movlb	1	; () banked
   991  00045E  0EBD               	movlw	low main@uc
   992  000460  0101               	movlb	1	; () banked
   993  000462  0101               	movlb	1	; () banked
   994  000464  6F82               	movwf	init_uart_recv@uc& (0+255),b
   995  000466  EC97  F00E         	call	_init_uart_recv	;wreg free
   996                           
   997                           ;main.c: 232: init_i2c(&ic);
   998  00046A  0101               	movlb	1	; () banked
   999  00046C  0E01               	movlw	high main@ic
  1000  00046E  0101               	movlb	1	; () banked
  1001  000470  0101               	movlb	1	; () banked
  1002  000472  6F83               	movwf	(init_i2c@ic+1)& (0+255),b
  1003  000474  0101               	movlb	1	; () banked
  1004  000476  0ED4               	movlw	low main@ic
  1005  000478  0101               	movlb	1	; () banked
  1006  00047A  0101               	movlb	1	; () banked
  1007  00047C  6F82               	movwf	init_i2c@ic& (0+255),b
  1008  00047E  EC62  F00B         	call	_init_i2c	;wreg free
  1009                           
  1010                           ;main.c: 235: init_timer1_lthread(&t1thread_data);
  1011  000482  0101               	movlb	1	; () banked
  1012  000484  0E01               	movlw	high main@t1thread_data
  1013  000486  0101               	movlb	1	; () banked
  1014  000488  0101               	movlb	1	; () banked
  1015  00048A  6F83               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1016  00048C  0101               	movlb	1	; () banked
  1017  00048E  0EB9               	movlw	low main@t1thread_data
  1018  000490  0101               	movlb	1	; () banked
  1019  000492  0101               	movlb	1	; () banked
  1020  000494  6F82               	movwf	init_timer1_lthread@tptr& (0+255),b
  1021  000496  EC13  F010         	call	_init_timer1_lthread	;wreg free
  1022                           
  1023                           ;main.c: 238: init_queues();
  1024  00049A  EC57  F00C         	call	_init_queues	;wreg free
  1025                           
  1026                           ;main.c: 242: TRISB = 0x0;
  1027  00049E  0E00               	movlw	0
  1028  0004A0  6E93               	movwf	3987,c	;volatile
  1029                           
  1030                           ;main.c: 243: LATB = 0x0;
  1031  0004A2  0E00               	movlw	0
  1032  0004A4  6E8A               	movwf	3978,c	;volatile
  1033                           
  1034                           ;main.c: 256: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110011);
  1035  0004A6  0ED3               	movlw	211
  1036  0004A8  ECAC  F00F         	call	_OpenTimer0
  1037                           
  1038                           ;main.c: 268: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1039  0004AC  0EF5               	movlw	245
  1040  0004AE  ECF1  F00E         	call	_OpenTimer1
  1041                           
  1042                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1043  0004B2  909F               	bcf	3999,0,c	;volatile
  1044                           
  1045                           ;main.c: 277: IPR1bits.RCIP = 0;
  1046  0004B4  9A9F               	bcf	3999,5,c	;volatile
  1047                           
  1048                           ;main.c: 279: IPR1bits.TXIP = 0;
  1049  0004B6  989F               	bcf	3999,4,c	;volatile
  1050                           
  1051                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1052  0004B8  869F               	bsf	3999,3,c	;volatile
  1053                           
  1054                           ;main.c: 286: unsigned char slave_address = 0x9E;
  1055  0004BA  0101               	movlb	1	; () banked
  1056  0004BC  6FA6               	movwf	??_main& (0+255),b
  1057  0004BE  0E9E               	movlw	158
  1058  0004C0  0101               	movlb	1	; () banked
  1059  0004C2  0101               	movlb	1	; () banked
  1060  0004C4  6FB4               	movwf	main@slave_address& (0+255),b
  1061  0004C6  0101               	movlb	1	; () banked
  1062  0004C8  51A6               	movf	??_main& (0+255),w,b
  1063                           
  1064                           ; BSR set to: 1
  1065                           ;main.c: 287: i2c_configure_master(slave_address);
  1066  0004CA  0101               	movlb	1	; () banked
  1067  0004CC  0101               	movlb	1	; () banked
  1068  0004CE  51B4               	movf	main@slave_address& (0+255),w,b
  1069  0004D0  ECF3  F00D         	call	_i2c_configure_master
  1070                           
  1071                           ;main.c: 302: PIE1bits.SSPIE = 1;
  1072  0004D4  869D               	bsf	3997,3,c	;volatile
  1073                           
  1074                           ;main.c: 318: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1075                           ;main.c: 319: 0b11111111 & 0b11111111, 155);
  1076  0004D6  0E00               	movlw	0
  1077  0004D8  0101               	movlb	1	; () banked
  1078  0004DA  0101               	movlb	1	; () banked
  1079  0004DC  6F83               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1080  0004DE  0E9B               	movlw	155
  1081  0004E0  0101               	movlb	1	; () banked
  1082  0004E2  6F82               	movwf	OpenUSART@spbrg& (0+255),b
  1083  0004E4  0E7C               	movlw	124
  1084  0004E6  EC4E  F00A         	call	_OpenUSART
  1085                           
  1086                           ;main.c: 320: BAUDCONbits.BRG16 = 0;
  1087  0004EA  96B8               	bcf	4024,3,c	;volatile
  1088                           
  1089                           ;main.c: 321: RCSTAbits.SPEN = 1;
  1090  0004EC  8EAB               	bsf	4011,7,c	;volatile
  1091                           
  1092                           ;main.c: 322: RCSTAbits.CREN = 1;
  1093  0004EE  88AB               	bsf	4011,4,c	;volatile
  1094                           
  1095                           ;main.c: 327: bufferFlag = 0x0;
  1096  0004F0  0E00               	movlw	0
  1097  0004F2  0101               	movlb	1	; () banked
  1098  0004F4  0101               	movlb	1	; () banked
  1099  0004F6  6F15               	movwf	(_bufferFlag+1)& (0+255),b
  1100  0004F8  0E00               	movlw	0
  1101  0004FA  0101               	movlb	1	; () banked
  1102  0004FC  6F14               	movwf	_bufferFlag& (0+255),b
  1103                           
  1104                           ; BSR set to: 1
  1105                           ;main.c: 330: enable_interrupts();
  1106  0004FE  EC49  F010         	call	_enable_interrupts	;wreg free
  1107  000502                     l3441:
  1108                           
  1109                           ;main.c: 341: block_on_To_msgqueues();
  1110  000502  ECA2  F00B         	call	_block_on_To_msgqueues	;wreg free
  1111                           
  1112                           ;main.c: 349: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1113  000506  0101               	movlb	1	; () banked
  1114  000508  0E01               	movlw	high main@msgtype
  1115  00050A  0101               	movlb	1	; () banked
  1116  00050C  0101               	movlb	1	; () banked
  1117  00050E  6F9B               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1118  000510  0101               	movlb	1	; () banked
  1119  000512  0EBC               	movlw	low main@msgtype
  1120  000514  0101               	movlb	1	; () banked
  1121  000516  0101               	movlb	1	; () banked
  1122  000518  6F9A               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1123  00051A  0101               	movlb	1	; () banked
  1124  00051C  0E01               	movlw	high main@msgbuffer
  1125  00051E  0101               	movlb	1	; () banked
  1126  000520  0101               	movlb	1	; () banked
  1127  000522  6F9D               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1128  000524  0101               	movlb	1	; () banked
  1129  000526  0EA7               	movlw	low main@msgbuffer
  1130  000528  0101               	movlb	1	; () banked
  1131  00052A  0101               	movlb	1	; () banked
  1132  00052C  6F9C               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1133  00052E  0E0A               	movlw	10
  1134  000530  EC35  F00E         	call	_ToMainHigh_recvmsg
  1135  000534  0101               	movlb	1	; () banked
  1136  000536  0101               	movlb	1	; () banked
  1137  000538  6FBB               	movwf	main@length& (0+255),b
  1138                           
  1139                           ; BSR set to: 1
  1140                           ;main.c: 351: if (length < 0) {
  1141  00053A  0101               	movlb	1	; () banked
  1142  00053C  0101               	movlb	1	; () banked
  1143  00053E  BFBB               	btfsc	main@length& (0+255),7,b
  1144  000540  D088               	goto	l3459
  1145  000542  D07B               	goto	l3457
  1146  000544                     l3449:
  1147                           
  1148                           ; BSR set to: 1
  1149                           ;main.c: 359: {
  1150                           ;main.c: 360: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1151  000544  0101               	movlb	1	; () banked
  1152  000546  0E01               	movlw	high main@t0thread_data
  1153  000548  0101               	movlb	1	; () banked
  1154  00054A  0101               	movlb	1	; () banked
  1155  00054C  6F83               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1156  00054E  0101               	movlb	1	; () banked
  1157  000550  0EB2               	movlw	low main@t0thread_data
  1158  000552  0101               	movlb	1	; () banked
  1159  000554  0101               	movlb	1	; () banked
  1160  000556  6F82               	movwf	timer0_lthread@tptr& (0+255),b
  1161  000558  0101               	movlb	1	; () banked
  1162  00055A  0101               	movlb	1	; () banked
  1163  00055C  C1BC  F184         	movff	main@msgtype,timer0_lthread@msgtype
  1164  000560  0101               	movlb	1	; () banked
  1165  000562  0101               	movlb	1	; () banked
  1166  000564  6B85               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1167  000566  0101               	movlb	1	; () banked
  1168  000568  0101               	movlb	1	; () banked
  1169  00056A  51BB               	movf	main@length& (0+255),w,b
  1170  00056C  0101               	movlb	1	; () banked
  1171  00056E  0101               	movlb	1	; () banked
  1172  000570  6F86               	movwf	timer0_lthread@length& (0+255),b
  1173  000572  0101               	movlb	1	; () banked
  1174  000574  6B87               	clrf	(timer0_lthread@length+1)& (0+255),b
  1175  000576  0101               	movlb	1	; () banked
  1176  000578  BF86               	btfsc	timer0_lthread@length& (0+255),7,b
  1177  00057A  0787               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1178  00057C  0101               	movlb	1	; () banked
  1179  00057E  0E01               	movlw	high main@msgbuffer
  1180  000580  0101               	movlb	1	; () banked
  1181  000582  0101               	movlb	1	; () banked
  1182  000584  6F89               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1183  000586  0101               	movlb	1	; () banked
  1184  000588  0EA7               	movlw	low main@msgbuffer
  1185  00058A  0101               	movlb	1	; () banked
  1186  00058C  0101               	movlb	1	; () banked
  1187  00058E  6F88               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1188  000590  EC0A  F010         	call	_timer0_lthread	;wreg free
  1189                           
  1190                           ;main.c: 361: break;
  1191  000594  D05E               	goto	l3459
  1192  000596                     l3451:
  1193                           
  1194                           ;main.c: 364: {
  1195                           ;main.c: 365: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1196  000596  0101               	movlb	1	; () banked
  1197  000598  0E01               	movlw	high main@i2cthread_data
  1198  00059A  0101               	movlb	1	; () banked
  1199  00059C  0101               	movlb	1	; () banked
  1200  00059E  6F9D               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1201  0005A0  0101               	movlb	1	; () banked
  1202  0005A2  0EB7               	movlw	low main@i2cthread_data
  1203  0005A4  0101               	movlb	1	; () banked
  1204  0005A6  0101               	movlb	1	; () banked
  1205  0005A8  6F9C               	movwf	i2c_lthread@i2cptr& (0+255),b
  1206  0005AA  0101               	movlb	1	; () banked
  1207  0005AC  0101               	movlb	1	; () banked
  1208  0005AE  C1BC  F19E         	movff	main@msgtype,i2c_lthread@msgtype
  1209  0005B2  0101               	movlb	1	; () banked
  1210  0005B4  0101               	movlb	1	; () banked
  1211  0005B6  6B9F               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1212  0005B8  0101               	movlb	1	; () banked
  1213  0005BA  0101               	movlb	1	; () banked
  1214  0005BC  51BB               	movf	main@length& (0+255),w,b
  1215  0005BE  0101               	movlb	1	; () banked
  1216  0005C0  0101               	movlb	1	; () banked
  1217  0005C2  6FA0               	movwf	i2c_lthread@length& (0+255),b
  1218  0005C4  0101               	movlb	1	; () banked
  1219  0005C6  6BA1               	clrf	(i2c_lthread@length+1)& (0+255),b
  1220  0005C8  0101               	movlb	1	; () banked
  1221  0005CA  BFA0               	btfsc	i2c_lthread@length& (0+255),7,b
  1222  0005CC  07A1               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1223  0005CE  0101               	movlb	1	; () banked
  1224  0005D0  0E01               	movlw	high main@msgbuffer
  1225  0005D2  0101               	movlb	1	; () banked
  1226  0005D4  0101               	movlb	1	; () banked
  1227  0005D6  6FA3               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1228  0005D8  0101               	movlb	1	; () banked
  1229  0005DA  0EA7               	movlw	low main@msgbuffer
  1230  0005DC  0101               	movlb	1	; () banked
  1231  0005DE  0101               	movlb	1	; () banked
  1232  0005E0  6FA2               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1233  0005E2  EC3A  F009         	call	_i2c_lthread	;wreg free
  1234                           
  1235                           ;main.c: 366: break;
  1236  0005E6  D035               	goto	l3459
  1237  0005E8                     l3453:
  1238                           
  1239                           ;main.c: 369: {
  1240                           ;main.c: 370: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1241  0005E8  0101               	movlb	1	; () banked
  1242  0005EA  0E01               	movlw	high main@i2cthread_data
  1243  0005EC  0101               	movlb	1	; () banked
  1244  0005EE  0101               	movlb	1	; () banked
  1245  0005F0  6F9D               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1246  0005F2  0101               	movlb	1	; () banked
  1247  0005F4  0EB7               	movlw	low main@i2cthread_data
  1248  0005F6  0101               	movlb	1	; () banked
  1249  0005F8  0101               	movlb	1	; () banked
  1250  0005FA  6F9C               	movwf	i2c_lthread@i2cptr& (0+255),b
  1251  0005FC  0101               	movlb	1	; () banked
  1252  0005FE  0101               	movlb	1	; () banked
  1253  000600  C1BC  F19E         	movff	main@msgtype,i2c_lthread@msgtype
  1254  000604  0101               	movlb	1	; () banked
  1255  000606  0101               	movlb	1	; () banked
  1256  000608  6B9F               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1257  00060A  0101               	movlb	1	; () banked
  1258  00060C  0101               	movlb	1	; () banked
  1259  00060E  51BB               	movf	main@length& (0+255),w,b
  1260  000610  0101               	movlb	1	; () banked
  1261  000612  0101               	movlb	1	; () banked
  1262  000614  6FA0               	movwf	i2c_lthread@length& (0+255),b
  1263  000616  0101               	movlb	1	; () banked
  1264  000618  6BA1               	clrf	(i2c_lthread@length+1)& (0+255),b
  1265  00061A  0101               	movlb	1	; () banked
  1266  00061C  BFA0               	btfsc	i2c_lthread@length& (0+255),7,b
  1267  00061E  07A1               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1268  000620  0101               	movlb	1	; () banked
  1269  000622  0E01               	movlw	high main@msgbuffer
  1270  000624  0101               	movlb	1	; () banked
  1271  000626  0101               	movlb	1	; () banked
  1272  000628  6FA3               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1273  00062A  0101               	movlb	1	; () banked
  1274  00062C  0EA7               	movlw	low main@msgbuffer
  1275  00062E  0101               	movlb	1	; () banked
  1276  000630  0101               	movlb	1	; () banked
  1277  000632  6FA2               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1278  000634  EC3A  F009         	call	_i2c_lthread	;wreg free
  1279                           
  1280                           ;main.c: 371: break;
  1281  000638  D00C               	goto	l3459
  1282  00063A                     l3457:
  1283  00063A  0101               	movlb	1	; () banked
  1284  00063C  0101               	movlb	1	; () banked
  1285  00063E  51BC               	movf	main@msgtype& (0+255),w,b
  1286                           
  1287                           ; Switch size 1, requested type "space"
  1288                           ; Number of cases is 3, Range of values is 10 to 40
  1289                           ; switch strategies available:
  1290                           ; Name         Instructions Cycles
  1291                           ; simple_byte           10     6 (average)
  1292                           ;	Chosen strategy is simple_byte
  1293  000640  0A0A               	xorlw	10	; case 10
  1294  000642  B4D8               	btfsc	status,2,c
  1295  000644  D77F               	goto	l3449
  1296  000646  0A2D               	xorlw	45	; case 39
  1297  000648  B4D8               	btfsc	status,2,c
  1298  00064A  D7CE               	goto	l3453
  1299  00064C  0A0F               	xorlw	15	; case 40
  1300  00064E  B4D8               	btfsc	status,2,c
  1301  000650  D7A2               	goto	l3451
  1302  000652                     l3459:
  1303                           
  1304                           ;main.c: 379: }
  1305                           ;main.c: 382: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1306  000652  0101               	movlb	1	; () banked
  1307  000654  0E01               	movlw	high main@msgtype
  1308  000656  0101               	movlb	1	; () banked
  1309  000658  0101               	movlb	1	; () banked
  1310  00065A  6F9B               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1311  00065C  0101               	movlb	1	; () banked
  1312  00065E  0EBC               	movlw	low main@msgtype
  1313  000660  0101               	movlb	1	; () banked
  1314  000662  0101               	movlb	1	; () banked
  1315  000664  6F9A               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1316  000666  0101               	movlb	1	; () banked
  1317  000668  0E01               	movlw	high main@msgbuffer
  1318  00066A  0101               	movlb	1	; () banked
  1319  00066C  0101               	movlb	1	; () banked
  1320  00066E  6F9D               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1321  000670  0101               	movlb	1	; () banked
  1322  000672  0EA7               	movlw	low main@msgbuffer
  1323  000674  0101               	movlb	1	; () banked
  1324  000676  0101               	movlb	1	; () banked
  1325  000678  6F9C               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1326  00067A  0E0A               	movlw	10
  1327  00067C  EC14  F00E         	call	_ToMainLow_recvmsg
  1328  000680  0101               	movlb	1	; () banked
  1329  000682  0101               	movlb	1	; () banked
  1330  000684  6FBB               	movwf	main@length& (0+255),b
  1331                           
  1332                           ; BSR set to: 1
  1333                           ;main.c: 383: if (length < 0) {
  1334  000686  0101               	movlb	1	; () banked
  1335  000688  0101               	movlb	1	; () banked
  1336  00068A  BFBB               	btfsc	main@length& (0+255),7,b
  1337  00068C  D73A               	goto	l3441
  1338  00068E  D07B               	goto	l3473
  1339  000690                     l3465:
  1340                           
  1341                           ; BSR set to: 1
  1342                           ;main.c: 391: {
  1343                           ;main.c: 392: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1344  000690  0101               	movlb	1	; () banked
  1345  000692  0E01               	movlw	high main@t1thread_data
  1346  000694  0101               	movlb	1	; () banked
  1347  000696  0101               	movlb	1	; () banked
  1348  000698  6F9D               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1349  00069A  0101               	movlb	1	; () banked
  1350  00069C  0EB9               	movlw	low main@t1thread_data
  1351  00069E  0101               	movlb	1	; () banked
  1352  0006A0  0101               	movlb	1	; () banked
  1353  0006A2  6F9C               	movwf	timer1_lthread@tptr& (0+255),b
  1354  0006A4  0101               	movlb	1	; () banked
  1355  0006A6  0101               	movlb	1	; () banked
  1356  0006A8  C1BC  F19E         	movff	main@msgtype,timer1_lthread@msgtype
  1357  0006AC  0101               	movlb	1	; () banked
  1358  0006AE  0101               	movlb	1	; () banked
  1359  0006B0  6B9F               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1360  0006B2  0101               	movlb	1	; () banked
  1361  0006B4  0101               	movlb	1	; () banked
  1362  0006B6  51BB               	movf	main@length& (0+255),w,b
  1363  0006B8  0101               	movlb	1	; () banked
  1364  0006BA  0101               	movlb	1	; () banked
  1365  0006BC  6FA0               	movwf	timer1_lthread@length& (0+255),b
  1366  0006BE  0101               	movlb	1	; () banked
  1367  0006C0  6BA1               	clrf	(timer1_lthread@length+1)& (0+255),b
  1368  0006C2  0101               	movlb	1	; () banked
  1369  0006C4  BFA0               	btfsc	timer1_lthread@length& (0+255),7,b
  1370  0006C6  07A1               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1371  0006C8  0101               	movlb	1	; () banked
  1372  0006CA  0E01               	movlw	high main@msgbuffer
  1373  0006CC  0101               	movlb	1	; () banked
  1374  0006CE  0101               	movlb	1	; () banked
  1375  0006D0  6FA3               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1376  0006D2  0101               	movlb	1	; () banked
  1377  0006D4  0EA7               	movlw	low main@msgbuffer
  1378  0006D6  0101               	movlb	1	; () banked
  1379  0006D8  0101               	movlb	1	; () banked
  1380  0006DA  6FA2               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1381  0006DC  EC1E  F00C         	call	_timer1_lthread	;wreg free
  1382                           
  1383                           ;main.c: 393: break;
  1384  0006E0  D710               	goto	l3441
  1385  0006E2                     l3467:
  1386                           
  1387                           ;main.c: 396: {
  1388                           ;main.c: 397: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1389  0006E2  0101               	movlb	1	; () banked
  1390  0006E4  0E01               	movlw	high main@uthread_data
  1391  0006E6  0101               	movlb	1	; () banked
  1392  0006E8  0101               	movlb	1	; () banked
  1393  0006EA  6F8C               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1394  0006EC  0101               	movlb	1	; () banked
  1395  0006EE  0EB5               	movlw	low main@uthread_data
  1396  0006F0  0101               	movlb	1	; () banked
  1397  0006F2  0101               	movlb	1	; () banked
  1398  0006F4  6F8B               	movwf	uart_lthread@uptr& (0+255),b
  1399  0006F6  0101               	movlb	1	; () banked
  1400  0006F8  0101               	movlb	1	; () banked
  1401  0006FA  C1BC  F18D         	movff	main@msgtype,uart_lthread@msgtype
  1402  0006FE  0101               	movlb	1	; () banked
  1403  000700  0101               	movlb	1	; () banked
  1404  000702  6B8E               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1405  000704  0101               	movlb	1	; () banked
  1406  000706  0101               	movlb	1	; () banked
  1407  000708  51BB               	movf	main@length& (0+255),w,b
  1408  00070A  0101               	movlb	1	; () banked
  1409  00070C  0101               	movlb	1	; () banked
  1410  00070E  6F8F               	movwf	uart_lthread@length& (0+255),b
  1411  000710  0101               	movlb	1	; () banked
  1412  000712  6B90               	clrf	(uart_lthread@length+1)& (0+255),b
  1413  000714  0101               	movlb	1	; () banked
  1414  000716  BF8F               	btfsc	uart_lthread@length& (0+255),7,b
  1415  000718  0790               	decf	(uart_lthread@length+1)& (0+255),f,b
  1416  00071A  0101               	movlb	1	; () banked
  1417  00071C  0E01               	movlw	high main@msgbuffer
  1418  00071E  0101               	movlb	1	; () banked
  1419  000720  0101               	movlb	1	; () banked
  1420  000722  6F92               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1421  000724  0101               	movlb	1	; () banked
  1422  000726  0EA7               	movlw	low main@msgbuffer
  1423  000728  0101               	movlb	1	; () banked
  1424  00072A  0101               	movlb	1	; () banked
  1425  00072C  6F91               	movwf	uart_lthread@msgbuffer& (0+255),b
  1426  00072E  ECB6  F00E         	call	_uart_lthread	;wreg free
  1427                           
  1428                           ;main.c: 398: break;
  1429  000732  D6E7               	goto	l3441
  1430  000734                     l3469:
  1431                           
  1432                           ;main.c: 401: {
  1433                           ;main.c: 402: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1434  000734  0101               	movlb	1	; () banked
  1435  000736  0E01               	movlw	high main@uthread_data
  1436  000738  0101               	movlb	1	; () banked
  1437  00073A  0101               	movlb	1	; () banked
  1438  00073C  6F8C               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1439  00073E  0101               	movlb	1	; () banked
  1440  000740  0EB5               	movlw	low main@uthread_data
  1441  000742  0101               	movlb	1	; () banked
  1442  000744  0101               	movlb	1	; () banked
  1443  000746  6F8B               	movwf	uart_lthread@uptr& (0+255),b
  1444  000748  0101               	movlb	1	; () banked
  1445  00074A  0101               	movlb	1	; () banked
  1446  00074C  C1BC  F18D         	movff	main@msgtype,uart_lthread@msgtype
  1447  000750  0101               	movlb	1	; () banked
  1448  000752  0101               	movlb	1	; () banked
  1449  000754  6B8E               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1450  000756  0101               	movlb	1	; () banked
  1451  000758  0101               	movlb	1	; () banked
  1452  00075A  51BB               	movf	main@length& (0+255),w,b
  1453  00075C  0101               	movlb	1	; () banked
  1454  00075E  0101               	movlb	1	; () banked
  1455  000760  6F8F               	movwf	uart_lthread@length& (0+255),b
  1456  000762  0101               	movlb	1	; () banked
  1457  000764  6B90               	clrf	(uart_lthread@length+1)& (0+255),b
  1458  000766  0101               	movlb	1	; () banked
  1459  000768  BF8F               	btfsc	uart_lthread@length& (0+255),7,b
  1460  00076A  0790               	decf	(uart_lthread@length+1)& (0+255),f,b
  1461  00076C  0101               	movlb	1	; () banked
  1462  00076E  0E01               	movlw	high main@msgbuffer
  1463  000770  0101               	movlb	1	; () banked
  1464  000772  0101               	movlb	1	; () banked
  1465  000774  6F92               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1466  000776  0101               	movlb	1	; () banked
  1467  000778  0EA7               	movlw	low main@msgbuffer
  1468  00077A  0101               	movlb	1	; () banked
  1469  00077C  0101               	movlb	1	; () banked
  1470  00077E  6F91               	movwf	uart_lthread@msgbuffer& (0+255),b
  1471  000780  ECB6  F00E         	call	_uart_lthread	;wreg free
  1472                           
  1473                           ;main.c: 403: break;
  1474  000784  D6BE               	goto	l3441
  1475  000786                     l3473:
  1476  000786  0101               	movlb	1	; () banked
  1477  000788  0101               	movlb	1	; () banked
  1478  00078A  51BC               	movf	main@msgtype& (0+255),w,b
  1479                           
  1480                           ; Switch size 1, requested type "space"
  1481                           ; Number of cases is 3, Range of values is 11 to 32
  1482                           ; switch strategies available:
  1483                           ; Name         Instructions Cycles
  1484                           ; simple_byte           10     6 (average)
  1485                           ;	Chosen strategy is simple_byte
  1486  00078C  0A0B               	xorlw	11	; case 11
  1487  00078E  B4D8               	btfsc	status,2,c
  1488  000790  D77F               	goto	l3465
  1489  000792  0A15               	xorlw	21	; case 30
  1490  000794  B4D8               	btfsc	status,2,c
  1491  000796  D7A5               	goto	l3467
  1492  000798  0A3E               	xorlw	62	; case 32
  1493  00079A  B4D8               	btfsc	status,2,c
  1494  00079C  D7CB               	goto	l3469
  1495  00079E  D6B1               	goto	l3441
  1496  0007A0                     __end_of_main:
  1497                           	opt stack 0
  1498                           tblptru	equ	0xFF8
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           status	equ	0xFD8
  1502                           
  1503 ;; *************** function _uart_lthread *****************
  1504 ;; Defined at:
  1505 ;;		line 12 in file "../src/uart_thread.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;  uptr            2    9[BANK1 ] PTR struct __uart_thread
  1508 ;;		 -> main@uthread_data(2), 
  1509 ;;  msgtype         2   11[BANK1 ] int 
  1510 ;;  length          2   13[BANK1 ] int 
  1511 ;;  msgbuffer       2   15[BANK1 ] PTR unsigned char 
  1512 ;;		 -> main@msgbuffer(11), 
  1513 ;; Auto vars:     Size  Location     Type
  1514 ;;		None
  1515 ;; Return value:  Size  Location     Type
  1516 ;;                  2    9[BANK1 ] int 
  1517 ;; Registers used:
  1518 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1519 ;; Tracked objects:
  1520 ;;		On entry : 0/0
  1521 ;;		On exit  : 0/0
  1522 ;;		Unchanged: 0/0
  1523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1524 ;;      Params:         0       0       8       0       0
  1525 ;;      Locals:         0       0       0       0       0
  1526 ;;      Temps:          0       0       0       0       0
  1527 ;;      Totals:         0       0       8       0       0
  1528 ;;Total ram usage:        8 bytes
  1529 ;; Hardware stack levels used:    1
  1530 ;; Hardware stack levels required when called:   11
  1531 ;; This function calls:
  1532 ;;		_uart_retrieve_buffer
  1533 ;; This function is called by:
  1534 ;;		_main
  1535 ;; This function uses a non-reentrant model
  1536 ;;
  1537                           
  1538                           	psect	text1
  1539  001D6C                     __ptext1:
  1540                           	opt stack 0
  1541  001D6C                     _uart_lthread:
  1542                           	opt stack 19
  1543                           
  1544                           ;uart_thread.c: 13: if (msgtype == 30) {
  1545                           
  1546                           ; BSR set to: 1
  1547                           ;incstack = 0
  1548  001D6C  0101               	movlb	1	; () banked
  1549  001D6E  0101               	movlb	1	; () banked
  1550  001D70  518D               	movf	uart_lthread@msgtype& (0+255),w,b
  1551  001D72  0A1E               	xorlw	30
  1552  001D74  118E               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1553  001D76  B4D8               	btfsc	status,2,c
  1554  001D78  0012               	return	
  1555                           
  1556                           ; BSR set to: 1
  1557                           
  1558                           ; BSR set to: 1
  1559                           
  1560                           ; BSR set to: 1
  1561                           ;uart_thread.c: 15: } else if (msgtype == 32) {
  1562  001D7A  0101               	movlb	1	; () banked
  1563  001D7C  0101               	movlb	1	; () banked
  1564  001D7E  518D               	movf	uart_lthread@msgtype& (0+255),w,b
  1565  001D80  0A20               	xorlw	32
  1566  001D82  118E               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1567  001D84  A4D8               	btfss	status,2,c
  1568  001D86  0012               	return	
  1569                           
  1570                           ; BSR set to: 1
  1571                           ;uart_thread.c: 17: uart_retrieve_buffer(length, msgbuffer);
  1572  001D88  C18F  F182         	movff	uart_lthread@length,uart_retrieve_buffer@length
  1573  001D8C  C190  F183         	movff	uart_lthread@length+1,uart_retrieve_buffer@length+1
  1574  001D90  0101               	movlb	1	; () banked
  1575  001D92  0101               	movlb	1	; () banked
  1576  001D94  C192  F185         	movff	uart_lthread@msgbuffer+1,uart_retrieve_buffer@msgbuffer+1
  1577  001D98  0101               	movlb	1	; () banked
  1578  001D9A  0101               	movlb	1	; () banked
  1579  001D9C  C191  F184         	movff	uart_lthread@msgbuffer,uart_retrieve_buffer@msgbuffer
  1580  001DA0  ECA4  F009         	call	_uart_retrieve_buffer	;wreg free
  1581                           
  1582                           ;uart_thread.c: 19: PIE1bits.TX1IE = 0x1;
  1583  001DA4  889D               	bsf	3997,4,c	;volatile
  1584  001DA6  0012               	return	
  1585  001DA8                     __end_of_uart_lthread:
  1586                           	opt stack 0
  1587                           tblptru	equ	0xFF8
  1588                           postinc0	equ	0xFEE
  1589                           wreg	equ	0xFE8
  1590                           status	equ	0xFD8
  1591                           
  1592 ;; *************** function _uart_retrieve_buffer *****************
  1593 ;; Defined at:
  1594 ;;		line 181 in file "../src/my_uart.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;  length          2    0[BANK1 ] int 
  1597 ;;  msgbuffer       2    2[BANK1 ] PTR unsigned char 
  1598 ;;		 -> main@msgbuffer(11), 
  1599 ;; Auto vars:     Size  Location     Type
  1600 ;;  i               2    7[BANK1 ] int 
  1601 ;; Return value:  Size  Location     Type
  1602 ;;		None               void
  1603 ;; Registers used:
  1604 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1605 ;; Tracked objects:
  1606 ;;		On entry : 0/0
  1607 ;;		On exit  : 0/0
  1608 ;;		Unchanged: 0/0
  1609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1610 ;;      Params:         0       0       4       0       0
  1611 ;;      Locals:         0       0       2       0       0
  1612 ;;      Temps:          0       0       3       0       0
  1613 ;;      Totals:         0       0       9       0       0
  1614 ;;Total ram usage:        9 bytes
  1615 ;; Hardware stack levels used:    1
  1616 ;; Hardware stack levels required when called:   10
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		_uart_lthread
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           	psect	text2
  1625  001348                     __ptext2:
  1626                           	opt stack 0
  1627  001348                     _uart_retrieve_buffer:
  1628                           	opt stack 19
  1629                           
  1630                           ;my_uart.c: 183: uc_ptr->Tx_buflen = 0;
  1631                           
  1632                           ;incstack = 0
  1633  001348  EE20 F014          	lfsr	2,20
  1634  00134C  5065               	movf	_uc_ptr,w,c
  1635  00134E  26D9               	addwf	fsr2l,f,c
  1636  001350  5066               	movf	_uc_ptr+1,w,c
  1637  001352  22DA               	addwfc	fsr2h,f,c
  1638  001354  0E00               	movlw	0
  1639  001356  6EDF               	movwf	indf2,c
  1640                           
  1641                           ;my_uart.c: 184: uc_ptr->msg_length = length;
  1642  001358  EE20 F016          	lfsr	2,22
  1643  00135C  5065               	movf	_uc_ptr,w,c
  1644  00135E  26D9               	addwf	fsr2l,f,c
  1645  001360  5066               	movf	_uc_ptr+1,w,c
  1646  001362  22DA               	addwfc	fsr2h,f,c
  1647  001364  0101               	movlb	1	; () banked
  1648  001366  C182  FFDF         	movff	uart_retrieve_buffer@length,indf2
  1649                           
  1650                           ; BSR set to: 1
  1651                           ;my_uart.c: 186: int i = 0;
  1652  00136A  0E00               	movlw	0
  1653  00136C  0101               	movlb	1	; () banked
  1654  00136E  0101               	movlb	1	; () banked
  1655  001370  6F8A               	movwf	(uart_retrieve_buffer@i+1)& (0+255),b
  1656  001372  0E00               	movlw	0
  1657  001374  0101               	movlb	1	; () banked
  1658  001376  6F89               	movwf	uart_retrieve_buffer@i& (0+255),b
  1659                           
  1660                           ;my_uart.c: 187: for (; i < length + 1; i++) {
  1661  001378  D01E               	goto	l3893
  1662  00137A                     l3889:
  1663                           
  1664                           ; BSR set to: 1
  1665                           ;my_uart.c: 188: uc_ptr->Tx_buffer[i] = msgbuffer[i];
  1666  00137A  0101               	movlb	1	; () banked
  1667  00137C  0101               	movlb	1	; () banked
  1668  00137E  5189               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1669  001380  0101               	movlb	1	; () banked
  1670  001382  0101               	movlb	1	; () banked
  1671  001384  2584               	addwf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1672  001386  6ED9               	movwf	fsr2l,c
  1673  001388  0101               	movlb	1	; () banked
  1674  00138A  0101               	movlb	1	; () banked
  1675  00138C  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1676  00138E  0101               	movlb	1	; () banked
  1677  001390  0101               	movlb	1	; () banked
  1678  001392  2185               	addwfc	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1679  001394  6EDA               	movwf	fsr2h,c
  1680  001396  0101               	movlb	1	; () banked
  1681  001398  0101               	movlb	1	; () banked
  1682  00139A  5189               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1683  00139C  2465               	addwf	_uc_ptr,w,c
  1684  00139E  6EE1               	movwf	fsr1l,c
  1685  0013A0  0101               	movlb	1	; () banked
  1686  0013A2  0101               	movlb	1	; () banked
  1687  0013A4  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1688  0013A6  2066               	addwfc	_uc_ptr+1,w,c
  1689  0013A8  6EE2               	movwf	fsr1h,c
  1690  0013AA  CFDF FFE7          	movff	indf2,indf1
  1691                           
  1692                           ; BSR set to: 1
  1693  0013AE  0101               	movlb	1	; () banked
  1694  0013B0  0101               	movlb	1	; () banked
  1695  0013B2  4B89               	infsnz	uart_retrieve_buffer@i& (0+255),f,b
  1696  0013B4  2B8A               	incf	(uart_retrieve_buffer@i+1)& (0+255),f,b
  1697  0013B6                     l3893:
  1698                           
  1699                           ; BSR set to: 1
  1700  0013B6  0E01               	movlw	1
  1701  0013B8  0101               	movlb	1	; () banked
  1702  0013BA  0101               	movlb	1	; () banked
  1703  0013BC  2582               	addwf	uart_retrieve_buffer@length& (0+255),w,b
  1704  0013BE  0101               	movlb	1	; () banked
  1705  0013C0  6F86               	movwf	??_uart_retrieve_buffer& (0+255),b
  1706  0013C2  0E00               	movlw	0
  1707  0013C4  0101               	movlb	1	; () banked
  1708  0013C6  0101               	movlb	1	; () banked
  1709  0013C8  2183               	addwfc	(uart_retrieve_buffer@length+1)& (0+255),w,b
  1710  0013CA  0101               	movlb	1	; () banked
  1711  0013CC  6F87               	movwf	(??_uart_retrieve_buffer+1)& (0+255),b
  1712  0013CE  0101               	movlb	1	; () banked
  1713  0013D0  0101               	movlb	1	; () banked
  1714  0013D2  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1715  0013D4  0A80               	xorlw	128
  1716  0013D6  0101               	movlb	1	; () banked
  1717  0013D8  6F88               	movwf	(??_uart_retrieve_buffer+2)& (0+255),b
  1718  0013DA  5186               	movf	??_uart_retrieve_buffer& (0+255),w,b
  1719  0013DC  0101               	movlb	1	; () banked
  1720  0013DE  0101               	movlb	1	; () banked
  1721  0013E0  5D89               	subwf	uart_retrieve_buffer@i& (0+255),w,b
  1722  0013E2  0101               	movlb	1	; () banked
  1723  0013E4  5187               	movf	(??_uart_retrieve_buffer+1)& (0+255),w,b
  1724  0013E6  0A80               	xorlw	128
  1725  0013E8  0101               	movlb	1	; () banked
  1726  0013EA  5988               	subwfb	(??_uart_retrieve_buffer+2)& (0+255),w,b
  1727  0013EC  B0D8               	btfsc	status,0,c
  1728                           
  1729                           ; BSR set to: 1
  1730                           
  1731                           ; BSR set to: 1
  1732  0013EE  0012               	return	
  1733  0013F0  D7C4               	goto	l3889
  1734  0013F2                     __end_of_uart_retrieve_buffer:
  1735                           	opt stack 0
  1736                           tblptru	equ	0xFF8
  1737                           postinc0	equ	0xFEE
  1738                           wreg	equ	0xFE8
  1739                           indf1	equ	0xFE7
  1740                           fsr1h	equ	0xFE2
  1741                           fsr1l	equ	0xFE1
  1742                           indf2	equ	0xFDF
  1743                           fsr2h	equ	0xFDA
  1744                           fsr2l	equ	0xFD9
  1745                           status	equ	0xFD8
  1746                           
  1747 ;; *************** function _timer1_lthread *****************
  1748 ;; Defined at:
  1749 ;;		line 14 in file "../src/timer1_thread.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1752 ;;		 -> main@t1thread_data(2), 
  1753 ;;  msgtype         2   28[BANK1 ] int 
  1754 ;;  length          2   30[BANK1 ] int 
  1755 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1756 ;;		 -> main@msgbuffer(11), 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  retval          1   35[BANK1 ] char 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  2   26[BANK1 ] int 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1768 ;;      Params:         0       0       8       0       0
  1769 ;;      Locals:         0       0       1       0       0
  1770 ;;      Temps:          0       0       1       0       0
  1771 ;;      Totals:         0       0      10       0       0
  1772 ;;Total ram usage:       10 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:   13
  1775 ;; This function calls:
  1776 ;;		_FromMainHigh_sendmsg
  1777 ;;		___lwmod
  1778 ;; This function is called by:
  1779 ;;		_main
  1780 ;; This function uses a non-reentrant model
  1781 ;;
  1782                           
  1783                           	psect	text3
  1784  00183C                     __ptext3:
  1785                           	opt stack 0
  1786  00183C                     _timer1_lthread:
  1787                           	opt stack 17
  1788                           
  1789                           ;timer1_thread.c: 15: signed char retval;
  1790                           ;timer1_thread.c: 17: tptr->msgcount++;
  1791                           
  1792                           ; BSR set to: 1
  1793                           ;incstack = 0
  1794  00183C  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1795  001840  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1796  001844  2ADE               	incf	postinc2,f,c
  1797  001846  0E00               	movlw	0
  1798  001848  22DD               	addwfc	postdec2,f,c
  1799                           
  1800                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1801  00184A  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1802  00184E  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1803  001852  0101               	movlb	1	; () banked
  1804  001854  CFDE F182          	movff	postinc2,___lwmod@dividend
  1805  001858  0101               	movlb	1	; () banked
  1806  00185A  CFDD F183          	movff	postdec2,___lwmod@dividend+1
  1807  00185E  0E00               	movlw	0
  1808  001860  0101               	movlb	1	; () banked
  1809  001862  0101               	movlb	1	; () banked
  1810  001864  6F85               	movwf	(___lwmod@divisor+1)& (0+255),b
  1811  001866  0E0A               	movlw	10
  1812  001868  0101               	movlb	1	; () banked
  1813  00186A  6F84               	movwf	___lwmod@divisor& (0+255),b
  1814  00186C  EC97  F00A         	call	___lwmod	;wreg free
  1815  001870  0101               	movlb	1	; () banked
  1816  001872  0101               	movlb	1	; () banked
  1817  001874  5182               	movf	?___lwmod& (0+255),w,b
  1818  001876  0A09               	xorlw	9
  1819  001878  0101               	movlb	1	; () banked
  1820  00187A  1183               	iorwf	(?___lwmod+1)& (0+255),w,b
  1821  00187C  A4D8               	btfss	status,2,c
  1822  00187E  0012               	return	
  1823                           
  1824                           ; BSR set to: 1
  1825                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1826  001880  0101               	movlb	1	; () banked
  1827  001882  6FA4               	movwf	??_timer1_lthread& (0+255),b
  1828  001884  0E14               	movlw	20
  1829  001886  0101               	movlb	1	; () banked
  1830  001888  0101               	movlb	1	; () banked
  1831  00188A  6F98               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1832  00188C  0101               	movlb	1	; () banked
  1833  00188E  51A4               	movf	??_timer1_lthread& (0+255),w,b
  1834  001890  0101               	movlb	1	; () banked
  1835  001892  0101               	movlb	1	; () banked
  1836  001894  C19D  F19A         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1837  001898  0101               	movlb	1	; () banked
  1838  00189A  0101               	movlb	1	; () banked
  1839  00189C  C19C  F199         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1840  0018A0  0E02               	movlw	2
  1841  0018A2  EC0D  F00F         	call	_FromMainHigh_sendmsg
  1842  0018A6  0101               	movlb	1	; () banked
  1843  0018A8  0101               	movlb	1	; () banked
  1844  0018AA  6FA5               	movwf	timer1_lthread@retval& (0+255),b
  1845  0018AC  0012               	return	
  1846  0018AE                     __end_of_timer1_lthread:
  1847                           	opt stack 0
  1848                           tblptru	equ	0xFF8
  1849                           postinc0	equ	0xFEE
  1850                           wreg	equ	0xFE8
  1851                           indf1	equ	0xFE7
  1852                           fsr1h	equ	0xFE2
  1853                           fsr1l	equ	0xFE1
  1854                           indf2	equ	0xFDF
  1855                           postinc2	equ	0xFDE
  1856                           postdec2	equ	0xFDD
  1857                           fsr2h	equ	0xFDA
  1858                           fsr2l	equ	0xFD9
  1859                           status	equ	0xFD8
  1860                           
  1861 ;; *************** function ___lwmod *****************
  1862 ;; Defined at:
<<<<<<< HEAD
  1863 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\lwmod.c"
=======
  1863 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  1864 ;; Parameters:    Size  Location     Type
  1865 ;;  dividend        2    0[BANK1 ] unsigned int 
  1866 ;;  divisor         2    2[BANK1 ] unsigned int 
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;  counter         1    5[BANK1 ] unsigned char 
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  2    0[BANK1 ] unsigned int 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1878 ;;      Params:         0       0       4       0       0
  1879 ;;      Locals:         0       0       1       0       0
  1880 ;;      Temps:          0       0       1       0       0
  1881 ;;      Totals:         0       0       6       0       0
  1882 ;;Total ram usage:        6 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:   10
  1885 ;; This function calls:
  1886 ;;		Nothing
  1887 ;; This function is called by:
  1888 ;;		_timer1_lthread
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           	psect	text4
  1893  00152E                     __ptext4:
  1894                           	opt stack 0
  1895  00152E                     ___lwmod:
  1896                           	opt stack 19
  1897                           
  1898                           ; BSR set to: 1
  1899                           ;incstack = 0
  1900  00152E  0101               	movlb	1	; () banked
  1901  001530  0101               	movlb	1	; () banked
  1902  001532  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1903  001534  1184               	iorwf	___lwmod@divisor& (0+255),w,b
  1904  001536  B4D8               	btfsc	status,2,c
  1905  001538  D03A               	goto	l1193
  1906                           
  1907                           ; BSR set to: 1
  1908  00153A  0101               	movlb	1	; () banked
  1909  00153C  6F86               	movwf	??___lwmod& (0+255),b
  1910  00153E  0E01               	movlw	1
  1911  001540  0101               	movlb	1	; () banked
  1912  001542  0101               	movlb	1	; () banked
  1913  001544  6F87               	movwf	___lwmod@counter& (0+255),b
  1914  001546  0101               	movlb	1	; () banked
  1915  001548  5186               	movf	??___lwmod& (0+255),w,b
  1916  00154A  D009               	goto	l3903
  1917  00154C                     l3901:
  1918                           
  1919                           ; BSR set to: 1
  1920  00154C  0101               	movlb	1	; () banked
  1921  00154E  0101               	movlb	1	; () banked
  1922  001550  0101               	movlb	1	; () banked
  1923  001552  90D8               	bcf	status,0,c
  1924  001554  3784               	rlcf	___lwmod@divisor& (0+255),f,b
  1925  001556  3785               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1926  001558  0101               	movlb	1	; () banked
  1927  00155A  0101               	movlb	1	; () banked
  1928  00155C  2B87               	incf	___lwmod@counter& (0+255),f,b
  1929  00155E                     l3903:
  1930                           
  1931                           ; BSR set to: 1
  1932  00155E  0101               	movlb	1	; () banked
  1933  001560  0101               	movlb	1	; () banked
  1934  001562  AF85               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1935  001564  D7F3               	goto	l3901
  1936  001566                     l3905:
  1937                           
  1938                           ; BSR set to: 1
  1939  001566  0101               	movlb	1	; () banked
  1940  001568  0101               	movlb	1	; () banked
  1941  00156A  5184               	movf	___lwmod@divisor& (0+255),w,b
  1942  00156C  0101               	movlb	1	; () banked
  1943  00156E  0101               	movlb	1	; () banked
  1944  001570  5D82               	subwf	___lwmod@dividend& (0+255),w,b
  1945  001572  0101               	movlb	1	; () banked
  1946  001574  0101               	movlb	1	; () banked
  1947  001576  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1948  001578  0101               	movlb	1	; () banked
  1949  00157A  0101               	movlb	1	; () banked
  1950  00157C  5983               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1951  00157E  A0D8               	btfss	status,0,c
  1952  001580  D00C               	goto	l3909
  1953                           
  1954                           ; BSR set to: 1
  1955  001582  0101               	movlb	1	; () banked
  1956  001584  0101               	movlb	1	; () banked
  1957  001586  5184               	movf	___lwmod@divisor& (0+255),w,b
  1958  001588  0101               	movlb	1	; () banked
  1959  00158A  0101               	movlb	1	; () banked
  1960  00158C  5F82               	subwf	___lwmod@dividend& (0+255),f,b
  1961  00158E  0101               	movlb	1	; () banked
  1962  001590  0101               	movlb	1	; () banked
  1963  001592  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1964  001594  0101               	movlb	1	; () banked
  1965  001596  0101               	movlb	1	; () banked
  1966  001598  5B83               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1967  00159A                     l3909:
  1968                           
  1969                           ; BSR set to: 1
  1970  00159A  0101               	movlb	1	; () banked
  1971  00159C  0101               	movlb	1	; () banked
  1972  00159E  0101               	movlb	1	; () banked
  1973  0015A0  90D8               	bcf	status,0,c
  1974  0015A2  3385               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1975  0015A4  3384               	rrcf	___lwmod@divisor& (0+255),f,b
  1976                           
  1977                           ; BSR set to: 1
  1978  0015A6  0101               	movlb	1	; () banked
  1979  0015A8  0101               	movlb	1	; () banked
  1980  0015AA  2F87               	decfsz	___lwmod@counter& (0+255),f,b
  1981  0015AC  D7DC               	goto	l3905
  1982  0015AE                     l1193:
  1983                           
  1984                           ; BSR set to: 1
  1985  0015AE  C182  F182         	movff	___lwmod@dividend,?___lwmod
  1986  0015B2  C183  F183         	movff	___lwmod@dividend+1,?___lwmod+1
  1987                           
  1988                           ; BSR set to: 1
  1989  0015B6  0012               	return	
  1990  0015B8                     __end_of___lwmod:
  1991                           	opt stack 0
  1992                           tblptru	equ	0xFF8
  1993                           postinc0	equ	0xFEE
  1994                           wreg	equ	0xFE8
  1995                           indf1	equ	0xFE7
  1996                           fsr1h	equ	0xFE2
  1997                           fsr1l	equ	0xFE1
  1998                           indf2	equ	0xFDF
  1999                           postinc2	equ	0xFDE
  2000                           postdec2	equ	0xFDD
  2001                           fsr2h	equ	0xFDA
  2002                           fsr2l	equ	0xFD9
  2003                           status	equ	0xFD8
  2004                           
  2005 ;; *************** function _FromMainHigh_sendmsg *****************
  2006 ;; Defined at:
  2007 ;;		line 174 in file "../src/messages.c"
  2008 ;; Parameters:    Size  Location     Type
  2009 ;;  length          1    wreg     unsigned char 
  2010 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2011 ;;  data            2   23[BANK1 ] PTR void 
  2012 ;;		 -> main@t1thread_data(2), 
  2013 ;; Auto vars:     Size  Location     Type
  2014 ;;  length          1   25[BANK1 ] unsigned char 
  2015 ;; Return value:  Size  Location     Type
  2016 ;;                  1    wreg      char 
  2017 ;; Registers used:
  2018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2019 ;; Tracked objects:
  2020 ;;		On entry : 0/0
  2021 ;;		On exit  : 0/0
  2022 ;;		Unchanged: 0/0
  2023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2024 ;;      Params:         0       0       3       0       0
  2025 ;;      Locals:         0       0       1       0       0
  2026 ;;      Temps:          0       0       0       0       0
  2027 ;;      Totals:         0       0       4       0       0
  2028 ;;Total ram usage:        4 bytes
  2029 ;; Hardware stack levels used:    1
  2030 ;; Hardware stack levels required when called:   12
  2031 ;; This function calls:
  2032 ;;		_send_msg
  2033 ;; This function is called by:
  2034 ;;		_timer1_lthread
  2035 ;; This function uses a non-reentrant model
  2036 ;;
  2037                           
  2038                           	psect	text5
  2039  001E1A                     __ptext5:
  2040                           	opt stack 0
  2041  001E1A                     _FromMainHigh_sendmsg:
  2042                           	opt stack 17
  2043                           
  2044                           ; BSR set to: 1
  2045                           ;incstack = 0
  2046                           ;FromMainHigh_sendmsg@length stored from wreg
  2047  001E1A  CFE8 F19B          	movff	wreg,FromMainHigh_sendmsg@length
  2048                           
  2049                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2050  001E1E  0102               	movlb	2	; () banked
  2051  001E20  0E02               	movlw	high _FromMainHigh_MQ
  2052  001E22  0101               	movlb	1	; () banked
  2053  001E24  0101               	movlb	1	; () banked
  2054  001E26  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  2055  001E28  0102               	movlb	2	; () banked
  2056  001E2A  0E00               	movlw	low _FromMainHigh_MQ
  2057  001E2C  0101               	movlb	1	; () banked
  2058  001E2E  0101               	movlb	1	; () banked
  2059  001E30  6F8C               	movwf	send_msg@qptr& (0+255),b
  2060  001E32  C19B  F18E         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2061  001E36  C198  F18F         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2062  001E3A  0101               	movlb	1	; () banked
  2063  001E3C  0101               	movlb	1	; () banked
  2064  001E3E  C19A  F191         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2065  001E42  0101               	movlb	1	; () banked
  2066  001E44  0101               	movlb	1	; () banked
  2067  001E46  C199  F190         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2068  001E4A  ECC5  F007         	call	_send_msg	;wreg free
  2069  001E4E  0012               	return	
  2070  001E50                     __end_of_FromMainHigh_sendmsg:
  2071                           	opt stack 0
  2072                           tblptru	equ	0xFF8
  2073                           postinc0	equ	0xFEE
  2074                           wreg	equ	0xFE8
  2075                           indf1	equ	0xFE7
  2076                           fsr1h	equ	0xFE2
  2077                           fsr1l	equ	0xFE1
  2078                           indf2	equ	0xFDF
  2079                           postinc2	equ	0xFDE
  2080                           postdec2	equ	0xFDD
  2081                           fsr2h	equ	0xFDA
  2082                           fsr2l	equ	0xFD9
  2083                           status	equ	0xFD8
  2084                           
  2085 ;; *************** function _timer0_lthread *****************
  2086 ;; Defined at:
  2087 ;;		line 9 in file "../src/timer0_thread.c"
  2088 ;; Parameters:    Size  Location     Type
  2089 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2090 ;;		 -> main@t0thread_data(2), 
  2091 ;;  msgtype         2    2[BANK1 ] int 
  2092 ;;  length          2    4[BANK1 ] int 
  2093 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2094 ;;		 -> main@msgbuffer(11), 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2097 ;;		 -> main@msgbuffer(11), 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  2    0[BANK1 ] int 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2107 ;;      Params:         0       0       8       0       0
  2108 ;;      Locals:         0       0       2       0       0
  2109 ;;      Temps:          0       0       0       0       0
  2110 ;;      Totals:         0       0      10       0       0
  2111 ;;Total ram usage:       10 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:   10
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_main
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text6
  2122  002014                     __ptext6:
  2123                           	opt stack 0
  2124  002014                     _timer0_lthread:
  2125                           	opt stack 20
  2126                           
  2127                           ;timer0_thread.c: 10: unsigned int *msgval;
  2128                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2129                           
  2130                           ;incstack = 0
  2131  002014  0101               	movlb	1	; () banked
  2132  002016  0101               	movlb	1	; () banked
  2133  002018  C189  F18B         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2134  00201C  0101               	movlb	1	; () banked
  2135  00201E  0101               	movlb	1	; () banked
  2136  002020  C188  F18A         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2137                           
  2138                           ; BSR set to: 1
  2139  002024  0012               	return	
  2140  002026                     __end_of_timer0_lthread:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           postinc0	equ	0xFEE
  2144                           wreg	equ	0xFE8
  2145                           indf1	equ	0xFE7
  2146                           fsr1h	equ	0xFE2
  2147                           fsr1l	equ	0xFE1
  2148                           indf2	equ	0xFDF
  2149                           postinc2	equ	0xFDE
  2150                           postdec2	equ	0xFDD
  2151                           fsr2h	equ	0xFDA
  2152                           fsr2l	equ	0xFD9
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _init_uart_recv *****************
  2156 ;; Defined at:
  2157 ;;		line 174 in file "../src/my_uart.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2160 ;;		 -> main@uc(23), 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;		None
  2163 ;; Return value:  Size  Location     Type
  2164 ;;		None               void
  2165 ;; Registers used:
  2166 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2167 ;; Tracked objects:
  2168 ;;		On entry : 0/0
  2169 ;;		On exit  : 0/0
  2170 ;;		Unchanged: 0/0
  2171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2172 ;;      Params:         0       0       2       0       0
  2173 ;;      Locals:         0       0       0       0       0
  2174 ;;      Temps:          0       0       0       0       0
  2175 ;;      Totals:         0       0       2       0       0
  2176 ;;Total ram usage:        2 bytes
  2177 ;; Hardware stack levels used:    1
  2178 ;; Hardware stack levels required when called:   10
  2179 ;; This function calls:
  2180 ;;		Nothing
  2181 ;; This function is called by:
  2182 ;;		_main
  2183 ;; This function uses a non-reentrant model
  2184 ;;
  2185                           
  2186                           	psect	text7
  2187  001D2E                     __ptext7:
  2188                           	opt stack 0
  2189  001D2E                     _init_uart_recv:
  2190                           	opt stack 20
  2191                           
  2192                           ;my_uart.c: 175: uc_ptr = uc;
  2193                           
  2194                           ; BSR set to: 1
  2195                           ;incstack = 0
  2196  001D2E  0101               	movlb	1	; () banked
  2197  001D30  C183  F066         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2198  001D34  0101               	movlb	1	; () banked
  2199  001D36  C182  F065         	movff	init_uart_recv@uc,_uc_ptr
  2200                           
  2201                           ; BSR set to: 1
  2202                           ;my_uart.c: 176: uc_ptr->Tx_buflen = 0;
  2203  001D3A  EE20 F014          	lfsr	2,20
  2204  001D3E  5065               	movf	_uc_ptr,w,c
  2205  001D40  26D9               	addwf	fsr2l,f,c
  2206  001D42  5066               	movf	_uc_ptr+1,w,c
  2207  001D44  22DA               	addwfc	fsr2h,f,c
  2208  001D46  0E00               	movlw	0
  2209  001D48  6EDF               	movwf	indf2,c
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;my_uart.c: 177: uc_ptr->Rx_buflen = 0;
  2213  001D4A  EE20 F015          	lfsr	2,21
  2214  001D4E  5065               	movf	_uc_ptr,w,c
  2215  001D50  26D9               	addwf	fsr2l,f,c
  2216  001D52  5066               	movf	_uc_ptr+1,w,c
  2217  001D54  22DA               	addwfc	fsr2h,f,c
  2218  001D56  0E00               	movlw	0
  2219  001D58  6EDF               	movwf	indf2,c
  2220                           
  2221                           ; BSR set to: 1
  2222                           ;my_uart.c: 178: uc_ptr->msg_length = 0;
  2223  001D5A  EE20 F016          	lfsr	2,22
  2224  001D5E  5065               	movf	_uc_ptr,w,c
  2225  001D60  26D9               	addwf	fsr2l,f,c
  2226  001D62  5066               	movf	_uc_ptr+1,w,c
  2227  001D64  22DA               	addwfc	fsr2h,f,c
  2228  001D66  0E00               	movlw	0
  2229  001D68  6EDF               	movwf	indf2,c
  2230                           
  2231                           ; BSR set to: 1
  2232  001D6A  0012               	return	
  2233  001D6C                     __end_of_init_uart_recv:
  2234                           	opt stack 0
  2235                           tblptru	equ	0xFF8
  2236                           postinc0	equ	0xFEE
  2237                           wreg	equ	0xFE8
  2238                           indf1	equ	0xFE7
  2239                           fsr1h	equ	0xFE2
  2240                           fsr1l	equ	0xFE1
  2241                           indf2	equ	0xFDF
  2242                           postinc2	equ	0xFDE
  2243                           postdec2	equ	0xFDD
  2244                           fsr2h	equ	0xFDA
  2245                           fsr2l	equ	0xFD9
  2246                           status	equ	0xFD8
  2247                           
  2248 ;; *************** function _init_timer1_lthread *****************
  2249 ;; Defined at:
  2250 ;;		line 6 in file "../src/timer1_thread.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2253 ;;		 -> main@t1thread_data(2), 
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;		None
  2256 ;; Return value:  Size  Location     Type
  2257 ;;		None               void
  2258 ;; Registers used:
  2259 ;;		wreg, fsr2l, fsr2h
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2265 ;;      Params:         0       0       2       0       0
  2266 ;;      Locals:         0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0
  2268 ;;      Totals:         0       0       2       0       0
  2269 ;;Total ram usage:        2 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:   10
  2272 ;; This function calls:
  2273 ;;		Nothing
  2274 ;; This function is called by:
  2275 ;;		_main
  2276 ;; This function uses a non-reentrant model
  2277 ;;
  2278                           
  2279                           	psect	text8
  2280  002026                     __ptext8:
  2281                           	opt stack 0
  2282  002026                     _init_timer1_lthread:
  2283                           	opt stack 20
  2284                           
  2285                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2286                           
  2287                           ; BSR set to: 1
  2288                           ;incstack = 0
  2289  002026  C182  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2290  00202A  C183  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2291  00202E  0E00               	movlw	0
  2292  002030  6EDE               	movwf	postinc2,c
  2293  002032  0E00               	movlw	0
  2294  002034  6EDD               	movwf	postdec2,c
  2295  002036  0012               	return	
  2296  002038                     __end_of_init_timer1_lthread:
  2297                           	opt stack 0
  2298                           tblptru	equ	0xFF8
  2299                           postinc0	equ	0xFEE
  2300                           wreg	equ	0xFE8
  2301                           indf1	equ	0xFE7
  2302                           fsr1h	equ	0xFE2
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           postinc2	equ	0xFDE
  2306                           postdec2	equ	0xFDD
  2307                           fsr2h	equ	0xFDA
  2308                           fsr2l	equ	0xFD9
  2309                           status	equ	0xFD8
  2310                           
  2311 ;; *************** function _init_queues *****************
  2312 ;; Defined at:
  2313 ;;		line 194 in file "../src/messages.c"
  2314 ;; Parameters:    Size  Location     Type
  2315 ;;		None
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;		None
  2318 ;; Return value:  Size  Location     Type
  2319 ;;		None               void
  2320 ;; Registers used:
  2321 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2322 ;; Tracked objects:
  2323 ;;		On entry : 0/0
  2324 ;;		On exit  : 0/0
  2325 ;;		Unchanged: 0/0
  2326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2327 ;;      Params:         0       0       0       0       0
  2328 ;;      Locals:         0       0       0       0       0
  2329 ;;      Temps:          0       0       1       0       0
  2330 ;;      Totals:         0       0       1       0       0
  2331 ;;Total ram usage:        1 bytes
  2332 ;; Hardware stack levels used:    1
  2333 ;; Hardware stack levels required when called:   11
  2334 ;; This function calls:
  2335 ;;		_init_queue
  2336 ;; This function is called by:
  2337 ;;		_main
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           
  2341                           	psect	text9
  2342  0018AE                     __ptext9:
  2343                           	opt stack 0
  2344  0018AE                     _init_queues:
  2345                           	opt stack 19
  2346                           
  2347                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2348                           
  2349                           ;incstack = 0
  2350  0018AE  0101               	movlb	1	; () banked
  2351  0018B0  6F86               	movwf	??_init_queues& (0+255),b
  2352  0018B2  0E00               	movlw	0
  2353  0018B4  6E58               	movwf	_MQ_Main_Willing_to_block,c
  2354  0018B6  0101               	movlb	1	; () banked
  2355  0018B8  5186               	movf	??_init_queues& (0+255),w,b
  2356                           
  2357                           ; BSR set to: 1
  2358                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2359  0018BA  0101               	movlb	1	; () banked
  2360  0018BC  0E01               	movlw	high _ToMainLow_MQ
  2361  0018BE  0101               	movlb	1	; () banked
  2362  0018C0  0101               	movlb	1	; () banked
  2363  0018C2  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2364  0018C4  0101               	movlb	1	; () banked
  2365  0018C6  0E4C               	movlw	low _ToMainLow_MQ
  2366  0018C8  0101               	movlb	1	; () banked
  2367  0018CA  0101               	movlb	1	; () banked
  2368  0018CC  6F82               	movwf	init_queue@qptr& (0+255),b
  2369  0018CE  ECE1  F00B         	call	_init_queue	;wreg free
  2370                           
  2371                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2372  0018D2  0100               	movlb	0	; () banked
  2373  0018D4  0E00               	movlw	high _ToMainHigh_MQ
  2374  0018D6  0101               	movlb	1	; () banked
  2375  0018D8  0101               	movlb	1	; () banked
  2376  0018DA  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2377  0018DC  0100               	movlb	0	; () banked
  2378  0018DE  0E80               	movlw	low _ToMainHigh_MQ
  2379  0018E0  0101               	movlb	1	; () banked
  2380  0018E2  0101               	movlb	1	; () banked
  2381  0018E4  6F82               	movwf	init_queue@qptr& (0+255),b
  2382  0018E6  ECE1  F00B         	call	_init_queue	;wreg free
  2383                           
  2384                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2385  0018EA  0101               	movlb	1	; () banked
  2386  0018EC  0E01               	movlw	high _FromMainLow_MQ
  2387  0018EE  0101               	movlb	1	; () banked
  2388  0018F0  0101               	movlb	1	; () banked
  2389  0018F2  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2390  0018F4  0101               	movlb	1	; () banked
  2391  0018F6  0E16               	movlw	low _FromMainLow_MQ
  2392  0018F8  0101               	movlb	1	; () banked
  2393  0018FA  0101               	movlb	1	; () banked
  2394  0018FC  6F82               	movwf	init_queue@qptr& (0+255),b
  2395  0018FE  ECE1  F00B         	call	_init_queue	;wreg free
  2396                           
  2397                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2398  001902  0102               	movlb	2	; () banked
  2399  001904  0E02               	movlw	high _FromMainHigh_MQ
  2400  001906  0101               	movlb	1	; () banked
  2401  001908  0101               	movlb	1	; () banked
  2402  00190A  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2403  00190C  0102               	movlb	2	; () banked
  2404  00190E  0E00               	movlw	low _FromMainHigh_MQ
  2405  001910  0101               	movlb	1	; () banked
  2406  001912  0101               	movlb	1	; () banked
  2407  001914  6F82               	movwf	init_queue@qptr& (0+255),b
  2408  001916  ECE1  F00B         	call	_init_queue	;wreg free
  2409  00191A  0012               	return	
  2410  00191C                     __end_of_init_queues:
  2411                           	opt stack 0
  2412                           tblptru	equ	0xFF8
  2413                           postinc0	equ	0xFEE
  2414                           wreg	equ	0xFE8
  2415                           indf1	equ	0xFE7
  2416                           fsr1h	equ	0xFE2
  2417                           fsr1l	equ	0xFE1
  2418                           indf2	equ	0xFDF
  2419                           postinc2	equ	0xFDE
  2420                           postdec2	equ	0xFDD
  2421                           fsr2h	equ	0xFDA
  2422                           fsr2l	equ	0xFD9
  2423                           status	equ	0xFD8
  2424                           
  2425 ;; *************** function _init_queue *****************
  2426 ;; Defined at:
  2427 ;;		line 14 in file "../src/messages.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2430 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  i               1    3[BANK1 ] unsigned char 
  2433 ;; Return value:  Size  Location     Type
  2434 ;;		None               void
  2435 ;; Registers used:
  2436 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2437 ;; Tracked objects:
  2438 ;;		On entry : 0/0
  2439 ;;		On exit  : 0/0
  2440 ;;		Unchanged: 0/0
  2441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2442 ;;      Params:         0       0       2       0       0
  2443 ;;      Locals:         0       0       1       0       0
  2444 ;;      Temps:          0       0       1       0       0
  2445 ;;      Totals:         0       0       4       0       0
  2446 ;;Total ram usage:        4 bytes
  2447 ;; Hardware stack levels used:    1
  2448 ;; Hardware stack levels required when called:   10
  2449 ;; This function calls:
  2450 ;;		Nothing
  2451 ;; This function is called by:
  2452 ;;		_init_queues
  2453 ;; This function uses a non-reentrant model
  2454 ;;
  2455                           
  2456                           	psect	text10
  2457  0017C2                     __ptext10:
  2458                           	opt stack 0
  2459  0017C2                     _init_queue:
  2460                           	opt stack 19
  2461                           
  2462                           ;messages.c: 15: unsigned char i;
  2463                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2464                           
  2465                           ;incstack = 0
  2466  0017C2  0101               	movlb	1	; () banked
  2467  0017C4  EE20 F034          	lfsr	2,52
  2468  0017C8  0101               	movlb	1	; () banked
  2469  0017CA  5182               	movf	init_queue@qptr& (0+255),w,b
  2470  0017CC  26D9               	addwf	fsr2l,f,c
  2471  0017CE  0101               	movlb	1	; () banked
  2472  0017D0  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  2473  0017D2  22DA               	addwfc	fsr2h,f,c
  2474  0017D4  0E00               	movlw	0
  2475  0017D6  6EDF               	movwf	indf2,c
  2476                           
  2477                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2478  0017D8  0101               	movlb	1	; () banked
  2479  0017DA  EE20 F035          	lfsr	2,53
  2480  0017DE  0101               	movlb	1	; () banked
  2481  0017E0  5182               	movf	init_queue@qptr& (0+255),w,b
  2482  0017E2  26D9               	addwf	fsr2l,f,c
  2483  0017E4  0101               	movlb	1	; () banked
  2484  0017E6  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  2485  0017E8  22DA               	addwfc	fsr2h,f,c
  2486  0017EA  0E00               	movlw	0
  2487  0017EC  6EDF               	movwf	indf2,c
  2488                           
  2489                           ; BSR set to: 1
  2490                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2491  0017EE  0101               	movlb	1	; () banked
  2492  0017F0  6F84               	movwf	??_init_queue& (0+255),b
  2493  0017F2  0E00               	movlw	0
  2494  0017F4  0101               	movlb	1	; () banked
  2495  0017F6  0101               	movlb	1	; () banked
  2496  0017F8  6F85               	movwf	init_queue@i& (0+255),b
  2497  0017FA  0101               	movlb	1	; () banked
  2498  0017FC  5184               	movf	??_init_queue& (0+255),w,b
  2499                           
  2500                           ; BSR set to: 1
  2501  0017FE  0E03               	movlw	3
  2502  001800  0101               	movlb	1	; () banked
  2503  001802  0101               	movlb	1	; () banked
  2504  001804  6585               	cpfsgt	init_queue@i& (0+255),b
  2505  001806  D001               	goto	l3667
  2506  001808  0012               	return	
  2507  00180A                     l3667:
  2508                           
  2509                           ; BSR set to: 1
  2510                           ;messages.c: 20: qptr->queue[i].full = 0;
  2511  00180A  0101               	movlb	1	; () banked
  2512  00180C  0101               	movlb	1	; () banked
  2513  00180E  5185               	movf	init_queue@i& (0+255),w,b
  2514  001810  0D0D               	mullw	13
  2515  001812  50F3               	movf	prodl,w,c
  2516  001814  0101               	movlb	1	; () banked
  2517  001816  0101               	movlb	1	; () banked
  2518  001818  2582               	addwf	init_queue@qptr& (0+255),w,b
  2519  00181A  6ED9               	movwf	fsr2l,c
  2520  00181C  50F4               	movf	prodh,w,c
  2521  00181E  0101               	movlb	1	; () banked
  2522  001820  0101               	movlb	1	; () banked
  2523  001822  2183               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2524  001824  6EDA               	movwf	fsr2h,c
  2525  001826  0E00               	movlw	0
  2526  001828  6EDF               	movwf	indf2,c
  2527                           
  2528                           ; BSR set to: 1
  2529  00182A  0101               	movlb	1	; () banked
  2530  00182C  0101               	movlb	1	; () banked
  2531  00182E  2B85               	incf	init_queue@i& (0+255),f,b
  2532                           
  2533                           ; BSR set to: 1
  2534  001830  0E03               	movlw	3
  2535  001832  0101               	movlb	1	; () banked
  2536  001834  0101               	movlb	1	; () banked
  2537  001836  6585               	cpfsgt	init_queue@i& (0+255),b
  2538  001838  D7E8               	goto	l3667
  2539  00183A  0012               	return	
  2540  00183C                     __end_of_init_queue:
  2541                           	opt stack 0
  2542                           tblptru	equ	0xFF8
  2543                           prodh	equ	0xFF4
  2544                           prodl	equ	0xFF3
  2545                           postinc0	equ	0xFEE
  2546                           wreg	equ	0xFE8
  2547                           indf1	equ	0xFE7
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           postdec2	equ	0xFDD
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           status	equ	0xFD8
  2556                           
  2557 ;; *************** function _init_i2c *****************
  2558 ;; Defined at:
  2559 ;;		line 304 in file "../src/my_i2c.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2562 ;;		 -> main@ic(35), 
  2563 ;; Auto vars:     Size  Location     Type
  2564 ;;		None
  2565 ;; Return value:  Size  Location     Type
  2566 ;;		None               void
  2567 ;; Registers used:
  2568 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2574 ;;      Params:         0       0       2       0       0
  2575 ;;      Locals:         0       0       0       0       0
  2576 ;;      Temps:          0       0       0       0       0
  2577 ;;      Totals:         0       0       2       0       0
  2578 ;;Total ram usage:        2 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:   10
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text11
  2589  0016C4                     __ptext11:
  2590                           	opt stack 0
  2591  0016C4                     _init_i2c:
  2592                           	opt stack 20
  2593                           
  2594                           ;my_i2c.c: 305: ic_ptr = ic;
  2595                           
  2596                           ; BSR set to: 1
  2597                           ;incstack = 0
  2598  0016C4  0101               	movlb	1	; () banked
  2599  0016C6  0100               	movlb	0	; () banked
  2600  0016C8  C183  F0E9         	movff	init_i2c@ic+1,_ic_ptr+1
  2601  0016CC  0101               	movlb	1	; () banked
  2602  0016CE  0100               	movlb	0	; () banked
  2603  0016D0  C182  F0E8         	movff	init_i2c@ic,_ic_ptr
  2604                           
  2605                           ; BSR set to: 0
  2606                           ;my_i2c.c: 306: ic_ptr->buflen = 0;
  2607  0016D4  0100               	movlb	0	; () banked
  2608  0016D6  EE20 F00A          	lfsr	2,10
  2609  0016DA  0100               	movlb	0	; () banked
  2610  0016DC  51E8               	movf	_ic_ptr& (0+255),w,b
  2611  0016DE  26D9               	addwf	fsr2l,f,c
  2612  0016E0  0100               	movlb	0	; () banked
  2613  0016E2  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2614  0016E4  22DA               	addwfc	fsr2h,f,c
  2615  0016E6  0E00               	movlw	0
  2616  0016E8  6EDF               	movwf	indf2,c
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;my_i2c.c: 307: ic_ptr->event_count = 0;
  2620  0016EA  0100               	movlb	0	; () banked
  2621  0016EC  EE20 F00B          	lfsr	2,11
  2622  0016F0  0100               	movlb	0	; () banked
  2623  0016F2  51E8               	movf	_ic_ptr& (0+255),w,b
  2624  0016F4  26D9               	addwf	fsr2l,f,c
  2625  0016F6  0100               	movlb	0	; () banked
  2626  0016F8  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2627  0016FA  22DA               	addwfc	fsr2h,f,c
  2628  0016FC  0E00               	movlw	0
  2629  0016FE  6EDF               	movwf	indf2,c
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;my_i2c.c: 308: ic_ptr->status = 0x3;
  2633  001700  0100               	movlb	0	; () banked
  2634  001702  EE20 F00C          	lfsr	2,12
  2635  001706  0100               	movlb	0	; () banked
  2636  001708  51E8               	movf	_ic_ptr& (0+255),w,b
  2637  00170A  26D9               	addwf	fsr2l,f,c
  2638  00170C  0100               	movlb	0	; () banked
  2639  00170E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2640  001710  22DA               	addwfc	fsr2h,f,c
  2641  001712  0E03               	movlw	3
  2642  001714  6EDF               	movwf	indf2,c
  2643                           
  2644                           ; BSR set to: 0
  2645                           ;my_i2c.c: 309: ic_ptr->error_count = 0;
  2646  001716  0100               	movlb	0	; () banked
  2647  001718  EE20 F00E          	lfsr	2,14
  2648  00171C  0100               	movlb	0	; () banked
  2649  00171E  51E8               	movf	_ic_ptr& (0+255),w,b
  2650  001720  26D9               	addwf	fsr2l,f,c
  2651  001722  0100               	movlb	0	; () banked
  2652  001724  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2653  001726  22DA               	addwfc	fsr2h,f,c
  2654  001728  0E00               	movlw	0
  2655  00172A  6EDF               	movwf	indf2,c
  2656                           
  2657                           ; BSR set to: 0
  2658                           ;my_i2c.c: 310: ic_ptr->outbufind = 0;
  2659  00172C  0100               	movlb	0	; () banked
  2660  00172E  EE20 F01A          	lfsr	2,26
  2661  001732  0100               	movlb	0	; () banked
  2662  001734  51E8               	movf	_ic_ptr& (0+255),w,b
  2663  001736  26D9               	addwf	fsr2l,f,c
  2664  001738  0100               	movlb	0	; () banked
  2665  00173A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2666  00173C  22DA               	addwfc	fsr2h,f,c
  2667  00173E  0E00               	movlw	0
  2668  001740  6EDF               	movwf	indf2,c
  2669                           
  2670                           ; BSR set to: 0
  2671  001742  0012               	return	
  2672  001744                     __end_of_init_i2c:
  2673                           	opt stack 0
  2674                           tblptru	equ	0xFF8
  2675                           prodh	equ	0xFF4
  2676                           prodl	equ	0xFF3
  2677                           postinc0	equ	0xFEE
  2678                           wreg	equ	0xFE8
  2679                           indf1	equ	0xFE7
  2680                           fsr1h	equ	0xFE2
  2681                           fsr1l	equ	0xFE1
  2682                           indf2	equ	0xFDF
  2683                           postinc2	equ	0xFDE
  2684                           postdec2	equ	0xFDD
  2685                           fsr2h	equ	0xFDA
  2686                           fsr2l	equ	0xFD9
  2687                           status	equ	0xFD8
  2688                           
  2689 ;; *************** function _i2c_lthread *****************
  2690 ;; Defined at:
  2691 ;;		line 12 in file "../src/i2c_thread.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;  i2cptr          2   26[BANK1 ] PTR struct __i2c_thread_
  2694 ;;		 -> main@i2cthread_data(2), 
  2695 ;;  msgtype         2   28[BANK1 ] int 
  2696 ;;  length          2   30[BANK1 ] int 
  2697 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2698 ;;		 -> main@msgbuffer(11), 
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;		None
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  2   26[BANK1 ] int 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2710 ;;      Params:         0       0       8       0       0
  2711 ;;      Locals:         0       0       0       0       0
  2712 ;;      Temps:          0       0       1       0       0
  2713 ;;      Totals:         0       0       9       0       0
  2714 ;;Total ram usage:        9 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:   13
  2717 ;; This function calls:
  2718 ;;		_ToMainHigh_sendmsg
  2719 ;;		_i2c_master_recv
  2720 ;;		_i2c_master_send
  2721 ;; This function is called by:
  2722 ;;		_main
  2723 ;; This function uses a non-reentrant model
  2724 ;;
  2725                           
  2726                           	psect	text12
  2727  001274                     __ptext12:
  2728                           	opt stack 0
  2729  001274                     _i2c_lthread:
  2730                           	opt stack 17
  2731                           
  2732                           ;i2c_thread.c: 14: if (msgtype == 40) {
  2733                           
  2734                           ; BSR set to: 0
  2735                           ;incstack = 0
  2736  001274  0101               	movlb	1	; () banked
  2737  001276  0101               	movlb	1	; () banked
  2738  001278  519E               	movf	i2c_lthread@msgtype& (0+255),w,b
  2739  00127A  0A28               	xorlw	40
  2740  00127C  119F               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  2741  00127E  A4D8               	btfss	status,2,c
  2742  001280  D036               	goto	l3627
  2743                           
  2744                           ; BSR set to: 1
  2745                           ;i2c_thread.c: 16: if (i2c_master_send(length, msgbuffer) == 0) {
  2746  001282  0101               	movlb	1	; () banked
  2747  001284  0101               	movlb	1	; () banked
  2748  001286  C1A3  F183         	movff	i2c_lthread@msgbuffer+1,i2c_master_send@msg+1
  2749  00128A  0101               	movlb	1	; () banked
  2750  00128C  0101               	movlb	1	; () banked
  2751  00128E  C1A2  F182         	movff	i2c_lthread@msgbuffer,i2c_master_send@msg
  2752  001292  0101               	movlb	1	; () banked
  2753  001294  0101               	movlb	1	; () banked
  2754  001296  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2755  001298  ECBD  F005         	call	_i2c_master_send
  2756  00129C  0900               	iorlw	0
  2757  00129E  A4D8               	btfss	status,2,c
  2758  0012A0  D010               	goto	l3625
  2759                           
  2760                           ;i2c_thread.c: 17: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  2761  0012A2  C19E  F198         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  2762  0012A6  0101               	movlb	1	; () banked
  2763  0012A8  0101               	movlb	1	; () banked
  2764  0012AA  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2765  0012AE  0101               	movlb	1	; () banked
  2766  0012B0  0101               	movlb	1	; () banked
  2767  0012B2  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2768  0012B6  0101               	movlb	1	; () banked
  2769  0012B8  0101               	movlb	1	; () banked
  2770  0012BA  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2771  0012BC  EC28  F00F         	call	_ToMainHigh_sendmsg
  2772                           
  2773                           ;i2c_thread.c: 18: } else {
  2774  0012C0  0012               	return	
  2775  0012C2                     l3625:
  2776                           
  2777                           ;i2c_thread.c: 20: ToMainHigh_sendmsg(length, 39, (void *) msgbuffer);
  2778  0012C2  0101               	movlb	1	; () banked
  2779  0012C4  6FA4               	movwf	??_i2c_lthread& (0+255),b
  2780  0012C6  0E27               	movlw	39
  2781  0012C8  0101               	movlb	1	; () banked
  2782  0012CA  0101               	movlb	1	; () banked
  2783  0012CC  6F98               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2784  0012CE  0101               	movlb	1	; () banked
  2785  0012D0  51A4               	movf	??_i2c_lthread& (0+255),w,b
  2786  0012D2  0101               	movlb	1	; () banked
  2787  0012D4  0101               	movlb	1	; () banked
  2788  0012D6  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2789  0012DA  0101               	movlb	1	; () banked
  2790  0012DC  0101               	movlb	1	; () banked
  2791  0012DE  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2792  0012E2  0101               	movlb	1	; () banked
  2793  0012E4  0101               	movlb	1	; () banked
  2794  0012E6  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2795  0012E8  EC28  F00F         	call	_ToMainHigh_sendmsg
  2796  0012EC  0012               	return	
  2797  0012EE                     l3627:
  2798  0012EE  0101               	movlb	1	; () banked
  2799  0012F0  0101               	movlb	1	; () banked
  2800  0012F2  519E               	movf	i2c_lthread@msgtype& (0+255),w,b
  2801  0012F4  0A27               	xorlw	39
  2802  0012F6  119F               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  2803  0012F8  A4D8               	btfss	status,2,c
  2804  0012FA  0012               	return	
  2805                           
  2806                           ; BSR set to: 1
  2807                           ;i2c_thread.c: 25: if (msgbuffer[0] == 0xaa) {
  2808  0012FC  0EAA               	movlw	170
  2809  0012FE  C1A2  FFD9         	movff	i2c_lthread@msgbuffer,fsr2l
  2810  001302  C1A3  FFDA         	movff	i2c_lthread@msgbuffer+1,fsr2h
  2811  001306  62DF               	cpfseq	indf2,c
  2812  001308  D007               	goto	l3633
  2813                           
  2814                           ; BSR set to: 1
  2815                           ;i2c_thread.c: 26: length = 5;
  2816  00130A  0E00               	movlw	0
  2817  00130C  0101               	movlb	1	; () banked
  2818  00130E  0101               	movlb	1	; () banked
  2819  001310  6FA1               	movwf	(i2c_lthread@length+1)& (0+255),b
  2820  001312  0E05               	movlw	5
  2821  001314  0101               	movlb	1	; () banked
  2822  001316  6FA0               	movwf	i2c_lthread@length& (0+255),b
  2823  001318                     l3633:
  2824                           
  2825                           ; BSR set to: 1
  2826                           ;i2c_thread.c: 27: }
  2827                           ;i2c_thread.c: 29: if (i2c_master_recv(length) == 0) {
  2828  001318  0101               	movlb	1	; () banked
  2829  00131A  0101               	movlb	1	; () banked
  2830  00131C  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2831  00131E  ECC9  F008         	call	_i2c_master_recv
  2832  001322  0900               	iorlw	0
  2833  001324  A4D8               	btfss	status,2,c
  2834  001326  0012               	return	
  2835                           
  2836                           ;i2c_thread.c: 30: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  2837  001328  C19E  F198         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  2838  00132C  0101               	movlb	1	; () banked
  2839  00132E  0101               	movlb	1	; () banked
  2840  001330  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2841  001334  0101               	movlb	1	; () banked
  2842  001336  0101               	movlb	1	; () banked
  2843  001338  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2844  00133C  0101               	movlb	1	; () banked
  2845  00133E  0101               	movlb	1	; () banked
  2846  001340  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2847  001342  EC28  F00F         	call	_ToMainHigh_sendmsg
  2848  001346  0012               	return	
  2849  001348                     __end_of_i2c_lthread:
  2850                           	opt stack 0
  2851                           tblptru	equ	0xFF8
  2852                           prodh	equ	0xFF4
  2853                           prodl	equ	0xFF3
  2854                           postinc0	equ	0xFEE
  2855                           wreg	equ	0xFE8
  2856                           indf1	equ	0xFE7
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           indf2	equ	0xFDF
  2860                           postinc2	equ	0xFDE
  2861                           postdec2	equ	0xFDD
  2862                           fsr2h	equ	0xFDA
  2863                           fsr2l	equ	0xFD9
  2864                           status	equ	0xFD8
  2865                           
  2866 ;; *************** function _i2c_master_send *****************
  2867 ;; Defined at:
  2868 ;;		line 77 in file "../src/my_i2c.c"
  2869 ;; Parameters:    Size  Location     Type
  2870 ;;  length          1    wreg     unsigned char 
  2871 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  2872 ;;		 -> main@msgbuffer(11), 
  2873 ;; Auto vars:     Size  Location     Type
  2874 ;;  length          1    8[BANK1 ] unsigned char 
  2875 ;;  i               2    9[BANK1 ] int 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;                  1    wreg      unsigned char 
  2878 ;; Registers used:
  2879 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2885 ;;      Params:         0       0       2       0       0
  2886 ;;      Locals:         0       0       3       0       0
  2887 ;;      Temps:          0       0       6       0       0
  2888 ;;      Totals:         0       0      11       0       0
  2889 ;;Total ram usage:       11 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; Hardware stack levels required when called:   10
  2892 ;; This function calls:
  2893 ;;		Nothing
  2894 ;; This function is called by:
  2895 ;;		_i2c_lthread
  2896 ;; This function uses a non-reentrant model
  2897 ;;
  2898                           
  2899                           	psect	text13
  2900  000B7A                     __ptext13:
  2901                           	opt stack 0
  2902  000B7A                     _i2c_master_send:
  2903                           	opt stack 19
  2904                           
  2905                           ;incstack = 0
  2906                           ;i2c_master_send@length stored from wreg
  2907  000B7A  CFE8 F18A          	movff	wreg,i2c_master_send@length
  2908                           
  2909                           ;my_i2c.c: 80: if (ic_ptr->status != 0x3) {
  2910  000B7E  0100               	movlb	0	; () banked
  2911  000B80  EE20 F00C          	lfsr	2,12
  2912  000B84  0100               	movlb	0	; () banked
  2913  000B86  51E8               	movf	_ic_ptr& (0+255),w,b
  2914  000B88  26D9               	addwf	fsr2l,f,c
  2915  000B8A  0100               	movlb	0	; () banked
  2916  000B8C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2917  000B8E  22DA               	addwfc	fsr2h,f,c
  2918  000B90  50DF               	movf	indf2,w,c
  2919  000B92  0A03               	xorlw	3
  2920  000B94  B4D8               	btfsc	status,2,c
  2921  000B96  D002               	goto	l3777
  2922                           
  2923                           ; BSR set to: 0
  2924                           ;my_i2c.c: 81: return 0;
  2925  000B98  0E00               	movlw	0
  2926  000B9A  0012               	return	
  2927  000B9C                     l3777:
  2928                           
  2929                           ; BSR set to: 0
  2930  000B9C  0100               	movlb	0	; () banked
  2931  000B9E  EE20 F00C          	lfsr	2,12
  2932  000BA2  0100               	movlb	0	; () banked
  2933  000BA4  51E8               	movf	_ic_ptr& (0+255),w,b
  2934  000BA6  26D9               	addwf	fsr2l,f,c
  2935  000BA8  0100               	movlb	0	; () banked
  2936  000BAA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2937  000BAC  22DA               	addwfc	fsr2h,f,c
  2938  000BAE  0E03               	movlw	3
  2939  000BB0  62DF               	cpfseq	indf2,c
  2940  000BB2  0012               	return	
  2941                           
  2942                           ; BSR set to: 0
  2943                           ;my_i2c.c: 87: ic_ptr->bufferCounterSend = 1;
  2944  000BB4  0100               	movlb	0	; () banked
  2945  000BB6  EE20 F01C          	lfsr	2,28
  2946  000BBA  0100               	movlb	0	; () banked
  2947  000BBC  51E8               	movf	_ic_ptr& (0+255),w,b
  2948  000BBE  26D9               	addwf	fsr2l,f,c
  2949  000BC0  0100               	movlb	0	; () banked
  2950  000BC2  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2951  000BC4  22DA               	addwfc	fsr2h,f,c
  2952  000BC6  0E01               	movlw	1
  2953  000BC8  6EDE               	movwf	postinc2,c
  2954  000BCA  0E00               	movlw	0
  2955  000BCC  6EDD               	movwf	postdec2,c
  2956                           
  2957                           ; BSR set to: 0
  2958                           ;my_i2c.c: 88: ic_ptr->outbuffer[0] = ic_ptr->slave_addr;
  2959  000BCE  0100               	movlb	0	; () banked
  2960  000BD0  EE20 F01B          	lfsr	2,27
  2961  000BD4  0100               	movlb	0	; () banked
  2962  000BD6  51E8               	movf	_ic_ptr& (0+255),w,b
  2963  000BD8  26D9               	addwf	fsr2l,f,c
  2964  000BDA  0100               	movlb	0	; () banked
  2965  000BDC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2966  000BDE  22DA               	addwfc	fsr2h,f,c
  2967  000BE0  0100               	movlb	0	; () banked
  2968  000BE2  EE10 F00F          	lfsr	1,15
  2969  000BE6  0100               	movlb	0	; () banked
  2970  000BE8  51E8               	movf	_ic_ptr& (0+255),w,b
  2971  000BEA  26E1               	addwf	fsr1l,f,c
  2972  000BEC  0100               	movlb	0	; () banked
  2973  000BEE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2974  000BF0  22E2               	addwfc	fsr1h,f,c
  2975  000BF2  CFDF FFE7          	movff	indf2,indf1
  2976                           
  2977                           ; BSR set to: 0
  2978                           ;my_i2c.c: 90: ic_ptr->outbuflen = length + 1;
  2979  000BF6  0100               	movlb	0	; () banked
  2980  000BF8  EE20 F019          	lfsr	2,25
  2981  000BFC  0100               	movlb	0	; () banked
  2982  000BFE  51E8               	movf	_ic_ptr& (0+255),w,b
  2983  000C00  26D9               	addwf	fsr2l,f,c
  2984  000C02  0100               	movlb	0	; () banked
  2985  000C04  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2986  000C06  22DA               	addwfc	fsr2h,f,c
  2987  000C08  0101               	movlb	1	; () banked
  2988  000C0A  0101               	movlb	1	; () banked
  2989  000C0C  298A               	incf	i2c_master_send@length& (0+255),w,b
  2990  000C0E  6EDF               	movwf	indf2,c
  2991                           
  2992                           ; BSR set to: 1
  2993                           ;my_i2c.c: 92: int i = 1;
  2994  000C10  0E00               	movlw	0
  2995  000C12  0101               	movlb	1	; () banked
  2996  000C14  0101               	movlb	1	; () banked
  2997  000C16  6F8C               	movwf	(i2c_master_send@i+1)& (0+255),b
  2998  000C18  0E01               	movlw	1
  2999  000C1A  0101               	movlb	1	; () banked
  3000  000C1C  6F8B               	movwf	i2c_master_send@i& (0+255),b
  3001  000C1E  D03D               	goto	l3791
  3002  000C20                     l3787:
  3003                           
  3004                           ; BSR set to: 1
  3005                           ;my_i2c.c: 94: ic_ptr->outbuffer[i] = msg[i - 1];
  3006  000C20  0EFF               	movlw	255
  3007  000C22  0101               	movlb	1	; () banked
  3008  000C24  6F84               	movwf	??_i2c_master_send& (0+255),b
  3009  000C26  0EFF               	movlw	255
  3010  000C28  6F85               	movwf	(??_i2c_master_send+1)& (0+255),b
  3011  000C2A  0101               	movlb	1	; () banked
  3012  000C2C  C18B  F186         	movff	i2c_master_send@i,??_i2c_master_send+2
  3013  000C30  0101               	movlb	1	; () banked
  3014  000C32  C18C  F187         	movff	i2c_master_send@i+1,??_i2c_master_send+3
  3015  000C36  0101               	movlb	1	; () banked
  3016  000C38  5184               	movf	??_i2c_master_send& (0+255),w,b
  3017  000C3A  0101               	movlb	1	; () banked
  3018  000C3C  2786               	addwf	(??_i2c_master_send+2)& (0+255),f,b
  3019  000C3E  0101               	movlb	1	; () banked
  3020  000C40  5185               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3021  000C42  0101               	movlb	1	; () banked
  3022  000C44  2387               	addwfc	(??_i2c_master_send+3)& (0+255),f,b
  3023  000C46  0101               	movlb	1	; () banked
  3024  000C48  5186               	movf	(??_i2c_master_send+2)& (0+255),w,b
  3025  000C4A  0101               	movlb	1	; () banked
  3026  000C4C  0101               	movlb	1	; () banked
  3027  000C4E  2582               	addwf	i2c_master_send@msg& (0+255),w,b
  3028  000C50  6ED9               	movwf	fsr2l,c
  3029  000C52  0101               	movlb	1	; () banked
  3030  000C54  5187               	movf	(??_i2c_master_send+3)& (0+255),w,b
  3031  000C56  0101               	movlb	1	; () banked
  3032  000C58  0101               	movlb	1	; () banked
  3033  000C5A  2183               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3034  000C5C  6EDA               	movwf	fsr2h,c
  3035  000C5E  0E0F               	movlw	15
  3036  000C60  0101               	movlb	1	; () banked
  3037  000C62  0101               	movlb	1	; () banked
  3038  000C64  258B               	addwf	i2c_master_send@i& (0+255),w,b
  3039  000C66  0101               	movlb	1	; () banked
  3040  000C68  6F88               	movwf	(??_i2c_master_send+4)& (0+255),b
  3041  000C6A  0E00               	movlw	0
  3042  000C6C  0101               	movlb	1	; () banked
  3043  000C6E  0101               	movlb	1	; () banked
  3044  000C70  218C               	addwfc	(i2c_master_send@i+1)& (0+255),w,b
  3045  000C72  0101               	movlb	1	; () banked
  3046  000C74  6F89               	movwf	(??_i2c_master_send+5)& (0+255),b
  3047  000C76  0101               	movlb	1	; () banked
  3048  000C78  5188               	movf	(??_i2c_master_send+4)& (0+255),w,b
  3049  000C7A  0100               	movlb	0	; () banked
  3050  000C7C  0100               	movlb	0	; () banked
  3051  000C7E  25E8               	addwf	_ic_ptr& (0+255),w,b
  3052  000C80  6EE1               	movwf	fsr1l,c
  3053  000C82  0101               	movlb	1	; () banked
  3054  000C84  5189               	movf	(??_i2c_master_send+5)& (0+255),w,b
  3055  000C86  0100               	movlb	0	; () banked
  3056  000C88  0100               	movlb	0	; () banked
  3057  000C8A  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3058  000C8C  6EE2               	movwf	fsr1h,c
  3059  000C8E  CFDF FFE7          	movff	indf2,indf1
  3060                           
  3061                           ; BSR set to: 0
  3062  000C92  0101               	movlb	1	; () banked
  3063  000C94  0101               	movlb	1	; () banked
  3064  000C96  4B8B               	infsnz	i2c_master_send@i& (0+255),f,b
  3065  000C98  2B8C               	incf	(i2c_master_send@i+1)& (0+255),f,b
  3066  000C9A                     l3791:
  3067                           
  3068                           ; BSR set to: 1
  3069  000C9A  0101               	movlb	1	; () banked
  3070  000C9C  0101               	movlb	1	; () banked
  3071  000C9E  518A               	movf	i2c_master_send@length& (0+255),w,b
  3072  000CA0  0101               	movlb	1	; () banked
  3073  000CA2  6F84               	movwf	??_i2c_master_send& (0+255),b
  3074  000CA4  6B85               	clrf	(??_i2c_master_send+1)& (0+255),b
  3075  000CA6  0E01               	movlw	1
  3076  000CA8  0101               	movlb	1	; () banked
  3077  000CAA  2784               	addwf	??_i2c_master_send& (0+255),f,b
  3078  000CAC  0E00               	movlw	0
  3079  000CAE  2385               	addwfc	(??_i2c_master_send+1)& (0+255),f,b
  3080  000CB0  0101               	movlb	1	; () banked
  3081  000CB2  0101               	movlb	1	; () banked
  3082  000CB4  518C               	movf	(i2c_master_send@i+1)& (0+255),w,b
  3083  000CB6  0A80               	xorlw	128
  3084  000CB8  0101               	movlb	1	; () banked
  3085  000CBA  6F86               	movwf	(??_i2c_master_send+2)& (0+255),b
  3086  000CBC  5184               	movf	??_i2c_master_send& (0+255),w,b
  3087  000CBE  0101               	movlb	1	; () banked
  3088  000CC0  0101               	movlb	1	; () banked
  3089  000CC2  5D8B               	subwf	i2c_master_send@i& (0+255),w,b
  3090  000CC4  0101               	movlb	1	; () banked
  3091  000CC6  5185               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3092  000CC8  0A80               	xorlw	128
  3093  000CCA  0101               	movlb	1	; () banked
  3094  000CCC  5986               	subwfb	(??_i2c_master_send+2)& (0+255),w,b
  3095  000CCE  A0D8               	btfss	status,0,c
  3096  000CD0  D7A7               	goto	l3787
  3097                           
  3098                           ; BSR set to: 1
  3099                           ;my_i2c.c: 95: }
  3100                           ;my_i2c.c: 97: ic_ptr->tx_i2c = 0x1;
  3101                           
  3102                           ; BSR set to: 1
  3103  000CD2  0100               	movlb	0	; () banked
  3104  000CD4  EE20 F020          	lfsr	2,32
  3105  000CD8  0100               	movlb	0	; () banked
  3106  000CDA  51E8               	movf	_ic_ptr& (0+255),w,b
  3107  000CDC  26D9               	addwf	fsr2l,f,c
  3108  000CDE  0100               	movlb	0	; () banked
  3109  000CE0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3110  000CE2  22DA               	addwfc	fsr2h,f,c
  3111  000CE4  0E01               	movlw	1
  3112  000CE6  6EDF               	movwf	indf2,c
  3113                           
  3114                           ;my_i2c.c: 98: ic_ptr->rx_i2c = 0x0;
  3115  000CE8  0100               	movlb	0	; () banked
  3116  000CEA  EE20 F021          	lfsr	2,33
  3117  000CEE  0100               	movlb	0	; () banked
  3118  000CF0  51E8               	movf	_ic_ptr& (0+255),w,b
  3119  000CF2  26D9               	addwf	fsr2l,f,c
  3120  000CF4  0100               	movlb	0	; () banked
  3121  000CF6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3122  000CF8  22DA               	addwfc	fsr2h,f,c
  3123  000CFA  0E00               	movlw	0
  3124  000CFC  6EDF               	movwf	indf2,c
  3125                           
  3126                           ;my_i2c.c: 100: ic_ptr->status = 0x5;
  3127  000CFE  0100               	movlb	0	; () banked
  3128  000D00  EE20 F00C          	lfsr	2,12
  3129  000D04  0100               	movlb	0	; () banked
  3130  000D06  51E8               	movf	_ic_ptr& (0+255),w,b
  3131  000D08  26D9               	addwf	fsr2l,f,c
  3132  000D0A  0100               	movlb	0	; () banked
  3133  000D0C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3134  000D0E  22DA               	addwfc	fsr2h,f,c
  3135  000D10  0E05               	movlw	5
  3136  000D12  6EDF               	movwf	indf2,c
  3137                           
  3138                           ; BSR set to: 0
  3139                           ;my_i2c.c: 102: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3140  000D14  80C5               	bsf	4037,0,c	;volatile
  3141  000D16                     l306:
  3142  000D16  B0C5               	btfsc	4037,0,c	;volatile
  3143  000D18  D7FE               	goto	l306
  3144                           
  3145                           ;my_i2c.c: 104: return 1;
  3146  000D1A  0E01               	movlw	1
  3147  000D1C  0012               	return	
  3148  000D1E                     __end_of_i2c_master_send:
  3149                           	opt stack 0
  3150                           tblptru	equ	0xFF8
  3151                           prodh	equ	0xFF4
  3152                           prodl	equ	0xFF3
  3153                           postinc0	equ	0xFEE
  3154                           wreg	equ	0xFE8
  3155                           indf1	equ	0xFE7
  3156                           fsr1h	equ	0xFE2
  3157                           fsr1l	equ	0xFE1
  3158                           indf2	equ	0xFDF
  3159                           postinc2	equ	0xFDE
  3160                           postdec2	equ	0xFDD
  3161                           fsr2h	equ	0xFDA
  3162                           fsr2l	equ	0xFD9
  3163                           status	equ	0xFD8
  3164                           
  3165 ;; *************** function _i2c_master_recv *****************
  3166 ;; Defined at:
  3167 ;;		line 121 in file "../src/my_i2c.c"
  3168 ;; Parameters:    Size  Location     Type
  3169 ;;  length          1    wreg     unsigned char 
  3170 ;; Auto vars:     Size  Location     Type
  3171 ;;  length          1    0[BANK1 ] unsigned char 
  3172 ;; Return value:  Size  Location     Type
  3173 ;;                  1    wreg      unsigned char 
  3174 ;; Registers used:
  3175 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3176 ;; Tracked objects:
  3177 ;;		On entry : 0/0
  3178 ;;		On exit  : 0/0
  3179 ;;		Unchanged: 0/0
  3180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3181 ;;      Params:         0       0       0       0       0
  3182 ;;      Locals:         0       0       1       0       0
  3183 ;;      Temps:          0       0       0       0       0
  3184 ;;      Totals:         0       0       1       0       0
  3185 ;;Total ram usage:        1 bytes
  3186 ;; Hardware stack levels used:    1
  3187 ;; Hardware stack levels required when called:   10
  3188 ;; This function calls:
  3189 ;;		Nothing
  3190 ;; This function is called by:
  3191 ;;		_i2c_lthread
  3192 ;; This function uses a non-reentrant model
  3193 ;;
  3194                           
  3195                           	psect	text14
  3196  001192                     __ptext14:
  3197                           	opt stack 0
  3198  001192                     _i2c_master_recv:
  3199                           	opt stack 19
  3200                           
  3201                           ;incstack = 0
  3202                           ;i2c_master_recv@length stored from wreg
  3203  001192  CFE8 F182          	movff	wreg,i2c_master_recv@length
  3204                           
  3205                           ;my_i2c.c: 123: if (ic_ptr->status != 0x3) {
  3206  001196  0100               	movlb	0	; () banked
  3207  001198  EE20 F00C          	lfsr	2,12
  3208  00119C  0100               	movlb	0	; () banked
  3209  00119E  51E8               	movf	_ic_ptr& (0+255),w,b
  3210  0011A0  26D9               	addwf	fsr2l,f,c
  3211  0011A2  0100               	movlb	0	; () banked
  3212  0011A4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3213  0011A6  22DA               	addwfc	fsr2h,f,c
  3214  0011A8  50DF               	movf	indf2,w,c
  3215  0011AA  0A03               	xorlw	3
  3216  0011AC  B4D8               	btfsc	status,2,c
  3217  0011AE  D002               	goto	l3809
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;my_i2c.c: 124: return 0;
  3221  0011B0  0E00               	movlw	0
  3222  0011B2  0012               	return	
  3223  0011B4                     l3809:
  3224                           
  3225                           ; BSR set to: 0
  3226  0011B4  0100               	movlb	0	; () banked
  3227  0011B6  EE20 F00C          	lfsr	2,12
  3228  0011BA  0100               	movlb	0	; () banked
  3229  0011BC  51E8               	movf	_ic_ptr& (0+255),w,b
  3230  0011BE  26D9               	addwf	fsr2l,f,c
  3231  0011C0  0100               	movlb	0	; () banked
  3232  0011C2  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3233  0011C4  22DA               	addwfc	fsr2h,f,c
  3234  0011C6  0E03               	movlw	3
  3235  0011C8  62DF               	cpfseq	indf2,c
  3236  0011CA  0012               	return	
  3237                           
  3238                           ; BSR set to: 0
  3239                           ;my_i2c.c: 127: ic_ptr->rx_i2c = 0x1;
  3240  0011CC  0100               	movlb	0	; () banked
  3241  0011CE  EE20 F021          	lfsr	2,33
  3242  0011D2  0100               	movlb	0	; () banked
  3243  0011D4  51E8               	movf	_ic_ptr& (0+255),w,b
  3244  0011D6  26D9               	addwf	fsr2l,f,c
  3245  0011D8  0100               	movlb	0	; () banked
  3246  0011DA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3247  0011DC  22DA               	addwfc	fsr2h,f,c
  3248  0011DE  0E01               	movlw	1
  3249  0011E0  6EDF               	movwf	indf2,c
  3250                           
  3251                           ;my_i2c.c: 128: ic_ptr->tx_i2c = 0x0;
  3252  0011E2  0100               	movlb	0	; () banked
  3253  0011E4  EE20 F020          	lfsr	2,32
  3254  0011E8  0100               	movlb	0	; () banked
  3255  0011EA  51E8               	movf	_ic_ptr& (0+255),w,b
  3256  0011EC  26D9               	addwf	fsr2l,f,c
  3257  0011EE  0100               	movlb	0	; () banked
  3258  0011F0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3259  0011F2  22DA               	addwfc	fsr2h,f,c
  3260  0011F4  0E00               	movlw	0
  3261  0011F6  6EDF               	movwf	indf2,c
  3262                           
  3263                           ; BSR set to: 0
  3264                           ;my_i2c.c: 130: ic_ptr->slave_addr_rc = ((ic_ptr->slave_addr) | 0b00000001);
  3265  0011F8  0100               	movlb	0	; () banked
  3266  0011FA  EE20 F022          	lfsr	2,34
  3267  0011FE  0100               	movlb	0	; () banked
  3268  001200  51E8               	movf	_ic_ptr& (0+255),w,b
  3269  001202  26D9               	addwf	fsr2l,f,c
  3270  001204  0100               	movlb	0	; () banked
  3271  001206  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3272  001208  22DA               	addwfc	fsr2h,f,c
  3273  00120A  0100               	movlb	0	; () banked
  3274  00120C  EE10 F01B          	lfsr	1,27
  3275  001210  0100               	movlb	0	; () banked
  3276  001212  51E8               	movf	_ic_ptr& (0+255),w,b
  3277  001214  26E1               	addwf	fsr1l,f,c
  3278  001216  0100               	movlb	0	; () banked
  3279  001218  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3280  00121A  22E2               	addwfc	fsr1h,f,c
  3281  00121C  50E7               	movf	indf1,w,c
  3282  00121E  0901               	iorlw	1
  3283  001220  6EDF               	movwf	indf2,c
  3284                           
  3285                           ; BSR set to: 0
  3286                           ;my_i2c.c: 132: ic_ptr->buflen = length;
  3287  001222  0100               	movlb	0	; () banked
  3288  001224  EE20 F00A          	lfsr	2,10
  3289  001228  0100               	movlb	0	; () banked
  3290  00122A  51E8               	movf	_ic_ptr& (0+255),w,b
  3291  00122C  26D9               	addwf	fsr2l,f,c
  3292  00122E  0100               	movlb	0	; () banked
  3293  001230  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3294  001232  22DA               	addwfc	fsr2h,f,c
  3295  001234  0101               	movlb	1	; () banked
  3296  001236  C182  FFDF         	movff	i2c_master_recv@length,indf2
  3297                           
  3298                           ; BSR set to: 1
  3299                           ;my_i2c.c: 134: ic_ptr->status = 0xC;
  3300  00123A  0100               	movlb	0	; () banked
  3301  00123C  EE20 F00C          	lfsr	2,12
  3302  001240  0100               	movlb	0	; () banked
  3303  001242  51E8               	movf	_ic_ptr& (0+255),w,b
  3304  001244  26D9               	addwf	fsr2l,f,c
  3305  001246  0100               	movlb	0	; () banked
  3306  001248  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3307  00124A  22DA               	addwfc	fsr2h,f,c
  3308  00124C  0E0C               	movlw	12
  3309  00124E  6EDF               	movwf	indf2,c
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;my_i2c.c: 136: ic_ptr->bufferCounterRx = 0;
  3313  001250  0100               	movlb	0	; () banked
  3314  001252  EE20 F01E          	lfsr	2,30
  3315  001256  0100               	movlb	0	; () banked
  3316  001258  51E8               	movf	_ic_ptr& (0+255),w,b
  3317  00125A  26D9               	addwf	fsr2l,f,c
  3318  00125C  0100               	movlb	0	; () banked
  3319  00125E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3320  001260  22DA               	addwfc	fsr2h,f,c
  3321  001262  0E00               	movlw	0
  3322  001264  6EDE               	movwf	postinc2,c
  3323  001266  0E00               	movlw	0
  3324  001268  6EDD               	movwf	postdec2,c
  3325                           
  3326                           ; BSR set to: 0
  3327                           ;my_i2c.c: 138: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3328  00126A  80C5               	bsf	4037,0,c	;volatile
  3329  00126C                     l315:
  3330  00126C  B0C5               	btfsc	4037,0,c	;volatile
  3331  00126E  D7FE               	goto	l315
  3332                           
  3333                           ;my_i2c.c: 140: return 1;
  3334  001270  0E01               	movlw	1
  3335  001272  0012               	return	
  3336  001274                     __end_of_i2c_master_recv:
  3337                           	opt stack 0
  3338                           tblptru	equ	0xFF8
  3339                           prodh	equ	0xFF4
  3340                           prodl	equ	0xFF3
  3341                           postinc0	equ	0xFEE
  3342                           wreg	equ	0xFE8
  3343                           indf1	equ	0xFE7
  3344                           fsr1h	equ	0xFE2
  3345                           fsr1l	equ	0xFE1
  3346                           indf2	equ	0xFDF
  3347                           postinc2	equ	0xFDE
  3348                           postdec2	equ	0xFDD
  3349                           fsr2h	equ	0xFDA
  3350                           fsr2l	equ	0xFD9
  3351                           status	equ	0xFD8
  3352                           
  3353 ;; *************** function _ToMainHigh_sendmsg *****************
  3354 ;; Defined at:
  3355 ;;		line 126 in file "../src/messages.c"
  3356 ;; Parameters:    Size  Location     Type
  3357 ;;  length          1    wreg     unsigned char 
  3358 ;;  msgtype         1   22[BANK1 ] unsigned char 
  3359 ;;  data            2   23[BANK1 ] PTR void 
  3360 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  length          1   25[BANK1 ] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      char 
  3365 ;; Registers used:
  3366 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3372 ;;      Params:         0       0       3       0       0
  3373 ;;      Locals:         0       0       1       0       0
  3374 ;;      Temps:          0       0       0       0       0
  3375 ;;      Totals:         0       0       4       0       0
  3376 ;;Total ram usage:        4 bytes
  3377 ;; Hardware stack levels used:    1
  3378 ;; Hardware stack levels required when called:   12
  3379 ;; This function calls:
  3380 ;;		_send_msg
  3381 ;; This function is called by:
  3382 ;;		_i2c_lthread
  3383 ;; This function uses a non-reentrant model
  3384 ;;
  3385                           
  3386                           	psect	text15
  3387  001E50                     __ptext15:
  3388                           	opt stack 0
  3389  001E50                     _ToMainHigh_sendmsg:
  3390                           	opt stack 17
  3391                           
  3392                           ;incstack = 0
  3393                           ;ToMainHigh_sendmsg@length stored from wreg
  3394  001E50  CFE8 F19B          	movff	wreg,ToMainHigh_sendmsg@length
  3395                           
  3396                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  3397                           ;	Return value of _ToMainHigh_sendmsg is never used
  3398  001E54  0100               	movlb	0	; () banked
  3399  001E56  0E00               	movlw	high _ToMainHigh_MQ
  3400  001E58  0101               	movlb	1	; () banked
  3401  001E5A  0101               	movlb	1	; () banked
  3402  001E5C  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  3403  001E5E  0100               	movlb	0	; () banked
  3404  001E60  0E80               	movlw	low _ToMainHigh_MQ
  3405  001E62  0101               	movlb	1	; () banked
  3406  001E64  0101               	movlb	1	; () banked
  3407  001E66  6F8C               	movwf	send_msg@qptr& (0+255),b
  3408  001E68  C19B  F18E         	movff	ToMainHigh_sendmsg@length,send_msg@length
  3409  001E6C  C198  F18F         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  3410  001E70  0101               	movlb	1	; () banked
  3411  001E72  0101               	movlb	1	; () banked
  3412  001E74  C19A  F191         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  3413  001E78  0101               	movlb	1	; () banked
  3414  001E7A  0101               	movlb	1	; () banked
  3415  001E7C  C199  F190         	movff	ToMainHigh_sendmsg@data,send_msg@data
  3416  001E80  ECC5  F007         	call	_send_msg	;wreg free
  3417  001E84  0012               	return	
  3418  001E86                     __end_of_ToMainHigh_sendmsg:
  3419                           	opt stack 0
  3420                           tblptru	equ	0xFF8
  3421                           prodh	equ	0xFF4
  3422                           prodl	equ	0xFF3
  3423                           postinc0	equ	0xFEE
  3424                           wreg	equ	0xFE8
  3425                           indf1	equ	0xFE7
  3426                           fsr1h	equ	0xFE2
  3427                           fsr1l	equ	0xFE1
  3428                           indf2	equ	0xFDF
  3429                           postinc2	equ	0xFDE
  3430                           postdec2	equ	0xFDD
  3431                           fsr2h	equ	0xFDA
  3432                           fsr2l	equ	0xFD9
  3433                           status	equ	0xFD8
  3434                           
  3435 ;; *************** function _send_msg *****************
  3436 ;; Defined at:
  3437 ;;		line 24 in file "../src/messages.c"
  3438 ;; Parameters:    Size  Location     Type
  3439 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3440 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3441 ;;  length          1   12[BANK1 ] unsigned char 
  3442 ;;  msgtype         1   13[BANK1 ] unsigned char 
  3443 ;;  data            2   14[BANK1 ] PTR void 
  3444 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  3445 ;;		 -> main@uc(23), 
  3446 ;; Auto vars:     Size  Location     Type
  3447 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  3448 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3449 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3450 ;;  tlength         2   17[BANK1 ] unsigned int 
  3451 ;;  slot            1   19[BANK1 ] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      char 
  3454 ;; Registers used:
  3455 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3461 ;;      Params:         0       0       6       0       0
  3462 ;;      Locals:         0       0       5       0       0
  3463 ;;      Temps:          0       0       1       0       0
  3464 ;;      Totals:         0       0      12       0       0
  3465 ;;Total ram usage:       12 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; Hardware stack levels required when called:   11
  3468 ;; This function calls:
  3469 ;;		_memcpy
  3470 ;; This function is called by:
  3471 ;;		_ToMainHigh_sendmsg
  3472 ;;		_FromMainHigh_sendmsg
  3473 ;;		_FromMainLow_sendmsg
  3474 ;; This function uses a non-reentrant model
  3475 ;;
  3476                           
  3477                           	psect	text16
  3478  000F8A                     __ptext16:
  3479                           	opt stack 0
  3480  000F8A                     _send_msg:
  3481                           	opt stack 17
  3482                           
  3483                           ;messages.c: 25: unsigned char slot;
  3484                           ;messages.c: 27: msg *qmsg;
  3485                           ;messages.c: 28: size_t tlength = length;
  3486                           
  3487                           ;incstack = 0
  3488  000F8A  0101               	movlb	1	; () banked
  3489  000F8C  0101               	movlb	1	; () banked
  3490  000F8E  C18E  F193         	movff	send_msg@length,send_msg@tlength
  3491  000F92  0101               	movlb	1	; () banked
  3492  000F94  0101               	movlb	1	; () banked
  3493  000F96  6B94               	clrf	(send_msg@tlength+1)& (0+255),b
  3494                           
  3495                           ; BSR set to: 1
  3496                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3497  000F98  0101               	movlb	1	; () banked
  3498  000F9A  EE20 F034          	lfsr	2,52
  3499  000F9E  0101               	movlb	1	; () banked
  3500  000FA0  518C               	movf	send_msg@qptr& (0+255),w,b
  3501  000FA2  26D9               	addwf	fsr2l,f,c
  3502  000FA4  0101               	movlb	1	; () banked
  3503  000FA6  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3504  000FA8  22DA               	addwfc	fsr2h,f,c
  3505  000FAA  50DF               	movf	indf2,w,c
  3506  000FAC  0101               	movlb	1	; () banked
  3507  000FAE  0101               	movlb	1	; () banked
  3508  000FB0  6F95               	movwf	send_msg@slot& (0+255),b
  3509                           
  3510                           ; BSR set to: 1
  3511                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3512  000FB2  0101               	movlb	1	; () banked
  3513  000FB4  0101               	movlb	1	; () banked
  3514  000FB6  5195               	movf	send_msg@slot& (0+255),w,b
  3515  000FB8  0D0D               	mullw	13
  3516  000FBA  50F3               	movf	prodl,w,c
  3517  000FBC  0101               	movlb	1	; () banked
  3518  000FBE  0101               	movlb	1	; () banked
  3519  000FC0  258C               	addwf	send_msg@qptr& (0+255),w,b
  3520  000FC2  0101               	movlb	1	; () banked
  3521  000FC4  0101               	movlb	1	; () banked
  3522  000FC6  6F96               	movwf	send_msg@qmsg& (0+255),b
  3523  000FC8  50F4               	movf	prodh,w,c
  3524  000FCA  0101               	movlb	1	; () banked
  3525  000FCC  0101               	movlb	1	; () banked
  3526  000FCE  218D               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3527  000FD0  0101               	movlb	1	; () banked
  3528  000FD2  6F97               	movwf	(send_msg@qmsg+1)& (0+255),b
  3529                           
  3530                           ; BSR set to: 1
  3531                           ;messages.c: 41: if (qmsg->full != 0) {
  3532  000FD4  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  3533  000FD8  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3534  000FDC  50DF               	movf	indf2,w,c
  3535  000FDE  B4D8               	btfsc	status,2,c
  3536  000FE0  D002               	goto	l3685
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;messages.c: 42: return (-1);
  3540  000FE2  0EFF               	movlw	255
  3541  000FE4  0012               	return	
  3542  000FE6                     l3685:
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;messages.c: 43: }
  3546                           ;messages.c: 46: qmsg->length = length;
  3547  000FE6  0101               	movlb	1	; () banked
  3548  000FE8  EE20 F001          	lfsr	2,1
  3549  000FEC  0101               	movlb	1	; () banked
  3550  000FEE  5196               	movf	send_msg@qmsg& (0+255),w,b
  3551  000FF0  26D9               	addwf	fsr2l,f,c
  3552  000FF2  0101               	movlb	1	; () banked
  3553  000FF4  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3554  000FF6  22DA               	addwfc	fsr2h,f,c
  3555  000FF8  0101               	movlb	1	; () banked
  3556  000FFA  C18E  FFDF         	movff	send_msg@length,indf2
  3557                           
  3558                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3559  000FFE  0101               	movlb	1	; () banked
  3560  001000  EE20 F002          	lfsr	2,2
  3561  001004  0101               	movlb	1	; () banked
  3562  001006  5196               	movf	send_msg@qmsg& (0+255),w,b
  3563  001008  26D9               	addwf	fsr2l,f,c
  3564  00100A  0101               	movlb	1	; () banked
  3565  00100C  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3566  00100E  22DA               	addwfc	fsr2h,f,c
  3567  001010  0101               	movlb	1	; () banked
  3568  001012  C18F  FFDF         	movff	send_msg@msgtype,indf2
  3569                           
  3570                           ; BSR set to: 1
  3571                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3572  001016  0E03               	movlw	3
  3573  001018  0101               	movlb	1	; () banked
  3574  00101A  0101               	movlb	1	; () banked
  3575  00101C  2596               	addwf	send_msg@qmsg& (0+255),w,b
  3576  00101E  0101               	movlb	1	; () banked
  3577  001020  0101               	movlb	1	; () banked
  3578  001022  6F82               	movwf	memcpy@d1& (0+255),b
  3579  001024  0E00               	movlw	0
  3580  001026  0101               	movlb	1	; () banked
  3581  001028  0101               	movlb	1	; () banked
  3582  00102A  2197               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3583  00102C  0101               	movlb	1	; () banked
  3584  00102E  6F83               	movwf	(memcpy@d1+1)& (0+255),b
  3585  001030  0101               	movlb	1	; () banked
  3586  001032  0101               	movlb	1	; () banked
  3587  001034  C191  F185         	movff	send_msg@data+1,memcpy@s1+1
  3588  001038  0101               	movlb	1	; () banked
  3589  00103A  0101               	movlb	1	; () banked
  3590  00103C  C190  F184         	movff	send_msg@data,memcpy@s1
  3591  001040  C193  F186         	movff	send_msg@tlength,memcpy@n
  3592  001044  C194  F187         	movff	send_msg@tlength+1,memcpy@n+1
  3593  001048  EC2D  F00D         	call	_memcpy	;wreg free
  3594                           
  3595                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3596  00104C  0101               	movlb	1	; () banked
  3597  00104E  EE20 F034          	lfsr	2,52
  3598  001052  0101               	movlb	1	; () banked
  3599  001054  518C               	movf	send_msg@qptr& (0+255),w,b
  3600  001056  26D9               	addwf	fsr2l,f,c
  3601  001058  0101               	movlb	1	; () banked
  3602  00105A  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3603  00105C  22DA               	addwfc	fsr2h,f,c
  3604  00105E  0101               	movlb	1	; () banked
  3605  001060  EE10 F034          	lfsr	1,52
  3606  001064  0101               	movlb	1	; () banked
  3607  001066  518C               	movf	send_msg@qptr& (0+255),w,b
  3608  001068  26E1               	addwf	fsr1l,f,c
  3609  00106A  0101               	movlb	1	; () banked
  3610  00106C  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3611  00106E  22E2               	addwfc	fsr1h,f,c
  3612  001070  50E7               	movf	indf1,w,c
  3613  001072  0101               	movlb	1	; () banked
  3614  001074  6F92               	movwf	??_send_msg& (0+255),b
  3615  001076  0101               	movlb	1	; () banked
  3616  001078  2992               	incf	??_send_msg& (0+255),w,b
  3617  00107A  0B03               	andlw	3
  3618  00107C  6EDF               	movwf	indf2,c
  3619                           
  3620                           ; BSR set to: 1
  3621                           ;messages.c: 59: qmsg->full = 1;
  3622  00107E  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  3623  001082  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3624  001086  0E01               	movlw	1
  3625  001088  6EDF               	movwf	indf2,c
  3626                           
  3627                           ; BSR set to: 1
  3628                           ;messages.c: 60: return (1);
  3629  00108A  0E01               	movlw	1
  3630  00108C  0012               	return	
  3631  00108E                     __end_of_send_msg:
  3632                           	opt stack 0
  3633                           tblptru	equ	0xFF8
  3634                           prodh	equ	0xFF4
  3635                           prodl	equ	0xFF3
  3636                           postinc0	equ	0xFEE
  3637                           wreg	equ	0xFE8
  3638                           indf1	equ	0xFE7
  3639                           fsr1h	equ	0xFE2
  3640                           fsr1l	equ	0xFE1
  3641                           indf2	equ	0xFDF
  3642                           postinc2	equ	0xFDE
  3643                           postdec2	equ	0xFDD
  3644                           fsr2h	equ	0xFDA
  3645                           fsr2l	equ	0xFD9
  3646                           status	equ	0xFD8
  3647                           
  3648 ;; *************** function _i2c_configure_master *****************
  3649 ;; Defined at:
  3650 ;;		line 50 in file "../src/my_i2c.c"
  3651 ;; Parameters:    Size  Location     Type
  3652 ;;  slave_addr      1    wreg     unsigned char 
  3653 ;; Auto vars:     Size  Location     Type
  3654 ;;  slave_addr      1    0[BANK1 ] unsigned char 
  3655 ;; Return value:  Size  Location     Type
  3656 ;;		None               void
  3657 ;; Registers used:
  3658 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3659 ;; Tracked objects:
  3660 ;;		On entry : 0/0
  3661 ;;		On exit  : 0/0
  3662 ;;		Unchanged: 0/0
  3663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3664 ;;      Params:         0       0       0       0       0
  3665 ;;      Locals:         0       0       1       0       0
  3666 ;;      Temps:          0       0       0       0       0
  3667 ;;      Totals:         0       0       1       0       0
  3668 ;;Total ram usage:        1 bytes
  3669 ;; Hardware stack levels used:    1
  3670 ;; Hardware stack levels required when called:   10
  3671 ;; This function calls:
  3672 ;;		Nothing
  3673 ;; This function is called by:
  3674 ;;		_main
  3675 ;; This function uses a non-reentrant model
  3676 ;;
  3677                           
  3678                           	psect	text17
  3679  001BE6                     __ptext17:
  3680                           	opt stack 0
  3681  001BE6                     _i2c_configure_master:
  3682                           	opt stack 20
  3683                           
  3684                           ; BSR set to: 1
  3685                           ;incstack = 0
  3686                           ;i2c_configure_master@slave_addr stored from wreg
  3687  001BE6  CFE8 F182          	movff	wreg,i2c_configure_master@slave_addr
  3688                           
  3689                           ;my_i2c.c: 52: ic_ptr->slave_addr = slave_addr;
  3690  001BEA  0100               	movlb	0	; () banked
  3691  001BEC  EE20 F01B          	lfsr	2,27
  3692  001BF0  0100               	movlb	0	; () banked
  3693  001BF2  51E8               	movf	_ic_ptr& (0+255),w,b
  3694  001BF4  26D9               	addwf	fsr2l,f,c
  3695  001BF6  0100               	movlb	0	; () banked
  3696  001BF8  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3697  001BFA  22DA               	addwfc	fsr2h,f,c
  3698  001BFC  0101               	movlb	1	; () banked
  3699  001BFE  C182  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  3700                           
  3701                           ; BSR set to: 1
  3702                           ;my_i2c.c: 54: SSPCON1 = 0b00001000;
  3703  001C02  0E08               	movlw	8
  3704  001C04  6EC6               	movwf	4038,c	;volatile
  3705                           
  3706                           ; BSR set to: 1
  3707                           ;my_i2c.c: 56: SSPCON1 |= 0b00100000;
  3708  001C06  8AC6               	bsf	4038,5,c	;volatile
  3709                           
  3710                           ; BSR set to: 1
  3711                           ;my_i2c.c: 58: SSPADD = 0x77;
  3712  001C08  0E77               	movlw	119
  3713  001C0A  6EC8               	movwf	4040,c	;volatile
  3714                           
  3715                           ; BSR set to: 1
  3716                           ;my_i2c.c: 61: ic_ptr->bufferCounterSend = 1;
  3717  001C0C  0100               	movlb	0	; () banked
  3718  001C0E  EE20 F01C          	lfsr	2,28
  3719  001C12  0100               	movlb	0	; () banked
  3720  001C14  51E8               	movf	_ic_ptr& (0+255),w,b
  3721  001C16  26D9               	addwf	fsr2l,f,c
  3722  001C18  0100               	movlb	0	; () banked
  3723  001C1A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3724  001C1C  22DA               	addwfc	fsr2h,f,c
  3725  001C1E  0E01               	movlw	1
  3726  001C20  6EDE               	movwf	postinc2,c
  3727  001C22  0E00               	movlw	0
  3728  001C24  6EDD               	movwf	postdec2,c
  3729                           
  3730                           ; BSR set to: 0
  3731  001C26  0012               	return	
  3732  001C28                     __end_of_i2c_configure_master:
  3733                           	opt stack 0
  3734                           tblptru	equ	0xFF8
  3735                           prodh	equ	0xFF4
  3736                           prodl	equ	0xFF3
  3737                           postinc0	equ	0xFEE
  3738                           wreg	equ	0xFE8
  3739                           indf1	equ	0xFE7
  3740                           fsr1h	equ	0xFE2
  3741                           fsr1l	equ	0xFE1
  3742                           indf2	equ	0xFDF
  3743                           postinc2	equ	0xFDE
  3744                           postdec2	equ	0xFDD
  3745                           fsr2h	equ	0xFDA
  3746                           fsr2l	equ	0xFD9
  3747                           status	equ	0xFD8
  3748                           
  3749 ;; *************** function _enable_interrupts *****************
  3750 ;; Defined at:
  3751 ;;		line 16 in file "../src/interrupts.c"
  3752 ;; Parameters:    Size  Location     Type
  3753 ;;		None
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;		None
  3756 ;; Return value:  Size  Location     Type
  3757 ;;		None               void
  3758 ;; Registers used:
  3759 ;;		None
  3760 ;; Tracked objects:
  3761 ;;		On entry : 0/0
  3762 ;;		On exit  : 0/0
  3763 ;;		Unchanged: 0/0
  3764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3765 ;;      Params:         0       0       0       0       0
  3766 ;;      Locals:         0       0       0       0       0
  3767 ;;      Temps:          0       0       0       0       0
  3768 ;;      Totals:         0       0       0       0       0
  3769 ;;Total ram usage:        0 bytes
  3770 ;; Hardware stack levels used:    1
  3771 ;; Hardware stack levels required when called:   10
  3772 ;; This function calls:
  3773 ;;		Nothing
  3774 ;; This function is called by:
  3775 ;;		_main
  3776 ;; This function uses a non-reentrant model
  3777 ;;
  3778                           
  3779                           	psect	text18
  3780  002092                     __ptext18:
  3781                           	opt stack 0
  3782  002092                     _enable_interrupts:
  3783                           	opt stack 20
  3784                           
  3785                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;incstack = 0
  3789  002092  8ED0               	bsf	4048,7,c	;volatile
  3790                           
  3791                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  3792  002094  8EF2               	bsf	intcon,7,c	;volatile
  3793                           
  3794                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  3795  002096  8CF2               	bsf	intcon,6,c	;volatile
  3796  002098  0012               	return	
  3797  00209A                     __end_of_enable_interrupts:
  3798                           	opt stack 0
  3799                           tblptru	equ	0xFF8
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           postinc0	equ	0xFEE
  3804                           wreg	equ	0xFE8
  3805                           indf1	equ	0xFE7
  3806                           fsr1h	equ	0xFE2
  3807                           fsr1l	equ	0xFE1
  3808                           indf2	equ	0xFDF
  3809                           postinc2	equ	0xFDE
  3810                           postdec2	equ	0xFDD
  3811                           fsr2h	equ	0xFDA
  3812                           fsr2l	equ	0xFD9
  3813                           status	equ	0xFD8
  3814                           
  3815 ;; *************** function _block_on_To_msgqueues *****************
  3816 ;; Defined at:
  3817 ;;		line 258 in file "../src/messages.c"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;		None
  3822 ;; Return value:  Size  Location     Type
  3823 ;;		None               void
  3824 ;; Registers used:
  3825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3831 ;;      Params:         0       0       0       0       0
  3832 ;;      Locals:         0       0       0       0       0
  3833 ;;      Temps:          0       0       1       0       0
  3834 ;;      Totals:         0       0       1       0       0
  3835 ;;Total ram usage:        1 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:   13
  3838 ;; This function calls:
  3839 ;;		_Delay1KTCYx
  3840 ;;		_check_msg
  3841 ;;		_in_main
  3842 ;; This function is called by:
  3843 ;;		_main
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text19
  3848  001744                     __ptext19:
  3849                           	opt stack 0
  3850  001744                     _block_on_To_msgqueues:
  3851                           	opt stack 17
  3852                           
  3853                           ;messages.c: 259: if (!in_main()) {
  3854                           
  3855                           ;incstack = 0
  3856  001744  ECD1  F00D         	call	_in_main	;wreg free
  3857  001748  0101               	movlb	1	; () banked
  3858  00174A  0101               	movlb	1	; () banked
  3859  00174C  5187               	movf	(?_in_main+1)& (0+255),w,b
  3860  00174E  0101               	movlb	1	; () banked
  3861  001750  1186               	iorwf	?_in_main& (0+255),w,b
  3862  001752  B4D8               	btfsc	status,2,c
  3863  001754  0012               	return	
  3864                           
  3865                           ; BSR set to: 1
  3866                           ;messages.c: 261: }
  3867                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3868                           
  3869                           ; BSR set to: 1
  3870                           
  3871                           ; BSR set to: 1
  3872                           ;messages.c: 260: return;
  3873  001756  0101               	movlb	1	; () banked
  3874  001758  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3875  00175A  0E01               	movlw	1
  3876  00175C  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3877  00175E  0101               	movlb	1	; () banked
  3878  001760  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3879  001762                     l3599:
  3880                           
  3881                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3882  001762  0100               	movlb	0	; () banked
  3883  001764  0E00               	movlw	high _ToMainHigh_MQ
  3884  001766  0101               	movlb	1	; () banked
  3885  001768  0101               	movlb	1	; () banked
  3886  00176A  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  3887  00176C  0100               	movlb	0	; () banked
  3888  00176E  0E80               	movlw	low _ToMainHigh_MQ
  3889  001770  0101               	movlb	1	; () banked
  3890  001772  0101               	movlb	1	; () banked
  3891  001774  6F82               	movwf	check_msg@qptr& (0+255),b
  3892  001776  EC43  F00F         	call	_check_msg	;wreg free
  3893  00177A  0900               	iorlw	0
  3894  00177C  B4D8               	btfsc	status,2,c
  3895  00177E  D007               	goto	l3605
  3896                           
  3897                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3898  001780  0101               	movlb	1	; () banked
  3899  001782  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3900  001784  0E00               	movlw	0
  3901  001786  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3902  001788  0101               	movlb	1	; () banked
  3903  00178A  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3904  00178C  0012               	return	
  3905  00178E                     l3605:
  3906                           
  3907                           ;messages.c: 271: }
  3908                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3909  00178E  0101               	movlb	1	; () banked
  3910  001790  0E01               	movlw	high _ToMainLow_MQ
  3911  001792  0101               	movlb	1	; () banked
  3912  001794  0101               	movlb	1	; () banked
  3913  001796  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  3914  001798  0101               	movlb	1	; () banked
  3915  00179A  0E4C               	movlw	low _ToMainLow_MQ
  3916  00179C  0101               	movlb	1	; () banked
  3917  00179E  0101               	movlb	1	; () banked
  3918  0017A0  6F82               	movwf	check_msg@qptr& (0+255),b
  3919  0017A2  EC43  F00F         	call	_check_msg	;wreg free
  3920  0017A6  0900               	iorlw	0
  3921  0017A8  B4D8               	btfsc	status,2,c
  3922  0017AA  D007               	goto	l3611
  3923                           
  3924                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3925  0017AC  0101               	movlb	1	; () banked
  3926  0017AE  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3927  0017B0  0E00               	movlw	0
  3928  0017B2  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3929  0017B4  0101               	movlb	1	; () banked
  3930  0017B6  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3931  0017B8  0012               	return	
  3932  0017BA                     l3611:
  3933                           
  3934                           ;messages.c: 278: }
  3935                           ;messages.c: 279: Delay1KTCYx(10);
  3936  0017BA  0E0A               	movlw	10
  3937  0017BC  ECF5  F00F         	call	_Delay1KTCYx
  3938  0017C0  D7D0               	goto	l3599
  3939  0017C2                     __end_of_block_on_To_msgqueues:
  3940                           	opt stack 0
  3941                           tblptru	equ	0xFF8
  3942                           prodh	equ	0xFF4
  3943                           prodl	equ	0xFF3
  3944                           intcon	equ	0xFF2
  3945                           postinc0	equ	0xFEE
  3946                           wreg	equ	0xFE8
  3947                           indf1	equ	0xFE7
  3948                           fsr1h	equ	0xFE2
  3949                           fsr1l	equ	0xFE1
  3950                           indf2	equ	0xFDF
  3951                           postinc2	equ	0xFDE
  3952                           postdec2	equ	0xFDD
  3953                           fsr2h	equ	0xFDA
  3954                           fsr2l	equ	0xFD9
  3955                           status	equ	0xFD8
  3956                           
  3957 ;; *************** function _in_main *****************
  3958 ;; Defined at:
  3959 ;;		line 44 in file "../src/interrupts.c"
  3960 ;; Parameters:    Size  Location     Type
  3961 ;;		None
  3962 ;; Auto vars:     Size  Location     Type
  3963 ;;		None
  3964 ;; Return value:  Size  Location     Type
  3965 ;;                  2    4[BANK1 ] int 
  3966 ;; Registers used:
  3967 ;;		wreg, status,2, status,0, cstack
  3968 ;; Tracked objects:
  3969 ;;		On entry : 0/0
  3970 ;;		On exit  : 0/0
  3971 ;;		Unchanged: 0/0
  3972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3973 ;;      Params:         0       0       2       0       0
  3974 ;;      Locals:         0       0       0       0       0
  3975 ;;      Temps:          0       0       0       0       0
  3976 ;;      Totals:         0       0       2       0       0
  3977 ;;Total ram usage:        2 bytes
  3978 ;; Hardware stack levels used:    1
  3979 ;; Hardware stack levels required when called:   12
  3980 ;; This function calls:
  3981 ;;		_in_high_int
  3982 ;;		_in_low_int
  3983 ;; This function is called by:
  3984 ;;		_block_on_To_msgqueues
  3985 ;; This function uses a non-reentrant model
  3986 ;;
  3987                           
  3988                           	psect	text20
  3989  001BA2                     __ptext20:
  3990                           	opt stack 0
  3991  001BA2                     _in_main:
  3992                           	opt stack 17
  3993                           
  3994                           ;interrupts.c: 45: if ((!in_low_int()) && (!in_high_int())) {
  3995                           
  3996                           ;incstack = 0
  3997  001BA2  EC8B  F00D         	call	_in_low_int	;wreg free
  3998  001BA6  0101               	movlb	1	; () banked
  3999  001BA8  0101               	movlb	1	; () banked
  4000  001BAA  5185               	movf	(?_in_low_int+1)& (0+255),w,b
  4001  001BAC  0101               	movlb	1	; () banked
  4002  001BAE  1184               	iorwf	?_in_low_int& (0+255),w,b
  4003  001BB0  A4D8               	btfss	status,2,c
  4004  001BB2  D011               	goto	l3335
  4005                           
  4006                           ; BSR set to: 1
  4007  001BB4  EC1C  F010         	call	_in_high_int	;wreg free
  4008  001BB8  0101               	movlb	1	; () banked
  4009  001BBA  0101               	movlb	1	; () banked
  4010  001BBC  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4011  001BBE  0101               	movlb	1	; () banked
  4012  001BC0  1182               	iorwf	?_in_high_int& (0+255),w,b
  4013  001BC2  A4D8               	btfss	status,2,c
  4014  001BC4  D008               	goto	l3335
  4015                           
  4016                           ; BSR set to: 1
  4017                           ;interrupts.c: 46: return (1);
  4018  001BC6  0E00               	movlw	0
  4019  001BC8  0101               	movlb	1	; () banked
  4020  001BCA  0101               	movlb	1	; () banked
  4021  001BCC  6F87               	movwf	(?_in_main+1)& (0+255),b
  4022  001BCE  0E01               	movlw	1
  4023  001BD0  0101               	movlb	1	; () banked
  4024  001BD2  6F86               	movwf	?_in_main& (0+255),b
  4025  001BD4  0012               	return	
  4026  001BD6                     l3335:
  4027                           
  4028                           ; BSR set to: 1
  4029                           ;interrupts.c: 48: return (0);
  4030  001BD6  0E00               	movlw	0
  4031  001BD8  0101               	movlb	1	; () banked
  4032  001BDA  0101               	movlb	1	; () banked
  4033  001BDC  6F87               	movwf	(?_in_main+1)& (0+255),b
  4034  001BDE  0E00               	movlw	0
  4035  001BE0  0101               	movlb	1	; () banked
  4036  001BE2  6F86               	movwf	?_in_main& (0+255),b
  4037  001BE4  0012               	return	
  4038  001BE6                     __end_of_in_main:
  4039                           	opt stack 0
  4040                           tblptru	equ	0xFF8
  4041                           prodh	equ	0xFF4
  4042                           prodl	equ	0xFF3
  4043                           intcon	equ	0xFF2
  4044                           postinc0	equ	0xFEE
  4045                           wreg	equ	0xFE8
  4046                           indf1	equ	0xFE7
  4047                           fsr1h	equ	0xFE2
  4048                           fsr1l	equ	0xFE1
  4049                           indf2	equ	0xFDF
  4050                           postinc2	equ	0xFDE
  4051                           postdec2	equ	0xFDD
  4052                           fsr2h	equ	0xFDA
  4053                           fsr2l	equ	0xFD9
  4054                           status	equ	0xFD8
  4055                           
  4056 ;; *************** function _in_low_int *****************
  4057 ;; Defined at:
  4058 ;;		line 33 in file "../src/interrupts.c"
  4059 ;; Parameters:    Size  Location     Type
  4060 ;;		None
  4061 ;; Auto vars:     Size  Location     Type
  4062 ;;		None
  4063 ;; Return value:  Size  Location     Type
  4064 ;;                  2    2[BANK1 ] int 
  4065 ;; Registers used:
  4066 ;;		wreg, status,2, status,0, cstack
  4067 ;; Tracked objects:
  4068 ;;		On entry : 0/0
  4069 ;;		On exit  : 0/0
  4070 ;;		Unchanged: 0/0
  4071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4072 ;;      Params:         0       0       2       0       0
  4073 ;;      Locals:         0       0       0       0       0
  4074 ;;      Temps:          0       0       0       0       0
  4075 ;;      Totals:         0       0       2       0       0
  4076 ;;Total ram usage:        2 bytes
  4077 ;; Hardware stack levels used:    1
  4078 ;; Hardware stack levels required when called:   11
  4079 ;; This function calls:
  4080 ;;		_in_high_int
  4081 ;; This function is called by:
  4082 ;;		_in_main
  4083 ;; This function uses a non-reentrant model
  4084 ;;
  4085                           
  4086                           	psect	text21
  4087  001B16                     __ptext21:
  4088                           	opt stack 0
  4089  001B16                     _in_low_int:
  4090                           	opt stack 17
  4091                           
  4092                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;incstack = 0
  4096  001B16  ACF2               	btfss	intcon,6,c	;volatile
  4097  001B18  D008               	goto	l3313
  4098                           
  4099                           ;interrupts.c: 36: return (0);
  4100  001B1A  0E00               	movlw	0
  4101  001B1C  0101               	movlb	1	; () banked
  4102  001B1E  0101               	movlb	1	; () banked
  4103  001B20  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4104  001B22  0E00               	movlw	0
  4105  001B24  0101               	movlb	1	; () banked
  4106  001B26  6F84               	movwf	?_in_low_int& (0+255),b
  4107  001B28  0012               	return	
  4108  001B2A                     l3313:
  4109  001B2A  EC1C  F010         	call	_in_high_int	;wreg free
  4110  001B2E  0101               	movlb	1	; () banked
  4111  001B30  0101               	movlb	1	; () banked
  4112  001B32  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4113  001B34  0101               	movlb	1	; () banked
  4114  001B36  1182               	iorwf	?_in_high_int& (0+255),w,b
  4115  001B38  B4D8               	btfsc	status,2,c
  4116  001B3A  D008               	goto	l3321
  4117                           
  4118                           ; BSR set to: 1
  4119                           ;interrupts.c: 38: return (0);
  4120  001B3C  0E00               	movlw	0
  4121  001B3E  0101               	movlb	1	; () banked
  4122  001B40  0101               	movlb	1	; () banked
  4123  001B42  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4124  001B44  0E00               	movlw	0
  4125  001B46  0101               	movlb	1	; () banked
  4126  001B48  6F84               	movwf	?_in_low_int& (0+255),b
  4127  001B4A  0012               	return	
  4128  001B4C                     l3321:
  4129                           
  4130                           ; BSR set to: 1
  4131                           ;interrupts.c: 40: return (1);
  4132  001B4C  0E00               	movlw	0
  4133  001B4E  0101               	movlb	1	; () banked
  4134  001B50  0101               	movlb	1	; () banked
  4135  001B52  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4136  001B54  0E01               	movlw	1
  4137  001B56  0101               	movlb	1	; () banked
  4138  001B58  6F84               	movwf	?_in_low_int& (0+255),b
  4139  001B5A  0012               	return	
  4140  001B5C                     __end_of_in_low_int:
  4141                           	opt stack 0
  4142                           tblptru	equ	0xFF8
  4143                           prodh	equ	0xFF4
  4144                           prodl	equ	0xFF3
  4145                           intcon	equ	0xFF2
  4146                           postinc0	equ	0xFEE
  4147                           wreg	equ	0xFE8
  4148                           indf1	equ	0xFE7
  4149                           fsr1h	equ	0xFE2
  4150                           fsr1l	equ	0xFE1
  4151                           indf2	equ	0xFDF
  4152                           postinc2	equ	0xFDE
  4153                           postdec2	equ	0xFDD
  4154                           fsr2h	equ	0xFDA
  4155                           fsr2l	equ	0xFD9
  4156                           status	equ	0xFD8
  4157                           
  4158 ;; *************** function _in_high_int *****************
  4159 ;; Defined at:
  4160 ;;		line 24 in file "../src/interrupts.c"
  4161 ;; Parameters:    Size  Location     Type
  4162 ;;		None
  4163 ;; Auto vars:     Size  Location     Type
  4164 ;;		None
  4165 ;; Return value:  Size  Location     Type
  4166 ;;                  2    0[BANK1 ] int 
  4167 ;; Registers used:
  4168 ;;		wreg, status,2
  4169 ;; Tracked objects:
  4170 ;;		On entry : 0/0
  4171 ;;		On exit  : 0/0
  4172 ;;		Unchanged: 0/0
  4173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4174 ;;      Params:         0       0       2       0       0
  4175 ;;      Locals:         0       0       0       0       0
  4176 ;;      Temps:          0       0       0       0       0
  4177 ;;      Totals:         0       0       2       0       0
  4178 ;;Total ram usage:        2 bytes
  4179 ;; Hardware stack levels used:    1
  4180 ;; Hardware stack levels required when called:   10
  4181 ;; This function calls:
  4182 ;;		Nothing
  4183 ;; This function is called by:
  4184 ;;		_in_low_int
  4185 ;;		_in_main
  4186 ;; This function uses a non-reentrant model
  4187 ;;
  4188                           
  4189                           	psect	text22
  4190  002038                     __ptext22:
  4191                           	opt stack 0
  4192  002038                     _in_high_int:
  4193                           	opt stack 17
  4194                           
  4195                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  4196                           
  4197                           ; BSR set to: 1
  4198                           ;incstack = 0
  4199  002038  0E00               	movlw	0
  4200  00203A  AEF2               	btfss	intcon,7,c	;volatile
  4201  00203C  0E01               	movlw	1
  4202  00203E  0101               	movlb	1	; () banked
  4203  002040  0101               	movlb	1	; () banked
  4204  002042  6F82               	movwf	?_in_high_int& (0+255),b
  4205  002044  0101               	movlb	1	; () banked
  4206  002046  6B83               	clrf	(?_in_high_int+1)& (0+255),b
  4207  002048  0012               	return	
  4208  00204A                     __end_of_in_high_int:
  4209                           	opt stack 0
  4210                           tblptru	equ	0xFF8
  4211                           prodh	equ	0xFF4
  4212                           prodl	equ	0xFF3
  4213                           intcon	equ	0xFF2
  4214                           postinc0	equ	0xFEE
  4215                           wreg	equ	0xFE8
  4216                           indf1	equ	0xFE7
  4217                           fsr1h	equ	0xFE2
  4218                           fsr1l	equ	0xFE1
  4219                           indf2	equ	0xFDF
  4220                           postinc2	equ	0xFDE
  4221                           postdec2	equ	0xFDD
  4222                           fsr2h	equ	0xFDA
  4223                           fsr2l	equ	0xFD9
  4224                           status	equ	0xFD8
  4225                           
  4226 ;; *************** function _check_msg *****************
  4227 ;; Defined at:
  4228 ;;		line 222 in file "../src/messages.c"
  4229 ;; Parameters:    Size  Location     Type
  4230 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4231 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4232 ;; Auto vars:     Size  Location     Type
  4233 ;;		None
  4234 ;; Return value:  Size  Location     Type
  4235 ;;                  1    wreg      unsigned char 
  4236 ;; Registers used:
  4237 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4238 ;; Tracked objects:
  4239 ;;		On entry : 0/0
  4240 ;;		On exit  : 0/0
  4241 ;;		Unchanged: 0/0
  4242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4243 ;;      Params:         0       0       2       0       0
  4244 ;;      Locals:         0       0       0       0       0
  4245 ;;      Temps:          0       0       1       0       0
  4246 ;;      Totals:         0       0       3       0       0
  4247 ;;Total ram usage:        3 bytes
  4248 ;; Hardware stack levels used:    1
  4249 ;; Hardware stack levels required when called:   10
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_block_on_To_msgqueues
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text23
  4258  001E86                     __ptext23:
  4259                           	opt stack 0
  4260  001E86                     _check_msg:
  4261                           	opt stack 19
  4262                           
  4263                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4264                           
  4265                           ; BSR set to: 1
  4266                           ;incstack = 0
  4267  001E86  0101               	movlb	1	; () banked
  4268  001E88  EE20 F035          	lfsr	2,53
  4269  001E8C  0101               	movlb	1	; () banked
  4270  001E8E  5182               	movf	check_msg@qptr& (0+255),w,b
  4271  001E90  26D9               	addwf	fsr2l,f,c
  4272  001E92  0101               	movlb	1	; () banked
  4273  001E94  5183               	movf	(check_msg@qptr+1)& (0+255),w,b
  4274  001E96  22DA               	addwfc	fsr2h,f,c
  4275  001E98  50DF               	movf	indf2,w,c
  4276  001E9A  0101               	movlb	1	; () banked
  4277  001E9C  6F84               	movwf	??_check_msg& (0+255),b
  4278  001E9E  0101               	movlb	1	; () banked
  4279  001EA0  5184               	movf	??_check_msg& (0+255),w,b
  4280  001EA2  0D0D               	mullw	13
  4281  001EA4  50F3               	movf	prodl,w,c
  4282  001EA6  0101               	movlb	1	; () banked
  4283  001EA8  0101               	movlb	1	; () banked
  4284  001EAA  2582               	addwf	check_msg@qptr& (0+255),w,b
  4285  001EAC  6ED9               	movwf	fsr2l,c
  4286  001EAE  50F4               	movf	prodh,w,c
  4287  001EB0  0101               	movlb	1	; () banked
  4288  001EB2  0101               	movlb	1	; () banked
  4289  001EB4  2183               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4290  001EB6  6EDA               	movwf	fsr2h,c
  4291  001EB8  50DF               	movf	indf2,w,c
  4292  001EBA  0012               	return	
  4293  001EBC                     __end_of_check_msg:
  4294                           	opt stack 0
  4295                           tblptru	equ	0xFF8
  4296                           prodh	equ	0xFF4
  4297                           prodl	equ	0xFF3
  4298                           intcon	equ	0xFF2
  4299                           postinc0	equ	0xFEE
  4300                           wreg	equ	0xFE8
  4301                           indf1	equ	0xFE7
  4302                           fsr1h	equ	0xFE2
  4303                           fsr1l	equ	0xFE1
  4304                           indf2	equ	0xFDF
  4305                           postinc2	equ	0xFDE
  4306                           postdec2	equ	0xFDD
  4307                           fsr2h	equ	0xFDA
  4308                           fsr2l	equ	0xFD9
  4309                           status	equ	0xFD8
  4310                           
  4311 ;; *************** function _Delay1KTCYx *****************
  4312 ;; Defined at:
<<<<<<< HEAD
  4313 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
=======
  4313 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  4314 ;; Parameters:    Size  Location     Type
  4315 ;;  unit            1    wreg     unsigned char 
  4316 ;; Auto vars:     Size  Location     Type
  4317 ;;  unit            1    0[BANK1 ] unsigned char 
  4318 ;; Return value:  Size  Location     Type
  4319 ;;		None               void
  4320 ;; Registers used:
  4321 ;;		wreg
  4322 ;; Tracked objects:
  4323 ;;		On entry : 0/0
  4324 ;;		On exit  : 0/0
  4325 ;;		Unchanged: 0/0
  4326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4327 ;;      Params:         0       0       0       0       0
  4328 ;;      Locals:         0       0       1       0       0
  4329 ;;      Temps:          0       0       0       0       0
  4330 ;;      Totals:         0       0       1       0       0
  4331 ;;Total ram usage:        1 bytes
  4332 ;; Hardware stack levels used:    1
  4333 ;; Hardware stack levels required when called:   10
  4334 ;; This function calls:
  4335 ;;		Nothing
  4336 ;; This function is called by:
  4337 ;;		_block_on_To_msgqueues
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text24
  4342  001FEA                     __ptext24:
  4343                           	opt stack 0
  4344  001FEA                     _Delay1KTCYx:
  4345                           	opt stack 19
  4346                           
  4347                           ; BSR set to: 1
  4348                           ;incstack = 0
  4349                           ;Delay1KTCYx@unit stored from wreg
  4350  001FEA  CFE8 F182          	movff	wreg,Delay1KTCYx@unit
  4351  001FEE                     l881:
  4352  001FEE  0EFA               	movlw	250
  4353  001FF0                     u2877:
  4354  001FF0  F000               	nop	
  4355  001FF2  2EE8               	decfsz	wreg,f,c
  4356  001FF4  D7FD               	goto	u2877
  4357  001FF6  0101               	movlb	1	; () banked
  4358  001FF8  0101               	movlb	1	; () banked
  4359  001FFA  2F82               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4360  001FFC  D7F8               	goto	l881
  4361  001FFE  0012               	return	
  4362  002000                     __end_of_Delay1KTCYx:
  4363                           	opt stack 0
  4364                           tblptru	equ	0xFF8
  4365                           prodh	equ	0xFF4
  4366                           prodl	equ	0xFF3
  4367                           intcon	equ	0xFF2
  4368                           postinc0	equ	0xFEE
  4369                           wreg	equ	0xFE8
  4370                           indf1	equ	0xFE7
  4371                           fsr1h	equ	0xFE2
  4372                           fsr1l	equ	0xFE1
  4373                           indf2	equ	0xFDF
  4374                           postinc2	equ	0xFDE
  4375                           postdec2	equ	0xFDD
  4376                           fsr2h	equ	0xFDA
  4377                           fsr2l	equ	0xFD9
  4378                           status	equ	0xFD8
  4379                           
  4380 ;; *************** function _ToMainLow_recvmsg *****************
  4381 ;; Defined at:
  4382 ;;		line 112 in file "../src/messages.c"
  4383 ;; Parameters:    Size  Location     Type
  4384 ;;  maxlength       1    wreg     unsigned char 
  4385 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4386 ;;		 -> main@msgtype(1), 
  4387 ;;  data            2   26[BANK1 ] PTR void 
  4388 ;;		 -> main@msgbuffer(11), 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      char 
  4393 ;; Registers used:
  4394 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4400 ;;      Params:         0       0       4       0       0
  4401 ;;      Locals:         0       0       1       0       0
  4402 ;;      Temps:          0       0       0       0       0
  4403 ;;      Totals:         0       0       5       0       0
  4404 ;;Total ram usage:        5 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:   12
  4407 ;; This function calls:
  4408 ;;		_recv_msg
  4409 ;; This function is called by:
  4410 ;;		_main
  4411 ;; This function uses a non-reentrant model
  4412 ;;
  4413                           
  4414                           	psect	text25
  4415  001C28                     __ptext25:
  4416                           	opt stack 0
  4417  001C28                     _ToMainLow_recvmsg:
  4418                           	opt stack 18
  4419                           
  4420                           ; BSR set to: 1
  4421                           ;incstack = 0
  4422                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4423  001C28  CFE8 F19E          	movff	wreg,ToMainLow_recvmsg@maxlength
  4424                           
  4425                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4426  001C2C  0101               	movlb	1	; () banked
  4427  001C2E  0E01               	movlw	high _ToMainLow_MQ
  4428  001C30  0101               	movlb	1	; () banked
  4429  001C32  0101               	movlb	1	; () banked
  4430  001C34  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  4431  001C36  0101               	movlb	1	; () banked
  4432  001C38  0E4C               	movlw	low _ToMainLow_MQ
  4433  001C3A  0101               	movlb	1	; () banked
  4434  001C3C  0101               	movlb	1	; () banked
  4435  001C3E  6F8C               	movwf	recv_msg@qptr& (0+255),b
  4436  001C40  C19E  F18E         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4437  001C44  0101               	movlb	1	; () banked
  4438  001C46  0101               	movlb	1	; () banked
  4439  001C48  C19B  F190         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4440  001C4C  0101               	movlb	1	; () banked
  4441  001C4E  0101               	movlb	1	; () banked
  4442  001C50  C19A  F18F         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4443  001C54  0101               	movlb	1	; () banked
  4444  001C56  0101               	movlb	1	; () banked
  4445  001C58  C19D  F192         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4446  001C5C  0101               	movlb	1	; () banked
  4447  001C5E  0101               	movlb	1	; () banked
  4448  001C60  C19C  F191         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4449  001C64  EC8F  F006         	call	_recv_msg	;wreg free
  4450  001C68  0012               	return	
  4451  001C6A                     __end_of_ToMainLow_recvmsg:
  4452                           	opt stack 0
  4453                           tblptru	equ	0xFF8
  4454                           prodh	equ	0xFF4
  4455                           prodl	equ	0xFF3
  4456                           intcon	equ	0xFF2
  4457                           postinc0	equ	0xFEE
  4458                           wreg	equ	0xFE8
  4459                           indf1	equ	0xFE7
  4460                           fsr1h	equ	0xFE2
  4461                           fsr1l	equ	0xFE1
  4462                           indf2	equ	0xFDF
  4463                           postinc2	equ	0xFDE
  4464                           postdec2	equ	0xFDD
  4465                           fsr2h	equ	0xFDA
  4466                           fsr2l	equ	0xFD9
  4467                           status	equ	0xFD8
  4468                           
  4469 ;; *************** function _ToMainHigh_recvmsg *****************
  4470 ;; Defined at:
  4471 ;;		line 135 in file "../src/messages.c"
  4472 ;; Parameters:    Size  Location     Type
  4473 ;;  maxlength       1    wreg     unsigned char 
  4474 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4475 ;;		 -> main@msgtype(1), 
  4476 ;;  data            2   26[BANK1 ] PTR void 
  4477 ;;		 -> main@msgbuffer(11), 
  4478 ;; Auto vars:     Size  Location     Type
  4479 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4480 ;; Return value:  Size  Location     Type
  4481 ;;                  1    wreg      char 
  4482 ;; Registers used:
  4483 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4484 ;; Tracked objects:
  4485 ;;		On entry : 0/0
  4486 ;;		On exit  : 0/0
  4487 ;;		Unchanged: 0/0
  4488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4489 ;;      Params:         0       0       4       0       0
  4490 ;;      Locals:         0       0       1       0       0
  4491 ;;      Temps:          0       0       0       0       0
  4492 ;;      Totals:         0       0       5       0       0
  4493 ;;Total ram usage:        5 bytes
  4494 ;; Hardware stack levels used:    1
  4495 ;; Hardware stack levels required when called:   12
  4496 ;; This function calls:
  4497 ;;		_recv_msg
  4498 ;; This function is called by:
  4499 ;;		_main
  4500 ;; This function uses a non-reentrant model
  4501 ;;
  4502                           
  4503                           	psect	text26
  4504  001C6A                     __ptext26:
  4505                           	opt stack 0
  4506  001C6A                     _ToMainHigh_recvmsg:
  4507                           	opt stack 18
  4508                           
  4509                           ;incstack = 0
  4510                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4511  001C6A  CFE8 F19E          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4512                           
  4513                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4514  001C6E  0100               	movlb	0	; () banked
  4515  001C70  0E00               	movlw	high _ToMainHigh_MQ
  4516  001C72  0101               	movlb	1	; () banked
  4517  001C74  0101               	movlb	1	; () banked
  4518  001C76  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  4519  001C78  0100               	movlb	0	; () banked
  4520  001C7A  0E80               	movlw	low _ToMainHigh_MQ
  4521  001C7C  0101               	movlb	1	; () banked
  4522  001C7E  0101               	movlb	1	; () banked
  4523  001C80  6F8C               	movwf	recv_msg@qptr& (0+255),b
  4524  001C82  C19E  F18E         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4525  001C86  0101               	movlb	1	; () banked
  4526  001C88  0101               	movlb	1	; () banked
  4527  001C8A  C19B  F190         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4528  001C8E  0101               	movlb	1	; () banked
  4529  001C90  0101               	movlb	1	; () banked
  4530  001C92  C19A  F18F         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4531  001C96  0101               	movlb	1	; () banked
  4532  001C98  0101               	movlb	1	; () banked
  4533  001C9A  C19D  F192         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4534  001C9E  0101               	movlb	1	; () banked
  4535  001CA0  0101               	movlb	1	; () banked
  4536  001CA2  C19C  F191         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4537  001CA6  EC8F  F006         	call	_recv_msg	;wreg free
  4538  001CAA  0012               	return	
  4539  001CAC                     __end_of_ToMainHigh_recvmsg:
  4540                           	opt stack 0
  4541                           tblptru	equ	0xFF8
  4542                           prodh	equ	0xFF4
  4543                           prodl	equ	0xFF3
  4544                           intcon	equ	0xFF2
  4545                           postinc0	equ	0xFEE
  4546                           wreg	equ	0xFE8
  4547                           indf1	equ	0xFE7
  4548                           fsr1h	equ	0xFE2
  4549                           fsr1l	equ	0xFE1
  4550                           indf2	equ	0xFDF
  4551                           postinc2	equ	0xFDE
  4552                           postdec2	equ	0xFDD
  4553                           fsr2h	equ	0xFDA
  4554                           fsr2l	equ	0xFD9
  4555                           status	equ	0xFD8
  4556                           
  4557 ;; *************** function _recv_msg *****************
  4558 ;; Defined at:
  4559 ;;		line 63 in file "../src/messages.c"
  4560 ;; Parameters:    Size  Location     Type
  4561 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4562 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4563 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4564 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4565 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4566 ;;  data            2   15[BANK1 ] PTR void 
  4567 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4568 ;; Auto vars:     Size  Location     Type
  4569 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4570 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4571 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4572 ;;  tlength         2   20[BANK1 ] unsigned int 
  4573 ;;  slot            1   19[BANK1 ] unsigned char 
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      char 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4583 ;;      Params:         0       0       7       0       0
  4584 ;;      Locals:         0       0       5       0       0
  4585 ;;      Temps:          0       0       2       0       0
  4586 ;;      Totals:         0       0      14       0       0
  4587 ;;Total ram usage:       14 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:   11
  4590 ;; This function calls:
  4591 ;;		_memcpy
  4592 ;; This function is called by:
  4593 ;;		_ToMainLow_recvmsg
  4594 ;;		_ToMainHigh_recvmsg
  4595 ;;		_FromMainLow_recvmsg
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text27
  4600  000D1E                     __ptext27:
  4601                           	opt stack 0
  4602  000D1E                     _recv_msg:
  4603                           	opt stack 18
  4604                           
  4605                           ;messages.c: 64: unsigned char slot;
  4606                           ;messages.c: 68: msg *qmsg;
  4607                           ;messages.c: 69: size_t tlength;
  4608                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4609                           
  4610                           ;incstack = 0
  4611  000D1E  0101               	movlb	1	; () banked
  4612  000D20  EE20 F035          	lfsr	2,53
  4613  000D24  0101               	movlb	1	; () banked
  4614  000D26  518C               	movf	recv_msg@qptr& (0+255),w,b
  4615  000D28  26D9               	addwf	fsr2l,f,c
  4616  000D2A  0101               	movlb	1	; () banked
  4617  000D2C  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4618  000D2E  22DA               	addwfc	fsr2h,f,c
  4619  000D30  50DF               	movf	indf2,w,c
  4620  000D32  0101               	movlb	1	; () banked
  4621  000D34  0101               	movlb	1	; () banked
  4622  000D36  6F95               	movwf	recv_msg@slot& (0+255),b
  4623                           
  4624                           ; BSR set to: 1
  4625                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4626  000D38  0101               	movlb	1	; () banked
  4627  000D3A  0101               	movlb	1	; () banked
  4628  000D3C  5195               	movf	recv_msg@slot& (0+255),w,b
  4629  000D3E  0D0D               	mullw	13
  4630  000D40  50F3               	movf	prodl,w,c
  4631  000D42  0101               	movlb	1	; () banked
  4632  000D44  0101               	movlb	1	; () banked
  4633  000D46  258C               	addwf	recv_msg@qptr& (0+255),w,b
  4634  000D48  0101               	movlb	1	; () banked
  4635  000D4A  0101               	movlb	1	; () banked
  4636  000D4C  6F98               	movwf	recv_msg@qmsg& (0+255),b
  4637  000D4E  50F4               	movf	prodh,w,c
  4638  000D50  0101               	movlb	1	; () banked
  4639  000D52  0101               	movlb	1	; () banked
  4640  000D54  218D               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4641  000D56  0101               	movlb	1	; () banked
  4642  000D58  6F99               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4643                           
  4644                           ; BSR set to: 1
  4645                           ;messages.c: 74: if (qmsg->full == 1) {
  4646  000D5A  0E01               	movlw	1
  4647  000D5C  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  4648  000D60  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4649  000D64  62DF               	cpfseq	indf2,c
  4650  000D66  D074               	goto	l3735
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4654  000D68  0101               	movlb	1	; () banked
  4655  000D6A  EE20 F001          	lfsr	2,1
  4656  000D6E  0101               	movlb	1	; () banked
  4657  000D70  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4658  000D72  26D9               	addwf	fsr2l,f,c
  4659  000D74  0101               	movlb	1	; () banked
  4660  000D76  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4661  000D78  22DA               	addwfc	fsr2h,f,c
  4662  000D7A  50DF               	movf	indf2,w,c
  4663  000D7C  0101               	movlb	1	; () banked
  4664  000D7E  0101               	movlb	1	; () banked
  4665  000D80  5D8E               	subwf	recv_msg@maxlength& (0+255),w,b
  4666  000D82  B0D8               	btfsc	status,0,c
  4667  000D84  D002               	goto	l3719
  4668                           
  4669                           ; BSR set to: 1
  4670                           ;messages.c: 77: return (-3);
  4671  000D86  0EFD               	movlw	253
  4672  000D88  0012               	return	
  4673  000D8A                     l3719:
  4674                           
  4675                           ; BSR set to: 1
  4676                           ;messages.c: 78: }
  4677                           ;messages.c: 80: tlength = qmsg->length;
  4678  000D8A  0101               	movlb	1	; () banked
  4679  000D8C  EE20 F001          	lfsr	2,1
  4680  000D90  0101               	movlb	1	; () banked
  4681  000D92  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4682  000D94  26D9               	addwf	fsr2l,f,c
  4683  000D96  0101               	movlb	1	; () banked
  4684  000D98  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4685  000D9A  22DA               	addwfc	fsr2h,f,c
  4686  000D9C  50DF               	movf	indf2,w,c
  4687  000D9E  0101               	movlb	1	; () banked
  4688  000DA0  6F93               	movwf	??_recv_msg& (0+255),b
  4689  000DA2  0101               	movlb	1	; () banked
  4690  000DA4  5193               	movf	??_recv_msg& (0+255),w,b
  4691  000DA6  0101               	movlb	1	; () banked
  4692  000DA8  0101               	movlb	1	; () banked
  4693  000DAA  6F96               	movwf	recv_msg@tlength& (0+255),b
  4694  000DAC  0101               	movlb	1	; () banked
  4695  000DAE  6B97               	clrf	(recv_msg@tlength+1)& (0+255),b
  4696                           
  4697                           ; BSR set to: 1
  4698                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4699  000DB0  0101               	movlb	1	; () banked
  4700  000DB2  0101               	movlb	1	; () banked
  4701  000DB4  C192  F183         	movff	recv_msg@data+1,memcpy@d1+1
  4702  000DB8  0101               	movlb	1	; () banked
  4703  000DBA  0101               	movlb	1	; () banked
  4704  000DBC  C191  F182         	movff	recv_msg@data,memcpy@d1
  4705  000DC0  0E03               	movlw	3
  4706  000DC2  0101               	movlb	1	; () banked
  4707  000DC4  0101               	movlb	1	; () banked
  4708  000DC6  2598               	addwf	recv_msg@qmsg& (0+255),w,b
  4709  000DC8  0101               	movlb	1	; () banked
  4710  000DCA  6F93               	movwf	??_recv_msg& (0+255),b
  4711  000DCC  0E00               	movlw	0
  4712  000DCE  0101               	movlb	1	; () banked
  4713  000DD0  0101               	movlb	1	; () banked
  4714  000DD2  2199               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4715  000DD4  0101               	movlb	1	; () banked
  4716  000DD6  6F94               	movwf	(??_recv_msg+1)& (0+255),b
  4717  000DD8  C193  F184         	movff	??_recv_msg,memcpy@s1
  4718  000DDC  C194  F185         	movff	??_recv_msg+1,memcpy@s1+1
  4719  000DE0  C196  F186         	movff	recv_msg@tlength,memcpy@n
  4720  000DE4  C197  F187         	movff	recv_msg@tlength+1,memcpy@n+1
  4721  000DE8  EC2D  F00D         	call	_memcpy	;wreg free
  4722                           
  4723                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4724  000DEC  0101               	movlb	1	; () banked
  4725  000DEE  EE20 F035          	lfsr	2,53
  4726  000DF2  0101               	movlb	1	; () banked
  4727  000DF4  518C               	movf	recv_msg@qptr& (0+255),w,b
  4728  000DF6  26D9               	addwf	fsr2l,f,c
  4729  000DF8  0101               	movlb	1	; () banked
  4730  000DFA  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4731  000DFC  22DA               	addwfc	fsr2h,f,c
  4732  000DFE  0101               	movlb	1	; () banked
  4733  000E00  EE10 F035          	lfsr	1,53
  4734  000E04  0101               	movlb	1	; () banked
  4735  000E06  518C               	movf	recv_msg@qptr& (0+255),w,b
  4736  000E08  26E1               	addwf	fsr1l,f,c
  4737  000E0A  0101               	movlb	1	; () banked
  4738  000E0C  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4739  000E0E  22E2               	addwfc	fsr1h,f,c
  4740  000E10  50E7               	movf	indf1,w,c
  4741  000E12  0101               	movlb	1	; () banked
  4742  000E14  6F93               	movwf	??_recv_msg& (0+255),b
  4743  000E16  0101               	movlb	1	; () banked
  4744  000E18  2993               	incf	??_recv_msg& (0+255),w,b
  4745  000E1A  0B03               	andlw	3
  4746  000E1C  6EDF               	movwf	indf2,c
  4747                           
  4748                           ; BSR set to: 1
  4749                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4750  000E1E  0101               	movlb	1	; () banked
  4751  000E20  EE20 F002          	lfsr	2,2
  4752  000E24  0101               	movlb	1	; () banked
  4753  000E26  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4754  000E28  26D9               	addwf	fsr2l,f,c
  4755  000E2A  0101               	movlb	1	; () banked
  4756  000E2C  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4757  000E2E  22DA               	addwfc	fsr2h,f,c
  4758  000E30  C18F  FFE1         	movff	recv_msg@msgtype,fsr1l
  4759  000E34  C190  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4760  000E38  CFDF FFE7          	movff	indf2,indf1
  4761                           
  4762                           ; BSR set to: 1
  4763                           ;messages.c: 91: qmsg->full = 0;
  4764  000E3C  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  4765  000E40  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4766  000E44  0E00               	movlw	0
  4767  000E46  6EDF               	movwf	indf2,c
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;messages.c: 92: return (tlength);
  4771  000E48  0101               	movlb	1	; () banked
  4772  000E4A  0101               	movlb	1	; () banked
  4773  000E4C  5196               	movf	recv_msg@tlength& (0+255),w,b
  4774  000E4E  0012               	return	
  4775  000E50                     l3735:
  4776                           
  4777                           ; BSR set to: 1
  4778                           ;messages.c: 94: return (-4);
  4779  000E50  0EFC               	movlw	252
  4780  000E52  0012               	return	
  4781  000E54                     __end_of_recv_msg:
  4782                           	opt stack 0
  4783                           tblptru	equ	0xFF8
  4784                           prodh	equ	0xFF4
  4785                           prodl	equ	0xFF3
  4786                           intcon	equ	0xFF2
  4787                           postinc0	equ	0xFEE
  4788                           wreg	equ	0xFE8
  4789                           indf1	equ	0xFE7
  4790                           fsr1h	equ	0xFE2
  4791                           fsr1l	equ	0xFE1
  4792                           indf2	equ	0xFDF
  4793                           postinc2	equ	0xFDE
  4794                           postdec2	equ	0xFDD
  4795                           fsr2h	equ	0xFDA
  4796                           fsr2l	equ	0xFD9
  4797                           status	equ	0xFD8
  4798                           
  4799 ;; *************** function _memcpy *****************
  4800 ;; Defined at:
<<<<<<< HEAD
  4801 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
=======
  4801 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  4802 ;; Parameters:    Size  Location     Type
  4803 ;;  d1              2    0[BANK1 ] PTR void 
  4804 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4805 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4806 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4807 ;;  s1              2    2[BANK1 ] PTR const void 
  4808 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4809 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4810 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4811 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4812 ;;		 -> main@uc(23), 
  4813 ;;  n               2    4[BANK1 ] unsigned int 
  4814 ;; Auto vars:     Size  Location     Type
  4815 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4816 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4817 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4818 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4819 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4820 ;;		 -> main@uc(23), 
  4821 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4822 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4823 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4824 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4825 ;; Return value:  Size  Location     Type
  4826 ;;                  2    0[BANK1 ] PTR void 
  4827 ;; Registers used:
  4828 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4829 ;; Tracked objects:
  4830 ;;		On entry : 0/0
  4831 ;;		On exit  : 0/0
  4832 ;;		Unchanged: 0/0
  4833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4834 ;;      Params:         0       0       6       0       0
  4835 ;;      Locals:         0       0       4       0       0
  4836 ;;      Temps:          0       0       0       0       0
  4837 ;;      Totals:         0       0      10       0       0
  4838 ;;Total ram usage:       10 bytes
  4839 ;; Hardware stack levels used:    1
  4840 ;; Hardware stack levels required when called:   10
  4841 ;; This function calls:
  4842 ;;		Nothing
  4843 ;; This function is called by:
  4844 ;;		_send_msg
  4845 ;;		_recv_msg
  4846 ;; This function uses a non-reentrant model
  4847 ;;
  4848                           
  4849                           	psect	text28
  4850  001A5A                     __ptext28:
  4851                           	opt stack 0
  4852  001A5A                     _memcpy:
  4853                           	opt stack 17
  4854                           
  4855                           ; BSR set to: 1
  4856                           ;incstack = 0
  4857  001A5A  0101               	movlb	1	; () banked
  4858  001A5C  0101               	movlb	1	; () banked
  4859  001A5E  C185  F18B         	movff	memcpy@s1+1,memcpy@s+1
  4860  001A62  0101               	movlb	1	; () banked
  4861  001A64  0101               	movlb	1	; () banked
  4862  001A66  C184  F18A         	movff	memcpy@s1,memcpy@s
  4863  001A6A  0101               	movlb	1	; () banked
  4864  001A6C  0101               	movlb	1	; () banked
  4865  001A6E  C183  F189         	movff	memcpy@d1+1,memcpy@d+1
  4866  001A72  0101               	movlb	1	; () banked
  4867  001A74  0101               	movlb	1	; () banked
  4868  001A76  C182  F188         	movff	memcpy@d1,memcpy@d
  4869  001A7A  D012               	goto	l3705
  4870  001A7C                     l3699:
  4871                           
  4872                           ; BSR set to: 1
  4873  001A7C  C18A  FFD9         	movff	memcpy@s,fsr2l
  4874  001A80  C18B  FFDA         	movff	memcpy@s+1,fsr2h
  4875  001A84  C188  FFE1         	movff	memcpy@d,fsr1l
  4876  001A88  C189  FFE2         	movff	memcpy@d+1,fsr1h
  4877  001A8C  CFDF FFE7          	movff	indf2,indf1
  4878                           
  4879                           ; BSR set to: 1
  4880  001A90  0101               	movlb	1	; () banked
  4881  001A92  0101               	movlb	1	; () banked
  4882  001A94  4B8A               	infsnz	memcpy@s& (0+255),f,b
  4883  001A96  2B8B               	incf	(memcpy@s+1)& (0+255),f,b
  4884                           
  4885                           ; BSR set to: 1
  4886  001A98  0101               	movlb	1	; () banked
  4887  001A9A  0101               	movlb	1	; () banked
  4888  001A9C  4B88               	infsnz	memcpy@d& (0+255),f,b
  4889  001A9E  2B89               	incf	(memcpy@d+1)& (0+255),f,b
  4890  001AA0                     l3705:
  4891                           
  4892                           ; BSR set to: 1
  4893  001AA0  0101               	movlb	1	; () banked
  4894  001AA2  0101               	movlb	1	; () banked
  4895  001AA4  0786               	decf	memcpy@n& (0+255),f,b
  4896  001AA6  A0D8               	btfss	status,0,c
  4897  001AA8  0787               	decf	(memcpy@n+1)& (0+255),f,b
  4898  001AAA  0101               	movlb	1	; () banked
  4899  001AAC  2986               	incf	memcpy@n& (0+255),w,b
  4900  001AAE  B4D8               	btfsc	status,2,c
  4901  001AB0  2987               	incf	(memcpy@n+1)& (0+255),w,b
  4902  001AB2  B4D8               	btfsc	status,2,c
  4903                           
  4904                           ; BSR set to: 1
  4905                           
  4906                           ; BSR set to: 1
  4907                           ;	Return value of _memcpy is never used
  4908  001AB4  0012               	return	
  4909  001AB6  D7E2               	goto	l3699
  4910  001AB8                     __end_of_memcpy:
  4911                           	opt stack 0
  4912                           tblptru	equ	0xFF8
  4913                           prodh	equ	0xFF4
  4914                           prodl	equ	0xFF3
  4915                           intcon	equ	0xFF2
  4916                           postinc0	equ	0xFEE
  4917                           wreg	equ	0xFE8
  4918                           indf1	equ	0xFE7
  4919                           fsr1h	equ	0xFE2
  4920                           fsr1l	equ	0xFE1
  4921                           indf2	equ	0xFDF
  4922                           postinc2	equ	0xFDE
  4923                           postdec2	equ	0xFDD
  4924                           fsr2h	equ	0xFDA
  4925                           fsr2l	equ	0xFD9
  4926                           status	equ	0xFD8
  4927                           
  4928 ;; *************** function _OpenUSART *****************
  4929 ;; Defined at:
<<<<<<< HEAD
  4930 ;;		line 73 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
=======
  4930 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  4931 ;; Parameters:    Size  Location     Type
  4932 ;;  config          1    wreg     unsigned char 
  4933 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  config          1    5[BANK1 ] unsigned char 
  4936 ;; Return value:  Size  Location     Type
  4937 ;;		None               void
  4938 ;; Registers used:
  4939 ;;		wreg, status,2
  4940 ;; Tracked objects:
  4941 ;;		On entry : 0/0
  4942 ;;		On exit  : 0/0
  4943 ;;		Unchanged: 0/0
  4944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4945 ;;      Params:         0       0       2       0       0
  4946 ;;      Locals:         0       0       1       0       0
  4947 ;;      Temps:          0       0       3       0       0
  4948 ;;      Totals:         0       0       6       0       0
  4949 ;;Total ram usage:        6 bytes
  4950 ;; Hardware stack levels used:    1
  4951 ;; Hardware stack levels required when called:   10
  4952 ;; This function calls:
  4953 ;;		Nothing
  4954 ;; This function is called by:
  4955 ;;		_main
  4956 ;; This function uses a non-reentrant model
  4957 ;;
  4958                           
  4959                           	psect	text29
  4960  00149C                     __ptext29:
  4961                           	opt stack 0
  4962  00149C                     _OpenUSART:
  4963                           	opt stack 20
  4964                           
  4965                           ; BSR set to: 1
  4966                           ;incstack = 0
  4967                           ;OpenUSART@config stored from wreg
  4968  00149C  CFE8 F187          	movff	wreg,OpenUSART@config
  4969  0014A0  0E00               	movlw	0
  4970  0014A2  6EAC               	movwf	4012,c	;volatile
  4971  0014A4  0E00               	movlw	0
  4972  0014A6  6EAB               	movwf	4011,c	;volatile
  4973  0014A8  0101               	movlb	1	; () banked
  4974  0014AA  0101               	movlb	1	; () banked
  4975  0014AC  B187               	btfsc	OpenUSART@config& (0+255),0,b
  4976                           
  4977                           ; BSR set to: 1
  4978  0014AE  88AC               	bsf	4012,4,c	;volatile
  4979                           
  4980                           ; BSR set to: 1
  4981                           
  4982                           ; BSR set to: 1
  4983  0014B0  0101               	movlb	1	; () banked
  4984  0014B2  0101               	movlb	1	; () banked
  4985  0014B4  A387               	btfss	OpenUSART@config& (0+255),1,b
  4986  0014B6  D002               	goto	l3553
  4987                           
  4988                           ; BSR set to: 1
  4989  0014B8  8CAC               	bsf	4012,6,c	;volatile
  4990  0014BA  8CAB               	bsf	4011,6,c	;volatile
  4991  0014BC                     l3553:
  4992                           
  4993                           ; BSR set to: 1
  4994  0014BC  0101               	movlb	1	; () banked
  4995  0014BE  0101               	movlb	1	; () banked
  4996  0014C0  B587               	btfsc	OpenUSART@config& (0+255),2,b
  4997                           
  4998                           ; BSR set to: 1
  4999  0014C2  8EAC               	bsf	4012,7,c	;volatile
  5000                           
  5001                           ; BSR set to: 1
  5002                           
  5003                           ; BSR set to: 1
  5004  0014C4  0101               	movlb	1	; () banked
  5005  0014C6  0101               	movlb	1	; () banked
  5006  0014C8  A787               	btfss	OpenUSART@config& (0+255),3,b
  5007  0014CA  D002               	goto	l637
  5008                           
  5009                           ; BSR set to: 1
  5010  0014CC  88AB               	bsf	4011,4,c	;volatile
  5011  0014CE  D001               	goto	l3561
  5012  0014D0                     l637:
  5013                           
  5014                           ; BSR set to: 1
  5015  0014D0  8AAB               	bsf	4011,5,c	;volatile
  5016  0014D2                     l3561:
  5017                           
  5018                           ; BSR set to: 1
  5019  0014D2  0101               	movlb	1	; () banked
  5020  0014D4  0101               	movlb	1	; () banked
  5021  0014D6  B987               	btfsc	OpenUSART@config& (0+255),4,b
  5022                           
  5023                           ; BSR set to: 1
  5024  0014D8  84AC               	bsf	4012,2,c	;volatile
  5025                           
  5026                           ; BSR set to: 1
  5027  0014DA  989E               	bcf	3998,4,c	;volatile
  5028                           
  5029                           ; BSR set to: 1
  5030  0014DC  0101               	movlb	1	; () banked
  5031  0014DE  0101               	movlb	1	; () banked
  5032  0014E0  BB87               	btfsc	OpenUSART@config& (0+255),5,b
  5033                           
  5034                           ; BSR set to: 1
  5035  0014E2  86AB               	bsf	4011,3,c	;volatile
  5036                           
  5037                           ; BSR set to: 1
  5038                           
  5039                           ; BSR set to: 1
  5040  0014E4  0101               	movlb	1	; () banked
  5041  0014E6  0101               	movlb	1	; () banked
  5042  0014E8  AD87               	btfss	OpenUSART@config& (0+255),6,b
  5043  0014EA  D002               	goto	l641
  5044                           
  5045                           ; BSR set to: 1
  5046  0014EC  8A9D               	bsf	3997,5,c	;volatile
  5047  0014EE  D001               	goto	l642
  5048  0014F0                     l641:
  5049                           
  5050                           ; BSR set to: 1
  5051  0014F0  9A9D               	bcf	3997,5,c	;volatile
  5052  0014F2                     l642:
  5053                           
  5054                           ; BSR set to: 1
  5055  0014F2  9A9E               	bcf	3998,5,c	;volatile
  5056                           
  5057                           ; BSR set to: 1
  5058  0014F4  0101               	movlb	1	; () banked
  5059  0014F6  0101               	movlb	1	; () banked
  5060  0014F8  AF87               	btfss	OpenUSART@config& (0+255),7,b
  5061  0014FA  D002               	goto	l643
  5062                           
  5063                           ; BSR set to: 1
  5064  0014FC  889D               	bsf	3997,4,c	;volatile
  5065  0014FE  D001               	goto	l644
  5066  001500                     l643:
  5067                           
  5068                           ; BSR set to: 1
  5069  001500  989D               	bcf	3997,4,c	;volatile
  5070  001502                     l644:
  5071                           
  5072                           ; BSR set to: 1
  5073  001502  C182  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5074                           
  5075                           ; BSR set to: 1
  5076  001506  0101               	movlb	1	; () banked
  5077  001508  C183  F184         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5078  00150C  C184  F185         	movff	??_OpenUSART,??_OpenUSART+1
  5079  001510  0101               	movlb	1	; () banked
  5080  001512  6B86               	clrf	(??_OpenUSART+2)& (0+255),b
  5081  001514  0101               	movlb	1	; () banked
  5082  001516  5185               	movf	(??_OpenUSART+1)& (0+255),w,b
  5083  001518  6EB0               	movwf	4016,c	;volatile
  5084                           
  5085                           ; BSR set to: 1
  5086  00151A  8AAC               	bsf	4012,5,c	;volatile
  5087                           
  5088                           ; BSR set to: 1
  5089  00151C  8EAB               	bsf	4011,7,c	;volatile
  5090                           
  5091                           ; BSR set to: 1
  5092  00151E  9C94               	bcf	3988,6,c	;volatile
  5093                           
  5094                           ; BSR set to: 1
  5095  001520  8E94               	bsf	3988,7,c	;volatile
  5096                           
  5097                           ; BSR set to: 1
  5098  001522  A8AC               	btfss	4012,4,c	;volatile
  5099  001524  0012               	return	
  5100                           
  5101                           ; BSR set to: 1
  5102  001526  BEAC               	btfsc	4012,7,c	;volatile
  5103  001528  0012               	return	
  5104                           
  5105                           ; BSR set to: 1
  5106  00152A  8C94               	bsf	3988,6,c	;volatile
  5107  00152C  0012               	return	
  5108  00152E                     __end_of_OpenUSART:
  5109                           	opt stack 0
  5110                           tblptru	equ	0xFF8
  5111                           prodh	equ	0xFF4
  5112                           prodl	equ	0xFF3
  5113                           intcon	equ	0xFF2
  5114                           postinc0	equ	0xFEE
  5115                           wreg	equ	0xFE8
  5116                           indf1	equ	0xFE7
  5117                           fsr1h	equ	0xFE2
  5118                           fsr1l	equ	0xFE1
  5119                           indf2	equ	0xFDF
  5120                           postinc2	equ	0xFDE
  5121                           postdec2	equ	0xFDD
  5122                           fsr2h	equ	0xFDA
  5123                           fsr2l	equ	0xFD9
  5124                           status	equ	0xFD8
  5125                           
  5126 ;; *************** function _OpenTimer1 *****************
  5127 ;; Defined at:
<<<<<<< HEAD
  5128 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
=======
  5128 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  config          1    wreg     unsigned char 
  5131 ;; Auto vars:     Size  Location     Type
  5132 ;;  config          1    0[BANK1 ] unsigned char 
  5133 ;; Return value:  Size  Location     Type
  5134 ;;		None               void
  5135 ;; Registers used:
  5136 ;;		wreg, status,2, status,0
  5137 ;; Tracked objects:
  5138 ;;		On entry : 0/0
  5139 ;;		On exit  : 0/0
  5140 ;;		Unchanged: 0/0
  5141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5142 ;;      Params:         0       0       0       0       0
  5143 ;;      Locals:         0       0       1       0       0
  5144 ;;      Temps:          0       0       0       0       0
  5145 ;;      Totals:         0       0       1       0       0
  5146 ;;Total ram usage:        1 bytes
  5147 ;; Hardware stack levels used:    1
  5148 ;; Hardware stack levels required when called:   10
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_main
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           
  5156                           	psect	text30
  5157  001DE2                     __ptext30:
  5158                           	opt stack 0
  5159  001DE2                     _OpenTimer1:
  5160                           	opt stack 20
  5161                           
  5162                           ; BSR set to: 1
  5163                           ;incstack = 0
  5164                           ;OpenTimer1@config stored from wreg
  5165  001DE2  CFE8 F182          	movff	wreg,OpenTimer1@config
  5166  001DE6  0101               	movlb	1	; () banked
  5167  001DE8  0101               	movlb	1	; () banked
  5168  001DEA  5182               	movf	OpenTimer1@config& (0+255),w,b
  5169  001DEC  0B7E               	andlw	126
  5170  001DEE  6ECD               	movwf	4045,c	;volatile
  5171                           
  5172                           ; BSR set to: 1
  5173  001DF0  0101               	movlb	1	; () banked
  5174  001DF2  0101               	movlb	1	; () banked
  5175  001DF4  AD82               	btfss	OpenTimer1@config& (0+255),6,b
  5176  001DF6  D002               	goto	l593
  5177                           
  5178                           ; BSR set to: 1
  5179  001DF8  8ECD               	bsf	4045,7,c	;volatile
  5180  001DFA  D001               	goto	l3525
  5181  001DFC                     l593:
  5182                           
  5183                           ; BSR set to: 1
  5184  001DFC  9ECD               	bcf	4045,7,c	;volatile
  5185  001DFE                     l3525:
  5186                           
  5187                           ; BSR set to: 1
  5188  001DFE  0E00               	movlw	0
  5189  001E00  6ECF               	movwf	4047,c	;volatile
  5190  001E02  0E00               	movlw	0
  5191  001E04  6ECE               	movwf	4046,c	;volatile
  5192                           
  5193                           ; BSR set to: 1
  5194  001E06  909E               	bcf	3998,0,c	;volatile
  5195                           
  5196                           ; BSR set to: 1
  5197  001E08  0101               	movlb	1	; () banked
  5198  001E0A  0101               	movlb	1	; () banked
  5199  001E0C  AF82               	btfss	OpenTimer1@config& (0+255),7,b
  5200  001E0E  D002               	goto	l595
  5201                           
  5202                           ; BSR set to: 1
  5203  001E10  809D               	bsf	3997,0,c	;volatile
  5204  001E12  D001               	goto	l596
  5205  001E14                     l595:
  5206                           
  5207                           ; BSR set to: 1
  5208  001E14  909D               	bcf	3997,0,c	;volatile
  5209  001E16                     l596:
  5210                           
  5211                           ; BSR set to: 1
  5212  001E16  80CD               	bsf	4045,0,c	;volatile
  5213                           
  5214                           ; BSR set to: 1
  5215  001E18  0012               	return	
  5216  001E1A                     __end_of_OpenTimer1:
  5217                           	opt stack 0
  5218                           tblptru	equ	0xFF8
  5219                           prodh	equ	0xFF4
  5220                           prodl	equ	0xFF3
  5221                           intcon	equ	0xFF2
  5222                           postinc0	equ	0xFEE
  5223                           wreg	equ	0xFE8
  5224                           indf1	equ	0xFE7
  5225                           fsr1h	equ	0xFE2
  5226                           fsr1l	equ	0xFE1
  5227                           indf2	equ	0xFDF
  5228                           postinc2	equ	0xFDE
  5229                           postdec2	equ	0xFDD
  5230                           fsr2h	equ	0xFDA
  5231                           fsr2l	equ	0xFD9
  5232                           status	equ	0xFD8
  5233                           
  5234 ;; *************** function _OpenTimer0 *****************
  5235 ;; Defined at:
<<<<<<< HEAD
  5236 ;;		line 18 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
=======
  5236 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  5237 ;; Parameters:    Size  Location     Type
  5238 ;;  config          1    wreg     unsigned char 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  config          1    0[BANK1 ] unsigned char 
  5241 ;; Return value:  Size  Location     Type
  5242 ;;		None               void
  5243 ;; Registers used:
  5244 ;;		wreg, status,2, status,0
  5245 ;; Tracked objects:
  5246 ;;		On entry : 0/0
  5247 ;;		On exit  : 0/0
  5248 ;;		Unchanged: 0/0
  5249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5250 ;;      Params:         0       0       0       0       0
  5251 ;;      Locals:         0       0       1       0       0
  5252 ;;      Temps:          0       0       0       0       0
  5253 ;;      Totals:         0       0       1       0       0
  5254 ;;Total ram usage:        1 bytes
  5255 ;; Hardware stack levels used:    1
  5256 ;; Hardware stack levels required when called:   10
  5257 ;; This function calls:
  5258 ;;		Nothing
  5259 ;; This function is called by:
  5260 ;;		_main
  5261 ;; This function uses a non-reentrant model
  5262 ;;
  5263                           
  5264                           	psect	text31
  5265  001F58                     __ptext31:
  5266                           	opt stack 0
  5267  001F58                     _OpenTimer0:
  5268                           	opt stack 20
  5269                           
  5270                           ; BSR set to: 1
  5271                           ;incstack = 0
  5272                           ;OpenTimer0@config stored from wreg
  5273  001F58  CFE8 F182          	movff	wreg,OpenTimer0@config
  5274  001F5C  0101               	movlb	1	; () banked
  5275  001F5E  0101               	movlb	1	; () banked
  5276  001F60  5182               	movf	OpenTimer0@config& (0+255),w,b
  5277  001F62  0B7F               	andlw	127
  5278  001F64  6ED5               	movwf	4053,c	;volatile
  5279                           
  5280                           ; BSR set to: 1
  5281  001F66  0E00               	movlw	0
  5282  001F68  6ED7               	movwf	4055,c	;volatile
  5283                           
  5284                           ; BSR set to: 1
  5285  001F6A  0E00               	movlw	0
  5286  001F6C  6ED6               	movwf	4054,c	;volatile
  5287                           
  5288                           ; BSR set to: 1
  5289  001F6E  94F2               	bcf	intcon,2,c	;volatile
  5290                           
  5291                           ; BSR set to: 1
  5292  001F70  0101               	movlb	1	; () banked
  5293  001F72  0101               	movlb	1	; () banked
  5294  001F74  AF82               	btfss	OpenTimer0@config& (0+255),7,b
  5295  001F76  D002               	goto	l569
  5296                           
  5297                           ; BSR set to: 1
  5298  001F78  8AF2               	bsf	intcon,5,c	;volatile
  5299  001F7A  D001               	goto	l570
  5300  001F7C                     l569:
  5301                           
  5302                           ; BSR set to: 1
  5303  001F7C  9AF2               	bcf	intcon,5,c	;volatile
  5304  001F7E                     l570:
  5305                           
  5306                           ; BSR set to: 1
  5307  001F7E  8ED5               	bsf	4053,7,c	;volatile
  5308                           
  5309                           ; BSR set to: 1
  5310  001F80  0012               	return	
  5311  001F82                     __end_of_OpenTimer0:
  5312                           	opt stack 0
  5313                           tblptru	equ	0xFF8
  5314                           prodh	equ	0xFF4
  5315                           prodl	equ	0xFF3
  5316                           intcon	equ	0xFF2
  5317                           postinc0	equ	0xFEE
  5318                           wreg	equ	0xFE8
  5319                           indf1	equ	0xFE7
  5320                           fsr1h	equ	0xFE2
  5321                           fsr1l	equ	0xFE1
  5322                           indf2	equ	0xFDF
  5323                           postinc2	equ	0xFDE
  5324                           postdec2	equ	0xFDD
  5325                           fsr2h	equ	0xFDA
  5326                           fsr2l	equ	0xFD9
  5327                           status	equ	0xFD8
  5328                           
  5329 ;; *************** function _InterruptHandlerLow *****************
  5330 ;; Defined at:
  5331 ;;		line 129 in file "../src/interrupts.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;		None               void
  5338 ;; Registers used:
  5339 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5345 ;;      Params:         0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0
  5347 ;;      Temps:         17       0       0       0       0
  5348 ;;      Totals:        17       0       0       0       0
  5349 ;;Total ram usage:       17 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    9
  5352 ;; This function calls:
  5353 ;;		_timer1_int_handler
  5354 ;;		_uart_recv_int_handler
  5355 ;;		_uart_send_int_handler
  5356 ;; This function is called by:
  5357 ;;		Interrupt level 1
  5358 ;; This function uses a non-reentrant model
  5359 ;;
  5360                           
  5361                           	psect	intcodelo
  5362  000018                     __pintcodelo:
  5363                           	opt stack 0
  5364  000018                     _InterruptHandlerLow:
  5365                           	opt stack 17
  5366                           
  5367                           ; BSR set to: 1
  5368                           ;incstack = 0
  5369  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  5370  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  5371  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  5372  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  5373  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  5374  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  5375  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  5376  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  5377  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  5378  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  5379  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  5380  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  5381  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  5382  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  5383  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  5384  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  5385  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  5386                           
  5387                           ;interrupts.c: 132: if (PIR1bits.TMR1IF) {
  5388  00005C  A09E               	btfss	3998,0,c	;volatile
  5389  00005E  D003               	goto	i1l3285
  5390                           
  5391                           ;interrupts.c: 133: PIR1bits.TMR1IF = 0;
  5392  000060  909E               	bcf	3998,0,c	;volatile
  5393                           
  5394                           ;interrupts.c: 134: timer1_int_handler();
  5395  000062  EC94  F00F         	call	_timer1_int_handler	;wreg free
  5396  000066                     i1l3285:
  5397                           
  5398                           ;interrupts.c: 135: }
  5399                           ;interrupts.c: 138: if (PIR1bits.RCIF) {
  5400  000066  AA9E               	btfss	3998,5,c	;volatile
  5401  000068  D003               	goto	i1l3291
  5402                           
  5403                           ;interrupts.c: 139: PIR1bits.RCIF = 0;
  5404  00006A  9A9E               	bcf	3998,5,c	;volatile
  5405                           
  5406                           ;interrupts.c: 140: uart_recv_int_handler();
  5407  00006C  EC62  F000         	call	_uart_recv_int_handler	;wreg free
  5408  000070                     i1l3291:
  5409                           
  5410                           ;interrupts.c: 141: }
  5411                           ;interrupts.c: 144: if (PIR1bits.TX1IF && PIE1bits.TX1IE) {
  5412  000070  B89E               	btfsc	3998,4,c	;volatile
  5413  000072  A89D               	btfss	3997,4,c	;volatile
  5414  000074  D002               	goto	i1l84
  5415                           
  5416                           ;interrupts.c: 145: uart_send_int_handler();
  5417  000076  ECF9  F00C         	call	_uart_send_int_handler	;wreg free
  5418  00007A                     i1l84:
  5419  00007A  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5420  00007E  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5421  000082  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5422  000086  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5423  00008A  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5424  00008E  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5425  000092  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5426  000096  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5427  00009A  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5428  00009E  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5429  0000A2  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5430  0000A6  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5431  0000AA  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5432  0000AE  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5433  0000B2  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5434  0000B6  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5435  0000BA  C023  FFD8         	movff	??_InterruptHandlerLow,status
  5436  0000BE  0010               	retfie	
  5437  0000C0                     __end_of_InterruptHandlerLow:
  5438                           	opt stack 0
  5439                           pclatu	equ	0xFFB
  5440                           pclath	equ	0xFFA
  5441                           tblptru	equ	0xFF8
  5442                           tblptrh	equ	0xFF7
  5443                           tblptrl	equ	0xFF6
  5444                           tablat	equ	0xFF5
  5445                           prodh	equ	0xFF4
  5446                           prodl	equ	0xFF3
  5447                           intcon	equ	0xFF2
  5448                           postinc0	equ	0xFEE
  5449                           fsr0h	equ	0xFEA
  5450                           fsr0l	equ	0xFE9
  5451                           wreg	equ	0xFE8
  5452                           indf1	equ	0xFE7
  5453                           fsr1h	equ	0xFE2
  5454                           fsr1l	equ	0xFE1
  5455                           bsr	equ	0xFE0
  5456                           indf2	equ	0xFDF
  5457                           postinc2	equ	0xFDE
  5458                           postdec2	equ	0xFDD
  5459                           fsr2h	equ	0xFDA
  5460                           fsr2l	equ	0xFD9
  5461                           status	equ	0xFD8
  5462                           
  5463 ;; *************** function _uart_send_int_handler *****************
  5464 ;; Defined at:
  5465 ;;		line 163 in file "../src/my_uart.c"
  5466 ;; Parameters:    Size  Location     Type
  5467 ;;		None
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;		None
  5470 ;; Return value:  Size  Location     Type
  5471 ;;		None               void
  5472 ;; Registers used:
  5473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5474 ;; Tracked objects:
  5475 ;;		On entry : 0/0
  5476 ;;		On exit  : 0/0
  5477 ;;		Unchanged: 0/0
  5478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5479 ;;      Params:         0       0       0       0       0
  5480 ;;      Locals:         0       0       0       0       0
  5481 ;;      Temps:          1       0       0       0       0
  5482 ;;      Totals:         1       0       0       0       0
  5483 ;;Total ram usage:        1 bytes
  5484 ;; Hardware stack levels used:    1
  5485 ;; Hardware stack levels required when called:    6
  5486 ;; This function calls:
  5487 ;;		_WriteUSART
  5488 ;; This function is called by:
  5489 ;;		_InterruptHandlerLow
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           	psect	text33
  5494  0019F2                     __ptext33:
  5495                           	opt stack 0
  5496  0019F2                     _uart_send_int_handler:
  5497                           	opt stack 19
  5498                           
  5499                           ;my_uart.c: 165: if (uc_ptr->Tx_buflen == uc_ptr->msg_length) {
  5500                           
  5501                           ;incstack = 0
  5502  0019F2  EE20 F014          	lfsr	2,20
  5503  0019F6  5065               	movf	_uc_ptr,w,c
  5504  0019F8  26D9               	addwf	fsr2l,f,c
  5505  0019FA  5066               	movf	_uc_ptr+1,w,c
  5506  0019FC  22DA               	addwfc	fsr2h,f,c
  5507  0019FE  EE10 F016          	lfsr	1,22
  5508  001A02  5065               	movf	_uc_ptr,w,c
  5509  001A04  26E1               	addwf	fsr1l,f,c
  5510  001A06  5066               	movf	_uc_ptr+1,w,c
  5511  001A08  22E2               	addwfc	fsr1h,f,c
  5512  001A0A  50E7               	movf	indf1,w,c
  5513  001A0C  62DF               	cpfseq	indf2,c
  5514  001A0E  D00A               	goto	i1l3107
  5515                           
  5516                           ;my_uart.c: 166: PIE1bits.TX1IE = 0;
  5517  001A10  989D               	bcf	3997,4,c	;volatile
  5518                           
  5519                           ;my_uart.c: 167: uc_ptr->Tx_buflen = 0;
  5520  001A12  EE20 F014          	lfsr	2,20
  5521  001A16  5065               	movf	_uc_ptr,w,c
  5522  001A18  26D9               	addwf	fsr2l,f,c
  5523  001A1A  5066               	movf	_uc_ptr+1,w,c
  5524  001A1C  22DA               	addwfc	fsr2h,f,c
  5525  001A1E  0E00               	movlw	0
  5526  001A20  6EDF               	movwf	indf2,c
  5527                           
  5528                           ;my_uart.c: 168: } else {
  5529  001A22  0012               	return	
  5530  001A24                     i1l3107:
  5531                           
  5532                           ;my_uart.c: 169: WriteUSART(uc_ptr->Tx_buffer[uc_ptr->Tx_buflen]);
  5533  001A24  EE20 F014          	lfsr	2,20
  5534  001A28  5065               	movf	_uc_ptr,w,c
  5535  001A2A  26D9               	addwf	fsr2l,f,c
  5536  001A2C  5066               	movf	_uc_ptr+1,w,c
  5537  001A2E  22DA               	addwfc	fsr2h,f,c
  5538  001A30  50DF               	movf	indf2,w,c
  5539  001A32  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  5540  001A34  5002               	movf	??_uart_send_int_handler,w,c
  5541  001A36  0D01               	mullw	1
  5542  001A38  50F3               	movf	prodl,w,c
  5543  001A3A  2465               	addwf	_uc_ptr,w,c
  5544  001A3C  6ED9               	movwf	fsr2l,c
  5545  001A3E  50F4               	movf	prodh,w,c
  5546  001A40  2066               	addwfc	_uc_ptr+1,w,c
  5547  001A42  6EDA               	movwf	fsr2h,c
  5548  001A44  50DF               	movf	indf2,w,c
  5549  001A46  EC00  F010         	call	_WriteUSART
  5550                           
  5551                           ;my_uart.c: 170: uc_ptr->Tx_buflen++;
  5552  001A4A  EE20 F014          	lfsr	2,20
  5553  001A4E  5065               	movf	_uc_ptr,w,c
  5554  001A50  26D9               	addwf	fsr2l,f,c
  5555  001A52  5066               	movf	_uc_ptr+1,w,c
  5556  001A54  22DA               	addwfc	fsr2h,f,c
  5557  001A56  2ADF               	incf	indf2,f,c
  5558  001A58  0012               	return	
  5559  001A5A                     __end_of_uart_send_int_handler:
  5560                           	opt stack 0
  5561                           pclatu	equ	0xFFB
  5562                           pclath	equ	0xFFA
  5563                           tblptru	equ	0xFF8
  5564                           tblptrh	equ	0xFF7
  5565                           tblptrl	equ	0xFF6
  5566                           tablat	equ	0xFF5
  5567                           prodh	equ	0xFF4
  5568                           prodl	equ	0xFF3
  5569                           intcon	equ	0xFF2
  5570                           postinc0	equ	0xFEE
  5571                           fsr0h	equ	0xFEA
  5572                           fsr0l	equ	0xFE9
  5573                           wreg	equ	0xFE8
  5574                           indf1	equ	0xFE7
  5575                           fsr1h	equ	0xFE2
  5576                           fsr1l	equ	0xFE1
  5577                           bsr	equ	0xFE0
  5578                           indf2	equ	0xFDF
  5579                           postinc2	equ	0xFDE
  5580                           postdec2	equ	0xFDD
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function _WriteUSART *****************
  5586 ;; Defined at:
<<<<<<< HEAD
  5587 ;;		line 13 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
=======
  5587 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  data            1    wreg     unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  data            1    0[COMRAM] unsigned char 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;		None               void
  5594 ;; Registers used:
  5595 ;;		wreg
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5601 ;;      Params:         0       0       0       0       0
  5602 ;;      Locals:         1       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0
  5604 ;;      Totals:         1       0       0       0       0
  5605 ;;Total ram usage:        1 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    5
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_uart_send_int_handler
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text34
  5616  002000                     __ptext34:
  5617                           	opt stack 0
  5618  002000                     _WriteUSART:
  5619                           	opt stack 19
  5620                           
  5621                           ;incstack = 0
  5622                           ;WriteUSART@data stored from wreg
  5623  002000  CFE8 F001          	movff	wreg,WriteUSART@data
  5624  002004  ACAC               	btfss	4012,6,c	;volatile
  5625  002006  D003               	goto	i1l2963
  5626  002008  90AC               	bcf	4012,0,c	;volatile
  5627  00200A  B259               	btfsc	_USART_Status,1,c
  5628  00200C  80AC               	bsf	4012,0,c	;volatile
  5629  00200E                     i1l2963:
  5630  00200E  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  5631  002012  0012               	return	
  5632  002014                     __end_of_WriteUSART:
  5633                           	opt stack 0
  5634                           pclatu	equ	0xFFB
  5635                           pclath	equ	0xFFA
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           postinc0	equ	0xFEE
  5644                           fsr0h	equ	0xFEA
  5645                           fsr0l	equ	0xFE9
  5646                           wreg	equ	0xFE8
  5647                           indf1	equ	0xFE7
  5648                           fsr1h	equ	0xFE2
  5649                           fsr1l	equ	0xFE1
  5650                           bsr	equ	0xFE0
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           postdec2	equ	0xFDD
  5654                           fsr2h	equ	0xFDA
  5655                           fsr2l	equ	0xFD9
  5656                           status	equ	0xFD8
  5657                           
  5658 ;; *************** function _uart_recv_int_handler *****************
  5659 ;; Defined at:
  5660 ;;		line 14 in file "../src/my_uart.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  i               2   31[COMRAM] int 
  5665 ;;  checkSum        1   30[COMRAM] unsigned char 
  5666 ;;  bufLength       1   29[COMRAM] unsigned char 
  5667 ;;  data            1   33[COMRAM] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5677 ;;      Params:         0       0       0       0       0
  5678 ;;      Locals:         5       0       0       0       0
  5679 ;;      Temps:          3       0       0       0       0
  5680 ;;      Totals:         8       0       0       0       0
  5681 ;;Total ram usage:        8 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    8
  5684 ;; This function calls:
  5685 ;;		_ReadUSART
  5686 ;;		_ToMainLow_sendmsg
  5687 ;;		i1_ToMainHigh_sendmsg
  5688 ;; This function is called by:
  5689 ;;		_InterruptHandlerLow
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text35
  5694  0000C4                     __ptext35:
  5695                           	opt stack 0
  5696  0000C4                     _uart_recv_int_handler:
  5697                           	opt stack 17
  5698                           
  5699                           ;my_uart.c: 28: if ((PIR1bits.RCIF)) {
  5700                           
  5701                           ;incstack = 0
  5702  0000C4  AA9E               	btfss	3998,5,c	;volatile
  5703  0000C6  D1B2               	goto	i1l397
  5704                           
  5705                           ;my_uart.c: 30: char data = ReadUSART();
  5706  0000C8  ECE6  F00F         	call	_ReadUSART	;wreg free
  5707  0000CC  6E22               	movwf	uart_recv_int_handler@data,c
  5708                           
  5709                           ;my_uart.c: 35: if (!msgtype_flag && data == 0xaa) {
  5710  0000CE  6660               	tstfsz	_msgtype_flag,c
  5711  0000D0  D007               	goto	i1l398
  5712  0000D2  5022               	movf	uart_recv_int_handler@data,w,c
  5713  0000D4  0AAA               	xorlw	170
  5714  0000D6  A4D8               	btfss	status,2,c
  5715  0000D8  D003               	goto	i1l398
  5716                           
  5717                           ;my_uart.c: 36: msgtype = 0xaa;
  5718  0000DA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5719  0000DC  0EAA               	movlw	170
  5720  0000DE  D007               	goto	L1
  5721  0000E0                     i1l398:
  5722  0000E0  6660               	tstfsz	_msgtype_flag,c
  5723  0000E2  D191               	goto	i1l3273
  5724  0000E4  0422               	decf	uart_recv_int_handler@data,w,c
  5725  0000E6  A4D8               	btfss	status,2,c
  5726  0000E8  D18E               	goto	i1l3273
  5727                           
  5728                           ;my_uart.c: 38: msgtype = 0x01;
  5729  0000EA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5730  0000EC  0E01               	movlw	1
  5731  0000EE                     L1:
  5732  0000EE  6E5F               	movwf	_msgtype,c
  5733  0000F0  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5734  0000F2  D189               	goto	i1l3273
  5735  0000F4                     i1l402:
  5736                           
  5737                           ;my_uart.c: 44: if (!msgtype_flag) {
  5738  0000F4  6660               	tstfsz	_msgtype_flag,c
  5739  0000F6  D19A               	goto	i1l397
  5740                           
  5741                           ;my_uart.c: 45: uc_ptr->Rx_buffer[0] = data;
  5742  0000F8  EE20 F00A          	lfsr	2,10
  5743  0000FC  5065               	movf	_uc_ptr,w,c
  5744  0000FE  26D9               	addwf	fsr2l,f,c
  5745  000100  5066               	movf	_uc_ptr+1,w,c
  5746  000102  22DA               	addwfc	fsr2h,f,c
  5747  000104  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5748                           
  5749                           ;my_uart.c: 46: uc_ptr->Rx_buflen++;
  5750  000108  EE20 F015          	lfsr	2,21
  5751  00010C  5065               	movf	_uc_ptr,w,c
  5752  00010E  26D9               	addwf	fsr2l,f,c
  5753  000110  5066               	movf	_uc_ptr+1,w,c
  5754  000112  22DA               	addwfc	fsr2h,f,c
  5755  000114  2ADF               	incf	indf2,f,c
  5756                           
  5757                           ;my_uart.c: 47: msgtype_flag = 1;
  5758  000116  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5759  000118  0E01               	movlw	1
  5760  00011A  6E60               	movwf	_msgtype_flag,c
  5761  00011C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5762                           
  5763                           ;my_uart.c: 48: sendToSensorPIC_flag = 1;
  5764  00011E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5765  000120  0E01               	movlw	1
  5766  000122  6E62               	movwf	_sendToSensorPIC_flag,c
  5767  000124  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5768                           
  5769                           ;my_uart.c: 49: msgtype = 0;
  5770  000126  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5771  000128  0E00               	movlw	0
  5772  00012A  D045               	goto	L3
  5773  00012C                     i1l405:
  5774                           
  5775                           ;my_uart.c: 54: if (!msgtype_flag) {
  5776  00012C  6660               	tstfsz	_msgtype_flag,c
  5777  00012E  D17E               	goto	i1l397
  5778                           
  5779                           ;my_uart.c: 55: uc_ptr->Rx_buffer[0] = data;
  5780  000130  EE20 F00A          	lfsr	2,10
  5781  000134  5065               	movf	_uc_ptr,w,c
  5782  000136  26D9               	addwf	fsr2l,f,c
  5783  000138  5066               	movf	_uc_ptr+1,w,c
  5784  00013A  22DA               	addwfc	fsr2h,f,c
  5785  00013C  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5786                           
  5787                           ;my_uart.c: 56: uc_ptr->Rx_buflen++;
  5788  000140  EE20 F015          	lfsr	2,21
  5789  000144  5065               	movf	_uc_ptr,w,c
  5790  000146  26D9               	addwf	fsr2l,f,c
  5791  000148  5066               	movf	_uc_ptr+1,w,c
  5792  00014A  22DA               	addwfc	fsr2h,f,c
  5793  00014C  2ADF               	incf	indf2,f,c
  5794                           
  5795                           ;my_uart.c: 57: msgtype_flag = 1;
  5796  00014E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5797  000150  0E01               	movlw	1
  5798  000152  6E60               	movwf	_msgtype_flag,c
  5799  000154  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5800                           
  5801                           ;my_uart.c: 58: sendToMotorPIC_flag = 1;
  5802  000156  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5803  000158  0E01               	movlw	1
  5804  00015A  6E61               	movwf	_sendToMotorPIC_flag,c
  5805  00015C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5806                           
  5807                           ;my_uart.c: 59: msgtype = 3;
  5808  00015E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5809  000160  0E03               	movlw	3
  5810  000162  D029               	goto	L3
  5811  000164                     i1l3179:
  5812                           
  5813                           ;my_uart.c: 64: if (msgtype_flag && sendToSensorPIC_flag) {
  5814  000164  5060               	movf	_msgtype_flag,w,c
  5815  000166  B4D8               	btfsc	status,2,c
  5816  000168  D028               	goto	i1l3191
  5817  00016A  5062               	movf	_sendToSensorPIC_flag,w,c
  5818  00016C  B4D8               	btfsc	status,2,c
  5819  00016E  D025               	goto	i1l3191
  5820  000170                     
  5821                           ;my_uart.c: 65: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5822  000170  EE20 F015          	lfsr	2,21
  5823  000174  5065               	movf	_uc_ptr,w,c
  5824  000176  26D9               	addwf	fsr2l,f,c
  5825  000178  5066               	movf	_uc_ptr+1,w,c
  5826  00017A  22DA               	addwfc	fsr2h,f,c
  5827  00017C  50DF               	movf	indf2,w,c
  5828  00017E  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5829  000180  501B               	movf	??_uart_recv_int_handler,w,c
  5830  000182  0D01               	mullw	1
  5831  000184  0E0A               	movlw	10
  5832  000186  26F3               	addwf	prodl,f,c
  5833  000188  0E00               	movlw	0
  5834  00018A  22F4               	addwfc	prodh,f,c
  5835  00018C  50F3               	movf	prodl,w,c
  5836  00018E  2465               	addwf	_uc_ptr,w,c
  5837  000190  6ED9               	movwf	fsr2l,c
  5838  000192  50F4               	movf	prodh,w,c
  5839  000194  2066               	addwfc	_uc_ptr+1,w,c
  5840  000196  6EDA               	movwf	fsr2h,c
  5841  000198  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5842                           
  5843                           ;my_uart.c: 66: uc_ptr->Rx_buflen++;
  5844  00019C  EE20 F015          	lfsr	2,21
  5845  0001A0  5065               	movf	_uc_ptr,w,c
  5846  0001A2  26D9               	addwf	fsr2l,f,c
  5847  0001A4  5066               	movf	_uc_ptr+1,w,c
  5848  0001A6  22DA               	addwfc	fsr2h,f,c
  5849  0001A8  2ADF               	incf	indf2,f,c
  5850                           
  5851                           ;my_uart.c: 67: msg_flag = 1;
  5852  0001AA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5853  0001AC  0E01               	movlw	1
  5854  0001AE  6E5E               	movwf	_msg_flag,c
  5855  0001B0  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5856                           
  5857                           ;my_uart.c: 68: msgtype = 5;
  5858  0001B2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5859  0001B4  0E05               	movlw	5
  5860  0001B6                     L3:
  5861  0001B6  6E5F               	movwf	_msgtype,c
  5862  0001B8  D04C               	goto	L7
  5863  0001BA                     i1l3191:
  5864                           
  5865                           ;my_uart.c: 70: msgtype = 0xaa;
  5866  0001BA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5867  0001BC  0EAA               	movlw	170
  5868  0001BE  6E5F               	movwf	_msgtype,c
  5869  0001C0  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5870                           
  5871                           ;my_uart.c: 71: msgtype_flag = 0;
  5872  0001C2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5873  0001C4  0E00               	movlw	0
  5874  0001C6  6E60               	movwf	_msgtype_flag,c
  5875  0001C8  D044               	goto	L7
  5876  0001CA                     i1l3193:
  5877                           
  5878                           ;my_uart.c: 76: if (msgtype_flag && sendToMotorPIC_flag) {
  5879  0001CA  5060               	movf	_msgtype_flag,w,c
  5880  0001CC  B4D8               	btfsc	status,2,c
  5881  0001CE  D023               	goto	i1l3203
  5882  0001D0  5061               	movf	_sendToMotorPIC_flag,w,c
  5883  0001D2  B4D8               	btfsc	status,2,c
  5884  0001D4  D020               	goto	i1l3203
  5885  0001D6                     
  5886                           ;my_uart.c: 77: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5887  0001D6  EE20 F015          	lfsr	2,21
  5888  0001DA  5065               	movf	_uc_ptr,w,c
  5889  0001DC  26D9               	addwf	fsr2l,f,c
  5890  0001DE  5066               	movf	_uc_ptr+1,w,c
  5891  0001E0  22DA               	addwfc	fsr2h,f,c
  5892  0001E2  50DF               	movf	indf2,w,c
  5893  0001E4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5894  0001E6  501B               	movf	??_uart_recv_int_handler,w,c
  5895  0001E8  0D01               	mullw	1
  5896  0001EA  0E0A               	movlw	10
  5897  0001EC  26F3               	addwf	prodl,f,c
  5898  0001EE  0E00               	movlw	0
  5899  0001F0  22F4               	addwfc	prodh,f,c
  5900  0001F2  50F3               	movf	prodl,w,c
  5901  0001F4  2465               	addwf	_uc_ptr,w,c
  5902  0001F6  6ED9               	movwf	fsr2l,c
  5903  0001F8  50F4               	movf	prodh,w,c
  5904  0001FA  2066               	addwfc	_uc_ptr+1,w,c
  5905  0001FC  6EDA               	movwf	fsr2h,c
  5906  0001FE  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5907                           
  5908                           ;my_uart.c: 78: uc_ptr->Rx_buflen++;
  5909  000202  EE20 F015          	lfsr	2,21
  5910  000206  5065               	movf	_uc_ptr,w,c
  5911  000208  26D9               	addwf	fsr2l,f,c
  5912  00020A  5066               	movf	_uc_ptr+1,w,c
  5913  00020C  22DA               	addwfc	fsr2h,f,c
  5914  00020E  2ADF               	incf	indf2,f,c
  5915                           
  5916                           ;my_uart.c: 79: msgtype = 4;
  5917  000210  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5918  000212  0E04               	movlw	4
  5919  000214  D7D0               	goto	L3
  5920  000216                     i1l3203:
  5921                           
  5922                           ;my_uart.c: 81: msgtype = 0x01;
  5923  000216  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5924  000218  0E01               	movlw	1
  5925  00021A  D7D1               	goto	L10
  5926  00021C                     i1l3205:
  5927                           
  5928                           ;my_uart.c: 87: if (uc_ptr->Rx_buflen == uc_ptr->Rx_buffer[1] + 1) {
  5929  00021C  EE20 F00B          	lfsr	2,11
  5930  000220  5065               	movf	_uc_ptr,w,c
  5931  000222  26D9               	addwf	fsr2l,f,c
  5932  000224  5066               	movf	_uc_ptr+1,w,c
  5933  000226  22DA               	addwfc	fsr2h,f,c
  5934  000228  50DF               	movf	indf2,w,c
  5935  00022A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5936  00022C  6A1C               	clrf	(??_uart_recv_int_handler+1)& (0+255),c
  5937  00022E  0E01               	movlw	1
  5938  000230  261B               	addwf	??_uart_recv_int_handler,f,c
  5939  000232  0E00               	movlw	0
  5940  000234  221C               	addwfc	??_uart_recv_int_handler+1,f,c
  5941  000236  EE20 F015          	lfsr	2,21
  5942  00023A  5065               	movf	_uc_ptr,w,c
  5943  00023C  26D9               	addwf	fsr2l,f,c
  5944  00023E  5066               	movf	_uc_ptr+1,w,c
  5945  000240  22DA               	addwfc	fsr2h,f,c
  5946  000242  50DF               	movf	indf2,w,c
  5947  000244  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  5948  000246  501D               	movf	??_uart_recv_int_handler+2,w,c
  5949  000248  181B               	xorwf	??_uart_recv_int_handler,w,c
  5950  00024A  101C               	iorwf	??_uart_recv_int_handler+1,w,c
  5951  00024C  A4D8               	btfss	status,2,c
  5952  00024E  D7C3               	goto	L9
  5953  000250  D78F               	goto	L11
  5954  000252                     L7:
  5955  000252  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5956                           
  5957                           ;my_uart.c: 92: } else {
  5958  000254  D0EB               	goto	i1l397
  5959  000256                     i1l3221:
  5960                           
  5961                           ;my_uart.c: 100: if (msg_flag) {
  5962  000256  505E               	movf	_msg_flag,w,c
  5963  000258  B4D8               	btfsc	status,2,c
  5964  00025A  D0BD               	goto	i1l3261
  5965                           
  5966                           ;my_uart.c: 101: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5967  00025C  EE20 F015          	lfsr	2,21
  5968  000260  5065               	movf	_uc_ptr,w,c
  5969  000262  26D9               	addwf	fsr2l,f,c
  5970  000264  5066               	movf	_uc_ptr+1,w,c
  5971  000266  22DA               	addwfc	fsr2h,f,c
  5972  000268  50DF               	movf	indf2,w,c
  5973  00026A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5974  00026C  501B               	movf	??_uart_recv_int_handler,w,c
  5975  00026E  0D01               	mullw	1
  5976  000270  0E0A               	movlw	10
  5977  000272  26F3               	addwf	prodl,f,c
  5978  000274  0E00               	movlw	0
  5979  000276  22F4               	addwfc	prodh,f,c
  5980  000278  50F3               	movf	prodl,w,c
  5981  00027A  2465               	addwf	_uc_ptr,w,c
  5982  00027C  6ED9               	movwf	fsr2l,c
  5983  00027E  50F4               	movf	prodh,w,c
  5984  000280  2066               	addwfc	_uc_ptr+1,w,c
  5985  000282  6EDA               	movwf	fsr2h,c
  5986  000284  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5987                           
  5988                           ;my_uart.c: 102: unsigned char checkSum = 0;
  5989  000288  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5990  00028A  0E00               	movlw	0
  5991  00028C  6E1F               	movwf	uart_recv_int_handler@checkSum,c
  5992  00028E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5993                           
  5994                           ;my_uart.c: 103: unsigned char bufLength = uc_ptr->Rx_buffer[1];
  5995  000290  EE20 F00B          	lfsr	2,11
  5996  000294  5065               	movf	_uc_ptr,w,c
  5997  000296  26D9               	addwf	fsr2l,f,c
  5998  000298  5066               	movf	_uc_ptr+1,w,c
  5999  00029A  22DA               	addwfc	fsr2h,f,c
  6000  00029C  50DF               	movf	indf2,w,c
  6001  00029E  6E1E               	movwf	uart_recv_int_handler@bufLength,c
  6002                           
  6003                           ;my_uart.c: 106: if (bufLength == 0 && sendToSensorPIC_flag && uc_ptr->Rx_buffer[2] == 0
      +                          xaa) {
  6004  0002A0  661E               	tstfsz	uart_recv_int_handler@bufLength,c
  6005  0002A2  D011               	goto	i1l3237
  6006  0002A4  5062               	movf	_sendToSensorPIC_flag,w,c
  6007  0002A6  B4D8               	btfsc	status,2,c
  6008  0002A8  D00E               	goto	i1l3237
  6009  0002AA  EE20 F00C          	lfsr	2,12
  6010  0002AE  5065               	movf	_uc_ptr,w,c
  6011  0002B0  26D9               	addwf	fsr2l,f,c
  6012  0002B2  5066               	movf	_uc_ptr+1,w,c
  6013  0002B4  22DA               	addwfc	fsr2h,f,c
  6014  0002B6  0EAA               	movlw	170
  6015  0002B8  62DF               	cpfseq	indf2,c
  6016  0002BA  D005               	goto	i1l3237
  6017                           
  6018                           ;my_uart.c: 107: checkSum = 0xaa;
  6019  0002BC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6020  0002BE  0EAA               	movlw	170
  6021  0002C0  6E1F               	movwf	uart_recv_int_handler@checkSum,c
  6022  0002C2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6023                           
  6024                           ;my_uart.c: 108: } else {
  6025  0002C4  D02C               	goto	i1l3245
  6026  0002C6                     i1l3237:
  6027                           
  6028                           ;my_uart.c: 110: int i = 0;
  6029  0002C6  0E00               	movlw	0
  6030  0002C8  6E21               	movwf	uart_recv_int_handler@i+1,c
  6031  0002CA  0E00               	movlw	0
  6032  0002CC  6E20               	movwf	uart_recv_int_handler@i,c
  6033                           
  6034                           ;my_uart.c: 111: for (; i < uc_ptr->Rx_buffer[1] + 2; i++) {
  6035  0002CE  D010               	goto	i1l3243
  6036  0002D0                     i1l3239:
  6037                           
  6038                           ;my_uart.c: 112: checkSum ^= uc_ptr->Rx_buffer[i];
  6039  0002D0  0E0A               	movlw	10
  6040  0002D2  2420               	addwf	uart_recv_int_handler@i,w,c
  6041  0002D4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6042  0002D6  0E00               	movlw	0
  6043  0002D8  2021               	addwfc	uart_recv_int_handler@i+1,w,c
  6044  0002DA  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  6045  0002DC  501B               	movf	??_uart_recv_int_handler,w,c
  6046  0002DE  2465               	addwf	_uc_ptr,w,c
  6047  0002E0  6ED9               	movwf	fsr2l,c
  6048  0002E2  501C               	movf	??_uart_recv_int_handler+1,w,c
  6049  0002E4  2066               	addwfc	_uc_ptr+1,w,c
  6050  0002E6  6EDA               	movwf	fsr2h,c
  6051  0002E8  50DF               	movf	indf2,w,c
  6052  0002EA  1A1F               	xorwf	uart_recv_int_handler@checkSum,f,c
  6053  0002EC  4A20               	infsnz	uart_recv_int_handler@i,f,c
  6054  0002EE  2A21               	incf	uart_recv_int_handler@i+1,f,c
  6055  0002F0                     i1l3243:
  6056  0002F0  EE20 F00B          	lfsr	2,11
  6057  0002F4  5065               	movf	_uc_ptr,w,c
  6058  0002F6  26D9               	addwf	fsr2l,f,c
  6059  0002F8  5066               	movf	_uc_ptr+1,w,c
  6060  0002FA  22DA               	addwfc	fsr2h,f,c
  6061  0002FC  50DF               	movf	indf2,w,c
  6062  0002FE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6063  000300  6A1C               	clrf	(??_uart_recv_int_handler+1)& (0+255),c
  6064  000302  0E02               	movlw	2
  6065  000304  261B               	addwf	??_uart_recv_int_handler,f,c
  6066  000306  0E00               	movlw	0
  6067  000308  221C               	addwfc	??_uart_recv_int_handler+1,f,c
  6068  00030A  5021               	movf	uart_recv_int_handler@i+1,w,c
  6069  00030C  0A80               	xorlw	128
  6070  00030E  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  6071  000310  501B               	movf	??_uart_recv_int_handler,w,c
  6072  000312  5C20               	subwf	uart_recv_int_handler@i,w,c
  6073  000314  501C               	movf	??_uart_recv_int_handler+1,w,c
  6074  000316  0A80               	xorlw	128
  6075  000318  581D               	subwfb	(??_uart_recv_int_handler+2)& (0+255),w,c
  6076  00031A  A0D8               	btfss	status,0,c
  6077  00031C  D7D9               	goto	i1l3239
  6078  00031E                     i1l3245:
  6079                           
  6080                           ;my_uart.c: 113: }
  6081                           ;my_uart.c: 114: }
  6082                           ;my_uart.c: 116: if (checkSum != uc_ptr->Rx_buffer[uc_ptr->Rx_buflen]) {
  6083  00031E  EE20 F015          	lfsr	2,21
  6084  000322  5065               	movf	_uc_ptr,w,c
  6085  000324  26D9               	addwf	fsr2l,f,c
  6086  000326  5066               	movf	_uc_ptr+1,w,c
  6087  000328  22DA               	addwfc	fsr2h,f,c
  6088  00032A  50DF               	movf	indf2,w,c
  6089  00032C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6090  00032E  501B               	movf	??_uart_recv_int_handler,w,c
  6091  000330  0D01               	mullw	1
  6092  000332  0E0A               	movlw	10
  6093  000334  26F3               	addwf	prodl,f,c
  6094  000336  0E00               	movlw	0
  6095  000338  22F4               	addwfc	prodh,f,c
  6096  00033A  50F3               	movf	prodl,w,c
  6097  00033C  2465               	addwf	_uc_ptr,w,c
  6098  00033E  6ED9               	movwf	fsr2l,c
  6099  000340  50F4               	movf	prodh,w,c
  6100  000342  2066               	addwfc	_uc_ptr+1,w,c
  6101  000344  6EDA               	movwf	fsr2h,c
  6102  000346  50DF               	movf	indf2,w,c
  6103  000348  181F               	xorwf	uart_recv_int_handler@checkSum,w,c
  6104  00034A  B4D8               	btfsc	status,2,c
  6105  00034C  D009               	goto	i1l3249
  6106                           
  6107                           ;my_uart.c: 118: uc_ptr->Rx_buflen = 0;
  6108  00034E  EE20 F015          	lfsr	2,21
  6109  000352  5065               	movf	_uc_ptr,w,c
  6110  000354  26D9               	addwf	fsr2l,f,c
  6111  000356  5066               	movf	_uc_ptr+1,w,c
  6112  000358  22DA               	addwfc	fsr2h,f,c
  6113  00035A  0E00               	movlw	0
  6114  00035C  6EDF               	movwf	indf2,c
  6115                           
  6116                           ;my_uart.c: 121: } else if (sendToSensorPIC_flag) {
  6117  00035E  D03B               	goto	i1l3261
  6118  000360                     i1l3249:
  6119  000360  5062               	movf	_sendToSensorPIC_flag,w,c
  6120  000362  B4D8               	btfsc	status,2,c
  6121  000364  D01B               	goto	i1l3255
  6122                           
  6123                           ;my_uart.c: 122: uc_ptr->Rx_buflen++;
  6124  000366  EE20 F015          	lfsr	2,21
  6125  00036A  5065               	movf	_uc_ptr,w,c
  6126  00036C  26D9               	addwf	fsr2l,f,c
  6127  00036E  5066               	movf	_uc_ptr+1,w,c
  6128  000370  22DA               	addwfc	fsr2h,f,c
  6129  000372  2ADF               	incf	indf2,f,c
  6130                           
  6131                           ;my_uart.c: 124: ToMainHigh_sendmsg(uc_ptr->Rx_buflen, 40, (void *) uc_ptr->Rx_buffer);
  6132  000374  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6133  000376  0E28               	movlw	40
  6134  000378  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  6135  00037A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6136  00037C  0E0A               	movlw	10
  6137  00037E  2465               	addwf	_uc_ptr,w,c
  6138  000380  6E18               	movwf	i1ToMainHigh_sendmsg@data,c
  6139  000382  0E00               	movlw	0
  6140  000384  2066               	addwfc	_uc_ptr+1,w,c
  6141  000386  6E19               	movwf	i1ToMainHigh_sendmsg@data+1,c
  6142  000388  EE20 F015          	lfsr	2,21
  6143  00038C  5065               	movf	_uc_ptr,w,c
  6144  00038E  26D9               	addwf	fsr2l,f,c
  6145  000390  5066               	movf	_uc_ptr+1,w,c
  6146  000392  22DA               	addwfc	fsr2h,f,c
  6147  000394  50DF               	movf	indf2,w,c
  6148  000396  ECC1  F00F         	call	i1_ToMainHigh_sendmsg
  6149                           
  6150                           ;my_uart.c: 125: } else if (sendToMotorPIC_flag) {
  6151  00039A  D01D               	goto	i1l3261
  6152  00039C                     i1l3255:
  6153  00039C  5061               	movf	_sendToMotorPIC_flag,w,c
  6154  00039E  B4D8               	btfsc	status,2,c
  6155  0003A0  D01A               	goto	i1l3261
  6156                           
  6157                           ;my_uart.c: 126: uc_ptr->Rx_buflen++;
  6158  0003A2  EE20 F015          	lfsr	2,21
  6159  0003A6  5065               	movf	_uc_ptr,w,c
  6160  0003A8  26D9               	addwf	fsr2l,f,c
  6161  0003AA  5066               	movf	_uc_ptr+1,w,c
  6162  0003AC  22DA               	addwfc	fsr2h,f,c
  6163  0003AE  2ADF               	incf	indf2,f,c
  6164                           
  6165                           ;my_uart.c: 128: ToMainHigh_sendmsg(uc_ptr->Rx_buflen, 40, (void *) uc_ptr->Rx_buffer);
  6166  0003B0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6167  0003B2  0E28               	movlw	40
  6168  0003B4  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  6169  0003B6  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6170  0003B8  0E0A               	movlw	10
  6171  0003BA  2465               	addwf	_uc_ptr,w,c
  6172  0003BC  6E18               	movwf	i1ToMainHigh_sendmsg@data,c
  6173  0003BE  0E00               	movlw	0
  6174  0003C0  2066               	addwfc	_uc_ptr+1,w,c
  6175  0003C2  6E19               	movwf	i1ToMainHigh_sendmsg@data+1,c
  6176  0003C4  EE20 F015          	lfsr	2,21
  6177  0003C8  5065               	movf	_uc_ptr,w,c
  6178  0003CA  26D9               	addwf	fsr2l,f,c
  6179  0003CC  5066               	movf	_uc_ptr+1,w,c
  6180  0003CE  22DA               	addwfc	fsr2h,f,c
  6181  0003D0  50DF               	movf	indf2,w,c
  6182  0003D2  ECC1  F00F         	call	i1_ToMainHigh_sendmsg
  6183  0003D6                     i1l3261:
  6184                           
  6185                           ;my_uart.c: 129: }
  6186                           ;my_uart.c: 130: }
  6187                           ;my_uart.c: 132: msgtype_flag = 0;
  6188  0003D6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6189  0003D8  0E00               	movlw	0
  6190  0003DA  6E60               	movwf	_msgtype_flag,c
  6191  0003DC  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6192                           
  6193                           ;my_uart.c: 133: sendToSensorPIC_flag = 0;
  6194  0003DE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6195  0003E0  0E00               	movlw	0
  6196  0003E2  6E62               	movwf	_sendToSensorPIC_flag,c
  6197  0003E4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6198                           
  6199                           ;my_uart.c: 134: sendToMotorPIC_flag = 0;
  6200  0003E6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6201  0003E8  0E00               	movlw	0
  6202  0003EA  6E61               	movwf	_sendToMotorPIC_flag,c
  6203  0003EC  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6204                           
  6205                           ;my_uart.c: 135: uc_ptr->Rx_buflen = 0;
  6206  0003EE  EE20 F015          	lfsr	2,21
  6207  0003F2  5065               	movf	_uc_ptr,w,c
  6208  0003F4  26D9               	addwf	fsr2l,f,c
  6209  0003F6  5066               	movf	_uc_ptr+1,w,c
  6210  0003F8  22DA               	addwfc	fsr2h,f,c
  6211  0003FA  0E00               	movlw	0
  6212  0003FC  6EDF               	movwf	indf2,c
  6213                           
  6214                           ;my_uart.c: 136: msg_flag = 0;
  6215  0003FE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6216  000400  0E00               	movlw	0
  6217  000402  6E5E               	movwf	_msg_flag,c
  6218  000404  D726               	goto	L7
  6219  000406                     i1l3273:
  6220  000406  505F               	movf	_msgtype,w,c
  6221                           
  6222                           ; Switch size 1, requested type "space"
  6223                           ; Number of cases is 6, Range of values is 0 to 170
  6224                           ; switch strategies available:
  6225                           ; Name         Instructions Cycles
  6226                           ; simple_byte           19    10 (average)
  6227                           ;	Chosen strategy is simple_byte
  6228  000408  0A00               	xorlw	0	; case 0
  6229  00040A  B4D8               	btfsc	status,2,c
  6230  00040C  D6AB               	goto	i1l3179
  6231  00040E  0A01               	xorlw	1	; case 1
  6232  000410  B4D8               	btfsc	status,2,c
  6233  000412  D68C               	goto	i1l405
  6234  000414  0A02               	xorlw	2	; case 3
  6235  000416  B4D8               	btfsc	status,2,c
  6236  000418  D6D8               	goto	i1l3193
  6237  00041A  0A07               	xorlw	7	; case 4
  6238  00041C  B4D8               	btfsc	status,2,c
  6239  00041E  D6FE               	goto	i1l3205
  6240  000420  0A01               	xorlw	1	; case 5
  6241  000422  B4D8               	btfsc	status,2,c
  6242  000424  D718               	goto	i1l3221
  6243  000426  0AAF               	xorlw	175	; case 170
  6244  000428  B4D8               	btfsc	status,2,c
  6245  00042A  D664               	goto	i1l402
  6246  00042C                     i1l397:
  6247                           
  6248                           ;my_uart.c: 143: }
  6249                           ;my_uart.c: 151: if (USART_Status.OVERRUN_ERROR == 1) {
  6250  00042C  A659               	btfss	_USART_Status,3,c
  6251  00042E  0012               	return	
  6252                           
  6253                           ;my_uart.c: 157: RCSTAbits.CREN = 0;
  6254  000430  98AB               	bcf	4011,4,c	;volatile
  6255                           
  6256                           ;my_uart.c: 158: RCSTAbits.CREN = 1;
  6257  000432  88AB               	bsf	4011,4,c	;volatile
  6258                           
  6259                           ;my_uart.c: 159: ToMainLow_sendmsg(0, 30, (void *) 0);
  6260  000434  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6261  000436  0E1E               	movlw	30
  6262  000438  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6263  00043A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6264  00043C  0E00               	movlw	0
  6265  00043E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6266  000440  0E00               	movlw	0
  6267  000442  6E18               	movwf	ToMainLow_sendmsg@data,c
  6268  000444  0E00               	movlw	0
  6269  000446  ECD4  F00F         	call	_ToMainLow_sendmsg
  6270  00044A  0012               	return	
  6271  00044C                     __end_of_uart_recv_int_handler:
  6272                           	opt stack 0
  6273                           pclatu	equ	0xFFB
  6274                           pclath	equ	0xFFA
  6275                           tblptru	equ	0xFF8
  6276                           tblptrh	equ	0xFF7
  6277                           tblptrl	equ	0xFF6
  6278                           tablat	equ	0xFF5
  6279                           prodh	equ	0xFF4
  6280                           prodl	equ	0xFF3
  6281                           intcon	equ	0xFF2
  6282                           postinc0	equ	0xFEE
  6283                           fsr0h	equ	0xFEA
  6284                           fsr0l	equ	0xFE9
  6285                           wreg	equ	0xFE8
  6286                           indf1	equ	0xFE7
  6287                           fsr1h	equ	0xFE2
  6288                           fsr1l	equ	0xFE1
  6289                           bsr	equ	0xFE0
  6290                           indf2	equ	0xFDF
  6291                           postinc2	equ	0xFDE
  6292                           postdec2	equ	0xFDD
  6293                           fsr2h	equ	0xFDA
  6294                           fsr2l	equ	0xFD9
  6295                           status	equ	0xFD8
  6296                           
  6297 ;; *************** function i1_ToMainHigh_sendmsg *****************
  6298 ;; Defined at:
  6299 ;;		line 126 in file "../src/messages.c"
  6300 ;; Parameters:    Size  Location     Type
  6301 ;;  length          1    wreg     unsigned char 
  6302 ;;  msgtype         1   22[COMRAM] unsigned char 
  6303 ;;  data            2   23[COMRAM] PTR void 
  6304 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  6305 ;; Auto vars:     Size  Location     Type
  6306 ;;  length          1   25[COMRAM] unsigned char 
  6307 ;; Return value:  Size  Location     Type
  6308 ;;                  1    wreg      char 
  6309 ;; Registers used:
  6310 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6311 ;; Tracked objects:
  6312 ;;		On entry : 0/0
  6313 ;;		On exit  : 0/0
  6314 ;;		Unchanged: 0/0
  6315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6316 ;;      Params:         3       0       0       0       0
  6317 ;;      Locals:         1       0       0       0       0
  6318 ;;      Temps:          0       0       0       0       0
  6319 ;;      Totals:         4       0       0       0       0
  6320 ;;Total ram usage:        4 bytes
  6321 ;; Hardware stack levels used:    1
  6322 ;; Hardware stack levels required when called:    7
  6323 ;; This function calls:
  6324 ;;		i1_send_msg
  6325 ;; This function is called by:
  6326 ;;		_uart_recv_int_handler
  6327 ;; This function uses a non-reentrant model
  6328 ;;
  6329                           
  6330                           	psect	text36
  6331  001F82                     __ptext36:
  6332                           	opt stack 0
  6333  001F82                     i1_ToMainHigh_sendmsg:
  6334                           	opt stack 17
  6335                           
  6336                           ;incstack = 0
  6337                           ;i1ToMainHigh_sendmsg@length stored from wreg
  6338  001F82  CFE8 F01A          	movff	wreg,i1ToMainHigh_sendmsg@length
  6339                           
  6340                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6341                           ;	Return value of i1_ToMainHigh_sendmsg is never used
  6342  001F86  0100               	movlb	0	; () banked
  6343  001F88  0E00               	movlw	high _ToMainHigh_MQ
  6344  001F8A  6E0C               	movwf	i1send_msg@qptr+1,c
  6345  001F8C  0100               	movlb	0	; () banked
  6346  001F8E  0E80               	movlw	low _ToMainHigh_MQ
  6347  001F90  6E0B               	movwf	i1send_msg@qptr,c
  6348  001F92  C01A  F00D         	movff	i1ToMainHigh_sendmsg@length,i1send_msg@length
  6349  001F96  C017  F00E         	movff	i1ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  6350  001F9A  C019  F010         	movff	i1ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  6351  001F9E  C018  F00F         	movff	i1ToMainHigh_sendmsg@data,i1send_msg@data
  6352  001FA2  ECF9  F009         	call	i1_send_msg	;wreg free
  6353  001FA6  0012               	return	
  6354  001FA8                     __end_ofi1_ToMainHigh_sendmsg:
  6355                           	opt stack 0
  6356                           pclatu	equ	0xFFB
  6357                           pclath	equ	0xFFA
  6358                           tblptru	equ	0xFF8
  6359                           tblptrh	equ	0xFF7
  6360                           tblptrl	equ	0xFF6
  6361                           tablat	equ	0xFF5
  6362                           prodh	equ	0xFF4
  6363                           prodl	equ	0xFF3
  6364                           intcon	equ	0xFF2
  6365                           postinc0	equ	0xFEE
  6366                           fsr0h	equ	0xFEA
  6367                           fsr0l	equ	0xFE9
  6368                           wreg	equ	0xFE8
  6369                           indf1	equ	0xFE7
  6370                           fsr1h	equ	0xFE2
  6371                           fsr1l	equ	0xFE1
  6372                           bsr	equ	0xFE0
  6373                           indf2	equ	0xFDF
  6374                           postinc2	equ	0xFDE
  6375                           postdec2	equ	0xFDD
  6376                           fsr2h	equ	0xFDA
  6377                           fsr2l	equ	0xFD9
  6378                           status	equ	0xFD8
  6379                           
  6380 ;; *************** function _ReadUSART *****************
  6381 ;; Defined at:
<<<<<<< HEAD
  6382 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
=======
  6382 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  6383 ;; Parameters:    Size  Location     Type
  6384 ;;		None
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  data            1    0[COMRAM] unsigned char 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  1    wreg      unsigned char 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6396 ;;      Params:         0       0       0       0       0
  6397 ;;      Locals:         1       0       0       0       0
  6398 ;;      Temps:          0       0       0       0       0
  6399 ;;      Totals:         1       0       0       0       0
  6400 ;;Total ram usage:        1 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    5
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_uart_recv_int_handler
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           
  6410                           	psect	text37
  6411  001FCC                     __ptext37:
  6412                           	opt stack 0
  6413  001FCC                     _ReadUSART:
  6414                           	opt stack 19
  6415                           
  6416                           ;incstack = 0
  6417  001FCC  0EF2               	movlw	242
  6418  001FCE  1659               	andwf	_USART_Status,f,c
  6419  001FD0  ACAB               	btfss	4011,6,c	;volatile
  6420  001FD2  D003               	goto	i1l655
  6421  001FD4  9059               	bcf	_USART_Status,0,c
  6422  001FD6  B0AB               	btfsc	4011,0,c	;volatile
  6423  001FD8  8059               	bsf	_USART_Status,0,c
  6424  001FDA                     i1l655:
  6425  001FDA  B4AB               	btfsc	4011,2,c	;volatile
  6426  001FDC  8459               	bsf	_USART_Status,2,c
  6427  001FDE  B2AB               	btfsc	4011,1,c	;volatile
  6428  001FE0  8659               	bsf	_USART_Status,3,c
  6429  001FE2  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6430  001FE6  5001               	movf	ReadUSART@data,w,c
  6431  001FE8  0012               	return	
  6432  001FEA                     __end_of_ReadUSART:
  6433                           	opt stack 0
  6434                           pclatu	equ	0xFFB
  6435                           pclath	equ	0xFFA
  6436                           tblptru	equ	0xFF8
  6437                           tblptrh	equ	0xFF7
  6438                           tblptrl	equ	0xFF6
  6439                           tablat	equ	0xFF5
  6440                           prodh	equ	0xFF4
  6441                           prodl	equ	0xFF3
  6442                           intcon	equ	0xFF2
  6443                           postinc0	equ	0xFEE
  6444                           fsr0h	equ	0xFEA
  6445                           fsr0l	equ	0xFE9
  6446                           wreg	equ	0xFE8
  6447                           indf1	equ	0xFE7
  6448                           fsr1h	equ	0xFE2
  6449                           fsr1l	equ	0xFE1
  6450                           bsr	equ	0xFE0
  6451                           indf2	equ	0xFDF
  6452                           postinc2	equ	0xFDE
  6453                           postdec2	equ	0xFDD
  6454                           fsr2h	equ	0xFDA
  6455                           fsr2l	equ	0xFD9
  6456                           status	equ	0xFD8
  6457                           
  6458 ;; *************** function _timer1_int_handler *****************
  6459 ;; Defined at:
  6460 ;;		line 39 in file "../src/user_interrupts.c"
  6461 ;; Parameters:    Size  Location     Type
  6462 ;;		None
  6463 ;; Auto vars:     Size  Location     Type
  6464 ;;  result          2   27[COMRAM] unsigned int 
  6465 ;; Return value:  Size  Location     Type
  6466 ;;		None               void
  6467 ;; Registers used:
  6468 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6469 ;; Tracked objects:
  6470 ;;		On entry : 0/0
  6471 ;;		On exit  : 0/0
  6472 ;;		Unchanged: 0/0
  6473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6474 ;;      Params:         0       0       0       0       0
  6475 ;;      Locals:         2       0       0       0       0
  6476 ;;      Temps:          1       0       0       0       0
  6477 ;;      Totals:         3       0       0       0       0
  6478 ;;Total ram usage:        3 bytes
  6479 ;; Hardware stack levels used:    1
  6480 ;; Hardware stack levels required when called:    8
  6481 ;; This function calls:
  6482 ;;		_ReadTimer1
  6483 ;;		_ToMainLow_sendmsg
  6484 ;;		_WriteTimer1
  6485 ;; This function is called by:
  6486 ;;		_InterruptHandlerLow
  6487 ;; This function uses a non-reentrant model
  6488 ;;
  6489                           
  6490                           	psect	text38
  6491  001F28                     __ptext38:
  6492                           	opt stack 0
  6493  001F28                     _timer1_int_handler:
  6494                           	opt stack 17
  6495                           
  6496                           ;user_interrupts.c: 40: unsigned int result;
  6497                           ;user_interrupts.c: 47: result = ReadTimer1();
  6498                           
  6499                           ;incstack = 0
  6500  001F28  EC2E  F010         	call	_ReadTimer1	;wreg free
  6501  001F2C  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  6502  001F30  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6503                           
  6504                           ;user_interrupts.c: 48: ToMainLow_sendmsg(0, 11, (void *) 0);
  6505  001F34  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6506  001F36  0E0B               	movlw	11
  6507  001F38  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6508  001F3A  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6509  001F3C  0E00               	movlw	0
  6510  001F3E  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6511  001F40  0E00               	movlw	0
  6512  001F42  6E18               	movwf	ToMainLow_sendmsg@data,c
  6513  001F44  0E00               	movlw	0
  6514  001F46  ECD4  F00F         	call	_ToMainLow_sendmsg
  6515                           
  6516                           ;user_interrupts.c: 51: WriteTimer1(0);
  6517  001F4A  0E00               	movlw	0
  6518  001F4C  6E02               	movwf	WriteTimer1@timer1+1,c
  6519  001F4E  0E00               	movlw	0
  6520  001F50  6E01               	movwf	WriteTimer1@timer1,c
  6521  001F52  EC25  F010         	call	_WriteTimer1	;wreg free
  6522  001F56  0012               	return	
  6523  001F58                     __end_of_timer1_int_handler:
  6524                           	opt stack 0
  6525                           pclatu	equ	0xFFB
  6526                           pclath	equ	0xFFA
  6527                           tblptru	equ	0xFF8
  6528                           tblptrh	equ	0xFF7
  6529                           tblptrl	equ	0xFF6
  6530                           tablat	equ	0xFF5
  6531                           prodh	equ	0xFF4
  6532                           prodl	equ	0xFF3
  6533                           intcon	equ	0xFF2
  6534                           postinc0	equ	0xFEE
  6535                           fsr0h	equ	0xFEA
  6536                           fsr0l	equ	0xFE9
  6537                           wreg	equ	0xFE8
  6538                           indf1	equ	0xFE7
  6539                           fsr1h	equ	0xFE2
  6540                           fsr1l	equ	0xFE1
  6541                           bsr	equ	0xFE0
  6542                           indf2	equ	0xFDF
  6543                           postinc2	equ	0xFDE
  6544                           postdec2	equ	0xFDD
  6545                           fsr2h	equ	0xFDA
  6546                           fsr2l	equ	0xFD9
  6547                           status	equ	0xFD8
  6548                           
  6549 ;; *************** function _WriteTimer1 *****************
  6550 ;; Defined at:
<<<<<<< HEAD
  6551 ;;		line 14 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
=======
  6551 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  6552 ;; Parameters:    Size  Location     Type
  6553 ;;  timer1          2    0[COMRAM] unsigned int 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;  timer           2    2[COMRAM] struct Timers
  6556 ;; Return value:  Size  Location     Type
  6557 ;;		None               void
  6558 ;; Registers used:
  6559 ;;		None
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6565 ;;      Params:         2       0       0       0       0
  6566 ;;      Locals:         2       0       0       0       0
  6567 ;;      Temps:          0       0       0       0       0
  6568 ;;      Totals:         4       0       0       0       0
  6569 ;;Total ram usage:        4 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; Hardware stack levels required when called:    5
  6572 ;; This function calls:
  6573 ;;		Nothing
  6574 ;; This function is called by:
  6575 ;;		_timer1_int_handler
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	text39
  6580  00204A                     __ptext39:
  6581                           	opt stack 0
  6582  00204A                     _WriteTimer1:
  6583                           	opt stack 19
  6584                           
  6585                           ;incstack = 0
  6586  00204A  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6587  00204E  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6588  002052  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6589  002056  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6590  00205A  0012               	return	
  6591  00205C                     __end_of_WriteTimer1:
  6592                           	opt stack 0
  6593                           pclatu	equ	0xFFB
  6594                           pclath	equ	0xFFA
  6595                           tblptru	equ	0xFF8
  6596                           tblptrh	equ	0xFF7
  6597                           tblptrl	equ	0xFF6
  6598                           tablat	equ	0xFF5
  6599                           prodh	equ	0xFF4
  6600                           prodl	equ	0xFF3
  6601                           intcon	equ	0xFF2
  6602                           postinc0	equ	0xFEE
  6603                           fsr0h	equ	0xFEA
  6604                           fsr0l	equ	0xFE9
  6605                           wreg	equ	0xFE8
  6606                           indf1	equ	0xFE7
  6607                           fsr1h	equ	0xFE2
  6608                           fsr1l	equ	0xFE1
  6609                           bsr	equ	0xFE0
  6610                           indf2	equ	0xFDF
  6611                           postinc2	equ	0xFDE
  6612                           postdec2	equ	0xFDD
  6613                           fsr2h	equ	0xFDA
  6614                           fsr2l	equ	0xFD9
  6615                           status	equ	0xFD8
  6616                           
  6617 ;; *************** function _ToMainLow_sendmsg *****************
  6618 ;; Defined at:
  6619 ;;		line 103 in file "../src/messages.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  length          1    wreg     unsigned char 
  6622 ;;  msgtype         1   22[COMRAM] unsigned char 
  6623 ;;  data            2   23[COMRAM] PTR void 
  6624 ;;		 -> NULL(0), 
  6625 ;; Auto vars:     Size  Location     Type
  6626 ;;  length          1   25[COMRAM] unsigned char 
  6627 ;; Return value:  Size  Location     Type
  6628 ;;                  1    wreg      char 
  6629 ;; Registers used:
  6630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6631 ;; Tracked objects:
  6632 ;;		On entry : 0/0
  6633 ;;		On exit  : 0/0
  6634 ;;		Unchanged: 0/0
  6635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6636 ;;      Params:         3       0       0       0       0
  6637 ;;      Locals:         1       0       0       0       0
  6638 ;;      Temps:          0       0       0       0       0
  6639 ;;      Totals:         4       0       0       0       0
  6640 ;;Total ram usage:        4 bytes
  6641 ;; Hardware stack levels used:    1
  6642 ;; Hardware stack levels required when called:    7
  6643 ;; This function calls:
  6644 ;;		i1_send_msg
  6645 ;; This function is called by:
  6646 ;;		_uart_recv_int_handler
  6647 ;;		_timer1_int_handler
  6648 ;; This function uses a non-reentrant model
  6649 ;;
  6650                           
  6651                           	psect	text40
  6652  001FA8                     __ptext40:
  6653                           	opt stack 0
  6654  001FA8                     _ToMainLow_sendmsg:
  6655                           	opt stack 17
  6656                           
  6657                           ;incstack = 0
  6658                           ;ToMainLow_sendmsg@length stored from wreg
  6659  001FA8  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6660                           
  6661                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6662                           ;	Return value of _ToMainLow_sendmsg is never used
  6663  001FAC  0101               	movlb	1	; () banked
  6664  001FAE  0E01               	movlw	high _ToMainLow_MQ
  6665  001FB0  6E0C               	movwf	i1send_msg@qptr+1,c
  6666  001FB2  0101               	movlb	1	; () banked
  6667  001FB4  0E4C               	movlw	low _ToMainLow_MQ
  6668  001FB6  6E0B               	movwf	i1send_msg@qptr,c
  6669  001FB8  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6670  001FBC  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6671  001FC0  6A10               	clrf	i1send_msg@data+1,c
  6672  001FC2  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6673  001FC6  ECF9  F009         	call	i1_send_msg	;wreg free
  6674  001FCA  0012               	return	
  6675  001FCC                     __end_of_ToMainLow_sendmsg:
  6676                           	opt stack 0
  6677                           pclatu	equ	0xFFB
  6678                           pclath	equ	0xFFA
  6679                           tblptru	equ	0xFF8
  6680                           tblptrh	equ	0xFF7
  6681                           tblptrl	equ	0xFF6
  6682                           tablat	equ	0xFF5
  6683                           prodh	equ	0xFF4
  6684                           prodl	equ	0xFF3
  6685                           intcon	equ	0xFF2
  6686                           postinc0	equ	0xFEE
  6687                           fsr0h	equ	0xFEA
  6688                           fsr0l	equ	0xFE9
  6689                           wreg	equ	0xFE8
  6690                           indf1	equ	0xFE7
  6691                           fsr1h	equ	0xFE2
  6692                           fsr1l	equ	0xFE1
  6693                           bsr	equ	0xFE0
  6694                           indf2	equ	0xFDF
  6695                           postinc2	equ	0xFDE
  6696                           postdec2	equ	0xFDD
  6697                           fsr2h	equ	0xFDA
  6698                           fsr2l	equ	0xFD9
  6699                           status	equ	0xFD8
  6700                           
  6701 ;; *************** function i1_send_msg *****************
  6702 ;; Defined at:
  6703 ;;		line 24 in file "../src/messages.c"
  6704 ;; Parameters:    Size  Location     Type
  6705 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6706 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6707 ;;  length          1   12[COMRAM] unsigned char 
  6708 ;;  msgtype         1   13[COMRAM] unsigned char 
  6709 ;;  data            2   14[COMRAM] PTR void 
  6710 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  6711 ;;		 -> main@uc(23), 
  6712 ;; Auto vars:     Size  Location     Type
  6713 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6714 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6715 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6716 ;;  send_msg        2   17[COMRAM] unsigned int 
  6717 ;;  send_msg        1   19[COMRAM] unsigned char 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;                  1    wreg      char 
  6720 ;; Registers used:
  6721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6727 ;;      Params:         6       0       0       0       0
  6728 ;;      Locals:         5       0       0       0       0
  6729 ;;      Temps:          1       0       0       0       0
  6730 ;;      Totals:        12       0       0       0       0
  6731 ;;Total ram usage:       12 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    6
  6734 ;; This function calls:
  6735 ;;		i1_memcpy
  6736 ;; This function is called by:
  6737 ;;		_ToMainLow_sendmsg
  6738 ;;		i1_ToMainHigh_sendmsg
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text41
  6743  0013F2                     __ptext41:
  6744                           	opt stack 0
  6745  0013F2                     i1_send_msg:
  6746                           	opt stack 17
  6747                           
  6748                           ;messages.c: 25: unsigned char slot;
  6749                           ;messages.c: 27: msg *qmsg;
  6750                           ;messages.c: 28: size_t tlength = length;
  6751                           
  6752                           ;incstack = 0
  6753  0013F2  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6754  0013F6  6A13               	clrf	i1send_msg@tlength+1,c
  6755                           
  6756                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6757  0013F8  EE20 F034          	lfsr	2,52
  6758  0013FC  500B               	movf	i1send_msg@qptr,w,c
  6759  0013FE  26D9               	addwf	fsr2l,f,c
  6760  001400  500C               	movf	i1send_msg@qptr+1,w,c
  6761  001402  22DA               	addwfc	fsr2h,f,c
  6762  001404  50DF               	movf	indf2,w,c
  6763  001406  6E14               	movwf	i1send_msg@slot,c
  6764                           
  6765                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6766  001408  5014               	movf	i1send_msg@slot,w,c
  6767  00140A  0D0D               	mullw	13
  6768  00140C  50F3               	movf	prodl,w,c
  6769  00140E  240B               	addwf	i1send_msg@qptr,w,c
  6770  001410  6E15               	movwf	i1send_msg@qmsg,c
  6771  001412  50F4               	movf	prodh,w,c
  6772  001414  200C               	addwfc	i1send_msg@qptr+1,w,c
  6773  001416  6E16               	movwf	i1send_msg@qmsg+1,c
  6774                           
  6775                           ;messages.c: 41: if (qmsg->full != 0) {
  6776  001418  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6777  00141C  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6778  001420  50DF               	movf	indf2,w,c
  6779  001422  B4D8               	btfsc	status,2,c
  6780  001424  D002               	goto	i1l3123
  6781                           
  6782                           ;messages.c: 42: return (-1);
  6783  001426  0EFF               	movlw	255
  6784  001428  0012               	return	
  6785  00142A                     i1l3123:
  6786                           
  6787                           ;messages.c: 43: }
  6788                           ;messages.c: 46: qmsg->length = length;
  6789  00142A  EE20 F001          	lfsr	2,1
  6790  00142E  5015               	movf	i1send_msg@qmsg,w,c
  6791  001430  26D9               	addwf	fsr2l,f,c
  6792  001432  5016               	movf	i1send_msg@qmsg+1,w,c
  6793  001434  22DA               	addwfc	fsr2h,f,c
  6794  001436  C00D  FFDF         	movff	i1send_msg@length,indf2
  6795                           
  6796                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6797  00143A  EE20 F002          	lfsr	2,2
  6798  00143E  5015               	movf	i1send_msg@qmsg,w,c
  6799  001440  26D9               	addwf	fsr2l,f,c
  6800  001442  5016               	movf	i1send_msg@qmsg+1,w,c
  6801  001444  22DA               	addwfc	fsr2h,f,c
  6802  001446  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6803                           
  6804                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6805  00144A  0E03               	movlw	3
  6806  00144C  2415               	addwf	i1send_msg@qmsg,w,c
  6807  00144E  6E01               	movwf	i1memcpy@d1,c
  6808  001450  0E00               	movlw	0
  6809  001452  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6810  001454  6E02               	movwf	i1memcpy@d1+1,c
  6811  001456  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6812  00145A  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6813  00145E  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6814  001462  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6815  001466  EC77  F00E         	call	i1_memcpy	;wreg free
  6816                           
  6817                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6818  00146A  EE20 F034          	lfsr	2,52
  6819  00146E  500B               	movf	i1send_msg@qptr,w,c
  6820  001470  26D9               	addwf	fsr2l,f,c
  6821  001472  500C               	movf	i1send_msg@qptr+1,w,c
  6822  001474  22DA               	addwfc	fsr2h,f,c
  6823  001476  EE10 F034          	lfsr	1,52
  6824  00147A  500B               	movf	i1send_msg@qptr,w,c
  6825  00147C  26E1               	addwf	fsr1l,f,c
  6826  00147E  500C               	movf	i1send_msg@qptr+1,w,c
  6827  001480  22E2               	addwfc	fsr1h,f,c
  6828  001482  50E7               	movf	indf1,w,c
  6829  001484  6E11               	movwf	??i1_send_msg& (0+255),c
  6830  001486  2811               	incf	??i1_send_msg,w,c
  6831  001488  0B03               	andlw	3
  6832  00148A  6EDF               	movwf	indf2,c
  6833                           
  6834                           ;messages.c: 59: qmsg->full = 1;
  6835  00148C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6836  001490  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6837  001494  0E01               	movlw	1
  6838  001496  6EDF               	movwf	indf2,c
  6839                           
  6840                           ;messages.c: 60: return (1);
  6841  001498  0E01               	movlw	1
  6842  00149A  0012               	return	
  6843  00149C                     __end_ofi1_send_msg:
  6844                           	opt stack 0
  6845                           pclatu	equ	0xFFB
  6846                           pclath	equ	0xFFA
  6847                           tblptru	equ	0xFF8
  6848                           tblptrh	equ	0xFF7
  6849                           tblptrl	equ	0xFF6
  6850                           tablat	equ	0xFF5
  6851                           prodh	equ	0xFF4
  6852                           prodl	equ	0xFF3
  6853                           intcon	equ	0xFF2
  6854                           postinc0	equ	0xFEE
  6855                           fsr0h	equ	0xFEA
  6856                           fsr0l	equ	0xFE9
  6857                           wreg	equ	0xFE8
  6858                           indf1	equ	0xFE7
  6859                           fsr1h	equ	0xFE2
  6860                           fsr1l	equ	0xFE1
  6861                           bsr	equ	0xFE0
  6862                           indf2	equ	0xFDF
  6863                           postinc2	equ	0xFDE
  6864                           postdec2	equ	0xFDD
  6865                           fsr2h	equ	0xFDA
  6866                           fsr2l	equ	0xFD9
  6867                           status	equ	0xFD8
  6868                           
  6869 ;; *************** function i1_memcpy *****************
  6870 ;; Defined at:
<<<<<<< HEAD
  6871 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
=======
  6871 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  6872 ;; Parameters:    Size  Location     Type
  6873 ;;  d1              2    0[COMRAM] PTR void 
  6874 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6875 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6876 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6877 ;;  s1              2    2[COMRAM] PTR const void 
  6878 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6879 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6880 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6881 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6882 ;;		 -> main@uc(23), 
  6883 ;;  n               2    4[COMRAM] unsigned int 
  6884 ;; Auto vars:     Size  Location     Type
  6885 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6886 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6887 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6888 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6889 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6890 ;;		 -> main@uc(23), 
  6891 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6892 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6893 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6894 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6895 ;; Return value:  Size  Location     Type
  6896 ;;                  2    0[COMRAM] PTR void 
  6897 ;; Registers used:
  6898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6899 ;; Tracked objects:
  6900 ;;		On entry : 0/0
  6901 ;;		On exit  : 0/0
  6902 ;;		Unchanged: 0/0
  6903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6904 ;;      Params:         6       0       0       0       0
  6905 ;;      Locals:         4       0       0       0       0
  6906 ;;      Temps:          0       0       0       0       0
  6907 ;;      Totals:        10       0       0       0       0
  6908 ;;Total ram usage:       10 bytes
  6909 ;; Hardware stack levels used:    1
  6910 ;; Hardware stack levels required when called:    5
  6911 ;; This function calls:
  6912 ;;		Nothing
  6913 ;; This function is called by:
  6914 ;;		i1_send_msg
  6915 ;; This function uses a non-reentrant model
  6916 ;;
  6917                           
  6918                           	psect	text42
  6919  001CEE                     __ptext42:
  6920                           	opt stack 0
  6921  001CEE                     i1_memcpy:
  6922                           	opt stack 17
  6923                           
  6924                           ;incstack = 0
  6925  001CEE  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6926  001CF2  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6927  001CF6  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6928  001CFA  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6929  001CFE  D00E               	goto	i1l3089
  6930  001D00                     i1l3083:
  6931  001D00  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6932  001D04  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6933  001D08  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6934  001D0C  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6935  001D10  CFDF FFE7          	movff	indf2,indf1
  6936  001D14  4A09               	infsnz	i1memcpy@s,f,c
  6937  001D16  2A0A               	incf	i1memcpy@s+1,f,c
  6938  001D18  4A07               	infsnz	i1memcpy@d,f,c
  6939  001D1A  2A08               	incf	i1memcpy@d+1,f,c
  6940  001D1C                     i1l3089:
  6941  001D1C  0605               	decf	i1memcpy@n,f,c
  6942  001D1E  A0D8               	btfss	status,0,c
  6943  001D20  0606               	decf	i1memcpy@n+1,f,c
  6944  001D22  2805               	incf	i1memcpy@n& (0+255),w,c
  6945  001D24  B4D8               	btfsc	status,2,c
  6946  001D26  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6947  001D28  B4D8               	btfsc	status,2,c
  6948                           
  6949                           ;	Return value of i1_memcpy is never used
  6950  001D2A  0012               	return	
  6951  001D2C  D7E9               	goto	i1l3083
  6952  001D2E                     __end_ofi1_memcpy:
  6953                           	opt stack 0
  6954                           pclatu	equ	0xFFB
  6955                           pclath	equ	0xFFA
  6956                           tblptru	equ	0xFF8
  6957                           tblptrh	equ	0xFF7
  6958                           tblptrl	equ	0xFF6
  6959                           tablat	equ	0xFF5
  6960                           prodh	equ	0xFF4
  6961                           prodl	equ	0xFF3
  6962                           intcon	equ	0xFF2
  6963                           postinc0	equ	0xFEE
  6964                           fsr0h	equ	0xFEA
  6965                           fsr0l	equ	0xFE9
  6966                           wreg	equ	0xFE8
  6967                           indf1	equ	0xFE7
  6968                           fsr1h	equ	0xFE2
  6969                           fsr1l	equ	0xFE1
  6970                           bsr	equ	0xFE0
  6971                           indf2	equ	0xFDF
  6972                           postinc2	equ	0xFDE
  6973                           postdec2	equ	0xFDD
  6974                           fsr2h	equ	0xFDA
  6975                           fsr2l	equ	0xFD9
  6976                           status	equ	0xFD8
  6977                           
  6978 ;; *************** function _ReadTimer1 *****************
  6979 ;; Defined at:
<<<<<<< HEAD
  6980 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
=======
  6980 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  6981 ;; Parameters:    Size  Location     Type
  6982 ;;		None
  6983 ;; Auto vars:     Size  Location     Type
  6984 ;;  timer           2    2[COMRAM] struct Timers
  6985 ;; Return value:  Size  Location     Type
  6986 ;;                  2    0[COMRAM] unsigned int 
  6987 ;; Registers used:
  6988 ;;		None
  6989 ;; Tracked objects:
  6990 ;;		On entry : 0/0
  6991 ;;		On exit  : 0/0
  6992 ;;		Unchanged: 0/0
  6993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6994 ;;      Params:         2       0       0       0       0
  6995 ;;      Locals:         2       0       0       0       0
  6996 ;;      Temps:          0       0       0       0       0
  6997 ;;      Totals:         4       0       0       0       0
  6998 ;;Total ram usage:        4 bytes
  6999 ;; Hardware stack levels used:    1
  7000 ;; Hardware stack levels required when called:    5
  7001 ;; This function calls:
  7002 ;;		Nothing
  7003 ;; This function is called by:
  7004 ;;		_timer1_int_handler
  7005 ;; This function uses a non-reentrant model
  7006 ;;
  7007                           
  7008                           	psect	text43
  7009  00205C                     __ptext43:
  7010                           	opt stack 0
  7011  00205C                     _ReadTimer1:
  7012                           	opt stack 19
  7013                           
  7014                           ;incstack = 0
  7015  00205C  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  7016  002060  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  7017  002064  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  7018  002068  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  7019  00206C  0012               	return	
  7020  00206E                     __end_of_ReadTimer1:
  7021                           	opt stack 0
  7022                           pclatu	equ	0xFFB
  7023                           pclath	equ	0xFFA
  7024                           tblptru	equ	0xFF8
  7025                           tblptrh	equ	0xFF7
  7026                           tblptrl	equ	0xFF6
  7027                           tablat	equ	0xFF5
  7028                           prodh	equ	0xFF4
  7029                           prodl	equ	0xFF3
  7030                           intcon	equ	0xFF2
  7031                           postinc0	equ	0xFEE
  7032                           fsr0h	equ	0xFEA
  7033                           fsr0l	equ	0xFE9
  7034                           wreg	equ	0xFE8
  7035                           indf1	equ	0xFE7
  7036                           fsr1h	equ	0xFE2
  7037                           fsr1l	equ	0xFE1
  7038                           bsr	equ	0xFE0
  7039                           indf2	equ	0xFDF
  7040                           postinc2	equ	0xFDE
  7041                           postdec2	equ	0xFDD
  7042                           fsr2h	equ	0xFDA
  7043                           fsr2l	equ	0xFD9
  7044                           status	equ	0xFD8
  7045                           
  7046 ;; *************** function _InterruptHandlerHigh *****************
  7047 ;; Defined at:
  7048 ;;		line 88 in file "../src/interrupts.c"
  7049 ;; Parameters:    Size  Location     Type
  7050 ;;		None
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;		None
  7053 ;; Return value:  Size  Location     Type
  7054 ;;		None               void
  7055 ;; Registers used:
  7056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7062 ;;      Params:         0       0       0       0       0
  7063 ;;      Locals:         0       0       0       0       0
  7064 ;;      Temps:          0      14       0       0       0
  7065 ;;      Totals:         0      14       0       0       0
  7066 ;;Total ram usage:       14 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    4
  7069 ;; This function calls:
  7070 ;;		_SleepIfOkay
  7071 ;;		_i2c_int_handler
  7072 ;;		_timer0_int_handler
  7073 ;; This function is called by:
  7074 ;;		Interrupt level 2
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	intcode
  7079  000008                     __pintcode:
  7080                           	opt stack 0
  7081  000008                     _InterruptHandlerHigh:
  7082                           	opt stack 17
  7083                           
  7084                           ;incstack = 0
  7085  000008  CFFA F0DA          	movff	pclath,??_InterruptHandlerHigh
  7086  00000C  CFFB F0DB          	movff	pclatu,??_InterruptHandlerHigh+1
  7087  000010  EF21  F00B         	goto	int_func
  7088                           pclatu	equ	0xFFB
  7089                           pclath	equ	0xFFA
  7090                           tblptru	equ	0xFF8
  7091                           tblptrh	equ	0xFF7
  7092                           tblptrl	equ	0xFF6
  7093                           tablat	equ	0xFF5
  7094                           prodh	equ	0xFF4
  7095                           prodl	equ	0xFF3
  7096                           intcon	equ	0xFF2
  7097                           postinc0	equ	0xFEE
  7098                           fsr0h	equ	0xFEA
  7099                           fsr0l	equ	0xFE9
  7100                           wreg	equ	0xFE8
  7101                           indf1	equ	0xFE7
  7102                           fsr1h	equ	0xFE2
  7103                           fsr1l	equ	0xFE1
  7104                           bsr	equ	0xFE0
  7105                           indf2	equ	0xFDF
  7106                           postinc2	equ	0xFDE
  7107                           postdec2	equ	0xFDD
  7108                           fsr2h	equ	0xFDA
  7109                           fsr2l	equ	0xFD9
  7110                           status	equ	0xFD8
  7111                           
  7112                           	psect	intcode_body
  7113  001642                     __pintcode_body:
  7114                           	opt stack 17
  7115  001642                     int_func:
  7116                           	opt stack 17
  7117  001642  CFE9 F0DC          	movff	fsr0l,??_InterruptHandlerHigh+2
  7118  001646  CFEA F0DD          	movff	fsr0h,??_InterruptHandlerHigh+3
  7119  00164A  CFE1 F0DE          	movff	fsr1l,??_InterruptHandlerHigh+4
  7120  00164E  CFE2 F0DF          	movff	fsr1h,??_InterruptHandlerHigh+5
  7121  001652  CFD9 F0E0          	movff	fsr2l,??_InterruptHandlerHigh+6
  7122  001656  CFDA F0E1          	movff	fsr2h,??_InterruptHandlerHigh+7
  7123  00165A  CFF3 F0E2          	movff	prodl,??_InterruptHandlerHigh+8
  7124  00165E  CFF4 F0E3          	movff	prodh,??_InterruptHandlerHigh+9
  7125  001662  CFF6 F0E4          	movff	tblptrl,??_InterruptHandlerHigh+10
  7126  001666  CFF7 F0E5          	movff	tblptrh,??_InterruptHandlerHigh+11
  7127  00166A  CFF8 F0E6          	movff	tblptru,??_InterruptHandlerHigh+12
  7128  00166E  CFF5 F0E7          	movff	tablat,??_InterruptHandlerHigh+13
  7129                           
  7130                           ;interrupts.c: 93: if (PIR1bits.SSPIF) {
  7131  001672  A69E               	btfss	3998,3,c	;volatile
  7132  001674  D003               	goto	i2l3345
  7133                           
  7134                           ;interrupts.c: 95: PIR1bits.SSPIF = 0;
  7135  001676  969E               	bcf	3998,3,c	;volatile
  7136                           
  7137                           ;interrupts.c: 97: i2c_int_handler();
  7138  001678  EC8E  F00C         	call	_i2c_int_handler	;wreg free
  7139  00167C                     i2l3345:
  7140                           
  7141                           ;interrupts.c: 98: }
  7142                           ;interrupts.c: 101: if (INTCONbits.TMR0IF) {
  7143  00167C  A4F2               	btfss	intcon,2,c	;volatile
  7144  00167E  D003               	goto	i2l3351
  7145                           
  7146                           ;interrupts.c: 102: INTCONbits.TMR0IF = 0;
  7147  001680  94F2               	bcf	intcon,2,c	;volatile
  7148                           
  7149                           ;interrupts.c: 104: timer0_int_handler();
  7150  001682  ECDC  F00A         	call	_timer0_int_handler	;wreg free
  7151  001686                     i2l3351:
  7152                           
  7153                           ;interrupts.c: 105: }
  7154                           ;interrupts.c: 115: SleepIfOkay();
  7155  001686  ECC4  F00C         	call	_SleepIfOkay	;wreg free
  7156  00168A  C0E7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7157  00168E  C0E6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7158  001692  C0E5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7159  001696  C0E4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7160  00169A  C0E3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7161  00169E  C0E2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7162  0016A2  C0E1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7163  0016A6  C0E0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7164  0016AA  C0DF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7165  0016AE  C0DE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7166  0016B2  C0DD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7167  0016B6  C0DC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7168  0016BA  C0DB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7169  0016BE  C0DA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7170  0016C2  0011               	retfie		f
  7171  0016C4                     __end_of_InterruptHandlerHigh:
  7172                           	opt stack 0
  7173                           pclatu	equ	0xFFB
  7174                           pclath	equ	0xFFA
  7175                           tblptru	equ	0xFF8
  7176                           tblptrh	equ	0xFF7
  7177                           tblptrl	equ	0xFF6
  7178                           tablat	equ	0xFF5
  7179                           prodh	equ	0xFF4
  7180                           prodl	equ	0xFF3
  7181                           intcon	equ	0xFF2
  7182                           postinc0	equ	0xFEE
  7183                           fsr0h	equ	0xFEA
  7184                           fsr0l	equ	0xFE9
  7185                           wreg	equ	0xFE8
  7186                           indf1	equ	0xFE7
  7187                           fsr1h	equ	0xFE2
  7188                           fsr1l	equ	0xFE1
  7189                           bsr	equ	0xFE0
  7190                           indf2	equ	0xFDF
  7191                           postinc2	equ	0xFDE
  7192                           postdec2	equ	0xFDD
  7193                           fsr2h	equ	0xFDA
  7194                           fsr2l	equ	0xFD9
  7195                           status	equ	0xFD8
  7196                           
  7197 ;; *************** function _timer0_int_handler *****************
  7198 ;; Defined at:
  7199 ;;		line 17 in file "../src/user_interrupts.c"
  7200 ;; Parameters:    Size  Location     Type
  7201 ;;		None
  7202 ;; Auto vars:     Size  Location     Type
  7203 ;;  val             2   34[BANK0 ] unsigned int 
  7204 ;;  msgtype         2   32[BANK0 ] int 
  7205 ;;  length          2   30[BANK0 ] int 
  7206 ;; Return value:  Size  Location     Type
  7207 ;;		None               void
  7208 ;; Registers used:
  7209 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7210 ;; Tracked objects:
  7211 ;;		On entry : 0/0
  7212 ;;		On exit  : 0/0
  7213 ;;		Unchanged: 0/0
  7214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7215 ;;      Params:         0       0       0       0       0
  7216 ;;      Locals:         0       6       0       0       0
  7217 ;;      Temps:          0       1       0       0       0
  7218 ;;      Totals:         0       7       0       0       0
  7219 ;;Total ram usage:        7 bytes
  7220 ;; Hardware stack levels used:    1
  7221 ;; Hardware stack levels required when called:    3
  7222 ;; This function calls:
  7223 ;;		_FromMainHigh_recvmsg
  7224 ;;		_WriteTimer0
  7225 ;;		i2_ToMainHigh_sendmsg
  7226 ;; This function is called by:
  7227 ;;		_InterruptHandlerHigh
  7228 ;; This function uses a non-reentrant model
  7229 ;;
  7230                           
  7231                           	psect	text45
  7232  0015B8                     __ptext45:
  7233                           	opt stack 0
  7234  0015B8                     _timer0_int_handler:
  7235                           	opt stack 17
  7236                           
  7237                           ;user_interrupts.c: 18: unsigned int val;
  7238                           ;user_interrupts.c: 19: int length, msgtype;
  7239                           ;user_interrupts.c: 27: WriteTimer0(0);
  7240                           
  7241                           ;incstack = 0
  7242  0015B8  0E00               	movlw	0
  7243  0015BA  0100               	movlb	0	; () banked
  7244  0015BC  0100               	movlb	0	; () banked
  7245  0015BE  6FB7               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7246  0015C0  0E00               	movlw	0
  7247  0015C2  0100               	movlb	0	; () banked
  7248  0015C4  6FB6               	movwf	WriteTimer0@timer0& (0+255),b
  7249  0015C6  EC37  F010         	call	_WriteTimer0	;wreg free
  7250                           
  7251                           ;user_interrupts.c: 30: length = FromMainHigh_recvmsg(sizeof (val), (unsigned char *) &m
      +                          sgtype, (void *) &val);
  7252  0015CA  0100               	movlb	0	; () banked
  7253  0015CC  0E00               	movlw	high timer0_int_handler@msgtype
  7254  0015CE  0100               	movlb	0	; () banked
  7255  0015D0  0100               	movlb	0	; () banked
  7256  0015D2  6FCF               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7257  0015D4  0100               	movlb	0	; () banked
  7258  0015D6  0ED6               	movlw	low timer0_int_handler@msgtype
  7259  0015D8  0100               	movlb	0	; () banked
  7260  0015DA  0100               	movlb	0	; () banked
  7261  0015DC  6FCE               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7262  0015DE  0100               	movlb	0	; () banked
  7263  0015E0  0E00               	movlw	high timer0_int_handler@val
  7264  0015E2  0100               	movlb	0	; () banked
  7265  0015E4  0100               	movlb	0	; () banked
  7266  0015E6  6FD1               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7267  0015E8  0100               	movlb	0	; () banked
  7268  0015EA  0ED8               	movlw	low timer0_int_handler@val
  7269  0015EC  0100               	movlb	0	; () banked
  7270  0015EE  0100               	movlb	0	; () banked
  7271  0015F0  6FD0               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7272  0015F2  0E02               	movlw	2
  7273  0015F4  EC56  F00E         	call	_FromMainHigh_recvmsg
  7274  0015F8  0100               	movlb	0	; () banked
  7275  0015FA  0100               	movlb	0	; () banked
  7276  0015FC  6FD4               	movwf	timer0_int_handler@length& (0+255),b
  7277  0015FE  0100               	movlb	0	; () banked
  7278  001600  6BD5               	clrf	(timer0_int_handler@length+1)& (0+255),b
  7279  001602  0100               	movlb	0	; () banked
  7280  001604  BFD4               	btfsc	timer0_int_handler@length& (0+255),7,b
  7281  001606  07D5               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;user_interrupts.c: 31: if (length == sizeof (val)) {
  7285  001608  0100               	movlb	0	; () banked
  7286  00160A  0100               	movlb	0	; () banked
  7287  00160C  51D4               	movf	timer0_int_handler@length& (0+255),w,b
  7288  00160E  0A02               	xorlw	2
  7289  001610  11D5               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  7290  001612  A4D8               	btfss	status,2,c
  7291  001614  0012               	return	
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;user_interrupts.c: 32: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  7295  001616  0100               	movlb	0	; () banked
  7296  001618  6FD3               	movwf	??_timer0_int_handler& (0+255),b
  7297  00161A  0E0A               	movlw	10
  7298  00161C  0100               	movlb	0	; () banked
  7299  00161E  0100               	movlb	0	; () banked
  7300  001620  6FCC               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  7301  001622  0100               	movlb	0	; () banked
  7302  001624  51D3               	movf	??_timer0_int_handler& (0+255),w,b
  7303  001626  0100               	movlb	0	; () banked
  7304  001628  0E00               	movlw	high timer0_int_handler@val
  7305  00162A  0100               	movlb	0	; () banked
  7306  00162C  0100               	movlb	0	; () banked
  7307  00162E  6FCE               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  7308  001630  0100               	movlb	0	; () banked
  7309  001632  0ED8               	movlw	low timer0_int_handler@val
  7310  001634  0100               	movlb	0	; () banked
  7311  001636  0100               	movlb	0	; () banked
  7312  001638  6FCD               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  7313  00163A  0E02               	movlw	2
  7314  00163C  EC5E  F00F         	call	i2_ToMainHigh_sendmsg
  7315  001640  0012               	return	
  7316  001642                     __end_of_timer0_int_handler:
  7317                           	opt stack 0
  7318                           pclatu	equ	0xFFB
  7319                           pclath	equ	0xFFA
  7320                           tblptru	equ	0xFF8
  7321                           tblptrh	equ	0xFF7
  7322                           tblptrl	equ	0xFF6
  7323                           tablat	equ	0xFF5
  7324                           prodh	equ	0xFF4
  7325                           prodl	equ	0xFF3
  7326                           intcon	equ	0xFF2
  7327                           postinc0	equ	0xFEE
  7328                           fsr0h	equ	0xFEA
  7329                           fsr0l	equ	0xFE9
  7330                           wreg	equ	0xFE8
  7331                           indf1	equ	0xFE7
  7332                           fsr1h	equ	0xFE2
  7333                           fsr1l	equ	0xFE1
  7334                           bsr	equ	0xFE0
  7335                           indf2	equ	0xFDF
  7336                           postinc2	equ	0xFDE
  7337                           postdec2	equ	0xFDD
  7338                           fsr2h	equ	0xFDA
  7339                           fsr2l	equ	0xFD9
  7340                           status	equ	0xFD8
  7341                           
  7342 ;; *************** function i2_ToMainHigh_sendmsg *****************
  7343 ;; Defined at:
  7344 ;;		line 126 in file "../src/messages.c"
  7345 ;; Parameters:    Size  Location     Type
  7346 ;;  length          1    wreg     unsigned char 
  7347 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7348 ;;  data            2   23[BANK0 ] PTR void 
  7349 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  7350 ;; Auto vars:     Size  Location     Type
  7351 ;;  length          1   25[BANK0 ] unsigned char 
  7352 ;; Return value:  Size  Location     Type
  7353 ;;                  1    wreg      char 
  7354 ;; Registers used:
  7355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7356 ;; Tracked objects:
  7357 ;;		On entry : 0/0
  7358 ;;		On exit  : 0/0
  7359 ;;		Unchanged: 0/0
  7360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7361 ;;      Params:         0       3       0       0       0
  7362 ;;      Locals:         0       1       0       0       0
  7363 ;;      Temps:          0       0       0       0       0
  7364 ;;      Totals:         0       4       0       0       0
  7365 ;;Total ram usage:        4 bytes
  7366 ;; Hardware stack levels used:    1
  7367 ;; Hardware stack levels required when called:    2
  7368 ;; This function calls:
  7369 ;;		i2_send_msg
  7370 ;; This function is called by:
  7371 ;;		_timer0_int_handler
  7372 ;; This function uses a non-reentrant model
  7373 ;;
  7374                           
  7375                           	psect	text46
  7376  001EBC                     __ptext46:
  7377                           	opt stack 0
  7378  001EBC                     i2_ToMainHigh_sendmsg:
  7379                           	opt stack 17
  7380                           
  7381                           ;incstack = 0
  7382                           ;i2ToMainHigh_sendmsg@length stored from wreg
  7383  001EBC  CFE8 F0CF          	movff	wreg,i2ToMainHigh_sendmsg@length
  7384                           
  7385                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7386                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  7387  001EC0  0100               	movlb	0	; () banked
  7388  001EC2  0E00               	movlw	high _ToMainHigh_MQ
  7389  001EC4  0100               	movlb	0	; () banked
  7390  001EC6  0100               	movlb	0	; () banked
  7391  001EC8  6FC1               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7392  001ECA  0100               	movlb	0	; () banked
  7393  001ECC  0E80               	movlw	low _ToMainHigh_MQ
  7394  001ECE  0100               	movlb	0	; () banked
  7395  001ED0  0100               	movlb	0	; () banked
  7396  001ED2  6FC0               	movwf	i2send_msg@qptr& (0+255),b
  7397  001ED4  C0CF  F0C2         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  7398  001ED8  C0CC  F0C3         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7399  001EDC  0100               	movlb	0	; () banked
  7400  001EDE  0100               	movlb	0	; () banked
  7401  001EE0  C0CE  F0C5         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7402  001EE4  0100               	movlb	0	; () banked
  7403  001EE6  0100               	movlb	0	; () banked
  7404  001EE8  C0CD  F0C4         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  7405  001EEC  EC47  F008         	call	i2_send_msg	;wreg free
  7406  001EF0  0012               	return	
  7407  001EF2                     __end_ofi2_ToMainHigh_sendmsg:
  7408                           	opt stack 0
  7409                           pclatu	equ	0xFFB
  7410                           pclath	equ	0xFFA
  7411                           tblptru	equ	0xFF8
  7412                           tblptrh	equ	0xFF7
  7413                           tblptrl	equ	0xFF6
  7414                           tablat	equ	0xFF5
  7415                           prodh	equ	0xFF4
  7416                           prodl	equ	0xFF3
  7417                           intcon	equ	0xFF2
  7418                           postinc0	equ	0xFEE
  7419                           fsr0h	equ	0xFEA
  7420                           fsr0l	equ	0xFE9
  7421                           wreg	equ	0xFE8
  7422                           indf1	equ	0xFE7
  7423                           fsr1h	equ	0xFE2
  7424                           fsr1l	equ	0xFE1
  7425                           bsr	equ	0xFE0
  7426                           indf2	equ	0xFDF
  7427                           postinc2	equ	0xFDE
  7428                           postdec2	equ	0xFDD
  7429                           fsr2h	equ	0xFDA
  7430                           fsr2l	equ	0xFD9
  7431                           status	equ	0xFD8
  7432                           
  7433 ;; *************** function i2_send_msg *****************
  7434 ;; Defined at:
  7435 ;;		line 24 in file "../src/messages.c"
  7436 ;; Parameters:    Size  Location     Type
  7437 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7438 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7439 ;;  length          1   12[BANK0 ] unsigned char 
  7440 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7441 ;;  data            2   14[BANK0 ] PTR void 
  7442 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  7443 ;;		 -> main@uc(23), 
  7444 ;; Auto vars:     Size  Location     Type
  7445 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7446 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7447 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7448 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7449 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7450 ;; Return value:  Size  Location     Type
  7451 ;;                  1    wreg      char 
  7452 ;; Registers used:
  7453 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7454 ;; Tracked objects:
  7455 ;;		On entry : 0/0
  7456 ;;		On exit  : 0/0
  7457 ;;		Unchanged: 0/0
  7458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7459 ;;      Params:         0       6       0       0       0
  7460 ;;      Locals:         0       5       0       0       0
  7461 ;;      Temps:          0       1       0       0       0
  7462 ;;      Totals:         0      12       0       0       0
  7463 ;;Total ram usage:       12 bytes
  7464 ;; Hardware stack levels used:    1
  7465 ;; Hardware stack levels required when called:    1
  7466 ;; This function calls:
  7467 ;;		i2_memcpy
  7468 ;; This function is called by:
  7469 ;;		i2_ToMainHigh_sendmsg
  7470 ;; This function uses a non-reentrant model
  7471 ;;
  7472                           
  7473                           	psect	text47
  7474  00108E                     __ptext47:
  7475                           	opt stack 0
  7476  00108E                     i2_send_msg:
  7477                           	opt stack 17
  7478                           
  7479                           ;messages.c: 25: unsigned char slot;
  7480                           ;messages.c: 27: msg *qmsg;
  7481                           ;messages.c: 28: size_t tlength = length;
  7482                           
  7483                           ;incstack = 0
  7484  00108E  0100               	movlb	0	; () banked
  7485  001090  0100               	movlb	0	; () banked
  7486  001092  C0C2  F0C7         	movff	i2send_msg@length,i2send_msg@tlength
  7487  001096  0100               	movlb	0	; () banked
  7488  001098  0100               	movlb	0	; () banked
  7489  00109A  6BC8               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7493  00109C  0100               	movlb	0	; () banked
  7494  00109E  EE20 F034          	lfsr	2,52
  7495  0010A2  0100               	movlb	0	; () banked
  7496  0010A4  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7497  0010A6  26D9               	addwf	fsr2l,f,c
  7498  0010A8  0100               	movlb	0	; () banked
  7499  0010AA  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7500  0010AC  22DA               	addwfc	fsr2h,f,c
  7501  0010AE  50DF               	movf	indf2,w,c
  7502  0010B0  0100               	movlb	0	; () banked
  7503  0010B2  0100               	movlb	0	; () banked
  7504  0010B4  6FC9               	movwf	i2send_msg@slot& (0+255),b
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7508  0010B6  0100               	movlb	0	; () banked
  7509  0010B8  0100               	movlb	0	; () banked
  7510  0010BA  51C9               	movf	i2send_msg@slot& (0+255),w,b
  7511  0010BC  0D0D               	mullw	13
  7512  0010BE  50F3               	movf	prodl,w,c
  7513  0010C0  0100               	movlb	0	; () banked
  7514  0010C2  0100               	movlb	0	; () banked
  7515  0010C4  25C0               	addwf	i2send_msg@qptr& (0+255),w,b
  7516  0010C6  0100               	movlb	0	; () banked
  7517  0010C8  0100               	movlb	0	; () banked
  7518  0010CA  6FCA               	movwf	i2send_msg@qmsg& (0+255),b
  7519  0010CC  50F4               	movf	prodh,w,c
  7520  0010CE  0100               	movlb	0	; () banked
  7521  0010D0  0100               	movlb	0	; () banked
  7522  0010D2  21C1               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7523  0010D4  0100               	movlb	0	; () banked
  7524  0010D6  6FCB               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;messages.c: 41: if (qmsg->full != 0) {
  7528  0010D8  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7529  0010DC  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7530  0010E0  50DF               	movf	indf2,w,c
  7531  0010E2  B4D8               	btfsc	status,2,c
  7532  0010E4  D002               	goto	i2l3949
  7533                           
  7534                           ; BSR set to: 0
  7535                           ;messages.c: 42: return (-1);
  7536  0010E6  0EFF               	movlw	255
  7537  0010E8  0012               	return	
  7538  0010EA                     i2l3949:
  7539                           
  7540                           ; BSR set to: 0
  7541                           ;messages.c: 43: }
  7542                           ;messages.c: 46: qmsg->length = length;
  7543  0010EA  0100               	movlb	0	; () banked
  7544  0010EC  EE20 F001          	lfsr	2,1
  7545  0010F0  0100               	movlb	0	; () banked
  7546  0010F2  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7547  0010F4  26D9               	addwf	fsr2l,f,c
  7548  0010F6  0100               	movlb	0	; () banked
  7549  0010F8  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7550  0010FA  22DA               	addwfc	fsr2h,f,c
  7551  0010FC  0100               	movlb	0	; () banked
  7552  0010FE  C0C2  FFDF         	movff	i2send_msg@length,indf2
  7553                           
  7554                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7555  001102  0100               	movlb	0	; () banked
  7556  001104  EE20 F002          	lfsr	2,2
  7557  001108  0100               	movlb	0	; () banked
  7558  00110A  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7559  00110C  26D9               	addwf	fsr2l,f,c
  7560  00110E  0100               	movlb	0	; () banked
  7561  001110  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7562  001112  22DA               	addwfc	fsr2h,f,c
  7563  001114  0100               	movlb	0	; () banked
  7564  001116  C0C3  FFDF         	movff	i2send_msg@msgtype,indf2
  7565                           
  7566                           ; BSR set to: 0
  7567                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7568  00111A  0E03               	movlw	3
  7569  00111C  0100               	movlb	0	; () banked
  7570  00111E  0100               	movlb	0	; () banked
  7571  001120  25CA               	addwf	i2send_msg@qmsg& (0+255),w,b
  7572  001122  0100               	movlb	0	; () banked
  7573  001124  0100               	movlb	0	; () banked
  7574  001126  6FB6               	movwf	i2memcpy@d1& (0+255),b
  7575  001128  0E00               	movlw	0
  7576  00112A  0100               	movlb	0	; () banked
  7577  00112C  0100               	movlb	0	; () banked
  7578  00112E  21CB               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7579  001130  0100               	movlb	0	; () banked
  7580  001132  6FB7               	movwf	(i2memcpy@d1+1)& (0+255),b
  7581  001134  0100               	movlb	0	; () banked
  7582  001136  0100               	movlb	0	; () banked
  7583  001138  C0C5  F0B9         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7584  00113C  0100               	movlb	0	; () banked
  7585  00113E  0100               	movlb	0	; () banked
  7586  001140  C0C4  F0B8         	movff	i2send_msg@data,i2memcpy@s1
  7587  001144  C0C7  F0BA         	movff	i2send_msg@tlength,i2memcpy@n
  7588  001148  C0C8  F0BB         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7589  00114C  EC5C  F00D         	call	i2_memcpy	;wreg free
  7590                           
  7591                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7592  001150  0100               	movlb	0	; () banked
  7593  001152  EE20 F034          	lfsr	2,52
  7594  001156  0100               	movlb	0	; () banked
  7595  001158  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7596  00115A  26D9               	addwf	fsr2l,f,c
  7597  00115C  0100               	movlb	0	; () banked
  7598  00115E  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7599  001160  22DA               	addwfc	fsr2h,f,c
  7600  001162  0100               	movlb	0	; () banked
  7601  001164  EE10 F034          	lfsr	1,52
  7602  001168  0100               	movlb	0	; () banked
  7603  00116A  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7604  00116C  26E1               	addwf	fsr1l,f,c
  7605  00116E  0100               	movlb	0	; () banked
  7606  001170  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7607  001172  22E2               	addwfc	fsr1h,f,c
  7608  001174  50E7               	movf	indf1,w,c
  7609  001176  0100               	movlb	0	; () banked
  7610  001178  6FC6               	movwf	??i2_send_msg& (0+255),b
  7611  00117A  0100               	movlb	0	; () banked
  7612  00117C  29C6               	incf	??i2_send_msg& (0+255),w,b
  7613  00117E  0B03               	andlw	3
  7614  001180  6EDF               	movwf	indf2,c
  7615                           
  7616                           ; BSR set to: 0
  7617                           ;messages.c: 59: qmsg->full = 1;
  7618  001182  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7619  001186  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7620  00118A  0E01               	movlw	1
  7621  00118C  6EDF               	movwf	indf2,c
  7622                           
  7623                           ; BSR set to: 0
  7624                           ;messages.c: 60: return (1);
  7625  00118E  0E01               	movlw	1
  7626  001190  0012               	return	
  7627  001192                     __end_ofi2_send_msg:
  7628                           	opt stack 0
  7629                           pclatu	equ	0xFFB
  7630                           pclath	equ	0xFFA
  7631                           tblptru	equ	0xFF8
  7632                           tblptrh	equ	0xFF7
  7633                           tblptrl	equ	0xFF6
  7634                           tablat	equ	0xFF5
  7635                           prodh	equ	0xFF4
  7636                           prodl	equ	0xFF3
  7637                           intcon	equ	0xFF2
  7638                           postinc0	equ	0xFEE
  7639                           fsr0h	equ	0xFEA
  7640                           fsr0l	equ	0xFE9
  7641                           wreg	equ	0xFE8
  7642                           indf1	equ	0xFE7
  7643                           fsr1h	equ	0xFE2
  7644                           fsr1l	equ	0xFE1
  7645                           bsr	equ	0xFE0
  7646                           indf2	equ	0xFDF
  7647                           postinc2	equ	0xFDE
  7648                           postdec2	equ	0xFDD
  7649                           fsr2h	equ	0xFDA
  7650                           fsr2l	equ	0xFD9
  7651                           status	equ	0xFD8
  7652                           
  7653 ;; *************** function _WriteTimer0 *****************
  7654 ;; Defined at:
<<<<<<< HEAD
  7655 ;;		line 16 in file "C:\Program Files\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
=======
  7655 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  timer0          2    0[BANK0 ] unsigned int 
  7658 ;; Auto vars:     Size  Location     Type
  7659 ;;  timer           2    2[BANK0 ] struct Timers
  7660 ;; Return value:  Size  Location     Type
  7661 ;;		None               void
  7662 ;; Registers used:
  7663 ;;		None
  7664 ;; Tracked objects:
  7665 ;;		On entry : 0/0
  7666 ;;		On exit  : 0/0
  7667 ;;		Unchanged: 0/0
  7668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7669 ;;      Params:         0       2       0       0       0
  7670 ;;      Locals:         0       2       0       0       0
  7671 ;;      Temps:          0       0       0       0       0
  7672 ;;      Totals:         0       4       0       0       0
  7673 ;;Total ram usage:        4 bytes
  7674 ;; Hardware stack levels used:    1
  7675 ;; This function calls:
  7676 ;;		Nothing
  7677 ;; This function is called by:
  7678 ;;		_timer0_int_handler
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           
  7682                           	psect	text48
  7683  00206E                     __ptext48:
  7684                           	opt stack 0
  7685  00206E                     _WriteTimer0:
  7686                           	opt stack 19
  7687                           
  7688                           ; BSR set to: 0
  7689                           ;incstack = 0
  7690  00206E  C0B6  F0B8         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7691  002072  C0B7  F0B9         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7692  002076  C0B9  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7693  00207A  C0B8  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7694  00207E  0012               	return	
  7695  002080                     __end_of_WriteTimer0:
  7696                           	opt stack 0
  7697                           pclatu	equ	0xFFB
  7698                           pclath	equ	0xFFA
  7699                           tblptru	equ	0xFF8
  7700                           tblptrh	equ	0xFF7
  7701                           tblptrl	equ	0xFF6
  7702                           tablat	equ	0xFF5
  7703                           prodh	equ	0xFF4
  7704                           prodl	equ	0xFF3
  7705                           intcon	equ	0xFF2
  7706                           postinc0	equ	0xFEE
  7707                           fsr0h	equ	0xFEA
  7708                           fsr0l	equ	0xFE9
  7709                           wreg	equ	0xFE8
  7710                           indf1	equ	0xFE7
  7711                           fsr1h	equ	0xFE2
  7712                           fsr1l	equ	0xFE1
  7713                           bsr	equ	0xFE0
  7714                           indf2	equ	0xFDF
  7715                           postinc2	equ	0xFDE
  7716                           postdec2	equ	0xFDD
  7717                           fsr2h	equ	0xFDA
  7718                           fsr2l	equ	0xFD9
  7719                           status	equ	0xFD8
  7720                           
  7721 ;; *************** function _FromMainHigh_recvmsg *****************
  7722 ;; Defined at:
  7723 ;;		line 183 in file "../src/messages.c"
  7724 ;; Parameters:    Size  Location     Type
  7725 ;;  maxlength       1    wreg     unsigned char 
  7726 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  7727 ;;		 -> timer0_int_handler@msgtype(2), 
  7728 ;;  data            2   26[BANK0 ] PTR void 
  7729 ;;		 -> timer0_int_handler@val(2), 
  7730 ;; Auto vars:     Size  Location     Type
  7731 ;;  maxlength       1   28[BANK0 ] unsigned char 
  7732 ;; Return value:  Size  Location     Type
  7733 ;;                  1    wreg      char 
  7734 ;; Registers used:
  7735 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7736 ;; Tracked objects:
  7737 ;;		On entry : 0/0
  7738 ;;		On exit  : 0/0
  7739 ;;		Unchanged: 0/0
  7740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7741 ;;      Params:         0       4       0       0       0
  7742 ;;      Locals:         0       1       0       0       0
  7743 ;;      Temps:          0       0       0       0       0
  7744 ;;      Totals:         0       5       0       0       0
  7745 ;;Total ram usage:        5 bytes
  7746 ;; Hardware stack levels used:    1
  7747 ;; Hardware stack levels required when called:    2
  7748 ;; This function calls:
  7749 ;;		i2_recv_msg
  7750 ;; This function is called by:
  7751 ;;		_timer0_int_handler
  7752 ;; This function uses a non-reentrant model
  7753 ;;
  7754                           
  7755                           	psect	text49
  7756  001CAC                     __ptext49:
  7757                           	opt stack 0
  7758  001CAC                     _FromMainHigh_recvmsg:
  7759                           	opt stack 17
  7760                           
  7761                           ;incstack = 0
  7762                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  7763  001CAC  CFE8 F0D2          	movff	wreg,FromMainHigh_recvmsg@maxlength
  7764                           
  7765                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  7766  001CB0  0102               	movlb	2	; () banked
  7767  001CB2  0E02               	movlw	high _FromMainHigh_MQ
  7768  001CB4  0100               	movlb	0	; () banked
  7769  001CB6  0100               	movlb	0	; () banked
  7770  001CB8  6FC1               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  7771  001CBA  0102               	movlb	2	; () banked
  7772  001CBC  0E00               	movlw	low _FromMainHigh_MQ
  7773  001CBE  0100               	movlb	0	; () banked
  7774  001CC0  0100               	movlb	0	; () banked
  7775  001CC2  6FC0               	movwf	i2recv_msg@qptr& (0+255),b
  7776  001CC4  C0D2  F0C2         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  7777  001CC8  0100               	movlb	0	; () banked
  7778  001CCA  0100               	movlb	0	; () banked
  7779  001CCC  C0CF  F0C4         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  7780  001CD0  0100               	movlb	0	; () banked
  7781  001CD2  0100               	movlb	0	; () banked
  7782  001CD4  C0CE  F0C3         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  7783  001CD8  0100               	movlb	0	; () banked
  7784  001CDA  0100               	movlb	0	; () banked
  7785  001CDC  C0D1  F0C6         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  7786  001CE0  0100               	movlb	0	; () banked
  7787  001CE2  0100               	movlb	0	; () banked
  7788  001CE4  C0D0  F0C5         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  7789  001CE8  EC2A  F007         	call	i2_recv_msg	;wreg free
  7790  001CEC  0012               	return	
  7791  001CEE                     __end_of_FromMainHigh_recvmsg:
  7792                           	opt stack 0
  7793                           pclatu	equ	0xFFB
  7794                           pclath	equ	0xFFA
  7795                           tblptru	equ	0xFF8
  7796                           tblptrh	equ	0xFF7
  7797                           tblptrl	equ	0xFF6
  7798                           tablat	equ	0xFF5
  7799                           prodh	equ	0xFF4
  7800                           prodl	equ	0xFF3
  7801                           intcon	equ	0xFF2
  7802                           postinc0	equ	0xFEE
  7803                           fsr0h	equ	0xFEA
  7804                           fsr0l	equ	0xFE9
  7805                           wreg	equ	0xFE8
  7806                           indf1	equ	0xFE7
  7807                           fsr1h	equ	0xFE2
  7808                           fsr1l	equ	0xFE1
  7809                           bsr	equ	0xFE0
  7810                           indf2	equ	0xFDF
  7811                           postinc2	equ	0xFDE
  7812                           postdec2	equ	0xFDD
  7813                           fsr2h	equ	0xFDA
  7814                           fsr2l	equ	0xFD9
  7815                           status	equ	0xFD8
  7816                           
  7817 ;; *************** function i2_recv_msg *****************
  7818 ;; Defined at:
  7819 ;;		line 63 in file "../src/messages.c"
  7820 ;; Parameters:    Size  Location     Type
  7821 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7822 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7823 ;;  maxlength       1   12[BANK0 ] unsigned char 
  7824 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  7825 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  7826 ;;  data            2   15[BANK0 ] PTR void 
  7827 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  7828 ;; Auto vars:     Size  Location     Type
  7829 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  7830 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7831 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7832 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  7833 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  7834 ;; Return value:  Size  Location     Type
  7835 ;;                  1    wreg      char 
  7836 ;; Registers used:
  7837 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7838 ;; Tracked objects:
  7839 ;;		On entry : 0/0
  7840 ;;		On exit  : 0/0
  7841 ;;		Unchanged: 0/0
  7842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7843 ;;      Params:         0       7       0       0       0
  7844 ;;      Locals:         0       5       0       0       0
  7845 ;;      Temps:          0       2       0       0       0
  7846 ;;      Totals:         0      14       0       0       0
  7847 ;;Total ram usage:       14 bytes
  7848 ;; Hardware stack levels used:    1
  7849 ;; Hardware stack levels required when called:    1
  7850 ;; This function calls:
  7851 ;;		i2_memcpy
  7852 ;; This function is called by:
  7853 ;;		_FromMainHigh_recvmsg
  7854 ;; This function uses a non-reentrant model
  7855 ;;
  7856                           
  7857                           	psect	text50
  7858  000E54                     __ptext50:
  7859                           	opt stack 0
  7860  000E54                     i2_recv_msg:
  7861                           	opt stack 17
  7862                           
  7863                           ;messages.c: 64: unsigned char slot;
  7864                           ;messages.c: 68: msg *qmsg;
  7865                           ;messages.c: 69: size_t tlength;
  7866                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7867                           
  7868                           ;incstack = 0
  7869  000E54  0100               	movlb	0	; () banked
  7870  000E56  EE20 F035          	lfsr	2,53
  7871  000E5A  0100               	movlb	0	; () banked
  7872  000E5C  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7873  000E5E  26D9               	addwf	fsr2l,f,c
  7874  000E60  0100               	movlb	0	; () banked
  7875  000E62  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7876  000E64  22DA               	addwfc	fsr2h,f,c
  7877  000E66  50DF               	movf	indf2,w,c
  7878  000E68  0100               	movlb	0	; () banked
  7879  000E6A  0100               	movlb	0	; () banked
  7880  000E6C  6FC9               	movwf	i2recv_msg@slot& (0+255),b
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7884  000E6E  0100               	movlb	0	; () banked
  7885  000E70  0100               	movlb	0	; () banked
  7886  000E72  51C9               	movf	i2recv_msg@slot& (0+255),w,b
  7887  000E74  0D0D               	mullw	13
  7888  000E76  50F3               	movf	prodl,w,c
  7889  000E78  0100               	movlb	0	; () banked
  7890  000E7A  0100               	movlb	0	; () banked
  7891  000E7C  25C0               	addwf	i2recv_msg@qptr& (0+255),w,b
  7892  000E7E  0100               	movlb	0	; () banked
  7893  000E80  0100               	movlb	0	; () banked
  7894  000E82  6FCC               	movwf	i2recv_msg@qmsg& (0+255),b
  7895  000E84  50F4               	movf	prodh,w,c
  7896  000E86  0100               	movlb	0	; () banked
  7897  000E88  0100               	movlb	0	; () banked
  7898  000E8A  21C1               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  7899  000E8C  0100               	movlb	0	; () banked
  7900  000E8E  6FCD               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;messages.c: 74: if (qmsg->full == 1) {
  7904  000E90  0E01               	movlw	1
  7905  000E92  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7906  000E96  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7907  000E9A  62DF               	cpfseq	indf2,c
  7908  000E9C  D074               	goto	i2l3989
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7912  000E9E  0100               	movlb	0	; () banked
  7913  000EA0  EE20 F001          	lfsr	2,1
  7914  000EA4  0100               	movlb	0	; () banked
  7915  000EA6  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7916  000EA8  26D9               	addwf	fsr2l,f,c
  7917  000EAA  0100               	movlb	0	; () banked
  7918  000EAC  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7919  000EAE  22DA               	addwfc	fsr2h,f,c
  7920  000EB0  50DF               	movf	indf2,w,c
  7921  000EB2  0100               	movlb	0	; () banked
  7922  000EB4  0100               	movlb	0	; () banked
  7923  000EB6  5DC2               	subwf	i2recv_msg@maxlength& (0+255),w,b
  7924  000EB8  B0D8               	btfsc	status,0,c
  7925  000EBA  D002               	goto	i2l3973
  7926                           
  7927                           ; BSR set to: 0
  7928                           ;messages.c: 77: return (-3);
  7929  000EBC  0EFD               	movlw	253
  7930  000EBE  0012               	return	
  7931  000EC0                     i2l3973:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;messages.c: 78: }
  7935                           ;messages.c: 80: tlength = qmsg->length;
  7936  000EC0  0100               	movlb	0	; () banked
  7937  000EC2  EE20 F001          	lfsr	2,1
  7938  000EC6  0100               	movlb	0	; () banked
  7939  000EC8  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7940  000ECA  26D9               	addwf	fsr2l,f,c
  7941  000ECC  0100               	movlb	0	; () banked
  7942  000ECE  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7943  000ED0  22DA               	addwfc	fsr2h,f,c
  7944  000ED2  50DF               	movf	indf2,w,c
  7945  000ED4  0100               	movlb	0	; () banked
  7946  000ED6  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7947  000ED8  0100               	movlb	0	; () banked
  7948  000EDA  51C7               	movf	??i2_recv_msg& (0+255),w,b
  7949  000EDC  0100               	movlb	0	; () banked
  7950  000EDE  0100               	movlb	0	; () banked
  7951  000EE0  6FCA               	movwf	i2recv_msg@tlength& (0+255),b
  7952  000EE2  0100               	movlb	0	; () banked
  7953  000EE4  6BCB               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7954                           
  7955                           ; BSR set to: 0
  7956                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7957  000EE6  0100               	movlb	0	; () banked
  7958  000EE8  0100               	movlb	0	; () banked
  7959  000EEA  C0C6  F0B7         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7960  000EEE  0100               	movlb	0	; () banked
  7961  000EF0  0100               	movlb	0	; () banked
  7962  000EF2  C0C5  F0B6         	movff	i2recv_msg@data,i2memcpy@d1
  7963  000EF6  0E03               	movlw	3
  7964  000EF8  0100               	movlb	0	; () banked
  7965  000EFA  0100               	movlb	0	; () banked
  7966  000EFC  25CC               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7967  000EFE  0100               	movlb	0	; () banked
  7968  000F00  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7969  000F02  0E00               	movlw	0
  7970  000F04  0100               	movlb	0	; () banked
  7971  000F06  0100               	movlb	0	; () banked
  7972  000F08  21CD               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7973  000F0A  0100               	movlb	0	; () banked
  7974  000F0C  6FC8               	movwf	(??i2_recv_msg+1)& (0+255),b
  7975  000F0E  C0C7  F0B8         	movff	??i2_recv_msg,i2memcpy@s1
  7976  000F12  C0C8  F0B9         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7977  000F16  C0CA  F0BA         	movff	i2recv_msg@tlength,i2memcpy@n
  7978  000F1A  C0CB  F0BB         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7979  000F1E  EC5C  F00D         	call	i2_memcpy	;wreg free
  7980                           
  7981                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7982  000F22  0100               	movlb	0	; () banked
  7983  000F24  EE20 F035          	lfsr	2,53
  7984  000F28  0100               	movlb	0	; () banked
  7985  000F2A  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7986  000F2C  26D9               	addwf	fsr2l,f,c
  7987  000F2E  0100               	movlb	0	; () banked
  7988  000F30  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7989  000F32  22DA               	addwfc	fsr2h,f,c
  7990  000F34  0100               	movlb	0	; () banked
  7991  000F36  EE10 F035          	lfsr	1,53
  7992  000F3A  0100               	movlb	0	; () banked
  7993  000F3C  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7994  000F3E  26E1               	addwf	fsr1l,f,c
  7995  000F40  0100               	movlb	0	; () banked
  7996  000F42  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7997  000F44  22E2               	addwfc	fsr1h,f,c
  7998  000F46  50E7               	movf	indf1,w,c
  7999  000F48  0100               	movlb	0	; () banked
  8000  000F4A  6FC7               	movwf	??i2_recv_msg& (0+255),b
  8001  000F4C  0100               	movlb	0	; () banked
  8002  000F4E  29C7               	incf	??i2_recv_msg& (0+255),w,b
  8003  000F50  0B03               	andlw	3
  8004  000F52  6EDF               	movwf	indf2,c
  8005                           
  8006                           ; BSR set to: 0
  8007                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  8008  000F54  0100               	movlb	0	; () banked
  8009  000F56  EE20 F002          	lfsr	2,2
  8010  000F5A  0100               	movlb	0	; () banked
  8011  000F5C  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  8012  000F5E  26D9               	addwf	fsr2l,f,c
  8013  000F60  0100               	movlb	0	; () banked
  8014  000F62  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  8015  000F64  22DA               	addwfc	fsr2h,f,c
  8016  000F66  C0C3  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  8017  000F6A  C0C4  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  8018  000F6E  CFDF FFE7          	movff	indf2,indf1
  8019                           
  8020                           ; BSR set to: 0
  8021                           ;messages.c: 91: qmsg->full = 0;
  8022  000F72  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  8023  000F76  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  8024  000F7A  0E00               	movlw	0
  8025  000F7C  6EDF               	movwf	indf2,c
  8026                           
  8027                           ; BSR set to: 0
  8028                           ;messages.c: 92: return (tlength);
  8029  000F7E  0100               	movlb	0	; () banked
  8030  000F80  0100               	movlb	0	; () banked
  8031  000F82  51CA               	movf	i2recv_msg@tlength& (0+255),w,b
  8032  000F84  0012               	return	
  8033  000F86                     i2l3989:
  8034                           
  8035                           ; BSR set to: 0
  8036                           ;messages.c: 94: return (-4);
  8037  000F86  0EFC               	movlw	252
  8038  000F88  0012               	return	
  8039  000F8A                     __end_ofi2_recv_msg:
  8040                           	opt stack 0
  8041                           pclatu	equ	0xFFB
  8042                           pclath	equ	0xFFA
  8043                           tblptru	equ	0xFF8
  8044                           tblptrh	equ	0xFF7
  8045                           tblptrl	equ	0xFF6
  8046                           tablat	equ	0xFF5
  8047                           prodh	equ	0xFF4
  8048                           prodl	equ	0xFF3
  8049                           intcon	equ	0xFF2
  8050                           postinc0	equ	0xFEE
  8051                           fsr0h	equ	0xFEA
  8052                           fsr0l	equ	0xFE9
  8053                           wreg	equ	0xFE8
  8054                           indf1	equ	0xFE7
  8055                           fsr1h	equ	0xFE2
  8056                           fsr1l	equ	0xFE1
  8057                           bsr	equ	0xFE0
  8058                           indf2	equ	0xFDF
  8059                           postinc2	equ	0xFDE
  8060                           postdec2	equ	0xFDD
  8061                           fsr2h	equ	0xFDA
  8062                           fsr2l	equ	0xFD9
  8063                           status	equ	0xFD8
  8064                           
  8065 ;; *************** function i2_memcpy *****************
  8066 ;; Defined at:
<<<<<<< HEAD
  8067 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v1.30\sources\common\memcpy.c"
=======
  8067 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488
  8068 ;; Parameters:    Size  Location     Type
  8069 ;;  d1              2    0[BANK0 ] PTR void 
  8070 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8071 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8072 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8073 ;;  s1              2    2[BANK0 ] PTR const void 
  8074 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8075 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8076 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8077 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  8078 ;;		 -> main@uc(23), 
  8079 ;;  n               2    4[BANK0 ] unsigned int 
  8080 ;; Auto vars:     Size  Location     Type
  8081 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  8082 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  8083 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  8084 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  8085 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  8086 ;;		 -> main@uc(23), 
  8087 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  8088 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  8089 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  8090 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  8091 ;; Return value:  Size  Location     Type
  8092 ;;                  2    0[BANK0 ] PTR void 
  8093 ;; Registers used:
  8094 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  8095 ;; Tracked objects:
  8096 ;;		On entry : 0/0
  8097 ;;		On exit  : 0/0
  8098 ;;		Unchanged: 0/0
  8099 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8100 ;;      Params:         0       6       0       0       0
  8101 ;;      Locals:         0       4       0       0       0
  8102 ;;      Temps:          0       0       0       0       0
  8103 ;;      Totals:         0      10       0       0       0
  8104 ;;Total ram usage:       10 bytes
  8105 ;; Hardware stack levels used:    1
  8106 ;; This function calls:
  8107 ;;		Nothing
  8108 ;; This function is called by:
  8109 ;;		i2_send_msg
  8110 ;;		i2_recv_msg
  8111 ;; This function uses a non-reentrant model
  8112 ;;
  8113                           
  8114                           	psect	text51
  8115  001AB8                     __ptext51:
  8116                           	opt stack 0
  8117  001AB8                     i2_memcpy:
  8118                           	opt stack 17
  8119                           
  8120                           ; BSR set to: 0
  8121                           ;incstack = 0
  8122  001AB8  0100               	movlb	0	; () banked
  8123  001ABA  0100               	movlb	0	; () banked
  8124  001ABC  C0B9  F0BF         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8125  001AC0  0100               	movlb	0	; () banked
  8126  001AC2  0100               	movlb	0	; () banked
  8127  001AC4  C0B8  F0BE         	movff	i2memcpy@s1,i2memcpy@s
  8128  001AC8  0100               	movlb	0	; () banked
  8129  001ACA  0100               	movlb	0	; () banked
  8130  001ACC  C0B7  F0BD         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8131  001AD0  0100               	movlb	0	; () banked
  8132  001AD2  0100               	movlb	0	; () banked
  8133  001AD4  C0B6  F0BC         	movff	i2memcpy@d1,i2memcpy@d
  8134  001AD8  D012               	goto	i2l4009
  8135  001ADA                     i2l4003:
  8136                           
  8137                           ; BSR set to: 0
  8138  001ADA  C0BE  FFD9         	movff	i2memcpy@s,fsr2l
  8139  001ADE  C0BF  FFDA         	movff	i2memcpy@s+1,fsr2h
  8140  001AE2  C0BC  FFE1         	movff	i2memcpy@d,fsr1l
  8141  001AE6  C0BD  FFE2         	movff	i2memcpy@d+1,fsr1h
  8142  001AEA  CFDF FFE7          	movff	indf2,indf1
  8143                           
  8144                           ; BSR set to: 0
  8145  001AEE  0100               	movlb	0	; () banked
  8146  001AF0  0100               	movlb	0	; () banked
  8147  001AF2  4BBE               	infsnz	i2memcpy@s& (0+255),f,b
  8148  001AF4  2BBF               	incf	(i2memcpy@s+1)& (0+255),f,b
  8149                           
  8150                           ; BSR set to: 0
  8151  001AF6  0100               	movlb	0	; () banked
  8152  001AF8  0100               	movlb	0	; () banked
  8153  001AFA  4BBC               	infsnz	i2memcpy@d& (0+255),f,b
  8154  001AFC  2BBD               	incf	(i2memcpy@d+1)& (0+255),f,b
  8155  001AFE                     i2l4009:
  8156                           
  8157                           ; BSR set to: 0
  8158  001AFE  0100               	movlb	0	; () banked
  8159  001B00  0100               	movlb	0	; () banked
  8160  001B02  07BA               	decf	i2memcpy@n& (0+255),f,b
  8161  001B04  A0D8               	btfss	status,0,c
  8162  001B06  07BB               	decf	(i2memcpy@n+1)& (0+255),f,b
  8163  001B08  0100               	movlb	0	; () banked
  8164  001B0A  29BA               	incf	i2memcpy@n& (0+255),w,b
  8165  001B0C  B4D8               	btfsc	status,2,c
  8166  001B0E  29BB               	incf	(i2memcpy@n+1)& (0+255),w,b
  8167  001B10  B4D8               	btfsc	status,2,c
  8168                           
  8169                           ; BSR set to: 0
  8170                           
  8171                           ; BSR set to: 0
  8172                           ;	Return value of i2_memcpy is never used
  8173  001B12  0012               	return	
  8174  001B14  D7E2               	goto	i2l4003
  8175  001B16                     __end_ofi2_memcpy:
  8176                           	opt stack 0
  8177                           pclatu	equ	0xFFB
  8178                           pclath	equ	0xFFA
  8179                           tblptru	equ	0xFF8
  8180                           tblptrh	equ	0xFF7
  8181                           tblptrl	equ	0xFF6
  8182                           tablat	equ	0xFF5
  8183                           prodh	equ	0xFF4
  8184                           prodl	equ	0xFF3
  8185                           intcon	equ	0xFF2
  8186                           postinc0	equ	0xFEE
  8187                           fsr0h	equ	0xFEA
  8188                           fsr0l	equ	0xFE9
  8189                           wreg	equ	0xFE8
  8190                           indf1	equ	0xFE7
  8191                           fsr1h	equ	0xFE2
  8192                           fsr1l	equ	0xFE1
  8193                           bsr	equ	0xFE0
  8194                           indf2	equ	0xFDF
  8195                           postinc2	equ	0xFDE
  8196                           postdec2	equ	0xFDD
  8197                           fsr2h	equ	0xFDA
  8198                           fsr2l	equ	0xFD9
  8199                           status	equ	0xFD8
  8200                           
  8201 ;; *************** function _i2c_int_handler *****************
  8202 ;; Defined at:
  8203 ;;		line 145 in file "../src/my_i2c.c"
  8204 ;; Parameters:    Size  Location     Type
  8205 ;;		None
  8206 ;; Auto vars:     Size  Location     Type
  8207 ;;		None
  8208 ;; Return value:  Size  Location     Type
  8209 ;;		None               void
  8210 ;; Registers used:
  8211 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8212 ;; Tracked objects:
  8213 ;;		On entry : 0/0
  8214 ;;		On exit  : 0/0
  8215 ;;		Unchanged: 0/0
  8216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8217 ;;      Params:         0       0       0       0       0
  8218 ;;      Locals:         0       0       0       0       0
  8219 ;;      Temps:          0       0       0       0       0
  8220 ;;      Totals:         0       0       0       0       0
  8221 ;;Total ram usage:        0 bytes
  8222 ;; Hardware stack levels used:    1
  8223 ;; Hardware stack levels required when called:    1
  8224 ;; This function calls:
  8225 ;;		_i2c_int_handler_master_rx
  8226 ;;		_i2c_int_handler_master_tx
  8227 ;; This function is called by:
  8228 ;;		_InterruptHandlerHigh
  8229 ;; This function uses a non-reentrant model
  8230 ;;
  8231                           
  8232                           	psect	text52
  8233  00191C                     __ptext52:
  8234                           	opt stack 0
  8235  00191C                     _i2c_int_handler:
  8236                           	opt stack 19
  8237                           
  8238                           ;my_i2c.c: 147: if ((ic_ptr->rx_i2c == 1) && (ic_ptr->tx_i2c == 0)) {
  8239                           
  8240                           ; BSR set to: 0
  8241                           ;incstack = 0
  8242  00191C  0100               	movlb	0	; () banked
  8243  00191E  EE20 F021          	lfsr	2,33
  8244  001922  0100               	movlb	0	; () banked
  8245  001924  51E8               	movf	_ic_ptr& (0+255),w,b
  8246  001926  26D9               	addwf	fsr2l,f,c
  8247  001928  0100               	movlb	0	; () banked
  8248  00192A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8249  00192C  22DA               	addwfc	fsr2h,f,c
  8250  00192E  0E01               	movlw	1
  8251  001930  62DF               	cpfseq	indf2,c
  8252  001932  D00F               	goto	i2l3359
  8253                           
  8254                           ; BSR set to: 0
  8255  001934  0100               	movlb	0	; () banked
  8256  001936  EE20 F020          	lfsr	2,32
  8257  00193A  0100               	movlb	0	; () banked
  8258  00193C  51E8               	movf	_ic_ptr& (0+255),w,b
  8259  00193E  26D9               	addwf	fsr2l,f,c
  8260  001940  0100               	movlb	0	; () banked
  8261  001942  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8262  001944  22DA               	addwfc	fsr2h,f,c
  8263  001946  50DF               	movf	indf2,w,c
  8264  001948  A4D8               	btfss	status,2,c
  8265  00194A  D003               	goto	i2l3359
  8266                           
  8267                           ; BSR set to: 0
  8268                           ;my_i2c.c: 148: i2c_int_handler_master_rx();
  8269  00194C  ECDF  F004         	call	_i2c_int_handler_master_rx	;wreg free
  8270                           
  8271                           ;my_i2c.c: 149: } else if ((ic_ptr->tx_i2c == 1) && (ic_ptr->rx_i2c == 0)) {
  8272  001950  0012               	return	
  8273  001952                     i2l3359:
  8274  001952  0100               	movlb	0	; () banked
  8275  001954  EE20 F020          	lfsr	2,32
  8276  001958  0100               	movlb	0	; () banked
  8277  00195A  51E8               	movf	_ic_ptr& (0+255),w,b
  8278  00195C  26D9               	addwf	fsr2l,f,c
  8279  00195E  0100               	movlb	0	; () banked
  8280  001960  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8281  001962  22DA               	addwfc	fsr2h,f,c
  8282  001964  0E01               	movlw	1
  8283  001966  62DF               	cpfseq	indf2,c
  8284  001968  0012               	return	
  8285                           
  8286                           ; BSR set to: 0
  8287  00196A  0100               	movlb	0	; () banked
  8288  00196C  EE20 F021          	lfsr	2,33
  8289  001970  0100               	movlb	0	; () banked
  8290  001972  51E8               	movf	_ic_ptr& (0+255),w,b
  8291  001974  26D9               	addwf	fsr2l,f,c
  8292  001976  0100               	movlb	0	; () banked
  8293  001978  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8294  00197A  22DA               	addwfc	fsr2h,f,c
  8295  00197C  50DF               	movf	indf2,w,c
  8296  00197E  A4D8               	btfss	status,2,c
  8297  001980  0012               	return	
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;my_i2c.c: 150: i2c_int_handler_master_tx();
  8301  001982  ECD0  F003         	call	_i2c_int_handler_master_tx	;wreg free
  8302  001986  0012               	return	
  8303  001988                     __end_of_i2c_int_handler:
  8304                           	opt stack 0
  8305                           pclatu	equ	0xFFB
  8306                           pclath	equ	0xFFA
  8307                           tblptru	equ	0xFF8
  8308                           tblptrh	equ	0xFF7
  8309                           tblptrl	equ	0xFF6
  8310                           tablat	equ	0xFF5
  8311                           prodh	equ	0xFF4
  8312                           prodl	equ	0xFF3
  8313                           intcon	equ	0xFF2
  8314                           postinc0	equ	0xFEE
  8315                           fsr0h	equ	0xFEA
  8316                           fsr0l	equ	0xFE9
  8317                           wreg	equ	0xFE8
  8318                           indf1	equ	0xFE7
  8319                           fsr1h	equ	0xFE2
  8320                           fsr1l	equ	0xFE1
  8321                           bsr	equ	0xFE0
  8322                           indf2	equ	0xFDF
  8323                           postinc2	equ	0xFDE
  8324                           postdec2	equ	0xFDD
  8325                           fsr2h	equ	0xFDA
  8326                           fsr2l	equ	0xFD9
  8327                           status	equ	0xFD8
  8328                           
  8329 ;; *************** function _i2c_int_handler_master_tx *****************
  8330 ;; Defined at:
  8331 ;;		line 231 in file "../src/my_i2c.c"
  8332 ;; Parameters:    Size  Location     Type
  8333 ;;		None
  8334 ;; Auto vars:     Size  Location     Type
  8335 ;;		None
  8336 ;; Return value:  Size  Location     Type
  8337 ;;		None               void
  8338 ;; Registers used:
  8339 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8340 ;; Tracked objects:
  8341 ;;		On entry : 0/0
  8342 ;;		On exit  : 0/0
  8343 ;;		Unchanged: 0/0
  8344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8345 ;;      Params:         0       0       0       0       0
  8346 ;;      Locals:         0       0       0       0       0
  8347 ;;      Temps:          0       4       0       0       0
  8348 ;;      Totals:         0       4       0       0       0
  8349 ;;Total ram usage:        4 bytes
  8350 ;; Hardware stack levels used:    1
  8351 ;; This function calls:
  8352 ;;		Nothing
  8353 ;; This function is called by:
  8354 ;;		_i2c_int_handler
  8355 ;; This function uses a non-reentrant model
  8356 ;;
  8357                           
  8358                           	psect	text53
  8359  0007A0                     __ptext53:
  8360                           	opt stack 0
  8361  0007A0                     _i2c_int_handler_master_tx:
  8362                           	opt stack 19
  8363                           
  8364                           ;my_i2c.c: 234: switch (ic_ptr->status) {
  8365                           
  8366                           ;incstack = 0
  8367  0007A0  D0F7               	goto	i2l3883
  8368  0007A2                     i2l3857:
  8369                           
  8370                           ;my_i2c.c: 238: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8371  0007A2  0100               	movlb	0	; () banked
  8372  0007A4  EE20 F01A          	lfsr	2,26
  8373  0007A8  0100               	movlb	0	; () banked
  8374  0007AA  51E8               	movf	_ic_ptr& (0+255),w,b
  8375  0007AC  26D9               	addwf	fsr2l,f,c
  8376  0007AE  0100               	movlb	0	; () banked
  8377  0007B0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8378  0007B2  22DA               	addwfc	fsr2h,f,c
  8379  0007B4  50DF               	movf	indf2,w,c
  8380  0007B6  0100               	movlb	0	; () banked
  8381  0007B8  6FB6               	movwf	??_i2c_int_handler_master_tx& (0+255),b
  8382  0007BA  0100               	movlb	0	; () banked
  8383  0007BC  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8384  0007BE  0D01               	mullw	1
  8385  0007C0  0E0F               	movlw	15
  8386  0007C2  26F3               	addwf	prodl,f,c
  8387  0007C4  0E00               	movlw	0
  8388  0007C6  22F4               	addwfc	prodh,f,c
  8389  0007C8  50F3               	movf	prodl,w,c
  8390  0007CA  0100               	movlb	0	; () banked
  8391  0007CC  0100               	movlb	0	; () banked
  8392  0007CE  25E8               	addwf	_ic_ptr& (0+255),w,b
  8393  0007D0  6ED9               	movwf	fsr2l,c
  8394  0007D2  50F4               	movf	prodh,w,c
  8395  0007D4  0100               	movlb	0	; () banked
  8396  0007D6  0100               	movlb	0	; () banked
  8397  0007D8  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8398  0007DA  6EDA               	movwf	fsr2h,c
  8399  0007DC  50DF               	movf	indf2,w,c
  8400  0007DE  6EC9               	movwf	4041,c	;volatile
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;my_i2c.c: 239: ic_ptr->status = 0x6;
  8404  0007E0  0100               	movlb	0	; () banked
  8405  0007E2  EE20 F00C          	lfsr	2,12
  8406  0007E6  0100               	movlb	0	; () banked
  8407  0007E8  51E8               	movf	_ic_ptr& (0+255),w,b
  8408  0007EA  26D9               	addwf	fsr2l,f,c
  8409  0007EC  0100               	movlb	0	; () banked
  8410  0007EE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8411  0007F0  22DA               	addwfc	fsr2h,f,c
  8412  0007F2  0E06               	movlw	6
  8413  0007F4  6EDF               	movwf	indf2,c
  8414                           
  8415                           ;my_i2c.c: 240: break;
  8416  0007F6  0012               	return	
  8417  0007F8                     i2l344:
  8418                           
  8419                           ; BSR set to: 0
  8420                           ;my_i2c.c: 244: if (!SSPCON2bits.ACKSTAT) {
  8421  0007F8  BCC5               	btfsc	4037,6,c	;volatile
  8422  0007FA  D039               	goto	i2l3865
  8423                           
  8424                           ; BSR set to: 0
  8425                           ;my_i2c.c: 246: SSPCON2bits.ACKDT = 1;
  8426  0007FC  8AC5               	bsf	4037,5,c	;volatile
  8427                           
  8428                           ; BSR set to: 0
  8429                           ;my_i2c.c: 248: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  8430  0007FE  0100               	movlb	0	; () banked
  8431  000800  EE20 F01C          	lfsr	2,28
  8432  000804  0100               	movlb	0	; () banked
  8433  000806  51E8               	movf	_ic_ptr& (0+255),w,b
  8434  000808  26D9               	addwf	fsr2l,f,c
  8435  00080A  0100               	movlb	0	; () banked
  8436  00080C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8437  00080E  22DA               	addwfc	fsr2h,f,c
  8438  000810  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8439  000814  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8440  000818  0E0F               	movlw	15
  8441  00081A  0100               	movlb	0	; () banked
  8442  00081C  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  8443  00081E  0E00               	movlw	0
  8444  000820  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  8445  000822  0100               	movlb	0	; () banked
  8446  000824  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8447  000826  0100               	movlb	0	; () banked
  8448  000828  0100               	movlb	0	; () banked
  8449  00082A  25E8               	addwf	_ic_ptr& (0+255),w,b
  8450  00082C  6ED9               	movwf	fsr2l,c
  8451  00082E  0100               	movlb	0	; () banked
  8452  000830  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8453  000832  0100               	movlb	0	; () banked
  8454  000834  0100               	movlb	0	; () banked
  8455  000836  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8456  000838  6EDA               	movwf	fsr2h,c
  8457  00083A  50DF               	movf	indf2,w,c
  8458  00083C  6EC9               	movwf	4041,c	;volatile
  8459                           
  8460                           ;my_i2c.c: 250: ic_ptr->bufferCounterSend++;
  8461  00083E  0100               	movlb	0	; () banked
  8462  000840  EE20 F01C          	lfsr	2,28
  8463  000844  0100               	movlb	0	; () banked
  8464  000846  51E8               	movf	_ic_ptr& (0+255),w,b
  8465  000848  26D9               	addwf	fsr2l,f,c
  8466  00084A  0100               	movlb	0	; () banked
  8467  00084C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8468  00084E  22DA               	addwfc	fsr2h,f,c
  8469  000850  2ADE               	incf	postinc2,f,c
  8470  000852  0E00               	movlw	0
  8471  000854  22DD               	addwfc	postdec2,f,c
  8472                           
  8473                           ;my_i2c.c: 251: ic_ptr->status = 0x7;
  8474  000856  0100               	movlb	0	; () banked
  8475  000858  EE20 F00C          	lfsr	2,12
  8476  00085C  0100               	movlb	0	; () banked
  8477  00085E  51E8               	movf	_ic_ptr& (0+255),w,b
  8478  000860  26D9               	addwf	fsr2l,f,c
  8479  000862  0100               	movlb	0	; () banked
  8480  000864  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8481  000866  22DA               	addwfc	fsr2h,f,c
  8482  000868  0E07               	movlw	7
  8483  00086A  6EDF               	movwf	indf2,c
  8484                           
  8485                           ;my_i2c.c: 254: } else {
  8486  00086C  0012               	return	
  8487  00086E                     i2l3865:
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;my_i2c.c: 255: ic_ptr->status = 1;
  8491  00086E  0100               	movlb	0	; () banked
  8492  000870  EE20 F00C          	lfsr	2,12
  8493  000874  0100               	movlb	0	; () banked
  8494  000876  51E8               	movf	_ic_ptr& (0+255),w,b
  8495  000878  26D9               	addwf	fsr2l,f,c
  8496  00087A  0100               	movlb	0	; () banked
  8497  00087C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8498  00087E  22DA               	addwfc	fsr2h,f,c
  8499  000880  0E01               	movlw	1
  8500  000882  6EDF               	movwf	indf2,c
  8501  000884  0012               	return	
  8502  000886                     i2l347:
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;my_i2c.c: 261: if (!SSPCON2bits.ACKSTAT) {
  8506  000886  BCC5               	btfsc	4037,6,c	;volatile
  8507  000888  D06B               	goto	i2l3877
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;my_i2c.c: 265: SSPCON2bits.ACKDT = 1;
  8511  00088A  8AC5               	bsf	4037,5,c	;volatile
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;my_i2c.c: 267: if (ic_ptr->bufferCounterSend == (ic_ptr->outbuflen)) {
  8515  00088C  0100               	movlb	0	; () banked
  8516  00088E  EE20 F01C          	lfsr	2,28
  8517  000892  0100               	movlb	0	; () banked
  8518  000894  51E8               	movf	_ic_ptr& (0+255),w,b
  8519  000896  26D9               	addwf	fsr2l,f,c
  8520  000898  0100               	movlb	0	; () banked
  8521  00089A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8522  00089C  22DA               	addwfc	fsr2h,f,c
  8523  00089E  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8524  0008A2  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8525  0008A6  0100               	movlb	0	; () banked
  8526  0008A8  EE20 F019          	lfsr	2,25
  8527  0008AC  0100               	movlb	0	; () banked
  8528  0008AE  51E8               	movf	_ic_ptr& (0+255),w,b
  8529  0008B0  26D9               	addwf	fsr2l,f,c
  8530  0008B2  0100               	movlb	0	; () banked
  8531  0008B4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8532  0008B6  22DA               	addwfc	fsr2h,f,c
  8533  0008B8  50DF               	movf	indf2,w,c
  8534  0008BA  0100               	movlb	0	; () banked
  8535  0008BC  6FB8               	movwf	(??_i2c_int_handler_master_tx+2)& (0+255),b
  8536  0008BE  6BB9               	clrf	(??_i2c_int_handler_master_tx+3)& (0+255),b
  8537  0008C0  0100               	movlb	0	; () banked
  8538  0008C2  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8539  0008C4  0100               	movlb	0	; () banked
  8540  0008C6  19B9               	xorwf	(??_i2c_int_handler_master_tx+3)& (0+255),w,b
  8541  0008C8  E104               	bnz	i2u276_45
  8542  0008CA  0100               	movlb	0	; () banked
  8543  0008CC  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8544  0008CE  0100               	movlb	0	; () banked
  8545  0008D0  19B8               	xorwf	(??_i2c_int_handler_master_tx+2)& (0+255),w,b
  8546  0008D2                     i2u276_45:
  8547  0008D2  A4D8               	btfss	status,2,c
  8548  0008D4  D00D               	goto	i2l3875
  8549                           
  8550                           ; BSR set to: 0
  8551                           ;my_i2c.c: 268: ic_ptr->status = 0xA;
  8552  0008D6  0100               	movlb	0	; () banked
  8553  0008D8  EE20 F00C          	lfsr	2,12
  8554  0008DC  0100               	movlb	0	; () banked
  8555  0008DE  51E8               	movf	_ic_ptr& (0+255),w,b
  8556  0008E0  26D9               	addwf	fsr2l,f,c
  8557  0008E2  0100               	movlb	0	; () banked
  8558  0008E4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8559  0008E6  22DA               	addwfc	fsr2h,f,c
  8560  0008E8  0E0A               	movlw	10
  8561  0008EA  6EDF               	movwf	indf2,c
  8562                           
  8563                           ; BSR set to: 0
  8564                           ;my_i2c.c: 270: SSP1CON2bits.PEN = 1;
  8565  0008EC  84C5               	bsf	4037,2,c	;volatile
  8566                           
  8567                           ;my_i2c.c: 272: } else {
  8568  0008EE  0012               	return	
  8569  0008F0                     i2l3875:
  8570                           
  8571                           ; BSR set to: 0
  8572                           ;my_i2c.c: 274: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  8573  0008F0  0100               	movlb	0	; () banked
  8574  0008F2  EE20 F01C          	lfsr	2,28
  8575  0008F6  0100               	movlb	0	; () banked
  8576  0008F8  51E8               	movf	_ic_ptr& (0+255),w,b
  8577  0008FA  26D9               	addwf	fsr2l,f,c
  8578  0008FC  0100               	movlb	0	; () banked
  8579  0008FE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8580  000900  22DA               	addwfc	fsr2h,f,c
  8581  000902  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8582  000906  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8583  00090A  0E0F               	movlw	15
  8584  00090C  0100               	movlb	0	; () banked
  8585  00090E  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  8586  000910  0E00               	movlw	0
  8587  000912  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  8588  000914  0100               	movlb	0	; () banked
  8589  000916  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8590  000918  0100               	movlb	0	; () banked
  8591  00091A  0100               	movlb	0	; () banked
  8592  00091C  25E8               	addwf	_ic_ptr& (0+255),w,b
  8593  00091E  6ED9               	movwf	fsr2l,c
  8594  000920  0100               	movlb	0	; () banked
  8595  000922  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8596  000924  0100               	movlb	0	; () banked
  8597  000926  0100               	movlb	0	; () banked
  8598  000928  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8599  00092A  6EDA               	movwf	fsr2h,c
  8600  00092C  50DF               	movf	indf2,w,c
  8601  00092E  6EC9               	movwf	4041,c	;volatile
  8602                           
  8603                           ;my_i2c.c: 276: ic_ptr->bufferCounterSend++;
  8604  000930  0100               	movlb	0	; () banked
  8605  000932  EE20 F01C          	lfsr	2,28
  8606  000936  0100               	movlb	0	; () banked
  8607  000938  51E8               	movf	_ic_ptr& (0+255),w,b
  8608  00093A  26D9               	addwf	fsr2l,f,c
  8609  00093C  0100               	movlb	0	; () banked
  8610  00093E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8611  000940  22DA               	addwfc	fsr2h,f,c
  8612  000942  2ADE               	incf	postinc2,f,c
  8613  000944  0E00               	movlw	0
  8614  000946  22DD               	addwfc	postdec2,f,c
  8615                           
  8616                           ;my_i2c.c: 277: ic_ptr->status = 0x7;
  8617  000948  0100               	movlb	0	; () banked
  8618  00094A  EE20 F00C          	lfsr	2,12
  8619  00094E  0100               	movlb	0	; () banked
  8620  000950  51E8               	movf	_ic_ptr& (0+255),w,b
  8621  000952  26D9               	addwf	fsr2l,f,c
  8622  000954  0100               	movlb	0	; () banked
  8623  000956  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8624  000958  22DA               	addwfc	fsr2h,f,c
  8625  00095A  0E07               	movlw	7
  8626  00095C  6EDF               	movwf	indf2,c
  8627  00095E  0012               	return	
  8628  000960                     i2l3877:
  8629                           
  8630                           ; BSR set to: 0
  8631                           ;my_i2c.c: 281: ic_ptr->status = 0x9;
  8632  000960  0100               	movlb	0	; () banked
  8633  000962  EE20 F00C          	lfsr	2,12
  8634  000966  0100               	movlb	0	; () banked
  8635  000968  51E8               	movf	_ic_ptr& (0+255),w,b
  8636  00096A  26D9               	addwf	fsr2l,f,c
  8637  00096C  0100               	movlb	0	; () banked
  8638  00096E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8639  000970  22DA               	addwfc	fsr2h,f,c
  8640  000972  0E09               	movlw	9
  8641  000974  6EDF               	movwf	indf2,c
  8642  000976  0012               	return	
  8643  000978                     i2l3879:
  8644                           
  8645                           ; BSR set to: 0
  8646                           ;my_i2c.c: 286: ic_ptr->status = 0x3;
  8647  000978  0100               	movlb	0	; () banked
  8648  00097A  EE20 F00C          	lfsr	2,12
  8649  00097E  0100               	movlb	0	; () banked
  8650  000980  51E8               	movf	_ic_ptr& (0+255),w,b
  8651  000982  26D9               	addwf	fsr2l,f,c
  8652  000984  0100               	movlb	0	; () banked
  8653  000986  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8654  000988  22DA               	addwfc	fsr2h,f,c
  8655  00098A  0E03               	movlw	3
  8656  00098C  6EDF               	movwf	indf2,c
  8657                           
  8658                           ;my_i2c.c: 289: break;
  8659  00098E  0012               	return	
  8660  000990                     i2l3883:
  8661  000990  0100               	movlb	0	; () banked
  8662  000992  EE20 F00C          	lfsr	2,12
  8663  000996  0100               	movlb	0	; () banked
  8664  000998  51E8               	movf	_ic_ptr& (0+255),w,b
  8665  00099A  26D9               	addwf	fsr2l,f,c
  8666  00099C  0100               	movlb	0	; () banked
  8667  00099E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8668  0009A0  22DA               	addwfc	fsr2h,f,c
  8669  0009A2  50DF               	movf	indf2,w,c
  8670                           
  8671                           ; Switch size 1, requested type "space"
  8672                           ; Number of cases is 4, Range of values is 5 to 10
  8673                           ; switch strategies available:
  8674                           ; Name         Instructions Cycles
  8675                           ; simple_byte           13     7 (average)
  8676                           ;	Chosen strategy is simple_byte
  8677  0009A4  0A05               	xorlw	5	; case 5
  8678  0009A6  B4D8               	btfsc	status,2,c
  8679  0009A8  D6FC               	goto	i2l3857
  8680  0009AA  0A03               	xorlw	3	; case 6
  8681  0009AC  B4D8               	btfsc	status,2,c
  8682  0009AE  D724               	goto	i2l344
  8683  0009B0  0A01               	xorlw	1	; case 7
  8684  0009B2  B4D8               	btfsc	status,2,c
  8685  0009B4  D768               	goto	i2l347
  8686  0009B6  0A0D               	xorlw	13	; case 10
  8687  0009B8  A4D8               	btfss	status,2,c
  8688  0009BA  0012               	return	
  8689  0009BC  D7DD               	goto	i2l3879
  8690  0009BE                     __end_of_i2c_int_handler_master_tx:
  8691                           	opt stack 0
  8692                           pclatu	equ	0xFFB
  8693                           pclath	equ	0xFFA
  8694                           tblptru	equ	0xFF8
  8695                           tblptrh	equ	0xFF7
  8696                           tblptrl	equ	0xFF6
  8697                           tablat	equ	0xFF5
  8698                           prodh	equ	0xFF4
  8699                           prodl	equ	0xFF3
  8700                           intcon	equ	0xFF2
  8701                           postinc0	equ	0xFEE
  8702                           fsr0h	equ	0xFEA
  8703                           fsr0l	equ	0xFE9
  8704                           wreg	equ	0xFE8
  8705                           indf1	equ	0xFE7
  8706                           fsr1h	equ	0xFE2
  8707                           fsr1l	equ	0xFE1
  8708                           bsr	equ	0xFE0
  8709                           indf2	equ	0xFDF
  8710                           postinc2	equ	0xFDE
  8711                           postdec2	equ	0xFDD
  8712                           fsr2h	equ	0xFDA
  8713                           fsr2l	equ	0xFD9
  8714                           status	equ	0xFD8
  8715                           
  8716 ;; *************** function _i2c_int_handler_master_rx *****************
  8717 ;; Defined at:
  8718 ;;		line 154 in file "../src/my_i2c.c"
  8719 ;; Parameters:    Size  Location     Type
  8720 ;;		None
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;		None
  8723 ;; Return value:  Size  Location     Type
  8724 ;;		None               void
  8725 ;; Registers used:
  8726 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8727 ;; Tracked objects:
  8728 ;;		On entry : 0/0
  8729 ;;		On exit  : 0/0
  8730 ;;		Unchanged: 0/0
  8731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8732 ;;      Params:         0       0       0       0       0
  8733 ;;      Locals:         0       0       0       0       0
  8734 ;;      Temps:          0       4       0       0       0
  8735 ;;      Totals:         0       4       0       0       0
  8736 ;;Total ram usage:        4 bytes
  8737 ;; Hardware stack levels used:    1
  8738 ;; This function calls:
  8739 ;;		Nothing
  8740 ;; This function is called by:
  8741 ;;		_i2c_int_handler
  8742 ;; This function uses a non-reentrant model
  8743 ;;
  8744                           
  8745                           	psect	text54
  8746  0009BE                     __ptext54:
  8747                           	opt stack 0
  8748  0009BE                     _i2c_int_handler_master_rx:
  8749                           	opt stack 19
  8750                           
  8751                           ;my_i2c.c: 155: switch (ic_ptr->status) {
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;incstack = 0
  8755  0009BE  D0C0               	goto	i2l3853
  8756  0009C0                     i2l3829:
  8757                           
  8758                           ;my_i2c.c: 159: SSPBUF = ic_ptr->slave_addr_rc;
  8759  0009C0  0100               	movlb	0	; () banked
  8760  0009C2  EE20 F022          	lfsr	2,34
  8761  0009C6  0100               	movlb	0	; () banked
  8762  0009C8  51E8               	movf	_ic_ptr& (0+255),w,b
  8763  0009CA  26D9               	addwf	fsr2l,f,c
  8764  0009CC  0100               	movlb	0	; () banked
  8765  0009CE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8766  0009D0  22DA               	addwfc	fsr2h,f,c
  8767  0009D2  50DF               	movf	indf2,w,c
  8768  0009D4  6EC9               	movwf	4041,c	;volatile
  8769                           
  8770                           ;my_i2c.c: 160: ic_ptr->status = 0xD;
  8771  0009D6  0100               	movlb	0	; () banked
  8772  0009D8  EE20 F00C          	lfsr	2,12
  8773  0009DC  0100               	movlb	0	; () banked
  8774  0009DE  51E8               	movf	_ic_ptr& (0+255),w,b
  8775  0009E0  26D9               	addwf	fsr2l,f,c
  8776  0009E2  0100               	movlb	0	; () banked
  8777  0009E4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8778  0009E6  22DA               	addwfc	fsr2h,f,c
  8779  0009E8  0E0D               	movlw	13
  8780  0009EA  6EDF               	movwf	indf2,c
  8781                           
  8782                           ;my_i2c.c: 161: break;
  8783  0009EC  0012               	return	
  8784  0009EE                     i2l329:
  8785                           
  8786                           ; BSR set to: 0
  8787                           ;my_i2c.c: 165: if (!SSPCON2bits.ACKSTAT) {
  8788  0009EE  BCC5               	btfsc	4037,6,c	;volatile
  8789  0009F0  D00D               	goto	i2l3835
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;my_i2c.c: 167: SSPCON2bits.RCEN = 1;
  8793  0009F2  86C5               	bsf	4037,3,c	;volatile
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;my_i2c.c: 169: ic_ptr->status = 0xF;
  8797  0009F4  0100               	movlb	0	; () banked
  8798  0009F6  EE20 F00C          	lfsr	2,12
  8799  0009FA  0100               	movlb	0	; () banked
  8800  0009FC  51E8               	movf	_ic_ptr& (0+255),w,b
  8801  0009FE  26D9               	addwf	fsr2l,f,c
  8802  000A00  0100               	movlb	0	; () banked
  8803  000A02  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8804  000A04  22DA               	addwfc	fsr2h,f,c
  8805  000A06  0E0F               	movlw	15
  8806  000A08  6EDF               	movwf	indf2,c
  8807                           
  8808                           ;my_i2c.c: 171: } else {
  8809  000A0A  0012               	return	
  8810  000A0C                     i2l3835:
  8811                           
  8812                           ; BSR set to: 0
  8813                           ;my_i2c.c: 172: ic_ptr->status = 0xE;
  8814  000A0C  0100               	movlb	0	; () banked
  8815  000A0E  EE20 F00C          	lfsr	2,12
  8816  000A12  0100               	movlb	0	; () banked
  8817  000A14  51E8               	movf	_ic_ptr& (0+255),w,b
  8818  000A16  26D9               	addwf	fsr2l,f,c
  8819  000A18  0100               	movlb	0	; () banked
  8820  000A1A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8821  000A1C  22DA               	addwfc	fsr2h,f,c
  8822  000A1E  0E0E               	movlw	14
  8823  000A20  6EDF               	movwf	indf2,c
  8824  000A22  0012               	return	
  8825  000A24                     i2l3837:
  8826                           
  8827                           ; BSR set to: 0
  8828                           ;my_i2c.c: 178: ic_ptr->buffer[ic_ptr->bufferCounterRx] = SSPBUF;
  8829  000A24  0100               	movlb	0	; () banked
  8830  000A26  EE20 F01E          	lfsr	2,30
  8831  000A2A  0100               	movlb	0	; () banked
  8832  000A2C  51E8               	movf	_ic_ptr& (0+255),w,b
  8833  000A2E  26D9               	addwf	fsr2l,f,c
  8834  000A30  0100               	movlb	0	; () banked
  8835  000A32  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8836  000A34  22DA               	addwfc	fsr2h,f,c
  8837  000A36  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  8838  000A3A  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  8839  000A3E  0100               	movlb	0	; () banked
  8840  000A40  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  8841  000A42  0100               	movlb	0	; () banked
  8842  000A44  0100               	movlb	0	; () banked
  8843  000A46  25E8               	addwf	_ic_ptr& (0+255),w,b
  8844  000A48  6ED9               	movwf	fsr2l,c
  8845  000A4A  0100               	movlb	0	; () banked
  8846  000A4C  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  8847  000A4E  0100               	movlb	0	; () banked
  8848  000A50  0100               	movlb	0	; () banked
  8849  000A52  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8850  000A54  6EDA               	movwf	fsr2h,c
  8851  000A56  CFC9 FFDF          	movff	4041,indf2	;volatile
  8852                           
  8853                           ;my_i2c.c: 179: ic_ptr->bufferCounterRx++;
  8854  000A5A  0100               	movlb	0	; () banked
  8855  000A5C  EE20 F01E          	lfsr	2,30
  8856  000A60  0100               	movlb	0	; () banked
  8857  000A62  51E8               	movf	_ic_ptr& (0+255),w,b
  8858  000A64  26D9               	addwf	fsr2l,f,c
  8859  000A66  0100               	movlb	0	; () banked
  8860  000A68  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8861  000A6A  22DA               	addwfc	fsr2h,f,c
  8862  000A6C  2ADE               	incf	postinc2,f,c
  8863  000A6E  0E00               	movlw	0
  8864  000A70  22DD               	addwfc	postdec2,f,c
  8865                           
  8866                           ;my_i2c.c: 180: if (ic_ptr->buflen == ic_ptr->bufferCounterRx) {
  8867  000A72  0100               	movlb	0	; () banked
  8868  000A74  EE20 F01E          	lfsr	2,30
  8869  000A78  0100               	movlb	0	; () banked
  8870  000A7A  51E8               	movf	_ic_ptr& (0+255),w,b
  8871  000A7C  26D9               	addwf	fsr2l,f,c
  8872  000A7E  0100               	movlb	0	; () banked
  8873  000A80  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8874  000A82  22DA               	addwfc	fsr2h,f,c
  8875  000A84  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  8876  000A88  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  8877  000A8C  0100               	movlb	0	; () banked
  8878  000A8E  EE20 F00A          	lfsr	2,10
  8879  000A92  0100               	movlb	0	; () banked
  8880  000A94  51E8               	movf	_ic_ptr& (0+255),w,b
  8881  000A96  26D9               	addwf	fsr2l,f,c
  8882  000A98  0100               	movlb	0	; () banked
  8883  000A9A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8884  000A9C  22DA               	addwfc	fsr2h,f,c
  8885  000A9E  50DF               	movf	indf2,w,c
  8886  000AA0  0100               	movlb	0	; () banked
  8887  000AA2  6FB8               	movwf	(??_i2c_int_handler_master_rx+2)& (0+255),b
  8888  000AA4  6BB9               	clrf	(??_i2c_int_handler_master_rx+3)& (0+255),b
  8889  000AA6  0100               	movlb	0	; () banked
  8890  000AA8  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  8891  000AAA  0100               	movlb	0	; () banked
  8892  000AAC  19B9               	xorwf	(??_i2c_int_handler_master_rx+3)& (0+255),w,b
  8893  000AAE  E104               	bnz	i2u273_45
  8894  000AB0  0100               	movlb	0	; () banked
  8895  000AB2  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  8896  000AB4  0100               	movlb	0	; () banked
  8897  000AB6  19B8               	xorwf	(??_i2c_int_handler_master_rx+2)& (0+255),w,b
  8898  000AB8                     i2u273_45:
  8899  000AB8  A4D8               	btfss	status,2,c
  8900  000ABA  D00E               	goto	i2l333
  8901                           
  8902                           ; BSR set to: 0
  8903                           ;my_i2c.c: 181: SSPCON2bits.ACKDT = 1;
  8904  000ABC  8AC5               	bsf	4037,5,c	;volatile
  8905                           
  8906                           ;my_i2c.c: 182: SSPCON2bits.ACKEN = 1;
  8907  000ABE  88C5               	bsf	4037,4,c	;volatile
  8908                           
  8909                           ; BSR set to: 0
  8910                           ;my_i2c.c: 184: ic_ptr->status = 0x11;
  8911  000AC0  0100               	movlb	0	; () banked
  8912  000AC2  EE20 F00C          	lfsr	2,12
  8913  000AC6  0100               	movlb	0	; () banked
  8914  000AC8  51E8               	movf	_ic_ptr& (0+255),w,b
  8915  000ACA  26D9               	addwf	fsr2l,f,c
  8916  000ACC  0100               	movlb	0	; () banked
  8917  000ACE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8918  000AD0  22DA               	addwfc	fsr2h,f,c
  8919  000AD2  0E11               	movlw	17
  8920  000AD4  6EDF               	movwf	indf2,c
  8921                           
  8922                           ;my_i2c.c: 185: } else {
  8923  000AD6  0012               	return	
  8924  000AD8                     i2l333:
  8925                           
  8926                           ; BSR set to: 0
  8927                           ;my_i2c.c: 186: SSPCON2bits.ACKDT = 0;
  8928  000AD8  9AC5               	bcf	4037,5,c	;volatile
  8929                           
  8930                           ;my_i2c.c: 187: SSPCON2bits.ACKEN = 1;
  8931  000ADA  88C5               	bsf	4037,4,c	;volatile
  8932                           
  8933                           ; BSR set to: 0
  8934                           ;my_i2c.c: 190: ic_ptr->status = 0x10;
  8935  000ADC  0100               	movlb	0	; () banked
  8936  000ADE  EE20 F00C          	lfsr	2,12
  8937  000AE2  0100               	movlb	0	; () banked
  8938  000AE4  51E8               	movf	_ic_ptr& (0+255),w,b
  8939  000AE6  26D9               	addwf	fsr2l,f,c
  8940  000AE8  0100               	movlb	0	; () banked
  8941  000AEA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8942  000AEC  22DA               	addwfc	fsr2h,f,c
  8943  000AEE  0E10               	movlw	16
  8944  000AF0  6EDF               	movwf	indf2,c
  8945  000AF2  0012               	return	
  8946  000AF4                     i2l335:
  8947                           
  8948                           ; BSR set to: 0
  8949                           ;my_i2c.c: 206: SSPCON2bits.RCEN = 1;
  8950  000AF4  86C5               	bsf	4037,3,c	;volatile
  8951                           
  8952                           ; BSR set to: 0
  8953                           ;my_i2c.c: 208: ic_ptr->status = 0xF;
  8954  000AF6  0100               	movlb	0	; () banked
  8955  000AF8  EE20 F00C          	lfsr	2,12
  8956  000AFC  0100               	movlb	0	; () banked
  8957  000AFE  51E8               	movf	_ic_ptr& (0+255),w,b
  8958  000B00  26D9               	addwf	fsr2l,f,c
  8959  000B02  0100               	movlb	0	; () banked
  8960  000B04  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8961  000B06  22DA               	addwfc	fsr2h,f,c
  8962  000B08  0E0F               	movlw	15
  8963  000B0A  6EDF               	movwf	indf2,c
  8964                           
  8965                           ;my_i2c.c: 210: break;
  8966  000B0C  0012               	return	
  8967  000B0E                     i2l336:
  8968                           
  8969                           ; BSR set to: 0
  8970                           ;my_i2c.c: 212: {
  8971                           ;my_i2c.c: 214: SSPCON2bits.PEN = 1;
  8972  000B0E  84C5               	bsf	4037,2,c	;volatile
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;my_i2c.c: 215: ic_ptr->status = 0x12;
  8976  000B10  0100               	movlb	0	; () banked
  8977  000B12  EE20 F00C          	lfsr	2,12
  8978  000B16  0100               	movlb	0	; () banked
  8979  000B18  51E8               	movf	_ic_ptr& (0+255),w,b
  8980  000B1A  26D9               	addwf	fsr2l,f,c
  8981  000B1C  0100               	movlb	0	; () banked
  8982  000B1E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8983  000B20  22DA               	addwfc	fsr2h,f,c
  8984  000B22  0E12               	movlw	18
  8985  000B24  6EDF               	movwf	indf2,c
  8986                           
  8987                           ;my_i2c.c: 217: }
  8988                           ;my_i2c.c: 218: break;
  8989  000B26  0012               	return	
  8990  000B28                     i2l3849:
  8991                           
  8992                           ; BSR set to: 0
  8993                           ;my_i2c.c: 221: ic_ptr->status = 0x3;
  8994  000B28  0100               	movlb	0	; () banked
  8995  000B2A  EE20 F00C          	lfsr	2,12
  8996  000B2E  0100               	movlb	0	; () banked
  8997  000B30  51E8               	movf	_ic_ptr& (0+255),w,b
  8998  000B32  26D9               	addwf	fsr2l,f,c
  8999  000B34  0100               	movlb	0	; () banked
  9000  000B36  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  9001  000B38  22DA               	addwfc	fsr2h,f,c
  9002  000B3A  0E03               	movlw	3
  9003  000B3C  6EDF               	movwf	indf2,c
  9004                           
  9005                           ;my_i2c.c: 224: break;
  9006  000B3E  0012               	return	
  9007  000B40                     i2l3853:
  9008  000B40  0100               	movlb	0	; () banked
  9009  000B42  EE20 F00C          	lfsr	2,12
  9010  000B46  0100               	movlb	0	; () banked
  9011  000B48  51E8               	movf	_ic_ptr& (0+255),w,b
  9012  000B4A  26D9               	addwf	fsr2l,f,c
  9013  000B4C  0100               	movlb	0	; () banked
  9014  000B4E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  9015  000B50  22DA               	addwfc	fsr2h,f,c
  9016  000B52  50DF               	movf	indf2,w,c
  9017                           
  9018                           ; Switch size 1, requested type "space"
  9019                           ; Number of cases is 6, Range of values is 12 to 18
  9020                           ; switch strategies available:
  9021                           ; Name         Instructions Cycles
  9022                           ; simple_byte           19    10 (average)
  9023                           ;	Chosen strategy is simple_byte
  9024  000B54  0A0C               	xorlw	12	; case 12
  9025  000B56  B4D8               	btfsc	status,2,c
  9026  000B58  D733               	goto	i2l3829
  9027  000B5A  0A01               	xorlw	1	; case 13
  9028  000B5C  B4D8               	btfsc	status,2,c
  9029  000B5E  D747               	goto	i2l329
  9030  000B60  0A02               	xorlw	2	; case 15
  9031  000B62  B4D8               	btfsc	status,2,c
  9032  000B64  D75F               	goto	i2l3837
  9033  000B66  0A1F               	xorlw	31	; case 16
  9034  000B68  B4D8               	btfsc	status,2,c
  9035  000B6A  D7C4               	goto	i2l335
  9036  000B6C  0A01               	xorlw	1	; case 17
  9037  000B6E  B4D8               	btfsc	status,2,c
  9038  000B70  D7CE               	goto	i2l336
  9039  000B72  0A03               	xorlw	3	; case 18
  9040  000B74  A4D8               	btfss	status,2,c
  9041  000B76  0012               	return	
  9042  000B78  D7D7               	goto	i2l3849
  9043  000B7A                     __end_of_i2c_int_handler_master_rx:
  9044                           	opt stack 0
  9045                           pclatu	equ	0xFFB
  9046                           pclath	equ	0xFFA
  9047                           tblptru	equ	0xFF8
  9048                           tblptrh	equ	0xFF7
  9049                           tblptrl	equ	0xFF6
  9050                           tablat	equ	0xFF5
  9051                           prodh	equ	0xFF4
  9052                           prodl	equ	0xFF3
  9053                           intcon	equ	0xFF2
  9054                           postinc0	equ	0xFEE
  9055                           fsr0h	equ	0xFEA
  9056                           fsr0l	equ	0xFE9
  9057                           wreg	equ	0xFE8
  9058                           indf1	equ	0xFE7
  9059                           fsr1h	equ	0xFE2
  9060                           fsr1l	equ	0xFE1
  9061                           bsr	equ	0xFE0
  9062                           indf2	equ	0xFDF
  9063                           postinc2	equ	0xFDE
  9064                           postdec2	equ	0xFDD
  9065                           fsr2h	equ	0xFDA
  9066                           fsr2l	equ	0xFD9
  9067                           status	equ	0xFD8
  9068                           
  9069 ;; *************** function _SleepIfOkay *****************
  9070 ;; Defined at:
  9071 ;;		line 228 in file "../src/messages.c"
  9072 ;; Parameters:    Size  Location     Type
  9073 ;;		None
  9074 ;; Auto vars:     Size  Location     Type
  9075 ;;		None
  9076 ;; Return value:  Size  Location     Type
  9077 ;;		None               void
  9078 ;; Registers used:
  9079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9085 ;;      Params:         0       0       0       0       0
  9086 ;;      Locals:         0       0       0       0       0
  9087 ;;      Temps:          0       0       0       0       0
  9088 ;;      Totals:         0       0       0       0       0
  9089 ;;Total ram usage:        0 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    2
  9092 ;; This function calls:
  9093 ;;		_enter_sleep_mode
  9094 ;;		i2_check_msg
  9095 ;;		i2_in_high_int
  9096 ;;		i2_in_low_int
  9097 ;; This function is called by:
  9098 ;;		_InterruptHandlerHigh
  9099 ;; This function uses a non-reentrant model
  9100 ;;
  9101                           
  9102                           	psect	text55
  9103  001988                     __ptext55:
  9104                           	opt stack 0
  9105  001988                     _SleepIfOkay:
  9106                           	opt stack 18
  9107                           
  9108                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9109                           
  9110                           ; BSR set to: 0
  9111                           ;incstack = 0
  9112  001988  6658               	tstfsz	_MQ_Main_Willing_to_block,c
  9113  00198A  D001               	goto	i2l3377
  9114  00198C  0012               	return	
  9115  00198E                     i2l3377:
  9116                           
  9117                           ;messages.c: 232: }
  9118                           ;messages.c: 235: if (in_low_int()) {
  9119  00198E  ECAE  F00D         	call	i2_in_low_int	;wreg free
  9120  001992  0100               	movlb	0	; () banked
  9121  001994  0100               	movlb	0	; () banked
  9122  001996  51B9               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9123  001998  0100               	movlb	0	; () banked
  9124  00199A  11B8               	iorwf	?i2_in_low_int& (0+255),w,b
  9125  00199C  A4D8               	btfss	status,2,c
  9126  00199E  0012               	return	
  9127                           
  9128                           ; BSR set to: 0
  9129                           ;messages.c: 237: }
  9130                           ;messages.c: 240: if (!in_high_int()) {
  9131                           
  9132                           ; BSR set to: 0
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;messages.c: 236: return;
  9136  0019A0  EC40  F010         	call	i2_in_high_int	;wreg free
  9137  0019A4  0100               	movlb	0	; () banked
  9138  0019A6  0100               	movlb	0	; () banked
  9139  0019A8  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9140  0019AA  0100               	movlb	0	; () banked
  9141  0019AC  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  9142  0019AE  B4D8               	btfsc	status,2,c
  9143  0019B0  0012               	return	
  9144                           
  9145                           ; BSR set to: 0
  9146                           ;messages.c: 242: }
  9147                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9148                           
  9149                           ; BSR set to: 0
  9150                           
  9151                           ; BSR set to: 0
  9152                           ;messages.c: 241: return;
  9153  0019B2  0100               	movlb	0	; () banked
  9154  0019B4  0E00               	movlw	high _ToMainHigh_MQ
  9155  0019B6  0100               	movlb	0	; () banked
  9156  0019B8  0100               	movlb	0	; () banked
  9157  0019BA  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9158  0019BC  0100               	movlb	0	; () banked
  9159  0019BE  0E80               	movlw	low _ToMainHigh_MQ
  9160  0019C0  0100               	movlb	0	; () banked
  9161  0019C2  0100               	movlb	0	; () banked
  9162  0019C4  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  9163  0019C6  EC79  F00F         	call	i2_check_msg	;wreg free
  9164  0019CA  0900               	iorlw	0
  9165  0019CC  A4D8               	btfss	status,2,c
  9166  0019CE  0012               	return	
  9167                           
  9168                           ;messages.c: 249: }
  9169                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9170                           
  9171                           ;messages.c: 248: return;
  9172  0019D0  0101               	movlb	1	; () banked
  9173  0019D2  0E01               	movlw	high _ToMainLow_MQ
  9174  0019D4  0100               	movlb	0	; () banked
  9175  0019D6  0100               	movlb	0	; () banked
  9176  0019D8  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9177  0019DA  0101               	movlb	1	; () banked
  9178  0019DC  0E4C               	movlw	low _ToMainLow_MQ
  9179  0019DE  0100               	movlb	0	; () banked
  9180  0019E0  0100               	movlb	0	; () banked
  9181  0019E2  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  9182  0019E4  EC79  F00F         	call	i2_check_msg	;wreg free
  9183  0019E8  0900               	iorlw	0
  9184  0019EA  B4D8               	btfsc	status,2,c
  9185                           
  9186                           ;messages.c: 252: }
  9187                           ;messages.c: 253: enter_sleep_mode();
  9188                           
  9189                           ;messages.c: 251: return;
  9190  0019EC  EC4D  F010         	call	_enter_sleep_mode	;wreg free
  9191  0019F0  0012               	return	
  9192  0019F2                     __end_of_SleepIfOkay:
  9193                           	opt stack 0
  9194                           pclatu	equ	0xFFB
  9195                           pclath	equ	0xFFA
  9196                           tblptru	equ	0xFF8
  9197                           tblptrh	equ	0xFF7
  9198                           tblptrl	equ	0xFF6
  9199                           tablat	equ	0xFF5
  9200                           prodh	equ	0xFF4
  9201                           prodl	equ	0xFF3
  9202                           intcon	equ	0xFF2
  9203                           postinc0	equ	0xFEE
  9204                           fsr0h	equ	0xFEA
  9205                           fsr0l	equ	0xFE9
  9206                           wreg	equ	0xFE8
  9207                           indf1	equ	0xFE7
  9208                           fsr1h	equ	0xFE2
  9209                           fsr1l	equ	0xFE1
  9210                           bsr	equ	0xFE0
  9211                           indf2	equ	0xFDF
  9212                           postinc2	equ	0xFDE
  9213                           postdec2	equ	0xFDD
  9214                           fsr2h	equ	0xFDA
  9215                           fsr2l	equ	0xFD9
  9216                           status	equ	0xFD8
  9217                           
  9218 ;; *************** function i2_in_low_int *****************
  9219 ;; Defined at:
  9220 ;;		line 33 in file "../src/interrupts.c"
  9221 ;; Parameters:    Size  Location     Type
  9222 ;;		None
  9223 ;; Auto vars:     Size  Location     Type
  9224 ;;		None
  9225 ;; Return value:  Size  Location     Type
  9226 ;;                  2    2[BANK0 ] int 
  9227 ;; Registers used:
  9228 ;;		wreg, status,2, status,0, cstack
  9229 ;; Tracked objects:
  9230 ;;		On entry : 0/0
  9231 ;;		On exit  : 0/0
  9232 ;;		Unchanged: 0/0
  9233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9234 ;;      Params:         0       2       0       0       0
  9235 ;;      Locals:         0       0       0       0       0
  9236 ;;      Temps:          0       0       0       0       0
  9237 ;;      Totals:         0       2       0       0       0
  9238 ;;Total ram usage:        2 bytes
  9239 ;; Hardware stack levels used:    1
  9240 ;; Hardware stack levels required when called:    1
  9241 ;; This function calls:
  9242 ;;		i2_in_high_int
  9243 ;; This function is called by:
  9244 ;;		_SleepIfOkay
  9245 ;; This function uses a non-reentrant model
  9246 ;;
  9247                           
  9248                           	psect	text56
  9249  001B5C                     __ptext56:
  9250                           	opt stack 0
  9251  001B5C                     i2_in_low_int:
  9252                           	opt stack 18
  9253                           
  9254                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  9255                           
  9256                           ;incstack = 0
  9257  001B5C  ACF2               	btfss	intcon,6,c	;volatile
  9258  001B5E  D008               	goto	i2l3925
  9259                           
  9260                           ;interrupts.c: 36: return (0);
  9261  001B60  0E00               	movlw	0
  9262  001B62  0100               	movlb	0	; () banked
  9263  001B64  0100               	movlb	0	; () banked
  9264  001B66  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9265  001B68  0E00               	movlw	0
  9266  001B6A  0100               	movlb	0	; () banked
  9267  001B6C  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9268  001B6E  0012               	return	
  9269  001B70                     i2l3925:
  9270  001B70  EC40  F010         	call	i2_in_high_int	;wreg free
  9271  001B74  0100               	movlb	0	; () banked
  9272  001B76  0100               	movlb	0	; () banked
  9273  001B78  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9274  001B7A  0100               	movlb	0	; () banked
  9275  001B7C  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  9276  001B7E  B4D8               	btfsc	status,2,c
  9277  001B80  D008               	goto	i2l3933
  9278                           
  9279                           ; BSR set to: 0
  9280                           ;interrupts.c: 38: return (0);
  9281  001B82  0E00               	movlw	0
  9282  001B84  0100               	movlb	0	; () banked
  9283  001B86  0100               	movlb	0	; () banked
  9284  001B88  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9285  001B8A  0E00               	movlw	0
  9286  001B8C  0100               	movlb	0	; () banked
  9287  001B8E  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9288  001B90  0012               	return	
  9289  001B92                     i2l3933:
  9290                           
  9291                           ; BSR set to: 0
  9292                           ;interrupts.c: 40: return (1);
  9293  001B92  0E00               	movlw	0
  9294  001B94  0100               	movlb	0	; () banked
  9295  001B96  0100               	movlb	0	; () banked
  9296  001B98  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9297  001B9A  0E01               	movlw	1
  9298  001B9C  0100               	movlb	0	; () banked
  9299  001B9E  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9300  001BA0  0012               	return	
  9301  001BA2                     __end_ofi2_in_low_int:
  9302                           	opt stack 0
  9303                           pclatu	equ	0xFFB
  9304                           pclath	equ	0xFFA
  9305                           tblptru	equ	0xFF8
  9306                           tblptrh	equ	0xFF7
  9307                           tblptrl	equ	0xFF6
  9308                           tablat	equ	0xFF5
  9309                           prodh	equ	0xFF4
  9310                           prodl	equ	0xFF3
  9311                           intcon	equ	0xFF2
  9312                           postinc0	equ	0xFEE
  9313                           fsr0h	equ	0xFEA
  9314                           fsr0l	equ	0xFE9
  9315                           wreg	equ	0xFE8
  9316                           indf1	equ	0xFE7
  9317                           fsr1h	equ	0xFE2
  9318                           fsr1l	equ	0xFE1
  9319                           bsr	equ	0xFE0
  9320                           indf2	equ	0xFDF
  9321                           postinc2	equ	0xFDE
  9322                           postdec2	equ	0xFDD
  9323                           fsr2h	equ	0xFDA
  9324                           fsr2l	equ	0xFD9
  9325                           status	equ	0xFD8
  9326                           
  9327 ;; *************** function i2_in_high_int *****************
  9328 ;; Defined at:
  9329 ;;		line 24 in file "../src/interrupts.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;		None
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;		None
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  2    0[BANK0 ] int 
  9336 ;; Registers used:
  9337 ;;		wreg, status,2
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9343 ;;      Params:         0       2       0       0       0
  9344 ;;      Locals:         0       0       0       0       0
  9345 ;;      Temps:          0       0       0       0       0
  9346 ;;      Totals:         0       2       0       0       0
  9347 ;;Total ram usage:        2 bytes
  9348 ;; Hardware stack levels used:    1
  9349 ;; This function calls:
  9350 ;;		Nothing
  9351 ;; This function is called by:
  9352 ;;		_SleepIfOkay
  9353 ;;		i2_in_low_int
  9354 ;; This function uses a non-reentrant model
  9355 ;;
  9356                           
  9357                           	psect	text57
  9358  002080                     __ptext57:
  9359                           	opt stack 0
  9360  002080                     i2_in_high_int:
  9361                           	opt stack 18
  9362                           
  9363                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9364                           
  9365                           ; BSR set to: 0
  9366                           ;incstack = 0
  9367  002080  0E00               	movlw	0
  9368  002082  AEF2               	btfss	intcon,7,c	;volatile
  9369  002084  0E01               	movlw	1
  9370  002086  0100               	movlb	0	; () banked
  9371  002088  0100               	movlb	0	; () banked
  9372  00208A  6FB6               	movwf	?i2_in_high_int& (0+255),b
  9373  00208C  0100               	movlb	0	; () banked
  9374  00208E  6BB7               	clrf	(?i2_in_high_int+1)& (0+255),b
  9375  002090  0012               	return	
  9376  002092                     __end_ofi2_in_high_int:
  9377                           	opt stack 0
  9378                           pclatu	equ	0xFFB
  9379                           pclath	equ	0xFFA
  9380                           tblptru	equ	0xFF8
  9381                           tblptrh	equ	0xFF7
  9382                           tblptrl	equ	0xFF6
  9383                           tablat	equ	0xFF5
  9384                           prodh	equ	0xFF4
  9385                           prodl	equ	0xFF3
  9386                           intcon	equ	0xFF2
  9387                           postinc0	equ	0xFEE
  9388                           fsr0h	equ	0xFEA
  9389                           fsr0l	equ	0xFE9
  9390                           wreg	equ	0xFE8
  9391                           indf1	equ	0xFE7
  9392                           fsr1h	equ	0xFE2
  9393                           fsr1l	equ	0xFE1
  9394                           bsr	equ	0xFE0
  9395                           indf2	equ	0xFDF
  9396                           postinc2	equ	0xFDE
  9397                           postdec2	equ	0xFDD
  9398                           fsr2h	equ	0xFDA
  9399                           fsr2l	equ	0xFD9
  9400                           status	equ	0xFD8
  9401                           
  9402 ;; *************** function i2_check_msg *****************
  9403 ;; Defined at:
  9404 ;;		line 222 in file "../src/messages.c"
  9405 ;; Parameters:    Size  Location     Type
  9406 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9407 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9408 ;; Auto vars:     Size  Location     Type
  9409 ;;		None
  9410 ;; Return value:  Size  Location     Type
  9411 ;;                  1    wreg      unsigned char 
  9412 ;; Registers used:
  9413 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9414 ;; Tracked objects:
  9415 ;;		On entry : 0/0
  9416 ;;		On exit  : 0/0
  9417 ;;		Unchanged: 0/0
  9418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9419 ;;      Params:         0       2       0       0       0
  9420 ;;      Locals:         0       0       0       0       0
  9421 ;;      Temps:          0       1       0       0       0
  9422 ;;      Totals:         0       3       0       0       0
  9423 ;;Total ram usage:        3 bytes
  9424 ;; Hardware stack levels used:    1
  9425 ;; This function calls:
  9426 ;;		Nothing
  9427 ;; This function is called by:
  9428 ;;		_SleepIfOkay
  9429 ;; This function uses a non-reentrant model
  9430 ;;
  9431                           
  9432                           	psect	text58
  9433  001EF2                     __ptext58:
  9434                           	opt stack 0
  9435  001EF2                     i2_check_msg:
  9436                           	opt stack 19
  9437                           
  9438                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9439                           
  9440                           ; BSR set to: 0
  9441                           ;incstack = 0
  9442  001EF2  0100               	movlb	0	; () banked
  9443  001EF4  EE20 F035          	lfsr	2,53
  9444  001EF8  0100               	movlb	0	; () banked
  9445  001EFA  51B6               	movf	i2check_msg@qptr& (0+255),w,b
  9446  001EFC  26D9               	addwf	fsr2l,f,c
  9447  001EFE  0100               	movlb	0	; () banked
  9448  001F00  51B7               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9449  001F02  22DA               	addwfc	fsr2h,f,c
  9450  001F04  50DF               	movf	indf2,w,c
  9451  001F06  0100               	movlb	0	; () banked
  9452  001F08  6FB8               	movwf	??i2_check_msg& (0+255),b
  9453  001F0A  0100               	movlb	0	; () banked
  9454  001F0C  51B8               	movf	??i2_check_msg& (0+255),w,b
  9455  001F0E  0D0D               	mullw	13
  9456  001F10  50F3               	movf	prodl,w,c
  9457  001F12  0100               	movlb	0	; () banked
  9458  001F14  0100               	movlb	0	; () banked
  9459  001F16  25B6               	addwf	i2check_msg@qptr& (0+255),w,b
  9460  001F18  6ED9               	movwf	fsr2l,c
  9461  001F1A  50F4               	movf	prodh,w,c
  9462  001F1C  0100               	movlb	0	; () banked
  9463  001F1E  0100               	movlb	0	; () banked
  9464  001F20  21B7               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9465  001F22  6EDA               	movwf	fsr2h,c
  9466  001F24  50DF               	movf	indf2,w,c
  9467  001F26  0012               	return	
  9468  001F28                     __end_ofi2_check_msg:
  9469                           	opt stack 0
  9470                           pclatu	equ	0xFFB
  9471                           pclath	equ	0xFFA
  9472                           tblptru	equ	0xFF8
  9473                           tblptrh	equ	0xFF7
  9474                           tblptrl	equ	0xFF6
  9475                           tablat	equ	0xFF5
  9476                           prodh	equ	0xFF4
  9477                           prodl	equ	0xFF3
  9478                           intcon	equ	0xFF2
  9479                           postinc0	equ	0xFEE
  9480                           fsr0h	equ	0xFEA
  9481                           fsr0l	equ	0xFE9
  9482                           wreg	equ	0xFE8
  9483                           indf1	equ	0xFE7
  9484                           fsr1h	equ	0xFE2
  9485                           fsr1l	equ	0xFE1
  9486                           bsr	equ	0xFE0
  9487                           indf2	equ	0xFDF
  9488                           postinc2	equ	0xFDE
  9489                           postdec2	equ	0xFDD
  9490                           fsr2h	equ	0xFDA
  9491                           fsr2l	equ	0xFD9
  9492                           status	equ	0xFD8
  9493                           
  9494 ;; *************** function _enter_sleep_mode *****************
  9495 ;; Defined at:
  9496 ;;		line 202 in file "../src/messages.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;		None               void
  9503 ;; Registers used:
  9504 ;;		None
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9510 ;;      Params:         0       0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0
  9512 ;;      Temps:          0       0       0       0       0
  9513 ;;      Totals:         0       0       0       0       0
  9514 ;;Total ram usage:        0 bytes
  9515 ;; Hardware stack levels used:    1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_SleepIfOkay
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text59
  9524  00209A                     __ptext59:
  9525                           	opt stack 0
  9526  00209A                     _enter_sleep_mode:
  9527                           	opt stack 19
  9528                           
  9529                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9530                           
  9531                           ; BSR set to: 0
  9532                           ;incstack = 0
  9533  00209A  8ED3               	bsf	4051,7,c	;volatile
  9534  00209C  0003               	sleep		;# 
  9535  00209E  0012               	return	
  9536  0020A0                     __end_of_enter_sleep_mode:
  9537                           	opt stack 0
  9538  0000                     pclatu	equ	0xFFB
  9539                           pclath	equ	0xFFA
  9540                           tblptru	equ	0xFF8
  9541                           tblptrh	equ	0xFF7
  9542                           tblptrl	equ	0xFF6
  9543                           tablat	equ	0xFF5
  9544                           prodh	equ	0xFF4
  9545                           prodl	equ	0xFF3
  9546                           intcon	equ	0xFF2
  9547                           postinc0	equ	0xFEE
  9548                           fsr0h	equ	0xFEA
  9549                           fsr0l	equ	0xFE9
  9550                           wreg	equ	0xFE8
  9551                           indf1	equ	0xFE7
  9552                           fsr1h	equ	0xFE2
  9553                           fsr1l	equ	0xFE1
  9554                           bsr	equ	0xFE0
  9555                           indf2	equ	0xFDF
  9556                           postinc2	equ	0xFDE
  9557                           postdec2	equ	0xFDD
  9558                           fsr2h	equ	0xFDA
  9559                           fsr2l	equ	0xFD9
  9560                           status	equ	0xFD8
  9561                           pclatu	equ	0xFFB
  9562                           pclath	equ	0xFFA
  9563                           tblptru	equ	0xFF8
  9564                           tblptrh	equ	0xFF7
  9565                           tblptrl	equ	0xFF6
  9566                           tablat	equ	0xFF5
  9567                           prodh	equ	0xFF4
  9568                           prodl	equ	0xFF3
  9569                           intcon	equ	0xFF2
  9570                           postinc0	equ	0xFEE
  9571                           fsr0h	equ	0xFEA
  9572                           fsr0l	equ	0xFE9
  9573                           wreg	equ	0xFE8
  9574                           indf1	equ	0xFE7
  9575                           fsr1h	equ	0xFE2
  9576                           fsr1l	equ	0xFE1
  9577                           bsr	equ	0xFE0
  9578                           indf2	equ	0xFDF
  9579                           postinc2	equ	0xFDE
  9580                           postdec2	equ	0xFDD
  9581                           fsr2h	equ	0xFDA
  9582                           fsr2l	equ	0xFD9
  9583                           status	equ	0xFD8
  9584                           
  9585                           	psect	param0
  9586  0000                     pclatu	equ	0xFFB
  9587                           pclath	equ	0xFFA
  9588                           tblptru	equ	0xFF8
  9589                           tblptrh	equ	0xFF7
  9590                           tblptrl	equ	0xFF6
  9591                           tablat	equ	0xFF5
  9592                           prodh	equ	0xFF4
  9593                           prodl	equ	0xFF3
  9594                           intcon	equ	0xFF2
  9595                           postinc0	equ	0xFEE
  9596                           fsr0h	equ	0xFEA
  9597                           fsr0l	equ	0xFE9
  9598                           wreg	equ	0xFE8
  9599                           indf1	equ	0xFE7
  9600                           fsr1h	equ	0xFE2
  9601                           fsr1l	equ	0xFE1
  9602                           bsr	equ	0xFE0
  9603                           indf2	equ	0xFDF
  9604                           postinc2	equ	0xFDE
  9605                           postdec2	equ	0xFDD
  9606                           fsr2h	equ	0xFDA
  9607                           fsr2l	equ	0xFD9
  9608                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         287
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51     102
    BANK0           128     50     106
    BANK1           256    117     247
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    i2c_lthread@i2cptr	PTR struct __i2c_thread_struct size(2) Largest target is 2
		 -> main@i2cthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    i2c_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_retrieve_buffer@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 35
		 -> main@ic(BANK1[35]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 35
		 -> NULL(NULL[0]), main@ic(BANK1[35]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@uc(BANK1[23]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_send_int_handler->_WriteUSART
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->i1_ToMainHigh_sendmsg
    i1_ToMainHigh_sendmsg->i1_send_msg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_int_handler_master_rx
    _i2c_int_handler->_i2c_int_handler_master_tx
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_uart_retrieve_buffer
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i2c_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                84    84      0   15729
                                             36 BANK1     81    81      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                        _i2c_lthread
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     966
                                              9 BANK1      8     0      8
               _uart_retrieve_buffer
 ---------------------------------------------------------------------------------
 (2) _uart_retrieve_buffer                                 9     5      4     322
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2850
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2161
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_lthread                                          9     1      8    3846
                                             26 BANK1      9     1      8
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                     11     9      2     257
                                              0 BANK1     11     9      2
 ---------------------------------------------------------------------------------
 (2) _i2c_master_recv                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2601
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    8309
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      22
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                8     8      0    5591
                                             26 COMRAM     8     8      0
                          _ReadUSART
                  _ToMainLow_sendmsg
               i1_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainHigh_sendmsg                                 4     1      3    2698
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2696
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2577
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2299
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6831
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6547
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    3231
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2859
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0       0
          _i2c_int_handler_master_rx
          _i2c_int_handler_master_tx
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_tx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_rx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
     _i2c_master_recv
     _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _uart_retrieve_buffer

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     i1_ToMainHigh_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_int_handler_master_rx
     _i2c_int_handler_master_tx
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     75      F7       6       96.5%
BITBANK0            80      0       0       3        0.0%
BANK0               80     32      6A       4       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      66       1       80.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FD      11        0.0%
DATA                 0      0     1FD      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
<<<<<<< HEAD
Symbol Table                                                                                   Tue Apr 01 15:17:41 2014
=======
Symbol Table                                                                                   Mon Mar 17 20:02:15 2014
>>>>>>> 8b453ca2904bb6ddc1f44b84ffcd82707b0e4488

                  main@uthread_data 01B5            _MQ_Main_Willing_to_block 0058  
             ?i2_ToMainHigh_sendmsg 00CC           __end_of_ToMainLow_recvmsg 1C6A  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 1FCC  
                      __CFG_CP0$OFF 000000                   i2recv_msg@msgtype 00C3  
                 i2recv_msg@tlength 00CA                                 l306 0D16  
                               l315 126C                                 l641 14F0  
                               l570 1F7E                                 l642 14F2  
                               l643 1500                                 l644 1502  
                               l637 14D0                                 l569 1F7C  
                               l593 1DFC                                 l595 1E14  
                               l596 1E16                                 l881 1FEE  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                               _buf 0034                      _FromMainLow_MQ 0116  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 0182                    ??_init_uart_recv 0184  
                   ReadTimer1@timer 0003   __end_of_i2c_int_handler_master_rx 0B7A  
 __end_of_i2c_int_handler_master_tx 09BE                 i2recv_msg@maxlength 00C2  
                              l1193 15AE                                l3321 1B4C  
                              l3313 1B2A                                l3335 1BD6  
                              l3441 0502                                l3611 17BA  
                              l3451 0596                                l3525 1DFE  
                              l3605 178E                                l3453 05E8  
                              l3561 14D2                                l3553 14BC  
                              l3705 1AA0                                l3633 1318  
                              l3625 12C2                                l3465 0690  
                              l3473 0786                                l3449 0544  
                              l3457 063A                                l3627 12EE  
                              l3467 06E2                                l3459 0652  
                              l3901 154C                                l3469 0734  
                              l3719 0D8A                                l3735 0E50  
                              l3903 155E                                l3809 11B4  
                              l3905 1566                                l3667 180A  
                              l3685 0FE6                                l3909 159A  
                              l3599 1762                                l3791 0C9A  
                              l3777 0B9C                                l3699 1A7C  
                              l3787 0C20                                l3893 13B6  
                              l3889 137A                                _LATB 000F8A  
                              u2877 1FF0                                i1l84 007A  
                   _FromMainHigh_MQ 0200                       __CFG_FCMEN$ON 000000  
              _uart_retrieve_buffer 1348                                _buff 0048  
            ?_block_on_To_msgqueues 0001                                _main 044C  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01BC                          i1_send_msg 13F2  
                              pclat 000FFA                         i2_check_msg 1EF2  
                              prodh 000FF4                                prodl 000FF3  
                              start 00C0                          i2_recv_msg 0E54  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 108E  
     __size_of_i2c_configure_master 0042                       ??_i2c_lthread 01A4  
         ToMainHigh_recvmsg@msgtype 019A                      send_msg@length 018E  
       __size_of_timer0_int_handler 008A                         _Delay1KTCYx 1FEA  
                             ?_main 0001                               _T0CON 000FD5  
                             _T1CON 000FCD                               i1l402 00F4  
                             i1l405 012C                     __end_of___lwmod 15B8  
                        i1memcpy@d1 0001                               i2l333 0AD8  
                             i1l397 042C                               i1l398 00E0  
                             i2l335 0AF4                               i1l655 1FDA  
                             i2l336 0B0E                               i2l344 07F8  
                             i2l329 09EE                               i2l347 0886  
                        i1memcpy@s1 0003         FromMainHigh_recvmsg@msgtype 00CE  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 00B6                          i2memcpy@s1 00B8  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 1BE6                               _count 005B  
      __end_ofi1_ToMainHigh_sendmsg 1FA8          ToMainLow_recvmsg@maxlength 019E  
           timer0_lthread@msgbuffer 0188                               tablat 000FF5  
             ?_uart_retrieve_buffer 0182                               status 000FD8  
          i2ToMainHigh_sendmsg@data 00CD                    __end_ofi1_memcpy 1D2E  
                  __end_ofi2_memcpy 1B16                      WriteUSART@data 0001  
                   __initialization 1DA8              ??i2_ToMainHigh_sendmsg 00CF  
                      __end_of_main 07A0                          _ReadTimer1 205C  
       __size_of_timer1_int_handler 0030          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0024       __size_of_FromMainHigh_recvmsg 0042  
             __size_ofi2_in_low_int 0046       __size_of_FromMainHigh_sendmsg 0036  
               __end_of_i2c_lthread 1348                              ??_main 01A6  
                   send_msg@msgtype 018F                       __activetblptr 000002  
                   send_msg@tlength 0193             ??_uart_recv_int_handler 001B  
                            i1l3123 142A                              i1l3203 0216  
                            i1l3107 1A24                              i1l3221 0256  
                            i1l3205 021C                              i1l3083 1D00  
                            i1l3243 02F0                              i1l3245 031E  
                            i1l3237 02C6                              i1l3261 03D6  
                            i1l3255 039C                              i1l3239 02D0  
                            i1l3191 01BA                              i1l3089 1D1C  
                            i1l3249 0360                              i1l3193 01CA  
                            i1l3273 0406                              i1l3179 0164  
                            i1l3291 0070                              i1l3285 0066  
                            i2l4003 1ADA                              i1l2963 200E  
                            i2l4009 1AFE                          _OpenTimer0 1F58  
                        _OpenTimer1 1DE2                      __CFG_WDTEN$OFF 000000  
                            i2l3351 1686                              i2l3345 167C  
                            i2l3359 1952                              i2l3377 198E  
                            i2l3835 0A0C                              i2l3933 1B92  
                            i2l3925 1B70                              i2l3837 0A24  
                            i2l3829 09C0                              i2l3853 0B40  
                            i2l3849 0B28                              i2l3865 086E  
                            i2l3857 07A2                              i2l3875 08F0  
                            i2l3883 0990                              i2l3877 0960  
                            i2l3973 0EC0                              i2l3949 10EA  
                            i2l3879 0978                              i2l3989 0F86  
                     ??_SleepIfOkay 00BA                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
                       ?i1_send_msg 000B                  timer0_lthread@tptr 0182  
         uart_recv_int_handler@data 0022                         ?i2_recv_msg 00C0  
                      i2_in_low_int 1B5C                         ?i2_send_msg 00C0  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 191C                     _i2c_master_recv 1192  
                   _i2c_master_send 0B7A                    OpenTimer0@config 0182  
                            _ic_ptr 00E8                           ??___lwmod 0186  
                     main@msgbuffer 01A7                    __end_of_init_i2c 1744  
                  OpenTimer1@config 0182                              _length 0054  
                            _memcpy 1A5A                              clear_0 1DAE  
                            clear_1 1DBA                              clear_2 1DC6  
                            clear_3 1DD2                              _uc_ptr 0065  
                            main@ic 01D4                              main@uc 01BD  
                  __end_of_recv_msg 0E54                           ??_in_main 0188  
                  __end_of_send_msg 108E               timer0_int_handler@val 00D8  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 0185  
          ToMainLow_recvmsg@msgtype 019A         ??_i2c_int_handler_master_rx 00B6  
       ??_i2c_int_handler_master_tx 00B6                __size_of_in_high_int 0012  
            ??_uart_retrieve_buffer 0186                  i2c_lthread@msgtype 019E  
                   __CFG_FOSC$HSPLL 000000                          __accesstop 0080  
           __end_of__initialization 1DD8          __end_of_ToMainHigh_recvmsg 1CAC  
        __end_of_ToMainHigh_sendmsg 1E86      __size_of_uart_send_int_handler 0068  
     __end_of_uart_send_int_handler 1A5A         __end_of_init_timer1_lthread 2038  
               __end_of_SleepIfOkay 19F2                         _i2c_lthread 1274  
                        _WriteUSART 2000                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 0012                         ?_ReadTimer1 0001  
                __size_of_check_msg 0036                i1_ToMainHigh_sendmsg 1F82  
                 __end_of_ReadUSART 1FEA           timer0_int_handler@msgtype 00D6  
               __size_ofi1_send_msg 00AA                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 16BC         __end_of_InterruptHandlerLow 00C0  
                         ?i2_memcpy 00B6                       _ToMainHigh_MQ 0080  
               __size_ofi2_recv_msg 0136                    _enter_sleep_mode 209A  
               __size_ofi2_send_msg 0104                timer1_lthread@length 01A0  
                     ReadUSART@data 0001                   __end_of_OpenUSART 152E  
                     check_msg@qptr 0182                timer1_lthread@retval 01A5  
           ??_block_on_To_msgqueues 0188                __size_of_init_queues 006E  
                        __pbssBANK0 0080                          __pbssBANK1 0100  
                        __pbssBANK2 0200                         ?_OpenTimer0 0001  
                       ?_OpenTimer1 0001                          __pnvCOMRAM 0065  
           __end_of_i2c_int_handler 1988                        ?i2_check_msg 00B6  
           __end_of_i2c_master_recv 1274             __end_of_i2c_master_send 0D1E  
                timer1_lthread@tptr 019C           _i2c_int_handler_master_rx 09BE  
         _i2c_int_handler_master_tx 07A0               uart_retrieve_buffer@i 0189  
             ?i1_ToMainHigh_sendmsg 0017                   recv_msg@maxlength 018E  
                   recv_msg@msgtype 018F                     recv_msg@tlength 0196  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 00B8  
                           ?_memcpy 0182                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 00B8                       ??_WriteTimer1 0003  
           __size_of_timer0_lthread 0012             __size_of_timer1_lthread 0072  
               _sendToMotorPIC_flag 0061        __end_of_i2c_configure_master 1C28  
                        ??i1_memcpy 0007                          _bufferFlag 0114  
                        ??i2_memcpy 00BC                    i1send_msg@length 000D  
                     i2_in_high_int 2080                             _SSPCON1 000FC6  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 1EBC  
                         ?_init_i2c 0182                         _SleepIfOkay 1988  
                         ?_recv_msg 018C                           _ADCResult 0050  
                        _in_low_int 1B16                             __Hparam 0000  
                         ?_send_msg 018C                             __Lparam 0000  
        __end_of_timer0_int_handler 1642                         ?_WriteUSART 0001  
                  init_uart_recv@uc 0182                             ___lwmod 152E  
                   __CFG_STVREN$OFF 000000                             __pcinit 1DA8  
                   __size_of_memcpy 005E                          _init_queue 17C2  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 044C  
                           __ptext1 1D6C                             __ptext2 1348  
                           __ptext3 183C                             __ptext4 152E  
                           __ptext5 1E1A                             __ptext6 2014  
                           __ptext7 1D2E                             __ptext8 2026  
                           __ptext9 18AE                           _T0CONbits 000FD5  
                           _in_main 1BA2                           _T1CONbits 000FCD  
               __end_of_WriteTimer0 2080                 __end_of_WriteTimer1 205C  
                    ?i2_in_high_int 00B6                             _msgtype 005F  
     uart_retrieve_buffer@msgbuffer 0184                             _voltage 004D  
                    __pintcode_body 1642        __end_of_FromMainHigh_recvmsg 1CEE  
              end_of_initialization 1DD8             timer1_lthread@msgbuffer 01A2  
      __end_of_FromMainHigh_sendmsg 1E50      __size_of_uart_recv_int_handler 0388  
        FromMainHigh_sendmsg@length 019B                             memcpy@d 0188  
                           memcpy@n 0186                             memcpy@s 018A  
          i1ToMainHigh_sendmsg@data 0018       __end_of_uart_recv_int_handler 044C  
            uart_recv_int_handler@i 0020                          ??_init_i2c 0184  
                     __Lmediumconst 0000                             int_func 1642  
                      ??i1_send_msg 0011                       ?_uart_lthread 018B  
           __size_of_init_uart_recv 003E                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 00C7                    ?_i2c_master_recv 0001  
                  ?_i2c_master_send 0182                          ??_recv_msg 0193  
                      ??i2_send_msg 00C6                          ??_send_msg 0192  
        __end_of_timer1_int_handler 1F58                           _RCSTAbits 000FAB  
            ??i1_ToMainHigh_sendmsg 001A                             postdec2 000FDD  
                           postinc0 000FEE                             postinc2 000FDE  
         ToMainHigh_sendmsg@msgtype 0198       __size_ofi2_ToMainHigh_sendmsg 0036  
                    _last_reg_recvd 005C                  __end_ofi1_send_msg 149C  
       FromMainHigh_sendmsg@msgtype 0198                           _TRISCbits 000F94  
                __end_ofi2_recv_msg 0F8A                  __end_ofi2_send_msg 1192  
               __size_of_WriteUSART 0014       FromMainHigh_recvmsg@maxlength 00D2  
          timer1_int_handler@result 001C                      ??_uart_lthread 0193  
                 main@slave_address 01B4                           _TXSTAbits 000FAC  
                        main@length 01BB                         ?_in_low_int 0184  
             timer0_lthread@msgtype 0184                _i2c_configure_master 1BE6  
                      ?_i2c_lthread 019C                __size_ofi2_check_msg 0036  
          __end_of_enter_sleep_mode 20A0                        ??_ReadTimer1 0003  
                _ToMainHigh_recvmsg 1C6A                           i1memcpy@d 0007  
                _ToMainHigh_sendmsg 1E50                           i1memcpy@n 0005  
                         i1memcpy@s 0009                         _BAUDCONbits 000FB8  
                    _timer0_lthread 2014                         ?_init_queue 0182  
                         i2memcpy@d 00BC                         _WriteTimer0 206E  
                       _WriteTimer1 204A                           i2memcpy@n 00BA  
                         i2memcpy@s 00BE                      _timer1_lthread 183C  
                    __end_of_memcpy 1AB8                   _enable_interrupts 2092  
              __size_of_Delay1KTCYx 0016  __size_of_i2c_int_handler_master_rx 01BC  
__size_of_i2c_int_handler_master_tx 021E                 ?_ToMainHigh_recvmsg 019A  
                   ??i2_in_high_int 00B8                 ?_ToMainHigh_sendmsg 0198  
                ?_enable_interrupts 0001                 start_initialization 1DA8  
                     ??_in_high_int 0184                           _ReadUSART 1FCC  
     uart_recv_int_handler@checkSum 001F                       _checksum_flag 005A  
                 __size_ofi1_memcpy 0040         i1ToMainHigh_sendmsg@msgtype 0017  
                 __size_ofi2_memcpy 005E                 ??_enable_interrupts 0182  
                      ??_OpenTimer0 0182                        ??_OpenTimer1 0182  
    __size_of_block_on_To_msgqueues 007E                  __end_of_ReadTimer1 206E  
     __end_of_block_on_To_msgqueues 17C2       __size_of_uart_retrieve_buffer 00AA  
                         _OpenUSART 149C        __end_of_InterruptHandlerHigh 16C4  
                        init_i2c@ic 0182                ??_ToMainHigh_recvmsg 019E  
              ??_ToMainHigh_sendmsg 019B               ?_i2c_configure_master 0001  
                 i2c_lthread@i2cptr 019C               _uart_send_int_handler 19F2  
            __end_of_timer0_lthread 2026              __end_of_timer1_lthread 18AE  
         __end_of_enable_interrupts 209A                            ??_memcpy 0188  
             timer1_lthread@msgtype 019E                _FromMainHigh_recvmsg 1CAC  
              _FromMainHigh_sendmsg 1E1A        __size_of_init_timer1_lthread 0012  
                 i2c_lthread@length 01A0                  __end_of_OpenTimer0 1F82  
                __end_of_OpenTimer1 1E1A                         __pbssCOMRAM 0034  
                        ?_ReadUSART 0001                       ??_init_queues 0186  
                     __pcstackBANK0 00B6                       __pcstackBANK1 0182  
               __size_of_in_low_int 0046                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 0182            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 00A8                 __end_of_in_high_int 204A  
                        ?_OpenUSART 0182                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 019C                        _ToMainLow_MQ 014C  
               __size_of_init_queue 007A                      _init_uart_recv 1D2E  
                         _check_msg 1E86                           __pnvBANK0 00E8  
                 __size_of_init_i2c 0080                        recv_msg@data 0191  
                      ??_WriteUSART 0001                        recv_msg@qmsg 0198  
                      recv_msg@slot 0195                        recv_msg@qptr 018C  
        i2ToMainHigh_sendmsg@length 00CF                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 0104  
                   ?_timer0_lthread 0182                            ?___lwmod 0182  
             ?_FromMainHigh_recvmsg 00CE                     ?_timer1_lthread 019C  
             ?_FromMainHigh_sendmsg 0198                         __pintcodelo 0018  
                         _bufferLen 0052              ToMainHigh_recvmsg@data 019C  
              __end_of_uart_lthread 1DA8                            ?_in_main 0186  
                 WriteTimer0@timer0 00B6                  _timer0_int_handler 15B8  
                 WriteTimer1@timer1 0001                 uart_lthread@msgtype 018D  
             ToMainLow_sendmsg@data 0018          uart_retrieve_buffer@length 0182  
               ?_timer0_int_handler 0001                  __end_of_WriteUSART 2014  
                  uart_lthread@uptr 018B              __end_of_init_uart_recv 1D6C  
               __end_of_init_queues 191C               i2c_master_recv@length 0182  
            ??_i2c_configure_master 0182                     i2check_msg@qptr 00B6  
                        ?_check_msg 0182                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                           _msgbuffer 0100  
                     ?i2_in_low_int 00B8                            _PIR1bits 000F9E  
                          i2u273_45 0AB8                            i2u276_45 08D2  
            ?_uart_send_int_handler 0001              ToMainHigh_sendmsg@data 0199  
                          _RCONbits 000FD0      uart_recv_int_handler@bufLength 001E  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 00D3  
              __size_of_i2c_lthread 00D4               i2c_master_send@length 018A  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                timer0_lthread@length 0186  
                _timer1_int_handler 1F28                            i1_memcpy 1CEE  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1AB8                timer0_lthread@msgval 018A  
          FromMainHigh_recvmsg@data 00D0                         _in_high_int 2038  
                      send_msg@data 0190                        send_msg@qmsg 0196  
                      send_msg@slot 0195                        send_msg@qptr 018C  
                        _ADCBuffer0 003E                          _ADCBuffer1 0043  
      __end_ofi2_ToMainHigh_sendmsg 1EF2               uart_lthread@msgbuffer 0191  
               ?_timer1_int_handler 0001                     ?_init_uart_recv 0182  
                       ??_OpenUSART 0184                     OpenUSART@config 0187  
                    ??i2_in_low_int 00BA                            __Hparam0 0000  
             _uart_recv_int_handler 00C4                        ??_in_low_int 0186  
                          __Lparam0 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 00D2              ??_FromMainHigh_sendmsg 019B  
              ??_timer1_int_handler 001B       __size_ofi1_ToMainHigh_sendmsg 0026  
          __size_of_i2c_int_handler 006C                         _length_flag 005D  
                ??_enter_sleep_mode 00B6            __size_of_i2c_master_recv 00E2  
          __size_of_i2c_master_send 01A4                    __size_of___lwmod 008A  
                      ??_init_queue 0184                        ?_WriteTimer0 00B6  
                      ?_WriteTimer1 0001            FromMainHigh_sendmsg@data 0199  
           ToMainLow_sendmsg@length 001A                   main@t0thread_data 01B2  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 00C3         ToMainHigh_recvmsg@maxlength 019E  
                 i2send_msg@tlength 00C7             init_timer1_lthread@tptr 0182  
                       _init_queues 18AE                  __end_of_in_low_int 1B5C  
              _sendToSensorPIC_flag 0062                            __ptext10 17C2  
                          __ptext11 16C4                            __ptext20 1BA2  
                          __ptext12 1274                            __ptext21 1B16  
                          __ptext13 0B7A                            __ptext30 1DE2  
                          __ptext22 2038                            __ptext14 1192  
                          __ptext31 1F58                            __ptext23 1E86  
                          __ptext15 1E50                            __ptext40 1FA8  
                          __ptext24 1FEA                            __ptext16 0F8A  
                          __ptext41 13F2                            __ptext33 19F2  
                          __ptext25 1C28                            __ptext17 1BE6  
                          __ptext50 0E54                            __ptext42 1CEE  
                          __ptext34 2000                            __ptext26 1C6A  
                          __ptext18 2092                            __ptext51 1AB8  
                          __ptext43 205C                            __ptext35 00C4  
                          __ptext27 0D1E                            __ptext19 1744  
                          __ptext52 191C                            __ptext36 1F82  
                          __ptext28 1A5A                            __ptext53 07A0  
                          __ptext45 15B8                            __ptext37 1FCC  
                          __ptext29 149C                            __ptext54 09BE  
                          __ptext46 1EBC                            __ptext38 1F28  
                          __ptext55 1988                            __ptext47 108E  
                          __ptext39 204A                            __ptext56 1B5C  
                          __ptext48 206E                            __ptext57 2080  
                          __ptext49 1CAC                            __ptext58 1EF2  
                          __ptext59 209A                        _SSP1CON2bits 000FC5  
                    i1send_msg@data 000F      i2c_configure_master@slave_addr 0182  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                  uart_lthread@length 018F  
          timer0_int_handler@length 00D4                        _sent_i2c_msg 0063  
                          _init_i2c 16C4                 _init_timer1_lthread 2026  
                     __size_of_main 0354                       ??i2_check_msg 00B8  
                 main@t1thread_data 01B9                         ??_check_msg 0184  
                __end_of_init_queue 183C                __size_of_SleepIfOkay 006A  
                          _recv_msg 0D1E                            _msg_flag 005E  
                          _send_msg 0F8A                            _uartData 0064  
                    init_queue@qptr 0182               __size_of_uart_lthread 003C  
                    i2recv_msg@data 00C5                      i2recv_msg@qmsg 00CC  
                     ??_Delay1KTCYx 0182                      i2recv_msg@slot 00C9  
                    i2recv_msg@qptr 00C0        __end_of_uart_retrieve_buffer 13F2  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0182  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                main@i2cthread_data 01B7                      OpenUSART@spbrg 0182  
                          memcpy@d1 0182                            memcpy@s1 0184  
             __end_ofi2_in_high_int 2092                    i2send_msg@length 00C2  
                          intlevel1 0000                            intlevel2 0000  
                      _msgtype_flag 0060                ?_InterruptHandlerLow 0001  
                  ___lwmod@dividend 0182              ?_uart_recv_int_handler 0001  
                      _uart_lthread 1D6C               _block_on_To_msgqueues 1744  
                  ??_timer0_lthread 018A         __size_of_ToMainHigh_recvmsg 0042  
       __size_of_ToMainHigh_sendmsg 0036                       _previousValue 0056  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 01A4  
       i2ToMainHigh_sendmsg@msgtype 00CC            ToMainHigh_sendmsg@length 019B  
               __end_ofi2_check_msg 1F28                i2_ToMainHigh_sendmsg 1EBC  
             ??_init_timer1_lthread 0184              ??_InterruptHandlerHigh 00DA  
                 _ToMainLow_recvmsg 1C28                   _ToMainLow_sendmsg 1FA8  
                   ___lwmod@divisor 0184                __end_ofi2_in_low_int 1BA2  
                ?_ToMainLow_recvmsg 019A                 __end_of_Delay1KTCYx 2000  
                 ??_i2c_int_handler 00BA                     ___lwmod@counter 0187  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_recv 0182  
                 ??_i2c_master_send 0184                  i2c_master_send@msg 0182  
                       _SSPCON2bits 000FC5          ?_i2c_int_handler_master_rx 0001  
        ?_i2c_int_handler_master_tx 0001                i2c_lthread@msgbuffer 01A2  
                    i2send_msg@data 00C4               ??_InterruptHandlerLow 0023  
               ??_ToMainLow_recvmsg 019E                      i2send_msg@qmsg 00CA  
                    i2send_msg@slot 00C9                      i2send_msg@qptr 00C0  
               ??_ToMainLow_sendmsg 001A          i1ToMainHigh_sendmsg@length 001A  
           ??_uart_send_int_handler 0002                    i2c_master_send@i 018B  
                      _USART_Status 0059  
