

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Wed Mar 12 13:39:28 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    55                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	param0,global,class=BANK0,space=1,delta=1
    75  0000                     _ADCON0	set	4034
    76  0000                     _ADCON0bits	set	4034
    77  0000                     _ADCON1	set	4033
    78  0000                     _ADCON2	set	4032
    79  0000                     _ADRESH	set	4036
    80  0000                     _ADRESL	set	4035
    81  0000                     _BAUDCONbits	set	4024
    82  0000                     _INTCONbits	set	4082
    83  0000                     _IPR1bits	set	3999
    84  0000                     _LATB	set	3978
    85  0000                     _OSCCON	set	4051
    86  0000                     _OSCCONbits	set	4051
    87  0000                     _OSCTUNEbits	set	3995
    88  0000                     _PIE1bits	set	3997
    89  0000                     _PIR1bits	set	3998
    90  0000                     _RCONbits	set	4048
    91  0000                     _RCREG	set	4014
    92  0000                     _RCSTA	set	4011
    93  0000                     _RCSTAbits	set	4011
    94  0000                     _SPBRG	set	4015
    95  0000                     _SPBRGH	set	4016
    96  0000                     _SSP1CON2bits	set	4037
    97  0000                     _SSPADD	set	4040
    98  0000                     _SSPBUF	set	4041
    99  0000                     _SSPCON1	set	4038
   100  0000                     _SSPCON2bits	set	4037
   101  0000                     _T0CON	set	4053
   102  0000                     _T0CONbits	set	4053
   103  0000                     _T1CON	set	4045
   104  0000                     _T1CONbits	set	4045
   105  0000                     _TMR0H	set	4055
   106  0000                     _TMR0L	set	4054
   107  0000                     _TMR1H	set	4047
   108  0000                     _TMR1L	set	4046
   109  0000                     _TRISB	set	3987
   110  0000                     _TRISCbits	set	3988
   111  0000                     _TXSTA	set	4012
   112  0000                     _TXSTAbits	set	4012
   113                           
   114                           	psect	nvCOMRAM
   115  000067                     __pnvCOMRAM:
   116                           	opt stack 0
   117  000067                     _uc_ptr:
   118                           	opt stack 0
   119  000067                     	ds	2
   120                           
   121                           	psect	nvBANK0
   122  0000E8                     __pnvBANK0:
   123                           	opt stack 0
   124  0000E8                     _ic_ptr:
   125                           	opt stack 0
   126  0000E8                     	ds	2
   127                           
   128                           ; #config settings
   129  0000                     
   130                           	psect	cinit
   131  001A9C                     __pcinit:
   132                           	opt stack 0
   133  001A9C                     start_initialization:
   134                           	opt stack 0
   135  001A9C                     __initialization:
   136                           	opt stack 0
   137                           
   138                           ; Clear objects allocated to BANK2 (54 bytes)
   139  001A9C  EE02  F000         	lfsr	0,__pbssBANK2
   140  001AA0  0E36               	movlw	54
   141  001AA2                     clear_0:
   142  001AA2  6AEE               	clrf	postinc0,c
   143  001AA4  06E8               	decf	wreg,f,c
   144  001AA6  E1FD               	bnz	clear_0
   145                           
   146                           ; Clear objects allocated to BANK1 (128 bytes)
   147  001AA8  EE01  F000         	lfsr	0,__pbssBANK1
   148  001AAC  0E80               	movlw	128
   149  001AAE                     clear_1:
   150  001AAE  6AEE               	clrf	postinc0,c
   151  001AB0  06E8               	decf	wreg,f,c
   152  001AB2  E1FD               	bnz	clear_1
   153                           
   154                           ; Clear objects allocated to BANK0 (54 bytes)
   155  001AB4  EE00  F080         	lfsr	0,__pbssBANK0
   156  001AB8  0E36               	movlw	54
   157  001ABA                     clear_2:
   158  001ABA  6AEE               	clrf	postinc0,c
   159  001ABC  06E8               	decf	wreg,f,c
   160  001ABE  E1FD               	bnz	clear_2
   161                           
   162                           ; Clear objects allocated to COMRAM (50 bytes)
   163  001AC0  EE00  F035         	lfsr	0,__pbssCOMRAM
   164  001AC4  0E32               	movlw	50
   165  001AC6                     clear_3:
   166  001AC6  6AEE               	clrf	postinc0,c
   167  001AC8  06E8               	decf	wreg,f,c
   168  001ACA  E1FD               	bnz	clear_3
   169  001ACC                     end_of_initialization:
   170                           	opt stack 0
   171  001ACC                     __end_of__initialization:
   172                           	opt stack 0
   173  001ACC  0E00               	movlw	low (__Lmediumconst shr (0+16))
   174  001ACE  6EF8               	movwf	tblptru,c
   175  001AD0  0100               	movlb	0
   176  001AD2  EF60  F000         	goto	_main	;jump to C main() function
   177                           tblptru	equ	0xFF8
   178                           postinc0	equ	0xFEE
   179                           wreg	equ	0xFE8
   180                           
   181                           	psect	bssCOMRAM
   182  000035                     __pbssCOMRAM:
   183                           	opt stack 0
   184  000035                     _buf:
   185                           	opt stack 0
   186  000035                     	ds	10
   187  00003F                     _ADCBuffer0:
   188                           	opt stack 0
   189  00003F                     	ds	5
   190  000044                     _ADCBuffer1:
   191                           	opt stack 0
   192  000044                     	ds	5
   193  000049                     _buff:
   194                           	opt stack 0
   195  000049                     	ds	5
   196  00004E                     _voltage:
   197                           	opt stack 0
   198  00004E                     	ds	3
   199  000051                     _ADCResult:
   200                           	opt stack 0
   201  000051                     	ds	2
   202  000053                     _bufferFlag:
   203                           	opt stack 0
   204  000053                     	ds	2
   205  000055                     _bufferLen:
   206                           	opt stack 0
   207  000055                     	ds	2
   208  000057                     _length:
   209                           	opt stack 0
   210  000057                     	ds	2
   211  000059                     _previousValue:
   212                           	opt stack 0
   213  000059                     	ds	2
   214  00005B                     _MQ_Main_Willing_to_block:
   215                           	opt stack 0
   216  00005B                     	ds	1
   217  00005C                     _USART_Status:
   218                           	opt stack 0
   219  00005C                     	ds	1
   220  00005D                     _checksum_flag:
   221                           	opt stack 0
   222  00005D                     	ds	1
   223  00005E                     _count:
   224                           	opt stack 0
   225  00005E                     	ds	1
   226  00005F                     _last_reg_recvd:
   227                           	opt stack 0
   228  00005F                     	ds	1
   229  000060                     _length_flag:
   230                           	opt stack 0
   231  000060                     	ds	1
   232  000061                     _msgtype:
   233                           	opt stack 0
   234  000061                     	ds	1
   235  000062                     _msgtype_flag:
   236                           	opt stack 0
   237  000062                     	ds	1
   238  000063                     _sendToMotorPIC_flag:
   239                           	opt stack 0
   240  000063                     	ds	1
   241  000064                     _sendToSensorPIC_flag:
   242                           	opt stack 0
   243  000064                     	ds	1
   244  000065                     _sent_i2c_msg:
   245                           	opt stack 0
   246  000065                     	ds	1
   247  000066                     _uartData:
   248                           	opt stack 0
   249  000066                     	ds	1
   250                           tblptru	equ	0xFF8
   251                           postinc0	equ	0xFEE
   252                           wreg	equ	0xFE8
   253                           
   254                           	psect	bssBANK0
   255  000080                     __pbssBANK0:
   256                           	opt stack 0
   257  000080                     _ToMainHigh_MQ:
   258                           	opt stack 0
   259  000080                     	ds	54
   260                           tblptru	equ	0xFF8
   261                           postinc0	equ	0xFEE
   262                           wreg	equ	0xFE8
   263                           
   264                           	psect	bssBANK1
   265  000100                     __pbssBANK1:
   266                           	opt stack 0
   267  000100                     _msgbuffer:
   268                           	opt stack 0
   269  000100                     	ds	20
   270  000114                     _FromMainLow_MQ:
   271                           	opt stack 0
   272  000114                     	ds	54
   273  00014A                     _ToMainLow_MQ:
   274                           	opt stack 0
   275  00014A                     	ds	54
   276                           tblptru	equ	0xFF8
   277                           postinc0	equ	0xFEE
   278                           wreg	equ	0xFE8
   279                           
   280                           	psect	bssBANK2
   281  000200                     __pbssBANK2:
   282                           	opt stack 0
   283  000200                     _FromMainHigh_MQ:
   284                           	opt stack 0
   285  000200                     	ds	54
   286                           tblptru	equ	0xFF8
   287                           postinc0	equ	0xFEE
   288                           wreg	equ	0xFE8
   289                           
   290                           	psect	cstackBANK1
   291  000180                     __pcstackBANK1:
   292                           	opt stack 0
   293  000180                     ??_SetChanADC:
   294  000180                     ?_in_high_int:
   295                           	opt stack 0
   296  000180                     i2c_configure_master@slave_addr:
   297                           	opt stack 0
   298  000180                     i2c_master_recv@length:
   299                           	opt stack 0
   300  000180                     OpenADC@config2:
   301                           	opt stack 0
   302  000180                     OpenTimer0@config:
   303                           	opt stack 0
   304  000180                     OpenTimer1@config:
   305                           	opt stack 0
   306  000180                     Delay1KTCYx@unit:
   307                           	opt stack 0
   308  000180                     init_queue@qptr:
   309                           	opt stack 0
   310  000180                     check_msg@qptr:
   311                           	opt stack 0
   312  000180                     i2c_master_send@msg:
   313                           	opt stack 0
   314  000180                     init_i2c@ic:
   315                           	opt stack 0
   316  000180                     init_uart_recv@uc:
   317                           	opt stack 0
   318  000180                     init_timer1_lthread@tptr:
   319                           	opt stack 0
   320  000180                     OpenUSART@spbrg:
   321                           	opt stack 0
   322  000180                     memcpy@d1:
   323                           	opt stack 0
   324                           
   325                           ; 2 bytes @ 0x0
   326  000180                     	ds	1
   327  000181                     OpenADC@portconfig:
   328                           	opt stack 0
   329  000181                     SetChanADC@channel:
   330                           	opt stack 0
   331                           
   332                           ; 1 bytes @ 0x1
   333  000181                     	ds	1
   334  000182                     ??_OpenADC:
   335  000182                     ??_OpenUSART:
   336  000182                     ??_init_queue:
   337  000182                     ??_check_msg:
   338  000182                     ??_i2c_master_send:
   339  000182                     ?_in_low_int:
   340                           	opt stack 0
   341  000182                     memcpy@s1:
   342                           	opt stack 0
   343                           
   344                           ; 2 bytes @ 0x2
   345  000182                     	ds	1
   346  000183                     init_queue@i:
   347                           	opt stack 0
   348                           
   349                           ; 1 bytes @ 0x3
   350  000183                     	ds	1
   351  000184                     ??_init_queues:
   352  000184                     ?_in_main:
   353                           	opt stack 0
   354  000184                     OpenADC@config:
   355                           	opt stack 0
   356  000184                     memcpy@n:
   357                           	opt stack 0
   358                           
   359                           ; 2 bytes @ 0x4
   360  000184                     	ds	1
   361  000185                     OpenUSART@config:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x5
   365  000185                     	ds	1
   366  000186                     ??_block_on_To_msgqueues:
   367  000186                     memcpy@d:
   368                           	opt stack 0
   369                           
   370                           ; 2 bytes @ 0x6
   371  000186                     	ds	2
   372  000188                     i2c_master_send@length:
   373                           	opt stack 0
   374  000188                     memcpy@s:
   375                           	opt stack 0
   376                           
   377                           ; 2 bytes @ 0x8
   378  000188                     	ds	1
   379  000189                     i2c_master_send@i:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x9
   383  000189                     	ds	1
   384  00018A                     send_msg@qptr:
   385                           	opt stack 0
   386  00018A                     recv_msg@qptr:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0xA
   390  00018A                     	ds	2
   391  00018C                     send_msg@length:
   392                           	opt stack 0
   393  00018C                     recv_msg@maxlength:
   394                           	opt stack 0
   395                           
   396                           ; 1 bytes @ 0xC
   397  00018C                     	ds	1
   398  00018D                     send_msg@msgtype:
   399                           	opt stack 0
   400  00018D                     recv_msg@msgtype:
   401                           	opt stack 0
   402                           
   403                           ; 2 bytes @ 0xD
   404  00018D                     	ds	1
   405  00018E                     send_msg@data:
   406                           	opt stack 0
   407                           
   408                           ; 2 bytes @ 0xE
   409  00018E                     	ds	1
   410  00018F                     recv_msg@data:
   411                           	opt stack 0
   412                           
   413                           ; 2 bytes @ 0xF
   414  00018F                     	ds	1
   415  000190                     ??_send_msg:
   416                           
   417                           ; 0 bytes @ 0x10
   418  000190                     	ds	1
   419  000191                     ??_recv_msg:
   420  000191                     send_msg@tlength:
   421                           	opt stack 0
   422                           
   423                           ; 2 bytes @ 0x11
   424  000191                     	ds	2
   425  000193                     send_msg@slot:
   426                           	opt stack 0
   427  000193                     recv_msg@slot:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x13
   431  000193                     	ds	1
   432  000194                     send_msg@qmsg:
   433                           	opt stack 0
   434  000194                     recv_msg@tlength:
   435                           	opt stack 0
   436                           
   437                           ; 2 bytes @ 0x14
   438  000194                     	ds	2
   439  000196                     ToMainHigh_sendmsg@msgtype:
   440                           	opt stack 0
   441  000196                     recv_msg@qmsg:
   442                           	opt stack 0
   443                           
   444                           ; 2 bytes @ 0x16
   445  000196                     	ds	1
   446  000197                     ToMainHigh_sendmsg@data:
   447                           	opt stack 0
   448                           
   449                           ; 2 bytes @ 0x17
   450  000197                     	ds	1
   451  000198                     ToMainLow_recvmsg@msgtype:
   452                           	opt stack 0
   453  000198                     ToMainHigh_recvmsg@msgtype:
   454                           	opt stack 0
   455                           
   456                           ; 2 bytes @ 0x18
   457  000198                     	ds	1
   458  000199                     ToMainHigh_sendmsg@length:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x19
   462  000199                     	ds	1
   463  00019A                     ToMainLow_recvmsg@data:
   464                           	opt stack 0
   465  00019A                     ToMainHigh_recvmsg@data:
   466                           	opt stack 0
   467  00019A                     i2c_lthread@i2cptr:
   468                           	opt stack 0
   469                           
   470                           ; 2 bytes @ 0x1A
   471  00019A                     	ds	2
   472  00019C                     ToMainLow_recvmsg@maxlength:
   473                           	opt stack 0
   474  00019C                     ToMainHigh_recvmsg@maxlength:
   475                           	opt stack 0
   476  00019C                     i2c_lthread@msgtype:
   477                           	opt stack 0
   478                           
   479                           ; 2 bytes @ 0x1C
   480  00019C                     	ds	2
   481  00019E                     i2c_lthread@length:
   482                           	opt stack 0
   483                           
   484                           ; 2 bytes @ 0x1E
   485  00019E                     	ds	2
   486  0001A0                     i2c_lthread@msgbuffer:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x20
   490  0001A0                     	ds	2
   491  0001A2                     ??_i2c_lthread:
   492                           
   493                           ; 0 bytes @ 0x22
   494  0001A2                     	ds	1
   495  0001A3                     ??_main:
   496                           
   497                           ; 0 bytes @ 0x23
   498  0001A3                     	ds	2
   499  0001A5                     main@msgbuffer:
   500                           	opt stack 0
   501                           
   502                           ; 11 bytes @ 0x25
   503  0001A5                     	ds	11
   504  0001B0                     main@config1:
   505                           	opt stack 0
   506                           
   507                           ; 1 bytes @ 0x30
   508  0001B0                     	ds	1
   509  0001B1                     main@config2:
   510                           	opt stack 0
   511                           
   512                           ; 1 bytes @ 0x31
   513  0001B1                     	ds	1
   514  0001B2                     main@portconfig:
   515                           	opt stack 0
   516                           
   517                           ; 1 bytes @ 0x32
   518  0001B2                     	ds	1
   519  0001B3                     main@slave_address:
   520                           	opt stack 0
   521                           
   522                           ; 1 bytes @ 0x33
   523  0001B3                     	ds	1
   524  0001B4                     main@t1thread_data:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x34
   528  0001B4                     	ds	2
   529  0001B6                     main@i2cthread_data:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x36
   533  0001B6                     	ds	2
   534  0001B8                     main@length:
   535                           	opt stack 0
   536                           
   537                           ; 1 bytes @ 0x38
   538  0001B8                     	ds	1
   539  0001B9                     main@msgtype:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x39
   543  0001B9                     	ds	1
   544  0001BA                     main@uc:
   545                           	opt stack 0
   546                           
   547                           ; 22 bytes @ 0x3A
   548  0001BA                     	ds	22
   549  0001D0                     main@ic:
   550                           	opt stack 0
   551                           
   552                           ; 35 bytes @ 0x50
   553  0001D0                     	ds	35
   554                           tblptru	equ	0xFF8
   555                           postinc0	equ	0xFEE
   556                           wreg	equ	0xFE8
   557                           
   558                           	psect	cstackBANK0
   559  0000B6                     __pcstackBANK0:
   560                           	opt stack 0
   561  0000B6                     ??_i2c_int_handler_master_rx:
   562  0000B6                     ??_i2c_int_handler_master_tx:
   563  0000B6                     ?_ReadADC:
   564                           	opt stack 0
   565  0000B6                     ?i2_in_high_int:
   566                           	opt stack 0
   567  0000B6                     WriteTimer0@timer0:
   568                           	opt stack 0
   569  0000B6                     i2check_msg@qptr:
   570                           	opt stack 0
   571  0000B6                     i2memcpy@d1:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x0
   575  0000B6                     	ds	2
   576  0000B8                     ??i2_check_msg:
   577  0000B8                     ?i2_in_low_int:
   578                           	opt stack 0
   579  0000B8                     adc_int_hand@c:
   580                           	opt stack 0
   581  0000B8                     WriteTimer0@timer:
   582                           	opt stack 0
   583  0000B8                     i2memcpy@s1:
   584                           	opt stack 0
   585                           
   586                           ; 2 bytes @ 0x2
   587  0000B8                     	ds	2
   588  0000BA                     adc_int_hand@c_1624:
   589                           	opt stack 0
   590  0000BA                     i2memcpy@n:
   591                           	opt stack 0
   592                           
   593                           ; 2 bytes @ 0x4
   594  0000BA                     	ds	2
   595  0000BC                     i2memcpy@d:
   596                           	opt stack 0
   597                           
   598                           ; 2 bytes @ 0x6
   599  0000BC                     	ds	2
   600  0000BE                     i2memcpy@s:
   601                           	opt stack 0
   602                           
   603                           ; 2 bytes @ 0x8
   604  0000BE                     	ds	2
   605  0000C0                     i2send_msg@qptr:
   606                           	opt stack 0
   607  0000C0                     i2recv_msg@qptr:
   608                           	opt stack 0
   609                           
   610                           ; 2 bytes @ 0xA
   611  0000C0                     	ds	2
   612  0000C2                     i2send_msg@length:
   613                           	opt stack 0
   614  0000C2                     i2recv_msg@maxlength:
   615                           	opt stack 0
   616                           
   617                           ; 1 bytes @ 0xC
   618  0000C2                     	ds	1
   619  0000C3                     i2send_msg@msgtype:
   620                           	opt stack 0
   621  0000C3                     i2recv_msg@msgtype:
   622                           	opt stack 0
   623                           
   624                           ; 2 bytes @ 0xD
   625  0000C3                     	ds	1
   626  0000C4                     i2send_msg@data:
   627                           	opt stack 0
   628                           
   629                           ; 2 bytes @ 0xE
   630  0000C4                     	ds	1
   631  0000C5                     i2recv_msg@data:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0xF
   635  0000C5                     	ds	1
   636  0000C6                     ??i2_send_msg:
   637                           
   638                           ; 0 bytes @ 0x10
   639  0000C6                     	ds	1
   640  0000C7                     ??i2_recv_msg:
   641  0000C7                     i2send_msg@tlength:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x11
   645  0000C7                     	ds	2
   646  0000C9                     i2send_msg@slot:
   647                           	opt stack 0
   648  0000C9                     i2recv_msg@slot:
   649                           	opt stack 0
   650                           
   651                           ; 1 bytes @ 0x13
   652  0000C9                     	ds	1
   653  0000CA                     i2send_msg@qmsg:
   654                           	opt stack 0
   655  0000CA                     i2recv_msg@tlength:
   656                           	opt stack 0
   657                           
   658                           ; 2 bytes @ 0x14
   659  0000CA                     	ds	2
   660  0000CC                     i2ToMainHigh_sendmsg@msgtype:
   661                           	opt stack 0
   662  0000CC                     i2recv_msg@qmsg:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x16
   666  0000CC                     	ds	1
   667  0000CD                     i2ToMainHigh_sendmsg@data:
   668                           	opt stack 0
   669                           
   670                           ; 2 bytes @ 0x17
   671  0000CD                     	ds	1
   672  0000CE                     FromMainHigh_recvmsg@msgtype:
   673                           	opt stack 0
   674                           
   675                           ; 2 bytes @ 0x18
   676  0000CE                     	ds	1
   677  0000CF                     i2ToMainHigh_sendmsg@length:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x19
   681  0000CF                     	ds	1
   682  0000D0                     FromMainHigh_recvmsg@data:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x1A
   686  0000D0                     	ds	2
   687  0000D2                     FromMainHigh_recvmsg@maxlength:
   688                           	opt stack 0
   689                           
   690                           ; 1 bytes @ 0x1C
   691  0000D2                     	ds	1
   692  0000D3                     ??_timer0_int_handler:
   693                           
   694                           ; 0 bytes @ 0x1D
   695  0000D3                     	ds	1
   696  0000D4                     timer0_int_handler@length:
   697                           	opt stack 0
   698                           
   699                           ; 2 bytes @ 0x1E
   700  0000D4                     	ds	2
   701  0000D6                     timer0_int_handler@msgtype:
   702                           	opt stack 0
   703                           
   704                           ; 2 bytes @ 0x20
   705  0000D6                     	ds	2
   706  0000D8                     timer0_int_handler@val:
   707                           	opt stack 0
   708                           
   709                           ; 2 bytes @ 0x22
   710  0000D8                     	ds	2
   711  0000DA                     ??_InterruptHandlerHigh:
   712                           
   713                           ; 0 bytes @ 0x24
   714  0000DA                     	ds	14
   715                           tblptru	equ	0xFF8
   716                           postinc0	equ	0xFEE
   717                           wreg	equ	0xFE8
   718                           
   719                           	psect	cstackCOMRAM
   720  000001                     __pcstackCOMRAM:
   721                           	opt stack 0
   722  000001                     ?_ReadTimer1:
   723                           	opt stack 0
   724  000001                     ReadUSART@data:
   725                           	opt stack 0
   726  000001                     WriteTimer1@timer1:
   727                           	opt stack 0
   728  000001                     i1memcpy@d1:
   729                           	opt stack 0
   730                           
   731                           ; 2 bytes @ 0x0
   732  000001                     	ds	2
   733  000003                     ReadTimer1@timer:
   734                           	opt stack 0
   735  000003                     WriteTimer1@timer:
   736                           	opt stack 0
   737  000003                     i1memcpy@s1:
   738                           	opt stack 0
   739                           
   740                           ; 2 bytes @ 0x2
   741  000003                     	ds	2
   742  000005                     i1memcpy@n:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0x4
   746  000005                     	ds	2
   747  000007                     i1memcpy@d:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x6
   751  000007                     	ds	2
   752  000009                     i1memcpy@s:
   753                           	opt stack 0
   754                           
   755                           ; 2 bytes @ 0x8
   756  000009                     	ds	2
   757  00000B                     i1send_msg@qptr:
   758                           	opt stack 0
   759                           
   760                           ; 2 bytes @ 0xA
   761  00000B                     	ds	2
   762  00000D                     i1send_msg@length:
   763                           	opt stack 0
   764                           
   765                           ; 1 bytes @ 0xC
   766  00000D                     	ds	1
   767  00000E                     i1send_msg@msgtype:
   768                           	opt stack 0
   769                           
   770                           ; 1 bytes @ 0xD
   771  00000E                     	ds	1
   772  00000F                     i1send_msg@data:
   773                           	opt stack 0
   774                           
   775                           ; 2 bytes @ 0xE
   776  00000F                     	ds	2
   777  000011                     ??i1_send_msg:
   778                           
   779                           ; 0 bytes @ 0x10
   780  000011                     	ds	1
   781  000012                     i1send_msg@tlength:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x11
   785  000012                     	ds	2
   786  000014                     i1send_msg@slot:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x13
   790  000014                     	ds	1
   791  000015                     i1send_msg@qmsg:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x14
   795  000015                     	ds	2
   796  000017                     ToMainLow_sendmsg@msgtype:
   797                           	opt stack 0
   798  000017                     i1ToMainHigh_sendmsg@msgtype:
   799                           	opt stack 0
   800                           
   801                           ; 1 bytes @ 0x16
   802  000017                     	ds	1
   803  000018                     ToMainLow_sendmsg@data:
   804                           	opt stack 0
   805  000018                     i1ToMainHigh_sendmsg@data:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x17
   809  000018                     	ds	2
   810  00001A                     ToMainLow_sendmsg@length:
   811                           	opt stack 0
   812  00001A                     i1ToMainHigh_sendmsg@length:
   813                           	opt stack 0
   814                           
   815                           ; 1 bytes @ 0x19
   816  00001A                     	ds	1
   817  00001B                     ??_timer1_int_handler:
   818  00001B                     ??_uart_recv_int_handler:
   819                           
   820                           ; 0 bytes @ 0x1A
   821  00001B                     	ds	1
   822  00001C                     timer1_int_handler@result:
   823                           	opt stack 0
   824                           
   825                           ; 2 bytes @ 0x1B
   826  00001C                     	ds	4
   827  000020                     uart_recv_int_handler@checkSum:
   828                           	opt stack 0
   829                           
   830                           ; 1 bytes @ 0x1F
   831  000020                     	ds	1
   832  000021                     uart_recv_int_handler@i:
   833                           	opt stack 0
   834                           
   835                           ; 2 bytes @ 0x20
   836  000021                     	ds	2
   837  000023                     uart_recv_int_handler@data:
   838                           	opt stack 0
   839                           
   840                           ; 1 bytes @ 0x22
   841  000023                     	ds	1
   842  000024                     ??_InterruptHandlerLow:
   843                           
   844                           ; 0 bytes @ 0x23
   845  000024                     	ds	17
   846                           tblptru	equ	0xFF8
   847                           postinc0	equ	0xFEE
   848                           wreg	equ	0xFE8
   849                           
   850 ;;
   851 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   852 ;;
   853 ;; *************** function _main *****************
   854 ;; Defined at:
   855 ;;		line 190 in file "../src/main.c"
   856 ;; Parameters:    Size  Location     Type
   857 ;;		None
   858 ;; Auto vars:     Size  Location     Type
   859 ;;  ic             35   80[BANK1 ] struct __i2c_comm
   860 ;;  uc             22   58[BANK1 ] struct __uart_comm
   861 ;;  msgbuffer      11   37[BANK1 ] unsigned char [11]
   862 ;;  i2cthread_da    2   54[BANK1 ] struct __i2c_thread_stru
   863 ;;  t1thread_dat    2   52[BANK1 ] struct __timer1_thread_s
   864 ;;  t0thread_dat    2    0        struct __timer0_thread_s
   865 ;;  uthread_data    2    0        struct __uart_thread_str
   866 ;;  msgtype         1   57[BANK1 ] unsigned char 
   867 ;;  length          1   56[BANK1 ] char 
   868 ;;  slave_addres    1   51[BANK1 ] unsigned char 
   869 ;;  portconfig      1   50[BANK1 ] unsigned char 
   870 ;;  config2         1   49[BANK1 ] unsigned char 
   871 ;;  config1         1   48[BANK1 ] unsigned char 
   872 ;;  i               1    0        unsigned char 
   873 ;;  last_reg_rec    1    0        unsigned char 
   874 ;;  c               1    0        unsigned char 
   875 ;; Return value:  Size  Location     Type
   876 ;;		None               void
   877 ;; Registers used:
   878 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   879 ;; Tracked objects:
   880 ;;		On entry : 0/0
   881 ;;		On exit  : 0/0
   882 ;;		Unchanged: 0/0
   883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   884 ;;      Params:         0       0       0       0       0
   885 ;;      Locals:         0       0      78       0       0
   886 ;;      Temps:          0       0       2       0       0
   887 ;;      Totals:         0       0      80       0       0
   888 ;;Total ram usage:       80 bytes
   889 ;; Hardware stack levels required when called:   14
   890 ;; This function calls:
   891 ;;		_OpenADC
   892 ;;		_OpenTimer0
   893 ;;		_OpenTimer1
   894 ;;		_OpenUSART
   895 ;;		_SetChanADC
   896 ;;		_ToMainHigh_recvmsg
   897 ;;		_ToMainLow_recvmsg
   898 ;;		_block_on_To_msgqueues
   899 ;;		_enable_interrupts
   900 ;;		_i2c_configure_master
   901 ;;		_i2c_lthread
   902 ;;		_init_i2c
   903 ;;		_init_queues
   904 ;;		_init_timer1_lthread
   905 ;;		_init_uart_recv
   906 ;; This function is called by:
   907 ;;		Startup code after reset
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           
   911                           	psect	text0
   912  0000C0                     __ptext0:
   913                           	opt stack 0
   914  0000C0                     _main:
   915                           	opt stack 17
   916                           
   917                           ;main.c: 191: char c;
   918                           ;main.c: 192: signed char length;
   919                           ;main.c: 193: unsigned char msgtype;
   920                           ;main.c: 194: unsigned char last_reg_recvd;
   921                           ;main.c: 195: uart_comm uc;
   922                           ;main.c: 196: i2c_comm ic;
   923                           ;main.c: 197: unsigned char msgbuffer[10 + 1];
   924                           ;main.c: 198: unsigned char i;
   925                           ;main.c: 199: uart_thread_struct uthread_data;
   926                           ;main.c: 200: timer1_thread_struct t1thread_data;
   927                           ;main.c: 201: timer0_thread_struct t0thread_data;
   928                           ;main.c: 202: i2c_thread_struct i2cthread_data;
   929                           ;main.c: 204: unsigned char config1 = 0x00, config2 = 0x00, portconfig = 0x00;
   930                           
   931                           ;incstack = 0
   932  0000C0  0101               	movlb	1	; () banked
   933  0000C2  6FA3               	movwf	??_main& (0+255),b
   934  0000C4  0E00               	movlw	0
   935  0000C6  0101               	movlb	1	; () banked
   936  0000C8  0101               	movlb	1	; () banked
   937  0000CA  6FB0               	movwf	main@config1& (0+255),b
   938  0000CC  0101               	movlb	1	; () banked
   939  0000CE  51A3               	movf	??_main& (0+255),w,b
   940  0000D0  0101               	movlb	1	; () banked
   941  0000D2  6FA3               	movwf	??_main& (0+255),b
   942  0000D4  0E00               	movlw	0
   943  0000D6  0101               	movlb	1	; () banked
   944  0000D8  0101               	movlb	1	; () banked
   945  0000DA  6FB1               	movwf	main@config2& (0+255),b
   946  0000DC  0101               	movlb	1	; () banked
   947  0000DE  51A3               	movf	??_main& (0+255),w,b
   948  0000E0  0101               	movlb	1	; () banked
   949  0000E2  6FA3               	movwf	??_main& (0+255),b
   950  0000E4  0E00               	movlw	0
   951  0000E6  0101               	movlb	1	; () banked
   952  0000E8  0101               	movlb	1	; () banked
   953  0000EA  6FB2               	movwf	main@portconfig& (0+255),b
   954  0000EC  0101               	movlb	1	; () banked
   955  0000EE  51A3               	movf	??_main& (0+255),w,b
   956                           
   957                           ; BSR set to: 1
   958                           ;main.c: 205: config1 = 0b10011111 | 0b11111111 | 0b11110011;
   959  0000F0  0101               	movlb	1	; () banked
   960  0000F2  0101               	movlb	1	; () banked
   961  0000F4  69B0               	setf	main@config1& (0+255),b
   962                           
   963                           ; BSR set to: 1
   964                           ;main.c: 206: config2 = 0b10000111 | 0b11111111 | 0b11111100;
   965  0000F6  0101               	movlb	1	; () banked
   966  0000F8  0101               	movlb	1	; () banked
   967  0000FA  69B1               	setf	main@config2& (0+255),b
   968                           
   969                           ; BSR set to: 1
   970                           ;main.c: 208: portconfig = 0b11111111;
   971  0000FC  0101               	movlb	1	; () banked
   972  0000FE  0101               	movlb	1	; () banked
   973  000100  69B2               	setf	main@portconfig& (0+255),b
   974                           
   975                           ; BSR set to: 1
   976                           ;main.c: 217: OSCCON = 0x82;
   977  000102  0E82               	movlw	130
   978  000104  6ED3               	movwf	4051,c	;volatile
   979                           
   980                           ; BSR set to: 1
   981                           ;main.c: 218: OSCTUNEbits.PLLEN = 1;
   982  000106  8C9B               	bsf	3995,6,c	;volatile
   983                           
   984                           ; BSR set to: 1
   985                           ;main.c: 237: init_uart_recv(&uc);
   986  000108  0101               	movlb	1	; () banked
   987  00010A  0E01               	movlw	high main@uc
   988  00010C  0101               	movlb	1	; () banked
   989  00010E  0101               	movlb	1	; () banked
   990  000110  6F81               	movwf	(init_uart_recv@uc+1)& (0+255),b
   991  000112  0101               	movlb	1	; () banked
   992  000114  0EBA               	movlw	low main@uc
   993  000116  0101               	movlb	1	; () banked
   994  000118  0101               	movlb	1	; () banked
   995  00011A  6F80               	movwf	init_uart_recv@uc& (0+255),b
   996  00011C  EC0B  F00E         	call	_init_uart_recv	;wreg free
   997                           
   998                           ;main.c: 240: init_i2c(&ic);
   999  000120  0101               	movlb	1	; () banked
  1000  000122  0E01               	movlw	high main@ic
  1001  000124  0101               	movlb	1	; () banked
  1002  000126  0101               	movlb	1	; () banked
  1003  000128  6F81               	movwf	(init_i2c@ic+1)& (0+255),b
  1004  00012A  0101               	movlb	1	; () banked
  1005  00012C  0ED0               	movlw	low main@ic
  1006  00012E  0101               	movlb	1	; () banked
  1007  000130  0101               	movlb	1	; () banked
  1008  000132  6F80               	movwf	init_i2c@ic& (0+255),b
  1009  000134  EC86  F00A         	call	_init_i2c	;wreg free
  1010                           
  1011                           ;main.c: 243: init_timer1_lthread(&t1thread_data);
  1012  000138  0101               	movlb	1	; () banked
  1013  00013A  0E01               	movlw	high main@t1thread_data
  1014  00013C  0101               	movlb	1	; () banked
  1015  00013E  0101               	movlb	1	; () banked
  1016  000140  6F81               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1017  000142  0101               	movlb	1	; () banked
  1018  000144  0EB4               	movlw	low main@t1thread_data
  1019  000146  0101               	movlb	1	; () banked
  1020  000148  0101               	movlb	1	; () banked
  1021  00014A  6F80               	movwf	init_timer1_lthread@tptr& (0+255),b
  1022  00014C  EC99  F00E         	call	_init_timer1_lthread	;wreg free
  1023                           
  1024                           ;main.c: 246: init_queues();
  1025  000150  EC42  F00B         	call	_init_queues	;wreg free
  1026                           
  1027                           ;main.c: 250: TRISB = 0x0;
  1028  000154  0E00               	movlw	0
  1029  000156  6E93               	movwf	3987,c	;volatile
  1030                           
  1031                           ;main.c: 251: LATB = 0x0;
  1032  000158  0E00               	movlw	0
  1033  00015A  6E8A               	movwf	3978,c	;volatile
  1034                           
  1035                           ;main.c: 264: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110011);
  1036  00015C  0ED3               	movlw	211
  1037  00015E  EC22  F00E         	call	_OpenTimer0
  1038                           
  1039                           ;main.c: 267: OpenADC(0b11011111 & 0b11111111 & 0b11110011,
  1040                           ;main.c: 268: 0b10000111 & 0b10001111 &
  1041                           ;main.c: 269: 0b11111111 & 0b11111110 &
  1042                           ;main.c: 270: 0b11111101, 0b1011);
  1043  000162  0101               	movlb	1	; () banked
  1044  000164  6FA3               	movwf	??_main& (0+255),b
  1045  000166  0E84               	movlw	132
  1046  000168  0101               	movlb	1	; () banked
  1047  00016A  0101               	movlb	1	; () banked
  1048  00016C  6F80               	movwf	OpenADC@config2& (0+255),b
  1049  00016E  0101               	movlb	1	; () banked
  1050  000170  51A3               	movf	??_main& (0+255),w,b
  1051  000172  0101               	movlb	1	; () banked
  1052  000174  6FA4               	movwf	(??_main+1)& (0+255),b
  1053  000176  0E0B               	movlw	11
  1054  000178  0101               	movlb	1	; () banked
  1055  00017A  0101               	movlb	1	; () banked
  1056  00017C  6F81               	movwf	OpenADC@portconfig& (0+255),b
  1057  00017E  0101               	movlb	1	; () banked
  1058  000180  51A4               	movf	(??_main+1)& (0+255),w,b
  1059  000182  0ED3               	movlw	211
  1060  000184  EC44  F00A         	call	_OpenADC
  1061                           
  1062                           ;main.c: 271: SetChanADC(0b10000111);
  1063  000188  0E87               	movlw	135
  1064  00018A  EC6F  F00E         	call	_SetChanADC
  1065                           
  1066                           ;main.c: 281: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1067  00018E  0EF5               	movlw	245
  1068  000190  EC6B  F00D         	call	_OpenTimer1
  1069                           
  1070                           ;main.c: 288: IPR1bits.TMR1IP = 0;
  1071  000194  909F               	bcf	3999,0,c	;volatile
  1072                           
  1073                           ;main.c: 290: IPR1bits.RCIP = 0;
  1074  000196  9A9F               	bcf	3999,5,c	;volatile
  1075                           
  1076                           ;main.c: 292: IPR1bits.TXIP = 0;
  1077  000198  989F               	bcf	3999,4,c	;volatile
  1078                           
  1079                           ;main.c: 294: IPR1bits.SSPIP = 1;
  1080  00019A  869F               	bsf	3999,3,c	;volatile
  1081                           
  1082                           ;main.c: 296: IPR1bits.ADIP = 1;
  1083  00019C  8C9F               	bsf	3999,6,c	;volatile
  1084                           
  1085                           ;main.c: 300: unsigned char slave_address = 0x9E;
  1086  00019E  0101               	movlb	1	; () banked
  1087  0001A0  6FA3               	movwf	??_main& (0+255),b
  1088  0001A2  0E9E               	movlw	158
  1089  0001A4  0101               	movlb	1	; () banked
  1090  0001A6  0101               	movlb	1	; () banked
  1091  0001A8  6FB3               	movwf	main@slave_address& (0+255),b
  1092  0001AA  0101               	movlb	1	; () banked
  1093  0001AC  51A3               	movf	??_main& (0+255),w,b
  1094                           
  1095                           ; BSR set to: 1
  1096                           ;main.c: 301: i2c_configure_master(slave_address);
  1097  0001AE  0101               	movlb	1	; () banked
  1098  0001B0  0101               	movlb	1	; () banked
  1099  0001B2  51B3               	movf	main@slave_address& (0+255),w,b
  1100  0001B4  ECAA  F00C         	call	_i2c_configure_master
  1101                           
  1102                           ;main.c: 316: PIE1bits.SSPIE = 1;
  1103  0001B8  869D               	bsf	3997,3,c	;volatile
  1104                           
  1105                           ;main.c: 332: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1106                           ;main.c: 333: 0b11111111 & 0b11111111, 155);
  1107  0001BA  0E00               	movlw	0
  1108  0001BC  0101               	movlb	1	; () banked
  1109  0001BE  0101               	movlb	1	; () banked
  1110  0001C0  6F81               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1111  0001C2  0E9B               	movlw	155
  1112  0001C4  0101               	movlb	1	; () banked
  1113  0001C6  6F80               	movwf	OpenUSART@spbrg& (0+255),b
  1114  0001C8  0E7C               	movlw	124
  1115  0001CA  EC71  F009         	call	_OpenUSART
  1116                           
  1117                           ;main.c: 334: BAUDCONbits.BRG16 = 0;
  1118  0001CE  96B8               	bcf	4024,3,c	;volatile
  1119                           
  1120                           ;main.c: 335: RCSTAbits.SPEN = 1;
  1121  0001D0  8EAB               	bsf	4011,7,c	;volatile
  1122                           
  1123                           ;main.c: 336: RCSTAbits.CREN = 1;
  1124  0001D2  88AB               	bsf	4011,4,c	;volatile
  1125                           
  1126                           ;main.c: 341: bufferFlag = 0x0;
  1127  0001D4  0E00               	movlw	0
  1128  0001D6  6E54               	movwf	_bufferFlag+1,c
  1129  0001D8  0E00               	movlw	0
  1130  0001DA  6E53               	movwf	_bufferFlag,c
  1131                           
  1132                           ;main.c: 344: enable_interrupts();
  1133  0001DC  ECD7  F00E         	call	_enable_interrupts	;wreg free
  1134  0001E0                     l3414:
  1135                           
  1136                           ;main.c: 368: block_on_To_msgqueues();
  1137  0001E0  ECC6  F00A         	call	_block_on_To_msgqueues	;wreg free
  1138                           
  1139                           ;main.c: 376: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1140  0001E4  0101               	movlb	1	; () banked
  1141  0001E6  0E01               	movlw	high main@msgtype
  1142  0001E8  0101               	movlb	1	; () banked
  1143  0001EA  0101               	movlb	1	; () banked
  1144  0001EC  6F99               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1145  0001EE  0101               	movlb	1	; () banked
  1146  0001F0  0EB9               	movlw	low main@msgtype
  1147  0001F2  0101               	movlb	1	; () banked
  1148  0001F4  0101               	movlb	1	; () banked
  1149  0001F6  6F98               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1150  0001F8  0101               	movlb	1	; () banked
  1151  0001FA  0E01               	movlw	high main@msgbuffer
  1152  0001FC  0101               	movlb	1	; () banked
  1153  0001FE  0101               	movlb	1	; () banked
  1154  000200  6F9B               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1155  000202  0101               	movlb	1	; () banked
  1156  000204  0EA5               	movlw	low main@msgbuffer
  1157  000206  0101               	movlb	1	; () banked
  1158  000208  0101               	movlb	1	; () banked
  1159  00020A  6F9A               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1160  00020C  0E0A               	movlw	10
  1161  00020E  ECEC  F00C         	call	_ToMainHigh_recvmsg
  1162  000212  0101               	movlb	1	; () banked
  1163  000214  0101               	movlb	1	; () banked
  1164  000216  6FB8               	movwf	main@length& (0+255),b
  1165                           
  1166                           ; BSR set to: 1
  1167                           ;main.c: 378: if (length < 0) {
  1168  000218  0101               	movlb	1	; () banked
  1169  00021A  0101               	movlb	1	; () banked
  1170  00021C  BFB8               	btfsc	main@length& (0+255),7,b
  1171  00021E  D05C               	goto	l3430
  1172  000220  D052               	goto	l3428
  1173  000222                     l3422:
  1174                           
  1175                           ; BSR set to: 1
  1176                           ;main.c: 391: {
  1177                           ;main.c: 392: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1178  000222  0101               	movlb	1	; () banked
  1179  000224  0E01               	movlw	high main@i2cthread_data
  1180  000226  0101               	movlb	1	; () banked
  1181  000228  0101               	movlb	1	; () banked
  1182  00022A  6F9B               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1183  00022C  0101               	movlb	1	; () banked
  1184  00022E  0EB6               	movlw	low main@i2cthread_data
  1185  000230  0101               	movlb	1	; () banked
  1186  000232  0101               	movlb	1	; () banked
  1187  000234  6F9A               	movwf	i2c_lthread@i2cptr& (0+255),b
  1188  000236  0101               	movlb	1	; () banked
  1189  000238  0101               	movlb	1	; () banked
  1190  00023A  C1B9  F19C         	movff	main@msgtype,i2c_lthread@msgtype
  1191  00023E  0101               	movlb	1	; () banked
  1192  000240  0101               	movlb	1	; () banked
  1193  000242  6B9D               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1194  000244  0101               	movlb	1	; () banked
  1195  000246  0101               	movlb	1	; () banked
  1196  000248  51B8               	movf	main@length& (0+255),w,b
  1197  00024A  0101               	movlb	1	; () banked
  1198  00024C  0101               	movlb	1	; () banked
  1199  00024E  6F9E               	movwf	i2c_lthread@length& (0+255),b
  1200  000250  0101               	movlb	1	; () banked
  1201  000252  6B9F               	clrf	(i2c_lthread@length+1)& (0+255),b
  1202  000254  0101               	movlb	1	; () banked
  1203  000256  BF9E               	btfsc	i2c_lthread@length& (0+255),7,b
  1204  000258  079F               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1205  00025A  0101               	movlb	1	; () banked
  1206  00025C  0E01               	movlw	high main@msgbuffer
  1207  00025E  0101               	movlb	1	; () banked
  1208  000260  0101               	movlb	1	; () banked
  1209  000262  6FA1               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1210  000264  0101               	movlb	1	; () banked
  1211  000266  0EA5               	movlw	low main@msgbuffer
  1212  000268  0101               	movlb	1	; () banked
  1213  00026A  0101               	movlb	1	; () banked
  1214  00026C  6FA0               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1215  00026E  ECC0  F008         	call	_i2c_lthread	;wreg free
  1216                           
  1217                           ;main.c: 393: break;
  1218  000272  D032               	goto	l3430
  1219  000274                     l3424:
  1220                           
  1221                           ;main.c: 396: {
  1222                           ;main.c: 397: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1223  000274  0101               	movlb	1	; () banked
  1224  000276  0E01               	movlw	high main@i2cthread_data
  1225  000278  0101               	movlb	1	; () banked
  1226  00027A  0101               	movlb	1	; () banked
  1227  00027C  6F9B               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1228  00027E  0101               	movlb	1	; () banked
  1229  000280  0EB6               	movlw	low main@i2cthread_data
  1230  000282  0101               	movlb	1	; () banked
  1231  000284  0101               	movlb	1	; () banked
  1232  000286  6F9A               	movwf	i2c_lthread@i2cptr& (0+255),b
  1233  000288  0101               	movlb	1	; () banked
  1234  00028A  0101               	movlb	1	; () banked
  1235  00028C  C1B9  F19C         	movff	main@msgtype,i2c_lthread@msgtype
  1236  000290  0101               	movlb	1	; () banked
  1237  000292  0101               	movlb	1	; () banked
  1238  000294  6B9D               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1239  000296  0101               	movlb	1	; () banked
  1240  000298  0101               	movlb	1	; () banked
  1241  00029A  51B8               	movf	main@length& (0+255),w,b
  1242  00029C  0101               	movlb	1	; () banked
  1243  00029E  0101               	movlb	1	; () banked
  1244  0002A0  6F9E               	movwf	i2c_lthread@length& (0+255),b
  1245  0002A2  0101               	movlb	1	; () banked
  1246  0002A4  6B9F               	clrf	(i2c_lthread@length+1)& (0+255),b
  1247  0002A6  0101               	movlb	1	; () banked
  1248  0002A8  BF9E               	btfsc	i2c_lthread@length& (0+255),7,b
  1249  0002AA  079F               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1250  0002AC  0101               	movlb	1	; () banked
  1251  0002AE  0E01               	movlw	high main@msgbuffer
  1252  0002B0  0101               	movlb	1	; () banked
  1253  0002B2  0101               	movlb	1	; () banked
  1254  0002B4  6FA1               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1255  0002B6  0101               	movlb	1	; () banked
  1256  0002B8  0EA5               	movlw	low main@msgbuffer
  1257  0002BA  0101               	movlb	1	; () banked
  1258  0002BC  0101               	movlb	1	; () banked
  1259  0002BE  6FA0               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1260  0002C0  ECC0  F008         	call	_i2c_lthread	;wreg free
  1261                           
  1262                           ;main.c: 398: break;
  1263  0002C4  D009               	goto	l3430
  1264  0002C6                     l3428:
  1265  0002C6  0101               	movlb	1	; () banked
  1266  0002C8  0101               	movlb	1	; () banked
  1267  0002CA  51B9               	movf	main@msgtype& (0+255),w,b
  1268                           
  1269                           ; Switch size 1, requested type "space"
  1270                           ; Number of cases is 2, Range of values is 39 to 40
  1271                           ; switch strategies available:
  1272                           ; Name         Instructions Cycles
  1273                           ; simple_byte            7     4 (average)
  1274                           ;	Chosen strategy is simple_byte
  1275  0002CC  0A27               	xorlw	39	; case 39
  1276  0002CE  B4D8               	btfsc	status,2,c
  1277  0002D0  D7D1               	goto	l3424
  1278  0002D2  0A0F               	xorlw	15	; case 40
  1279  0002D4  B4D8               	btfsc	status,2,c
  1280  0002D6  D7A5               	goto	l3422
  1281  0002D8                     l3430:
  1282                           
  1283                           ;main.c: 406: }
  1284                           ;main.c: 409: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1285  0002D8  0101               	movlb	1	; () banked
  1286  0002DA  0E01               	movlw	high main@msgtype
  1287  0002DC  0101               	movlb	1	; () banked
  1288  0002DE  0101               	movlb	1	; () banked
  1289  0002E0  6F99               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1290  0002E2  0101               	movlb	1	; () banked
  1291  0002E4  0EB9               	movlw	low main@msgtype
  1292  0002E6  0101               	movlb	1	; () banked
  1293  0002E8  0101               	movlb	1	; () banked
  1294  0002EA  6F98               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1295  0002EC  0101               	movlb	1	; () banked
  1296  0002EE  0E01               	movlw	high main@msgbuffer
  1297  0002F0  0101               	movlb	1	; () banked
  1298  0002F2  0101               	movlb	1	; () banked
  1299  0002F4  6F9B               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1300  0002F6  0101               	movlb	1	; () banked
  1301  0002F8  0EA5               	movlw	low main@msgbuffer
  1302  0002FA  0101               	movlb	1	; () banked
  1303  0002FC  0101               	movlb	1	; () banked
  1304  0002FE  6F9A               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1305  000300  0E0A               	movlw	10
  1306  000302  ECCB  F00C         	call	_ToMainLow_recvmsg
  1307  000306  0101               	movlb	1	; () banked
  1308  000308  0101               	movlb	1	; () banked
  1309  00030A  6FB8               	movwf	main@length& (0+255),b
  1310  00030C  D769               	goto	l3414
  1311  00030E                     __end_of_main:
  1312                           	opt stack 0
  1313                           tblptru	equ	0xFF8
  1314                           postinc0	equ	0xFEE
  1315                           wreg	equ	0xFE8
  1316                           status	equ	0xFD8
  1317                           
  1318 ;; *************** function _init_uart_recv *****************
  1319 ;; Defined at:
  1320 ;;		line 126 in file "../src/my_uart.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  1323 ;;		 -> main@uc(22), 
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;		None               void
  1328 ;; Registers used:
  1329 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1335 ;;      Params:         0       0       2       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         0       0       2       0       0
  1339 ;;Total ram usage:        2 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:   10
  1342 ;; This function calls:
  1343 ;;		Nothing
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text1
  1350  001C16                     __ptext1:
  1351                           	opt stack 0
  1352  001C16                     _init_uart_recv:
  1353                           	opt stack 20
  1354                           
  1355                           ;my_uart.c: 128: uc_ptr = uc;
  1356                           
  1357                           ; BSR set to: 1
  1358                           ;incstack = 0
  1359  001C16  0101               	movlb	1	; () banked
  1360  001C18  C181  F068         	movff	init_uart_recv@uc+1,_uc_ptr+1
  1361  001C1C  0101               	movlb	1	; () banked
  1362  001C1E  C180  F067         	movff	init_uart_recv@uc,_uc_ptr
  1363                           
  1364                           ; BSR set to: 1
  1365                           ;my_uart.c: 129: uc_ptr->Tx_buflen = 0;
  1366  001C22  EE20 F014          	lfsr	2,20
  1367  001C26  5067               	movf	_uc_ptr,w,c
  1368  001C28  26D9               	addwf	fsr2l,f,c
  1369  001C2A  5068               	movf	_uc_ptr+1,w,c
  1370  001C2C  22DA               	addwfc	fsr2h,f,c
  1371  001C2E  0E00               	movlw	0
  1372  001C30  6EDF               	movwf	indf2,c
  1373                           
  1374                           ; BSR set to: 1
  1375                           ;my_uart.c: 130: uc_ptr->Rx_buflen = 0;
  1376  001C32  EE20 F015          	lfsr	2,21
  1377  001C36  5067               	movf	_uc_ptr,w,c
  1378  001C38  26D9               	addwf	fsr2l,f,c
  1379  001C3A  5068               	movf	_uc_ptr+1,w,c
  1380  001C3C  22DA               	addwfc	fsr2h,f,c
  1381  001C3E  0E00               	movlw	0
  1382  001C40  6EDF               	movwf	indf2,c
  1383                           
  1384                           ; BSR set to: 1
  1385  001C42  0012               	return	
  1386  001C44                     __end_of_init_uart_recv:
  1387                           	opt stack 0
  1388                           tblptru	equ	0xFF8
  1389                           postinc0	equ	0xFEE
  1390                           wreg	equ	0xFE8
  1391                           indf2	equ	0xFDF
  1392                           fsr2h	equ	0xFDA
  1393                           fsr2l	equ	0xFD9
  1394                           status	equ	0xFD8
  1395                           
  1396 ;; *************** function _init_timer1_lthread *****************
  1397 ;; Defined at:
  1398 ;;		line 6 in file "../src/timer1_thread.c"
  1399 ;; Parameters:    Size  Location     Type
  1400 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  1401 ;;		 -> main@t1thread_data(2), 
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;		None               void
  1406 ;; Registers used:
  1407 ;;		wreg, fsr2l, fsr2h
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1413 ;;      Params:         0       0       2       0       0
  1414 ;;      Locals:         0       0       0       0       0
  1415 ;;      Temps:          0       0       0       0       0
  1416 ;;      Totals:         0       0       2       0       0
  1417 ;;Total ram usage:        2 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; Hardware stack levels required when called:   10
  1420 ;; This function calls:
  1421 ;;		Nothing
  1422 ;; This function is called by:
  1423 ;;		_main
  1424 ;; This function uses a non-reentrant model
  1425 ;;
  1426                           
  1427                           	psect	text2
  1428  001D32                     __ptext2:
  1429                           	opt stack 0
  1430  001D32                     _init_timer1_lthread:
  1431                           	opt stack 20
  1432                           
  1433                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  1434                           
  1435                           ; BSR set to: 1
  1436                           ;incstack = 0
  1437  001D32  C180  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  1438  001D36  C181  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  1439  001D3A  0E00               	movlw	0
  1440  001D3C  6EDE               	movwf	postinc2,c
  1441  001D3E  0E00               	movlw	0
  1442  001D40  6EDD               	movwf	postdec2,c
  1443  001D42  0012               	return	
  1444  001D44                     __end_of_init_timer1_lthread:
  1445                           	opt stack 0
  1446                           tblptru	equ	0xFF8
  1447                           postinc0	equ	0xFEE
  1448                           wreg	equ	0xFE8
  1449                           indf2	equ	0xFDF
  1450                           postinc2	equ	0xFDE
  1451                           postdec2	equ	0xFDD
  1452                           fsr2h	equ	0xFDA
  1453                           fsr2l	equ	0xFD9
  1454                           status	equ	0xFD8
  1455                           
  1456 ;; *************** function _init_queues *****************
  1457 ;; Defined at:
  1458 ;;		line 194 in file "../src/messages.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;		None               void
  1465 ;; Registers used:
  1466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       0       1       0       0
  1475 ;;      Totals:         0       0       1       0       0
  1476 ;;Total ram usage:        1 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:   11
  1479 ;; This function calls:
  1480 ;;		_init_queue
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text3
  1487  001684                     __ptext3:
  1488                           	opt stack 0
  1489  001684                     _init_queues:
  1490                           	opt stack 19
  1491                           
  1492                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  1493                           
  1494                           ;incstack = 0
  1495  001684  0101               	movlb	1	; () banked
  1496  001686  6F84               	movwf	??_init_queues& (0+255),b
  1497  001688  0E00               	movlw	0
  1498  00168A  6E5B               	movwf	_MQ_Main_Willing_to_block,c
  1499  00168C  0101               	movlb	1	; () banked
  1500  00168E  5184               	movf	??_init_queues& (0+255),w,b
  1501                           
  1502                           ; BSR set to: 1
  1503                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  1504  001690  0101               	movlb	1	; () banked
  1505  001692  0E01               	movlw	high _ToMainLow_MQ
  1506  001694  0101               	movlb	1	; () banked
  1507  001696  0101               	movlb	1	; () banked
  1508  001698  6F81               	movwf	(init_queue@qptr+1)& (0+255),b
  1509  00169A  0101               	movlb	1	; () banked
  1510  00169C  0E4A               	movlw	low _ToMainLow_MQ
  1511  00169E  0101               	movlb	1	; () banked
  1512  0016A0  0101               	movlb	1	; () banked
  1513  0016A2  6F80               	movwf	init_queue@qptr& (0+255),b
  1514  0016A4  EC05  F00B         	call	_init_queue	;wreg free
  1515                           
  1516                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  1517  0016A8  0100               	movlb	0	; () banked
  1518  0016AA  0E00               	movlw	high _ToMainHigh_MQ
  1519  0016AC  0101               	movlb	1	; () banked
  1520  0016AE  0101               	movlb	1	; () banked
  1521  0016B0  6F81               	movwf	(init_queue@qptr+1)& (0+255),b
  1522  0016B2  0100               	movlb	0	; () banked
  1523  0016B4  0E80               	movlw	low _ToMainHigh_MQ
  1524  0016B6  0101               	movlb	1	; () banked
  1525  0016B8  0101               	movlb	1	; () banked
  1526  0016BA  6F80               	movwf	init_queue@qptr& (0+255),b
  1527  0016BC  EC05  F00B         	call	_init_queue	;wreg free
  1528                           
  1529                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  1530  0016C0  0101               	movlb	1	; () banked
  1531  0016C2  0E01               	movlw	high _FromMainLow_MQ
  1532  0016C4  0101               	movlb	1	; () banked
  1533  0016C6  0101               	movlb	1	; () banked
  1534  0016C8  6F81               	movwf	(init_queue@qptr+1)& (0+255),b
  1535  0016CA  0101               	movlb	1	; () banked
  1536  0016CC  0E14               	movlw	low _FromMainLow_MQ
  1537  0016CE  0101               	movlb	1	; () banked
  1538  0016D0  0101               	movlb	1	; () banked
  1539  0016D2  6F80               	movwf	init_queue@qptr& (0+255),b
  1540  0016D4  EC05  F00B         	call	_init_queue	;wreg free
  1541                           
  1542                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  1543  0016D8  0102               	movlb	2	; () banked
  1544  0016DA  0E02               	movlw	high _FromMainHigh_MQ
  1545  0016DC  0101               	movlb	1	; () banked
  1546  0016DE  0101               	movlb	1	; () banked
  1547  0016E0  6F81               	movwf	(init_queue@qptr+1)& (0+255),b
  1548  0016E2  0102               	movlb	2	; () banked
  1549  0016E4  0E00               	movlw	low _FromMainHigh_MQ
  1550  0016E6  0101               	movlb	1	; () banked
  1551  0016E8  0101               	movlb	1	; () banked
  1552  0016EA  6F80               	movwf	init_queue@qptr& (0+255),b
  1553  0016EC  EC05  F00B         	call	_init_queue	;wreg free
  1554  0016F0  0012               	return	
  1555  0016F2                     __end_of_init_queues:
  1556                           	opt stack 0
  1557                           tblptru	equ	0xFF8
  1558                           postinc0	equ	0xFEE
  1559                           wreg	equ	0xFE8
  1560                           indf2	equ	0xFDF
  1561                           postinc2	equ	0xFDE
  1562                           postdec2	equ	0xFDD
  1563                           fsr2h	equ	0xFDA
  1564                           fsr2l	equ	0xFD9
  1565                           status	equ	0xFD8
  1566                           
  1567 ;; *************** function _init_queue *****************
  1568 ;; Defined at:
  1569 ;;		line 14 in file "../src/messages.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  1572 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;  i               1    3[BANK1 ] unsigned char 
  1575 ;; Return value:  Size  Location     Type
  1576 ;;		None               void
  1577 ;; Registers used:
  1578 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1579 ;; Tracked objects:
  1580 ;;		On entry : 0/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1584 ;;      Params:         0       0       2       0       0
  1585 ;;      Locals:         0       0       1       0       0
  1586 ;;      Temps:          0       0       1       0       0
  1587 ;;      Totals:         0       0       4       0       0
  1588 ;;Total ram usage:        4 bytes
  1589 ;; Hardware stack levels used:    1
  1590 ;; Hardware stack levels required when called:   10
  1591 ;; This function calls:
  1592 ;;		Nothing
  1593 ;; This function is called by:
  1594 ;;		_init_queues
  1595 ;; This function uses a non-reentrant model
  1596 ;;
  1597                           
  1598                           	psect	text4
  1599  00160A                     __ptext4:
  1600                           	opt stack 0
  1601  00160A                     _init_queue:
  1602                           	opt stack 19
  1603                           
  1604                           ;messages.c: 15: unsigned char i;
  1605                           ;messages.c: 17: qptr->cur_write_ind = 0;
  1606                           
  1607                           ;incstack = 0
  1608  00160A  0101               	movlb	1	; () banked
  1609  00160C  EE20 F034          	lfsr	2,52
  1610  001610  0101               	movlb	1	; () banked
  1611  001612  5180               	movf	init_queue@qptr& (0+255),w,b
  1612  001614  26D9               	addwf	fsr2l,f,c
  1613  001616  0101               	movlb	1	; () banked
  1614  001618  5181               	movf	(init_queue@qptr+1)& (0+255),w,b
  1615  00161A  22DA               	addwfc	fsr2h,f,c
  1616  00161C  0E00               	movlw	0
  1617  00161E  6EDF               	movwf	indf2,c
  1618                           
  1619                           ;messages.c: 18: qptr->cur_read_ind = 0;
  1620  001620  0101               	movlb	1	; () banked
  1621  001622  EE20 F035          	lfsr	2,53
  1622  001626  0101               	movlb	1	; () banked
  1623  001628  5180               	movf	init_queue@qptr& (0+255),w,b
  1624  00162A  26D9               	addwf	fsr2l,f,c
  1625  00162C  0101               	movlb	1	; () banked
  1626  00162E  5181               	movf	(init_queue@qptr+1)& (0+255),w,b
  1627  001630  22DA               	addwfc	fsr2h,f,c
  1628  001632  0E00               	movlw	0
  1629  001634  6EDF               	movwf	indf2,c
  1630                           
  1631                           ; BSR set to: 1
  1632                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  1633  001636  0101               	movlb	1	; () banked
  1634  001638  6F82               	movwf	??_init_queue& (0+255),b
  1635  00163A  0E00               	movlw	0
  1636  00163C  0101               	movlb	1	; () banked
  1637  00163E  0101               	movlb	1	; () banked
  1638  001640  6F83               	movwf	init_queue@i& (0+255),b
  1639  001642  0101               	movlb	1	; () banked
  1640  001644  5182               	movf	??_init_queue& (0+255),w,b
  1641                           
  1642                           ; BSR set to: 1
  1643  001646  0E03               	movlw	3
  1644  001648  0101               	movlb	1	; () banked
  1645  00164A  0101               	movlb	1	; () banked
  1646  00164C  6583               	cpfsgt	init_queue@i& (0+255),b
  1647  00164E  D001               	goto	l3612
  1648  001650  0012               	return	
  1649  001652                     l3612:
  1650                           
  1651                           ; BSR set to: 1
  1652                           ;messages.c: 20: qptr->queue[i].full = 0;
  1653  001652  0101               	movlb	1	; () banked
  1654  001654  0101               	movlb	1	; () banked
  1655  001656  5183               	movf	init_queue@i& (0+255),w,b
  1656  001658  0D0D               	mullw	13
  1657  00165A  50F3               	movf	prodl,w,c
  1658  00165C  0101               	movlb	1	; () banked
  1659  00165E  0101               	movlb	1	; () banked
  1660  001660  2580               	addwf	init_queue@qptr& (0+255),w,b
  1661  001662  6ED9               	movwf	fsr2l,c
  1662  001664  50F4               	movf	prodh,w,c
  1663  001666  0101               	movlb	1	; () banked
  1664  001668  0101               	movlb	1	; () banked
  1665  00166A  2181               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  1666  00166C  6EDA               	movwf	fsr2h,c
  1667  00166E  0E00               	movlw	0
  1668  001670  6EDF               	movwf	indf2,c
  1669                           
  1670                           ; BSR set to: 1
  1671  001672  0101               	movlb	1	; () banked
  1672  001674  0101               	movlb	1	; () banked
  1673  001676  2B83               	incf	init_queue@i& (0+255),f,b
  1674                           
  1675                           ; BSR set to: 1
  1676  001678  0E03               	movlw	3
  1677  00167A  0101               	movlb	1	; () banked
  1678  00167C  0101               	movlb	1	; () banked
  1679  00167E  6583               	cpfsgt	init_queue@i& (0+255),b
  1680  001680  D7E8               	goto	l3612
  1681  001682  0012               	return	
  1682  001684                     __end_of_init_queue:
  1683                           	opt stack 0
  1684                           tblptru	equ	0xFF8
  1685                           prodh	equ	0xFF4
  1686                           prodl	equ	0xFF3
  1687                           postinc0	equ	0xFEE
  1688                           wreg	equ	0xFE8
  1689                           indf2	equ	0xFDF
  1690                           postinc2	equ	0xFDE
  1691                           postdec2	equ	0xFDD
  1692                           fsr2h	equ	0xFDA
  1693                           fsr2l	equ	0xFD9
  1694                           status	equ	0xFD8
  1695                           
  1696 ;; *************** function _init_i2c *****************
  1697 ;; Defined at:
  1698 ;;		line 305 in file "../src/my_i2c.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  1701 ;;		 -> main@ic(35), 
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;		None               void
  1706 ;; Registers used:
  1707 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1713 ;;      Params:         0       0       2       0       0
  1714 ;;      Locals:         0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0
  1716 ;;      Totals:         0       0       2       0       0
  1717 ;;Total ram usage:        2 bytes
  1718 ;; Hardware stack levels used:    1
  1719 ;; Hardware stack levels required when called:   10
  1720 ;; This function calls:
  1721 ;;		Nothing
  1722 ;; This function is called by:
  1723 ;;		_main
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text5
  1728  00150C                     __ptext5:
  1729                           	opt stack 0
  1730  00150C                     _init_i2c:
  1731                           	opt stack 20
  1732                           
  1733                           ;my_i2c.c: 306: ic_ptr = ic;
  1734                           
  1735                           ; BSR set to: 1
  1736                           ;incstack = 0
  1737  00150C  0101               	movlb	1	; () banked
  1738  00150E  0100               	movlb	0	; () banked
  1739  001510  C181  F0E9         	movff	init_i2c@ic+1,_ic_ptr+1
  1740  001514  0101               	movlb	1	; () banked
  1741  001516  0100               	movlb	0	; () banked
  1742  001518  C180  F0E8         	movff	init_i2c@ic,_ic_ptr
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;my_i2c.c: 307: ic_ptr->buflen = 0;
  1746  00151C  0100               	movlb	0	; () banked
  1747  00151E  EE20 F00A          	lfsr	2,10
  1748  001522  0100               	movlb	0	; () banked
  1749  001524  51E8               	movf	_ic_ptr& (0+255),w,b
  1750  001526  26D9               	addwf	fsr2l,f,c
  1751  001528  0100               	movlb	0	; () banked
  1752  00152A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  1753  00152C  22DA               	addwfc	fsr2h,f,c
  1754  00152E  0E00               	movlw	0
  1755  001530  6EDF               	movwf	indf2,c
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;my_i2c.c: 308: ic_ptr->event_count = 0;
  1759  001532  0100               	movlb	0	; () banked
  1760  001534  EE20 F00B          	lfsr	2,11
  1761  001538  0100               	movlb	0	; () banked
  1762  00153A  51E8               	movf	_ic_ptr& (0+255),w,b
  1763  00153C  26D9               	addwf	fsr2l,f,c
  1764  00153E  0100               	movlb	0	; () banked
  1765  001540  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  1766  001542  22DA               	addwfc	fsr2h,f,c
  1767  001544  0E00               	movlw	0
  1768  001546  6EDF               	movwf	indf2,c
  1769                           
  1770                           ; BSR set to: 0
  1771                           ;my_i2c.c: 309: ic_ptr->status = 0x3;
  1772  001548  0100               	movlb	0	; () banked
  1773  00154A  EE20 F00C          	lfsr	2,12
  1774  00154E  0100               	movlb	0	; () banked
  1775  001550  51E8               	movf	_ic_ptr& (0+255),w,b
  1776  001552  26D9               	addwf	fsr2l,f,c
  1777  001554  0100               	movlb	0	; () banked
  1778  001556  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  1779  001558  22DA               	addwfc	fsr2h,f,c
  1780  00155A  0E03               	movlw	3
  1781  00155C  6EDF               	movwf	indf2,c
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;my_i2c.c: 310: ic_ptr->error_count = 0;
  1785  00155E  0100               	movlb	0	; () banked
  1786  001560  EE20 F00E          	lfsr	2,14
  1787  001564  0100               	movlb	0	; () banked
  1788  001566  51E8               	movf	_ic_ptr& (0+255),w,b
  1789  001568  26D9               	addwf	fsr2l,f,c
  1790  00156A  0100               	movlb	0	; () banked
  1791  00156C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  1792  00156E  22DA               	addwfc	fsr2h,f,c
  1793  001570  0E00               	movlw	0
  1794  001572  6EDF               	movwf	indf2,c
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;my_i2c.c: 311: ic_ptr->outbufind = 0;
  1798  001574  0100               	movlb	0	; () banked
  1799  001576  EE20 F01A          	lfsr	2,26
  1800  00157A  0100               	movlb	0	; () banked
  1801  00157C  51E8               	movf	_ic_ptr& (0+255),w,b
  1802  00157E  26D9               	addwf	fsr2l,f,c
  1803  001580  0100               	movlb	0	; () banked
  1804  001582  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  1805  001584  22DA               	addwfc	fsr2h,f,c
  1806  001586  0E00               	movlw	0
  1807  001588  6EDF               	movwf	indf2,c
  1808                           
  1809                           ; BSR set to: 0
  1810  00158A  0012               	return	
  1811  00158C                     __end_of_init_i2c:
  1812                           	opt stack 0
  1813                           tblptru	equ	0xFF8
  1814                           prodh	equ	0xFF4
  1815                           prodl	equ	0xFF3
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           indf2	equ	0xFDF
  1819                           postinc2	equ	0xFDE
  1820                           postdec2	equ	0xFDD
  1821                           fsr2h	equ	0xFDA
  1822                           fsr2l	equ	0xFD9
  1823                           status	equ	0xFD8
  1824                           
  1825 ;; *************** function _i2c_lthread *****************
  1826 ;; Defined at:
  1827 ;;		line 12 in file "../src/i2c_thread.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  i2cptr          2   26[BANK1 ] PTR struct __i2c_thread_
  1830 ;;		 -> main@i2cthread_data(2), 
  1831 ;;  msgtype         2   28[BANK1 ] int 
  1832 ;;  length          2   30[BANK1 ] int 
  1833 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1834 ;;		 -> main@msgbuffer(11), 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;		None
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2   26[BANK1 ] int 
  1839 ;; Registers used:
  1840 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1846 ;;      Params:         0       0       8       0       0
  1847 ;;      Locals:         0       0       0       0       0
  1848 ;;      Temps:          0       0       1       0       0
  1849 ;;      Totals:         0       0       9       0       0
  1850 ;;Total ram usage:        9 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:   13
  1853 ;; This function calls:
  1854 ;;		_ToMainHigh_sendmsg
  1855 ;;		_i2c_master_recv
  1856 ;;		_i2c_master_send
  1857 ;; This function is called by:
  1858 ;;		_main
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text6
  1863  001180                     __ptext6:
  1864                           	opt stack 0
  1865  001180                     _i2c_lthread:
  1866                           	opt stack 17
  1867                           
  1868                           ;i2c_thread.c: 14: if (msgtype == 40) {
  1869                           
  1870                           ; BSR set to: 0
  1871                           ;incstack = 0
  1872  001180  0101               	movlb	1	; () banked
  1873  001182  0101               	movlb	1	; () banked
  1874  001184  519C               	movf	i2c_lthread@msgtype& (0+255),w,b
  1875  001186  0A28               	xorlw	40
  1876  001188  119D               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  1877  00118A  A4D8               	btfss	status,2,c
  1878  00118C  D036               	goto	l3594
  1879                           
  1880                           ; BSR set to: 1
  1881                           ;i2c_thread.c: 16: if (i2c_master_send(length, msgbuffer) == 0) {
  1882  00118E  0101               	movlb	1	; () banked
  1883  001190  0101               	movlb	1	; () banked
  1884  001192  C1A1  F181         	movff	i2c_lthread@msgbuffer+1,i2c_master_send@msg+1
  1885  001196  0101               	movlb	1	; () banked
  1886  001198  0101               	movlb	1	; () banked
  1887  00119A  C1A0  F180         	movff	i2c_lthread@msgbuffer,i2c_master_send@msg
  1888  00119E  0101               	movlb	1	; () banked
  1889  0011A0  0101               	movlb	1	; () banked
  1890  0011A2  519E               	movf	i2c_lthread@length& (0+255),w,b
  1891  0011A4  EC89  F004         	call	_i2c_master_send
  1892  0011A8  0900               	iorlw	0
  1893  0011AA  A4D8               	btfss	status,2,c
  1894  0011AC  D010               	goto	l3592
  1895                           
  1896                           ;i2c_thread.c: 17: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  1897  0011AE  C19C  F196         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  1898  0011B2  0101               	movlb	1	; () banked
  1899  0011B4  0101               	movlb	1	; () banked
  1900  0011B6  C1A1  F198         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  1901  0011BA  0101               	movlb	1	; () banked
  1902  0011BC  0101               	movlb	1	; () banked
  1903  0011BE  C1A0  F197         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  1904  0011C2  0101               	movlb	1	; () banked
  1905  0011C4  0101               	movlb	1	; () banked
  1906  0011C6  519E               	movf	i2c_lthread@length& (0+255),w,b
  1907  0011C8  EC87  F00D         	call	_ToMainHigh_sendmsg
  1908                           
  1909                           ;i2c_thread.c: 18: } else {
  1910  0011CC  0012               	return	
  1911  0011CE                     l3592:
  1912                           
  1913                           ;i2c_thread.c: 20: ToMainHigh_sendmsg(length, 39, (void *) msgbuffer);
  1914  0011CE  0101               	movlb	1	; () banked
  1915  0011D0  6FA2               	movwf	??_i2c_lthread& (0+255),b
  1916  0011D2  0E27               	movlw	39
  1917  0011D4  0101               	movlb	1	; () banked
  1918  0011D6  0101               	movlb	1	; () banked
  1919  0011D8  6F96               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  1920  0011DA  0101               	movlb	1	; () banked
  1921  0011DC  51A2               	movf	??_i2c_lthread& (0+255),w,b
  1922  0011DE  0101               	movlb	1	; () banked
  1923  0011E0  0101               	movlb	1	; () banked
  1924  0011E2  C1A1  F198         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  1925  0011E6  0101               	movlb	1	; () banked
  1926  0011E8  0101               	movlb	1	; () banked
  1927  0011EA  C1A0  F197         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  1928  0011EE  0101               	movlb	1	; () banked
  1929  0011F0  0101               	movlb	1	; () banked
  1930  0011F2  519E               	movf	i2c_lthread@length& (0+255),w,b
  1931  0011F4  EC87  F00D         	call	_ToMainHigh_sendmsg
  1932  0011F8  0012               	return	
  1933  0011FA                     l3594:
  1934  0011FA  0101               	movlb	1	; () banked
  1935  0011FC  0101               	movlb	1	; () banked
  1936  0011FE  519C               	movf	i2c_lthread@msgtype& (0+255),w,b
  1937  001200  0A27               	xorlw	39
  1938  001202  119D               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  1939  001204  A4D8               	btfss	status,2,c
  1940  001206  0012               	return	
  1941                           
  1942                           ; BSR set to: 1
  1943                           ;i2c_thread.c: 24: if (i2c_master_recv(length) == 0) {
  1944  001208  0101               	movlb	1	; () banked
  1945  00120A  0101               	movlb	1	; () banked
  1946  00120C  519E               	movf	i2c_lthread@length& (0+255),w,b
  1947  00120E  EC4F  F008         	call	_i2c_master_recv
  1948  001212  0900               	iorlw	0
  1949  001214  A4D8               	btfss	status,2,c
  1950  001216  0012               	return	
  1951                           
  1952                           ;i2c_thread.c: 25: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  1953  001218  C19C  F196         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  1954  00121C  0101               	movlb	1	; () banked
  1955  00121E  0101               	movlb	1	; () banked
  1956  001220  C1A1  F198         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  1957  001224  0101               	movlb	1	; () banked
  1958  001226  0101               	movlb	1	; () banked
  1959  001228  C1A0  F197         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  1960  00122C  0101               	movlb	1	; () banked
  1961  00122E  0101               	movlb	1	; () banked
  1962  001230  519E               	movf	i2c_lthread@length& (0+255),w,b
  1963  001232  EC87  F00D         	call	_ToMainHigh_sendmsg
  1964  001236  0012               	return	
  1965  001238                     __end_of_i2c_lthread:
  1966                           	opt stack 0
  1967                           tblptru	equ	0xFF8
  1968                           prodh	equ	0xFF4
  1969                           prodl	equ	0xFF3
  1970                           postinc0	equ	0xFEE
  1971                           wreg	equ	0xFE8
  1972                           indf2	equ	0xFDF
  1973                           postinc2	equ	0xFDE
  1974                           postdec2	equ	0xFDD
  1975                           fsr2h	equ	0xFDA
  1976                           fsr2l	equ	0xFD9
  1977                           status	equ	0xFD8
  1978                           
  1979 ;; *************** function _i2c_master_send *****************
  1980 ;; Defined at:
  1981 ;;		line 78 in file "../src/my_i2c.c"
  1982 ;; Parameters:    Size  Location     Type
  1983 ;;  length          1    wreg     unsigned char 
  1984 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  1985 ;;		 -> main@msgbuffer(11), 
  1986 ;; Auto vars:     Size  Location     Type
  1987 ;;  length          1    8[BANK1 ] unsigned char 
  1988 ;;  i               2    9[BANK1 ] int 
  1989 ;; Return value:  Size  Location     Type
  1990 ;;                  1    wreg      unsigned char 
  1991 ;; Registers used:
  1992 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1993 ;; Tracked objects:
  1994 ;;		On entry : 0/0
  1995 ;;		On exit  : 0/0
  1996 ;;		Unchanged: 0/0
  1997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1998 ;;      Params:         0       0       2       0       0
  1999 ;;      Locals:         0       0       3       0       0
  2000 ;;      Temps:          0       0       6       0       0
  2001 ;;      Totals:         0       0      11       0       0
  2002 ;;Total ram usage:       11 bytes
  2003 ;; Hardware stack levels used:    1
  2004 ;; Hardware stack levels required when called:   10
  2005 ;; This function calls:
  2006 ;;		Nothing
  2007 ;; This function is called by:
  2008 ;;		_i2c_lthread
  2009 ;; This function uses a non-reentrant model
  2010 ;;
  2011                           
  2012                           	psect	text7
  2013  000912                     __ptext7:
  2014                           	opt stack 0
  2015  000912                     _i2c_master_send:
  2016                           	opt stack 19
  2017                           
  2018                           ;incstack = 0
  2019                           ;i2c_master_send@length stored from wreg
  2020  000912  CFE8 F188          	movff	wreg,i2c_master_send@length
  2021                           
  2022                           ;my_i2c.c: 81: if (ic_ptr->status != 0x3) {
  2023  000916  0100               	movlb	0	; () banked
  2024  000918  EE20 F00C          	lfsr	2,12
  2025  00091C  0100               	movlb	0	; () banked
  2026  00091E  51E8               	movf	_ic_ptr& (0+255),w,b
  2027  000920  26D9               	addwf	fsr2l,f,c
  2028  000922  0100               	movlb	0	; () banked
  2029  000924  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2030  000926  22DA               	addwfc	fsr2h,f,c
  2031  000928  50DF               	movf	indf2,w,c
  2032  00092A  0A03               	xorlw	3
  2033  00092C  B4D8               	btfsc	status,2,c
  2034  00092E  D002               	goto	l3722
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;my_i2c.c: 82: return 0;
  2038  000930  0E00               	movlw	0
  2039  000932  0012               	return	
  2040  000934                     l3722:
  2041                           
  2042                           ; BSR set to: 0
  2043  000934  0100               	movlb	0	; () banked
  2044  000936  EE20 F00C          	lfsr	2,12
  2045  00093A  0100               	movlb	0	; () banked
  2046  00093C  51E8               	movf	_ic_ptr& (0+255),w,b
  2047  00093E  26D9               	addwf	fsr2l,f,c
  2048  000940  0100               	movlb	0	; () banked
  2049  000942  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2050  000944  22DA               	addwfc	fsr2h,f,c
  2051  000946  0E03               	movlw	3
  2052  000948  62DF               	cpfseq	indf2,c
  2053  00094A  0012               	return	
  2054                           
  2055                           ; BSR set to: 0
  2056                           ;my_i2c.c: 88: ic_ptr->bufferCounterSend = 1;
  2057  00094C  0100               	movlb	0	; () banked
  2058  00094E  EE20 F01C          	lfsr	2,28
  2059  000952  0100               	movlb	0	; () banked
  2060  000954  51E8               	movf	_ic_ptr& (0+255),w,b
  2061  000956  26D9               	addwf	fsr2l,f,c
  2062  000958  0100               	movlb	0	; () banked
  2063  00095A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2064  00095C  22DA               	addwfc	fsr2h,f,c
  2065  00095E  0E01               	movlw	1
  2066  000960  6EDE               	movwf	postinc2,c
  2067  000962  0E00               	movlw	0
  2068  000964  6EDD               	movwf	postdec2,c
  2069                           
  2070                           ; BSR set to: 0
  2071                           ;my_i2c.c: 89: ic_ptr->outbuffer[0] = ic_ptr->slave_addr;
  2072  000966  0100               	movlb	0	; () banked
  2073  000968  EE20 F01B          	lfsr	2,27
  2074  00096C  0100               	movlb	0	; () banked
  2075  00096E  51E8               	movf	_ic_ptr& (0+255),w,b
  2076  000970  26D9               	addwf	fsr2l,f,c
  2077  000972  0100               	movlb	0	; () banked
  2078  000974  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2079  000976  22DA               	addwfc	fsr2h,f,c
  2080  000978  0100               	movlb	0	; () banked
  2081  00097A  EE10 F00F          	lfsr	1,15
  2082  00097E  0100               	movlb	0	; () banked
  2083  000980  51E8               	movf	_ic_ptr& (0+255),w,b
  2084  000982  26E1               	addwf	fsr1l,f,c
  2085  000984  0100               	movlb	0	; () banked
  2086  000986  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2087  000988  22E2               	addwfc	fsr1h,f,c
  2088  00098A  CFDF FFE7          	movff	indf2,indf1
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;my_i2c.c: 91: ic_ptr->outbuflen = length + 1;
  2092  00098E  0100               	movlb	0	; () banked
  2093  000990  EE20 F019          	lfsr	2,25
  2094  000994  0100               	movlb	0	; () banked
  2095  000996  51E8               	movf	_ic_ptr& (0+255),w,b
  2096  000998  26D9               	addwf	fsr2l,f,c
  2097  00099A  0100               	movlb	0	; () banked
  2098  00099C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2099  00099E  22DA               	addwfc	fsr2h,f,c
  2100  0009A0  0101               	movlb	1	; () banked
  2101  0009A2  0101               	movlb	1	; () banked
  2102  0009A4  2988               	incf	i2c_master_send@length& (0+255),w,b
  2103  0009A6  6EDF               	movwf	indf2,c
  2104                           
  2105                           ; BSR set to: 1
  2106                           ;my_i2c.c: 93: int i = 1;
  2107  0009A8  0E00               	movlw	0
  2108  0009AA  0101               	movlb	1	; () banked
  2109  0009AC  0101               	movlb	1	; () banked
  2110  0009AE  6F8A               	movwf	(i2c_master_send@i+1)& (0+255),b
  2111  0009B0  0E01               	movlw	1
  2112  0009B2  0101               	movlb	1	; () banked
  2113  0009B4  6F89               	movwf	i2c_master_send@i& (0+255),b
  2114  0009B6  D03D               	goto	l3736
  2115  0009B8                     l3732:
  2116                           
  2117                           ; BSR set to: 1
  2118                           ;my_i2c.c: 95: ic_ptr->outbuffer[i] = msg[i - 1];
  2119  0009B8  0EFF               	movlw	255
  2120  0009BA  0101               	movlb	1	; () banked
  2121  0009BC  6F82               	movwf	??_i2c_master_send& (0+255),b
  2122  0009BE  0EFF               	movlw	255
  2123  0009C0  6F83               	movwf	(??_i2c_master_send+1)& (0+255),b
  2124  0009C2  0101               	movlb	1	; () banked
  2125  0009C4  C189  F184         	movff	i2c_master_send@i,??_i2c_master_send+2
  2126  0009C8  0101               	movlb	1	; () banked
  2127  0009CA  C18A  F185         	movff	i2c_master_send@i+1,??_i2c_master_send+3
  2128  0009CE  0101               	movlb	1	; () banked
  2129  0009D0  5182               	movf	??_i2c_master_send& (0+255),w,b
  2130  0009D2  0101               	movlb	1	; () banked
  2131  0009D4  2784               	addwf	(??_i2c_master_send+2)& (0+255),f,b
  2132  0009D6  0101               	movlb	1	; () banked
  2133  0009D8  5183               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2134  0009DA  0101               	movlb	1	; () banked
  2135  0009DC  2385               	addwfc	(??_i2c_master_send+3)& (0+255),f,b
  2136  0009DE  0101               	movlb	1	; () banked
  2137  0009E0  5184               	movf	(??_i2c_master_send+2)& (0+255),w,b
  2138  0009E2  0101               	movlb	1	; () banked
  2139  0009E4  0101               	movlb	1	; () banked
  2140  0009E6  2580               	addwf	i2c_master_send@msg& (0+255),w,b
  2141  0009E8  6ED9               	movwf	fsr2l,c
  2142  0009EA  0101               	movlb	1	; () banked
  2143  0009EC  5185               	movf	(??_i2c_master_send+3)& (0+255),w,b
  2144  0009EE  0101               	movlb	1	; () banked
  2145  0009F0  0101               	movlb	1	; () banked
  2146  0009F2  2181               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  2147  0009F4  6EDA               	movwf	fsr2h,c
  2148  0009F6  0E0F               	movlw	15
  2149  0009F8  0101               	movlb	1	; () banked
  2150  0009FA  0101               	movlb	1	; () banked
  2151  0009FC  2589               	addwf	i2c_master_send@i& (0+255),w,b
  2152  0009FE  0101               	movlb	1	; () banked
  2153  000A00  6F86               	movwf	(??_i2c_master_send+4)& (0+255),b
  2154  000A02  0E00               	movlw	0
  2155  000A04  0101               	movlb	1	; () banked
  2156  000A06  0101               	movlb	1	; () banked
  2157  000A08  218A               	addwfc	(i2c_master_send@i+1)& (0+255),w,b
  2158  000A0A  0101               	movlb	1	; () banked
  2159  000A0C  6F87               	movwf	(??_i2c_master_send+5)& (0+255),b
  2160  000A0E  0101               	movlb	1	; () banked
  2161  000A10  5186               	movf	(??_i2c_master_send+4)& (0+255),w,b
  2162  000A12  0100               	movlb	0	; () banked
  2163  000A14  0100               	movlb	0	; () banked
  2164  000A16  25E8               	addwf	_ic_ptr& (0+255),w,b
  2165  000A18  6EE1               	movwf	fsr1l,c
  2166  000A1A  0101               	movlb	1	; () banked
  2167  000A1C  5187               	movf	(??_i2c_master_send+5)& (0+255),w,b
  2168  000A1E  0100               	movlb	0	; () banked
  2169  000A20  0100               	movlb	0	; () banked
  2170  000A22  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  2171  000A24  6EE2               	movwf	fsr1h,c
  2172  000A26  CFDF FFE7          	movff	indf2,indf1
  2173                           
  2174                           ; BSR set to: 0
  2175  000A2A  0101               	movlb	1	; () banked
  2176  000A2C  0101               	movlb	1	; () banked
  2177  000A2E  4B89               	infsnz	i2c_master_send@i& (0+255),f,b
  2178  000A30  2B8A               	incf	(i2c_master_send@i+1)& (0+255),f,b
  2179  000A32                     l3736:
  2180                           
  2181                           ; BSR set to: 1
  2182  000A32  0101               	movlb	1	; () banked
  2183  000A34  0101               	movlb	1	; () banked
  2184  000A36  5188               	movf	i2c_master_send@length& (0+255),w,b
  2185  000A38  0101               	movlb	1	; () banked
  2186  000A3A  6F82               	movwf	??_i2c_master_send& (0+255),b
  2187  000A3C  6B83               	clrf	(??_i2c_master_send+1)& (0+255),b
  2188  000A3E  0E01               	movlw	1
  2189  000A40  0101               	movlb	1	; () banked
  2190  000A42  2782               	addwf	??_i2c_master_send& (0+255),f,b
  2191  000A44  0E00               	movlw	0
  2192  000A46  2383               	addwfc	(??_i2c_master_send+1)& (0+255),f,b
  2193  000A48  0101               	movlb	1	; () banked
  2194  000A4A  0101               	movlb	1	; () banked
  2195  000A4C  518A               	movf	(i2c_master_send@i+1)& (0+255),w,b
  2196  000A4E  0A80               	xorlw	128
  2197  000A50  0101               	movlb	1	; () banked
  2198  000A52  6F84               	movwf	(??_i2c_master_send+2)& (0+255),b
  2199  000A54  5182               	movf	??_i2c_master_send& (0+255),w,b
  2200  000A56  0101               	movlb	1	; () banked
  2201  000A58  0101               	movlb	1	; () banked
  2202  000A5A  5D89               	subwf	i2c_master_send@i& (0+255),w,b
  2203  000A5C  0101               	movlb	1	; () banked
  2204  000A5E  5183               	movf	(??_i2c_master_send+1)& (0+255),w,b
  2205  000A60  0A80               	xorlw	128
  2206  000A62  0101               	movlb	1	; () banked
  2207  000A64  5984               	subwfb	(??_i2c_master_send+2)& (0+255),w,b
  2208  000A66  A0D8               	btfss	status,0,c
  2209  000A68  D7A7               	goto	l3732
  2210                           
  2211                           ; BSR set to: 1
  2212                           ;my_i2c.c: 96: }
  2213                           ;my_i2c.c: 98: ic_ptr->tx_i2c = 0x1;
  2214                           
  2215                           ; BSR set to: 1
  2216  000A6A  0100               	movlb	0	; () banked
  2217  000A6C  EE20 F020          	lfsr	2,32
  2218  000A70  0100               	movlb	0	; () banked
  2219  000A72  51E8               	movf	_ic_ptr& (0+255),w,b
  2220  000A74  26D9               	addwf	fsr2l,f,c
  2221  000A76  0100               	movlb	0	; () banked
  2222  000A78  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2223  000A7A  22DA               	addwfc	fsr2h,f,c
  2224  000A7C  0E01               	movlw	1
  2225  000A7E  6EDF               	movwf	indf2,c
  2226                           
  2227                           ;my_i2c.c: 99: ic_ptr->rx_i2c = 0x0;
  2228  000A80  0100               	movlb	0	; () banked
  2229  000A82  EE20 F021          	lfsr	2,33
  2230  000A86  0100               	movlb	0	; () banked
  2231  000A88  51E8               	movf	_ic_ptr& (0+255),w,b
  2232  000A8A  26D9               	addwf	fsr2l,f,c
  2233  000A8C  0100               	movlb	0	; () banked
  2234  000A8E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2235  000A90  22DA               	addwfc	fsr2h,f,c
  2236  000A92  0E00               	movlw	0
  2237  000A94  6EDF               	movwf	indf2,c
  2238                           
  2239                           ;my_i2c.c: 101: ic_ptr->status = 0x5;
  2240  000A96  0100               	movlb	0	; () banked
  2241  000A98  EE20 F00C          	lfsr	2,12
  2242  000A9C  0100               	movlb	0	; () banked
  2243  000A9E  51E8               	movf	_ic_ptr& (0+255),w,b
  2244  000AA0  26D9               	addwf	fsr2l,f,c
  2245  000AA2  0100               	movlb	0	; () banked
  2246  000AA4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2247  000AA6  22DA               	addwfc	fsr2h,f,c
  2248  000AA8  0E05               	movlw	5
  2249  000AAA  6EDF               	movwf	indf2,c
  2250                           
  2251                           ; BSR set to: 0
  2252                           ;my_i2c.c: 103: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  2253  000AAC  80C5               	bsf	4037,0,c	;volatile
  2254  000AAE                     l299:
  2255  000AAE  B0C5               	btfsc	4037,0,c	;volatile
  2256  000AB0  D7FE               	goto	l299
  2257                           
  2258                           ;my_i2c.c: 105: return 1;
  2259  000AB2  0E01               	movlw	1
  2260  000AB4  0012               	return	
  2261  000AB6                     __end_of_i2c_master_send:
  2262                           	opt stack 0
  2263                           tblptru	equ	0xFF8
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           indf1	equ	0xFE7
  2269                           fsr1h	equ	0xFE2
  2270                           fsr1l	equ	0xFE1
  2271                           indf2	equ	0xFDF
  2272                           postinc2	equ	0xFDE
  2273                           postdec2	equ	0xFDD
  2274                           fsr2h	equ	0xFDA
  2275                           fsr2l	equ	0xFD9
  2276                           status	equ	0xFD8
  2277                           
  2278 ;; *************** function _i2c_master_recv *****************
  2279 ;; Defined at:
  2280 ;;		line 122 in file "../src/my_i2c.c"
  2281 ;; Parameters:    Size  Location     Type
  2282 ;;  length          1    wreg     unsigned char 
  2283 ;; Auto vars:     Size  Location     Type
  2284 ;;  length          1    0[BANK1 ] unsigned char 
  2285 ;; Return value:  Size  Location     Type
  2286 ;;                  1    wreg      unsigned char 
  2287 ;; Registers used:
  2288 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2289 ;; Tracked objects:
  2290 ;;		On entry : 0/0
  2291 ;;		On exit  : 0/0
  2292 ;;		Unchanged: 0/0
  2293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2294 ;;      Params:         0       0       0       0       0
  2295 ;;      Locals:         0       0       1       0       0
  2296 ;;      Temps:          0       0       0       0       0
  2297 ;;      Totals:         0       0       1       0       0
  2298 ;;Total ram usage:        1 bytes
  2299 ;; Hardware stack levels used:    1
  2300 ;; Hardware stack levels required when called:   10
  2301 ;; This function calls:
  2302 ;;		Nothing
  2303 ;; This function is called by:
  2304 ;;		_i2c_lthread
  2305 ;; This function uses a non-reentrant model
  2306 ;;
  2307                           
  2308                           	psect	text8
  2309  00109E                     __ptext8:
  2310                           	opt stack 0
  2311  00109E                     _i2c_master_recv:
  2312                           	opt stack 19
  2313                           
  2314                           ;incstack = 0
  2315                           ;i2c_master_recv@length stored from wreg
  2316  00109E  CFE8 F180          	movff	wreg,i2c_master_recv@length
  2317                           
  2318                           ;my_i2c.c: 124: if (ic_ptr->status != 0x3) {
  2319  0010A2  0100               	movlb	0	; () banked
  2320  0010A4  EE20 F00C          	lfsr	2,12
  2321  0010A8  0100               	movlb	0	; () banked
  2322  0010AA  51E8               	movf	_ic_ptr& (0+255),w,b
  2323  0010AC  26D9               	addwf	fsr2l,f,c
  2324  0010AE  0100               	movlb	0	; () banked
  2325  0010B0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2326  0010B2  22DA               	addwfc	fsr2h,f,c
  2327  0010B4  50DF               	movf	indf2,w,c
  2328  0010B6  0A03               	xorlw	3
  2329  0010B8  B4D8               	btfsc	status,2,c
  2330  0010BA  D002               	goto	l3754
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;my_i2c.c: 125: return 0;
  2334  0010BC  0E00               	movlw	0
  2335  0010BE  0012               	return	
  2336  0010C0                     l3754:
  2337                           
  2338                           ; BSR set to: 0
  2339  0010C0  0100               	movlb	0	; () banked
  2340  0010C2  EE20 F00C          	lfsr	2,12
  2341  0010C6  0100               	movlb	0	; () banked
  2342  0010C8  51E8               	movf	_ic_ptr& (0+255),w,b
  2343  0010CA  26D9               	addwf	fsr2l,f,c
  2344  0010CC  0100               	movlb	0	; () banked
  2345  0010CE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2346  0010D0  22DA               	addwfc	fsr2h,f,c
  2347  0010D2  0E03               	movlw	3
  2348  0010D4  62DF               	cpfseq	indf2,c
  2349  0010D6  0012               	return	
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;my_i2c.c: 128: ic_ptr->rx_i2c = 0x1;
  2353  0010D8  0100               	movlb	0	; () banked
  2354  0010DA  EE20 F021          	lfsr	2,33
  2355  0010DE  0100               	movlb	0	; () banked
  2356  0010E0  51E8               	movf	_ic_ptr& (0+255),w,b
  2357  0010E2  26D9               	addwf	fsr2l,f,c
  2358  0010E4  0100               	movlb	0	; () banked
  2359  0010E6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2360  0010E8  22DA               	addwfc	fsr2h,f,c
  2361  0010EA  0E01               	movlw	1
  2362  0010EC  6EDF               	movwf	indf2,c
  2363                           
  2364                           ;my_i2c.c: 129: ic_ptr->tx_i2c = 0x0;
  2365  0010EE  0100               	movlb	0	; () banked
  2366  0010F0  EE20 F020          	lfsr	2,32
  2367  0010F4  0100               	movlb	0	; () banked
  2368  0010F6  51E8               	movf	_ic_ptr& (0+255),w,b
  2369  0010F8  26D9               	addwf	fsr2l,f,c
  2370  0010FA  0100               	movlb	0	; () banked
  2371  0010FC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2372  0010FE  22DA               	addwfc	fsr2h,f,c
  2373  001100  0E00               	movlw	0
  2374  001102  6EDF               	movwf	indf2,c
  2375                           
  2376                           ; BSR set to: 0
  2377                           ;my_i2c.c: 131: ic_ptr->slave_addr_rc = ((ic_ptr->slave_addr) | 0b00000001);
  2378  001104  0100               	movlb	0	; () banked
  2379  001106  EE20 F022          	lfsr	2,34
  2380  00110A  0100               	movlb	0	; () banked
  2381  00110C  51E8               	movf	_ic_ptr& (0+255),w,b
  2382  00110E  26D9               	addwf	fsr2l,f,c
  2383  001110  0100               	movlb	0	; () banked
  2384  001112  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2385  001114  22DA               	addwfc	fsr2h,f,c
  2386  001116  0100               	movlb	0	; () banked
  2387  001118  EE10 F01B          	lfsr	1,27
  2388  00111C  0100               	movlb	0	; () banked
  2389  00111E  51E8               	movf	_ic_ptr& (0+255),w,b
  2390  001120  26E1               	addwf	fsr1l,f,c
  2391  001122  0100               	movlb	0	; () banked
  2392  001124  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2393  001126  22E2               	addwfc	fsr1h,f,c
  2394  001128  50E7               	movf	indf1,w,c
  2395  00112A  0901               	iorlw	1
  2396  00112C  6EDF               	movwf	indf2,c
  2397                           
  2398                           ; BSR set to: 0
  2399                           ;my_i2c.c: 133: ic_ptr->buflen = length;
  2400  00112E  0100               	movlb	0	; () banked
  2401  001130  EE20 F00A          	lfsr	2,10
  2402  001134  0100               	movlb	0	; () banked
  2403  001136  51E8               	movf	_ic_ptr& (0+255),w,b
  2404  001138  26D9               	addwf	fsr2l,f,c
  2405  00113A  0100               	movlb	0	; () banked
  2406  00113C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2407  00113E  22DA               	addwfc	fsr2h,f,c
  2408  001140  0101               	movlb	1	; () banked
  2409  001142  C180  FFDF         	movff	i2c_master_recv@length,indf2
  2410                           
  2411                           ; BSR set to: 1
  2412                           ;my_i2c.c: 135: ic_ptr->status = 0xC;
  2413  001146  0100               	movlb	0	; () banked
  2414  001148  EE20 F00C          	lfsr	2,12
  2415  00114C  0100               	movlb	0	; () banked
  2416  00114E  51E8               	movf	_ic_ptr& (0+255),w,b
  2417  001150  26D9               	addwf	fsr2l,f,c
  2418  001152  0100               	movlb	0	; () banked
  2419  001154  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2420  001156  22DA               	addwfc	fsr2h,f,c
  2421  001158  0E0C               	movlw	12
  2422  00115A  6EDF               	movwf	indf2,c
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;my_i2c.c: 137: ic_ptr->bufferCounterRx = 0;
  2426  00115C  0100               	movlb	0	; () banked
  2427  00115E  EE20 F01E          	lfsr	2,30
  2428  001162  0100               	movlb	0	; () banked
  2429  001164  51E8               	movf	_ic_ptr& (0+255),w,b
  2430  001166  26D9               	addwf	fsr2l,f,c
  2431  001168  0100               	movlb	0	; () banked
  2432  00116A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2433  00116C  22DA               	addwfc	fsr2h,f,c
  2434  00116E  0E00               	movlw	0
  2435  001170  6EDE               	movwf	postinc2,c
  2436  001172  0E00               	movlw	0
  2437  001174  6EDD               	movwf	postdec2,c
  2438                           
  2439                           ; BSR set to: 0
  2440                           ;my_i2c.c: 139: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  2441  001176  80C5               	bsf	4037,0,c	;volatile
  2442  001178                     l308:
  2443  001178  B0C5               	btfsc	4037,0,c	;volatile
  2444  00117A  D7FE               	goto	l308
  2445                           
  2446                           ;my_i2c.c: 141: return 1;
  2447  00117C  0E01               	movlw	1
  2448  00117E  0012               	return	
  2449  001180                     __end_of_i2c_master_recv:
  2450                           	opt stack 0
  2451                           tblptru	equ	0xFF8
  2452                           prodh	equ	0xFF4
  2453                           prodl	equ	0xFF3
  2454                           postinc0	equ	0xFEE
  2455                           wreg	equ	0xFE8
  2456                           indf1	equ	0xFE7
  2457                           fsr1h	equ	0xFE2
  2458                           fsr1l	equ	0xFE1
  2459                           indf2	equ	0xFDF
  2460                           postinc2	equ	0xFDE
  2461                           postdec2	equ	0xFDD
  2462                           fsr2h	equ	0xFDA
  2463                           fsr2l	equ	0xFD9
  2464                           status	equ	0xFD8
  2465                           
  2466 ;; *************** function _ToMainHigh_sendmsg *****************
  2467 ;; Defined at:
  2468 ;;		line 126 in file "../src/messages.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;  length          1    wreg     unsigned char 
  2471 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2472 ;;  data            2   23[BANK1 ] PTR void 
  2473 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(22), 
  2474 ;; Auto vars:     Size  Location     Type
  2475 ;;  length          1   25[BANK1 ] unsigned char 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  1    wreg      char 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2485 ;;      Params:         0       0       3       0       0
  2486 ;;      Locals:         0       0       1       0       0
  2487 ;;      Temps:          0       0       0       0       0
  2488 ;;      Totals:         0       0       4       0       0
  2489 ;;Total ram usage:        4 bytes
  2490 ;; Hardware stack levels used:    1
  2491 ;; Hardware stack levels required when called:   12
  2492 ;; This function calls:
  2493 ;;		_send_msg
  2494 ;; This function is called by:
  2495 ;;		_i2c_lthread
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text9
  2500  001B0E                     __ptext9:
  2501                           	opt stack 0
  2502  001B0E                     _ToMainHigh_sendmsg:
  2503                           	opt stack 17
  2504                           
  2505                           ;incstack = 0
  2506                           ;ToMainHigh_sendmsg@length stored from wreg
  2507  001B0E  CFE8 F199          	movff	wreg,ToMainHigh_sendmsg@length
  2508                           
  2509                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  2510                           ;	Return value of _ToMainHigh_sendmsg is never used
  2511  001B12  0100               	movlb	0	; () banked
  2512  001B14  0E00               	movlw	high _ToMainHigh_MQ
  2513  001B16  0101               	movlb	1	; () banked
  2514  001B18  0101               	movlb	1	; () banked
  2515  001B1A  6F8B               	movwf	(send_msg@qptr+1)& (0+255),b
  2516  001B1C  0100               	movlb	0	; () banked
  2517  001B1E  0E80               	movlw	low _ToMainHigh_MQ
  2518  001B20  0101               	movlb	1	; () banked
  2519  001B22  0101               	movlb	1	; () banked
  2520  001B24  6F8A               	movwf	send_msg@qptr& (0+255),b
  2521  001B26  C199  F18C         	movff	ToMainHigh_sendmsg@length,send_msg@length
  2522  001B2A  C196  F18D         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  2523  001B2E  0101               	movlb	1	; () banked
  2524  001B30  0101               	movlb	1	; () banked
  2525  001B32  C198  F18F         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  2526  001B36  0101               	movlb	1	; () banked
  2527  001B38  0101               	movlb	1	; () banked
  2528  001B3A  C197  F18E         	movff	ToMainHigh_sendmsg@data,send_msg@data
  2529  001B3E  EC4B  F007         	call	_send_msg	;wreg free
  2530  001B42  0012               	return	
  2531  001B44                     __end_of_ToMainHigh_sendmsg:
  2532                           	opt stack 0
  2533                           tblptru	equ	0xFF8
  2534                           prodh	equ	0xFF4
  2535                           prodl	equ	0xFF3
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           indf1	equ	0xFE7
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           indf2	equ	0xFDF
  2542                           postinc2	equ	0xFDE
  2543                           postdec2	equ	0xFDD
  2544                           fsr2h	equ	0xFDA
  2545                           fsr2l	equ	0xFD9
  2546                           status	equ	0xFD8
  2547                           
  2548 ;; *************** function _send_msg *****************
  2549 ;; Defined at:
  2550 ;;		line 24 in file "../src/messages.c"
  2551 ;; Parameters:    Size  Location     Type
  2552 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2553 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2554 ;;  length          1   12[BANK1 ] unsigned char 
  2555 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2556 ;;  data            2   14[BANK1 ] PTR void 
  2557 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(22), 
  2558 ;; Auto vars:     Size  Location     Type
  2559 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2560 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2561 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2562 ;;  tlength         2   17[BANK1 ] unsigned int 
  2563 ;;  slot            1   19[BANK1 ] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      char 
  2566 ;; Registers used:
  2567 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2573 ;;      Params:         0       0       6       0       0
  2574 ;;      Locals:         0       0       5       0       0
  2575 ;;      Temps:          0       0       1       0       0
  2576 ;;      Totals:         0       0      12       0       0
  2577 ;;Total ram usage:       12 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; Hardware stack levels required when called:   11
  2580 ;; This function calls:
  2581 ;;		_memcpy
  2582 ;; This function is called by:
  2583 ;;		_ToMainHigh_sendmsg
  2584 ;;		_FromMainLow_sendmsg
  2585 ;;		_FromMainHigh_sendmsg
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text10
  2590  000E96                     __ptext10:
  2591                           	opt stack 0
  2592  000E96                     _send_msg:
  2593                           	opt stack 17
  2594                           
  2595                           ;messages.c: 25: unsigned char slot;
  2596                           ;messages.c: 27: msg *qmsg;
  2597                           ;messages.c: 28: size_t tlength = length;
  2598                           
  2599                           ;incstack = 0
  2600  000E96  0101               	movlb	1	; () banked
  2601  000E98  0101               	movlb	1	; () banked
  2602  000E9A  C18C  F191         	movff	send_msg@length,send_msg@tlength
  2603  000E9E  0101               	movlb	1	; () banked
  2604  000EA0  0101               	movlb	1	; () banked
  2605  000EA2  6B92               	clrf	(send_msg@tlength+1)& (0+255),b
  2606                           
  2607                           ; BSR set to: 1
  2608                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2609  000EA4  0101               	movlb	1	; () banked
  2610  000EA6  EE20 F034          	lfsr	2,52
  2611  000EAA  0101               	movlb	1	; () banked
  2612  000EAC  518A               	movf	send_msg@qptr& (0+255),w,b
  2613  000EAE  26D9               	addwf	fsr2l,f,c
  2614  000EB0  0101               	movlb	1	; () banked
  2615  000EB2  518B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2616  000EB4  22DA               	addwfc	fsr2h,f,c
  2617  000EB6  50DF               	movf	indf2,w,c
  2618  000EB8  0101               	movlb	1	; () banked
  2619  000EBA  0101               	movlb	1	; () banked
  2620  000EBC  6F93               	movwf	send_msg@slot& (0+255),b
  2621                           
  2622                           ; BSR set to: 1
  2623                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2624  000EBE  0101               	movlb	1	; () banked
  2625  000EC0  0101               	movlb	1	; () banked
  2626  000EC2  5193               	movf	send_msg@slot& (0+255),w,b
  2627  000EC4  0D0D               	mullw	13
  2628  000EC6  50F3               	movf	prodl,w,c
  2629  000EC8  0101               	movlb	1	; () banked
  2630  000ECA  0101               	movlb	1	; () banked
  2631  000ECC  258A               	addwf	send_msg@qptr& (0+255),w,b
  2632  000ECE  0101               	movlb	1	; () banked
  2633  000ED0  0101               	movlb	1	; () banked
  2634  000ED2  6F94               	movwf	send_msg@qmsg& (0+255),b
  2635  000ED4  50F4               	movf	prodh,w,c
  2636  000ED6  0101               	movlb	1	; () banked
  2637  000ED8  0101               	movlb	1	; () banked
  2638  000EDA  218B               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2639  000EDC  0101               	movlb	1	; () banked
  2640  000EDE  6F95               	movwf	(send_msg@qmsg+1)& (0+255),b
  2641                           
  2642                           ; BSR set to: 1
  2643                           ;messages.c: 41: if (qmsg->full != 0) {
  2644  000EE0  C194  FFD9         	movff	send_msg@qmsg,fsr2l
  2645  000EE4  C195  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2646  000EE8  50DF               	movf	indf2,w,c
  2647  000EEA  B4D8               	btfsc	status,2,c
  2648  000EEC  D002               	goto	l3630
  2649                           
  2650                           ; BSR set to: 1
  2651                           ;messages.c: 42: return (-1);
  2652  000EEE  0EFF               	movlw	255
  2653  000EF0  0012               	return	
  2654  000EF2                     l3630:
  2655                           
  2656                           ; BSR set to: 1
  2657                           ;messages.c: 43: }
  2658                           ;messages.c: 46: qmsg->length = length;
  2659  000EF2  0101               	movlb	1	; () banked
  2660  000EF4  EE20 F001          	lfsr	2,1
  2661  000EF8  0101               	movlb	1	; () banked
  2662  000EFA  5194               	movf	send_msg@qmsg& (0+255),w,b
  2663  000EFC  26D9               	addwf	fsr2l,f,c
  2664  000EFE  0101               	movlb	1	; () banked
  2665  000F00  5195               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2666  000F02  22DA               	addwfc	fsr2h,f,c
  2667  000F04  0101               	movlb	1	; () banked
  2668  000F06  C18C  FFDF         	movff	send_msg@length,indf2
  2669                           
  2670                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2671  000F0A  0101               	movlb	1	; () banked
  2672  000F0C  EE20 F002          	lfsr	2,2
  2673  000F10  0101               	movlb	1	; () banked
  2674  000F12  5194               	movf	send_msg@qmsg& (0+255),w,b
  2675  000F14  26D9               	addwf	fsr2l,f,c
  2676  000F16  0101               	movlb	1	; () banked
  2677  000F18  5195               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2678  000F1A  22DA               	addwfc	fsr2h,f,c
  2679  000F1C  0101               	movlb	1	; () banked
  2680  000F1E  C18D  FFDF         	movff	send_msg@msgtype,indf2
  2681                           
  2682                           ; BSR set to: 1
  2683                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2684  000F22  0E03               	movlw	3
  2685  000F24  0101               	movlb	1	; () banked
  2686  000F26  0101               	movlb	1	; () banked
  2687  000F28  2594               	addwf	send_msg@qmsg& (0+255),w,b
  2688  000F2A  0101               	movlb	1	; () banked
  2689  000F2C  0101               	movlb	1	; () banked
  2690  000F2E  6F80               	movwf	memcpy@d1& (0+255),b
  2691  000F30  0E00               	movlw	0
  2692  000F32  0101               	movlb	1	; () banked
  2693  000F34  0101               	movlb	1	; () banked
  2694  000F36  2195               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2695  000F38  0101               	movlb	1	; () banked
  2696  000F3A  6F81               	movwf	(memcpy@d1+1)& (0+255),b
  2697  000F3C  0101               	movlb	1	; () banked
  2698  000F3E  0101               	movlb	1	; () banked
  2699  000F40  C18F  F183         	movff	send_msg@data+1,memcpy@s1+1
  2700  000F44  0101               	movlb	1	; () banked
  2701  000F46  0101               	movlb	1	; () banked
  2702  000F48  C18E  F182         	movff	send_msg@data,memcpy@s1
  2703  000F4C  C191  F184         	movff	send_msg@tlength,memcpy@n
  2704  000F50  C192  F185         	movff	send_msg@tlength+1,memcpy@n+1
  2705  000F54  ECE4  F00B         	call	_memcpy	;wreg free
  2706                           
  2707                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2708  000F58  0101               	movlb	1	; () banked
  2709  000F5A  EE20 F034          	lfsr	2,52
  2710  000F5E  0101               	movlb	1	; () banked
  2711  000F60  518A               	movf	send_msg@qptr& (0+255),w,b
  2712  000F62  26D9               	addwf	fsr2l,f,c
  2713  000F64  0101               	movlb	1	; () banked
  2714  000F66  518B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2715  000F68  22DA               	addwfc	fsr2h,f,c
  2716  000F6A  0101               	movlb	1	; () banked
  2717  000F6C  EE10 F034          	lfsr	1,52
  2718  000F70  0101               	movlb	1	; () banked
  2719  000F72  518A               	movf	send_msg@qptr& (0+255),w,b
  2720  000F74  26E1               	addwf	fsr1l,f,c
  2721  000F76  0101               	movlb	1	; () banked
  2722  000F78  518B               	movf	(send_msg@qptr+1)& (0+255),w,b
  2723  000F7A  22E2               	addwfc	fsr1h,f,c
  2724  000F7C  50E7               	movf	indf1,w,c
  2725  000F7E  0101               	movlb	1	; () banked
  2726  000F80  6F90               	movwf	??_send_msg& (0+255),b
  2727  000F82  0101               	movlb	1	; () banked
  2728  000F84  2990               	incf	??_send_msg& (0+255),w,b
  2729  000F86  0B03               	andlw	3
  2730  000F88  6EDF               	movwf	indf2,c
  2731                           
  2732                           ; BSR set to: 1
  2733                           ;messages.c: 59: qmsg->full = 1;
  2734  000F8A  C194  FFD9         	movff	send_msg@qmsg,fsr2l
  2735  000F8E  C195  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2736  000F92  0E01               	movlw	1
  2737  000F94  6EDF               	movwf	indf2,c
  2738                           
  2739                           ; BSR set to: 1
  2740                           ;messages.c: 60: return (1);
  2741  000F96  0E01               	movlw	1
  2742  000F98  0012               	return	
  2743  000F9A                     __end_of_send_msg:
  2744                           	opt stack 0
  2745                           tblptru	equ	0xFF8
  2746                           prodh	equ	0xFF4
  2747                           prodl	equ	0xFF3
  2748                           postinc0	equ	0xFEE
  2749                           wreg	equ	0xFE8
  2750                           indf1	equ	0xFE7
  2751                           fsr1h	equ	0xFE2
  2752                           fsr1l	equ	0xFE1
  2753                           indf2	equ	0xFDF
  2754                           postinc2	equ	0xFDE
  2755                           postdec2	equ	0xFDD
  2756                           fsr2h	equ	0xFDA
  2757                           fsr2l	equ	0xFD9
  2758                           status	equ	0xFD8
  2759                           
  2760 ;; *************** function _i2c_configure_master *****************
  2761 ;; Defined at:
  2762 ;;		line 51 in file "../src/my_i2c.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  slave_addr      1    wreg     unsigned char 
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;  slave_addr      1    0[BANK1 ] unsigned char 
  2767 ;; Return value:  Size  Location     Type
  2768 ;;		None               void
  2769 ;; Registers used:
  2770 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2776 ;;      Params:         0       0       0       0       0
  2777 ;;      Locals:         0       0       1       0       0
  2778 ;;      Temps:          0       0       0       0       0
  2779 ;;      Totals:         0       0       1       0       0
  2780 ;;Total ram usage:        1 bytes
  2781 ;; Hardware stack levels used:    1
  2782 ;; Hardware stack levels required when called:   10
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text11
  2791  001954                     __ptext11:
  2792                           	opt stack 0
  2793  001954                     _i2c_configure_master:
  2794                           	opt stack 20
  2795                           
  2796                           ; BSR set to: 1
  2797                           ;incstack = 0
  2798                           ;i2c_configure_master@slave_addr stored from wreg
  2799  001954  CFE8 F180          	movff	wreg,i2c_configure_master@slave_addr
  2800                           
  2801                           ;my_i2c.c: 53: ic_ptr->slave_addr = slave_addr;
  2802  001958  0100               	movlb	0	; () banked
  2803  00195A  EE20 F01B          	lfsr	2,27
  2804  00195E  0100               	movlb	0	; () banked
  2805  001960  51E8               	movf	_ic_ptr& (0+255),w,b
  2806  001962  26D9               	addwf	fsr2l,f,c
  2807  001964  0100               	movlb	0	; () banked
  2808  001966  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2809  001968  22DA               	addwfc	fsr2h,f,c
  2810  00196A  0101               	movlb	1	; () banked
  2811  00196C  C180  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  2812                           
  2813                           ; BSR set to: 1
  2814                           ;my_i2c.c: 55: SSPCON1 = 0b00001000;
  2815  001970  0E08               	movlw	8
  2816  001972  6EC6               	movwf	4038,c	;volatile
  2817                           
  2818                           ; BSR set to: 1
  2819                           ;my_i2c.c: 57: SSPCON1 |= 0b00100000;
  2820  001974  8AC6               	bsf	4038,5,c	;volatile
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;my_i2c.c: 59: SSPADD = 0x77;
  2824  001976  0E77               	movlw	119
  2825  001978  6EC8               	movwf	4040,c	;volatile
  2826                           
  2827                           ; BSR set to: 1
  2828                           ;my_i2c.c: 62: ic_ptr->bufferCounterSend = 1;
  2829  00197A  0100               	movlb	0	; () banked
  2830  00197C  EE20 F01C          	lfsr	2,28
  2831  001980  0100               	movlb	0	; () banked
  2832  001982  51E8               	movf	_ic_ptr& (0+255),w,b
  2833  001984  26D9               	addwf	fsr2l,f,c
  2834  001986  0100               	movlb	0	; () banked
  2835  001988  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2836  00198A  22DA               	addwfc	fsr2h,f,c
  2837  00198C  0E01               	movlw	1
  2838  00198E  6EDE               	movwf	postinc2,c
  2839  001990  0E00               	movlw	0
  2840  001992  6EDD               	movwf	postdec2,c
  2841                           
  2842                           ; BSR set to: 0
  2843  001994  0012               	return	
  2844  001996                     __end_of_i2c_configure_master:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           prodh	equ	0xFF4
  2848                           prodl	equ	0xFF3
  2849                           postinc0	equ	0xFEE
  2850                           wreg	equ	0xFE8
  2851                           indf1	equ	0xFE7
  2852                           fsr1h	equ	0xFE2
  2853                           fsr1l	equ	0xFE1
  2854                           indf2	equ	0xFDF
  2855                           postinc2	equ	0xFDE
  2856                           postdec2	equ	0xFDD
  2857                           fsr2h	equ	0xFDA
  2858                           fsr2l	equ	0xFD9
  2859                           status	equ	0xFD8
  2860                           
  2861 ;; *************** function _enable_interrupts *****************
  2862 ;; Defined at:
  2863 ;;		line 16 in file "../src/interrupts.c"
  2864 ;; Parameters:    Size  Location     Type
  2865 ;;		None
  2866 ;; Auto vars:     Size  Location     Type
  2867 ;;		None
  2868 ;; Return value:  Size  Location     Type
  2869 ;;		None               void
  2870 ;; Registers used:
  2871 ;;		None
  2872 ;; Tracked objects:
  2873 ;;		On entry : 0/0
  2874 ;;		On exit  : 0/0
  2875 ;;		Unchanged: 0/0
  2876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2877 ;;      Params:         0       0       0       0       0
  2878 ;;      Locals:         0       0       0       0       0
  2879 ;;      Temps:          0       0       0       0       0
  2880 ;;      Totals:         0       0       0       0       0
  2881 ;;Total ram usage:        0 bytes
  2882 ;; Hardware stack levels used:    1
  2883 ;; Hardware stack levels required when called:   10
  2884 ;; This function calls:
  2885 ;;		Nothing
  2886 ;; This function is called by:
  2887 ;;		_main
  2888 ;; This function uses a non-reentrant model
  2889 ;;
  2890                           
  2891                           	psect	text12
  2892  001DAE                     __ptext12:
  2893                           	opt stack 0
  2894  001DAE                     _enable_interrupts:
  2895                           	opt stack 20
  2896                           
  2897                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  2898                           
  2899                           ; BSR set to: 0
  2900                           ;incstack = 0
  2901  001DAE  8ED0               	bsf	4048,7,c	;volatile
  2902                           
  2903                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  2904  001DB0  8EF2               	bsf	intcon,7,c	;volatile
  2905                           
  2906                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  2907  001DB2  8CF2               	bsf	intcon,6,c	;volatile
  2908  001DB4  0012               	return	
  2909  001DB6                     __end_of_enable_interrupts:
  2910                           	opt stack 0
  2911                           tblptru	equ	0xFF8
  2912                           prodh	equ	0xFF4
  2913                           prodl	equ	0xFF3
  2914                           intcon	equ	0xFF2
  2915                           postinc0	equ	0xFEE
  2916                           wreg	equ	0xFE8
  2917                           indf1	equ	0xFE7
  2918                           fsr1h	equ	0xFE2
  2919                           fsr1l	equ	0xFE1
  2920                           indf2	equ	0xFDF
  2921                           postinc2	equ	0xFDE
  2922                           postdec2	equ	0xFDD
  2923                           fsr2h	equ	0xFDA
  2924                           fsr2l	equ	0xFD9
  2925                           status	equ	0xFD8
  2926                           
  2927 ;; *************** function _block_on_To_msgqueues *****************
  2928 ;; Defined at:
  2929 ;;		line 258 in file "../src/messages.c"
  2930 ;; Parameters:    Size  Location     Type
  2931 ;;		None
  2932 ;; Auto vars:     Size  Location     Type
  2933 ;;		None
  2934 ;; Return value:  Size  Location     Type
  2935 ;;		None               void
  2936 ;; Registers used:
  2937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2943 ;;      Params:         0       0       0       0       0
  2944 ;;      Locals:         0       0       0       0       0
  2945 ;;      Temps:          0       0       1       0       0
  2946 ;;      Totals:         0       0       1       0       0
  2947 ;;Total ram usage:        1 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:   13
  2950 ;; This function calls:
  2951 ;;		_Delay1KTCYx
  2952 ;;		_check_msg
  2953 ;;		_in_main
  2954 ;; This function is called by:
  2955 ;;		_main
  2956 ;; This function uses a non-reentrant model
  2957 ;;
  2958                           
  2959                           	psect	text13
  2960  00158C                     __ptext13:
  2961                           	opt stack 0
  2962  00158C                     _block_on_To_msgqueues:
  2963                           	opt stack 17
  2964                           
  2965                           ;messages.c: 259: if (!in_main()) {
  2966                           
  2967                           ;incstack = 0
  2968  00158C  EC88  F00C         	call	_in_main	;wreg free
  2969  001590  0101               	movlb	1	; () banked
  2970  001592  0101               	movlb	1	; () banked
  2971  001594  5185               	movf	(?_in_main+1)& (0+255),w,b
  2972  001596  0101               	movlb	1	; () banked
  2973  001598  1184               	iorwf	?_in_main& (0+255),w,b
  2974  00159A  B4D8               	btfsc	status,2,c
  2975  00159C  0012               	return	
  2976                           
  2977                           ; BSR set to: 1
  2978                           ;messages.c: 261: }
  2979                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  2980                           
  2981                           ; BSR set to: 1
  2982                           
  2983                           ; BSR set to: 1
  2984                           ;messages.c: 260: return;
  2985  00159E  0101               	movlb	1	; () banked
  2986  0015A0  6F86               	movwf	??_block_on_To_msgqueues& (0+255),b
  2987  0015A2  0E01               	movlw	1
  2988  0015A4  6E5B               	movwf	_MQ_Main_Willing_to_block,c
  2989  0015A6  0101               	movlb	1	; () banked
  2990  0015A8  5186               	movf	??_block_on_To_msgqueues& (0+255),w,b
  2991  0015AA                     l3568:
  2992                           
  2993                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  2994  0015AA  0100               	movlb	0	; () banked
  2995  0015AC  0E00               	movlw	high _ToMainHigh_MQ
  2996  0015AE  0101               	movlb	1	; () banked
  2997  0015B0  0101               	movlb	1	; () banked
  2998  0015B2  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  2999  0015B4  0100               	movlb	0	; () banked
  3000  0015B6  0E80               	movlw	low _ToMainHigh_MQ
  3001  0015B8  0101               	movlb	1	; () banked
  3002  0015BA  0101               	movlb	1	; () banked
  3003  0015BC  6F80               	movwf	check_msg@qptr& (0+255),b
  3004  0015BE  ECA2  F00D         	call	_check_msg	;wreg free
  3005  0015C2  0900               	iorlw	0
  3006  0015C4  B4D8               	btfsc	status,2,c
  3007  0015C6  D007               	goto	l3574
  3008                           
  3009                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3010  0015C8  0101               	movlb	1	; () banked
  3011  0015CA  6F86               	movwf	??_block_on_To_msgqueues& (0+255),b
  3012  0015CC  0E00               	movlw	0
  3013  0015CE  6E5B               	movwf	_MQ_Main_Willing_to_block,c
  3014  0015D0  0101               	movlb	1	; () banked
  3015  0015D2  5186               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3016  0015D4  0012               	return	
  3017  0015D6                     l3574:
  3018                           
  3019                           ;messages.c: 271: }
  3020                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3021  0015D6  0101               	movlb	1	; () banked
  3022  0015D8  0E01               	movlw	high _ToMainLow_MQ
  3023  0015DA  0101               	movlb	1	; () banked
  3024  0015DC  0101               	movlb	1	; () banked
  3025  0015DE  6F81               	movwf	(check_msg@qptr+1)& (0+255),b
  3026  0015E0  0101               	movlb	1	; () banked
  3027  0015E2  0E4A               	movlw	low _ToMainLow_MQ
  3028  0015E4  0101               	movlb	1	; () banked
  3029  0015E6  0101               	movlb	1	; () banked
  3030  0015E8  6F80               	movwf	check_msg@qptr& (0+255),b
  3031  0015EA  ECA2  F00D         	call	_check_msg	;wreg free
  3032  0015EE  0900               	iorlw	0
  3033  0015F0  B4D8               	btfsc	status,2,c
  3034  0015F2  D007               	goto	l3580
  3035                           
  3036                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3037  0015F4  0101               	movlb	1	; () banked
  3038  0015F6  6F86               	movwf	??_block_on_To_msgqueues& (0+255),b
  3039  0015F8  0E00               	movlw	0
  3040  0015FA  6E5B               	movwf	_MQ_Main_Willing_to_block,c
  3041  0015FC  0101               	movlb	1	; () banked
  3042  0015FE  5186               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3043  001600  0012               	return	
  3044  001602                     l3580:
  3045                           
  3046                           ;messages.c: 278: }
  3047                           ;messages.c: 279: Delay1KTCYx(10);
  3048  001602  0E0A               	movlw	10
  3049  001604  EC8E  F00E         	call	_Delay1KTCYx
  3050  001608  D7D0               	goto	l3568
  3051  00160A                     __end_of_block_on_To_msgqueues:
  3052                           	opt stack 0
  3053                           tblptru	equ	0xFF8
  3054                           prodh	equ	0xFF4
  3055                           prodl	equ	0xFF3
  3056                           intcon	equ	0xFF2
  3057                           postinc0	equ	0xFEE
  3058                           wreg	equ	0xFE8
  3059                           indf1	equ	0xFE7
  3060                           fsr1h	equ	0xFE2
  3061                           fsr1l	equ	0xFE1
  3062                           indf2	equ	0xFDF
  3063                           postinc2	equ	0xFDE
  3064                           postdec2	equ	0xFDD
  3065                           fsr2h	equ	0xFDA
  3066                           fsr2l	equ	0xFD9
  3067                           status	equ	0xFD8
  3068                           
  3069 ;; *************** function _in_main *****************
  3070 ;; Defined at:
  3071 ;;		line 44 in file "../src/interrupts.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;		None
  3074 ;; Auto vars:     Size  Location     Type
  3075 ;;		None
  3076 ;; Return value:  Size  Location     Type
  3077 ;;                  2    4[BANK1 ] int 
  3078 ;; Registers used:
  3079 ;;		wreg, status,2, status,0, cstack
  3080 ;; Tracked objects:
  3081 ;;		On entry : 0/0
  3082 ;;		On exit  : 0/0
  3083 ;;		Unchanged: 0/0
  3084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3085 ;;      Params:         0       0       2       0       0
  3086 ;;      Locals:         0       0       0       0       0
  3087 ;;      Temps:          0       0       0       0       0
  3088 ;;      Totals:         0       0       2       0       0
  3089 ;;Total ram usage:        2 bytes
  3090 ;; Hardware stack levels used:    1
  3091 ;; Hardware stack levels required when called:   12
  3092 ;; This function calls:
  3093 ;;		_in_high_int
  3094 ;;		_in_low_int
  3095 ;; This function is called by:
  3096 ;;		_block_on_To_msgqueues
  3097 ;; This function uses a non-reentrant model
  3098 ;;
  3099                           
  3100                           	psect	text14
  3101  001910                     __ptext14:
  3102                           	opt stack 0
  3103  001910                     _in_main:
  3104                           	opt stack 17
  3105                           
  3106                           ;interrupts.c: 45: if ((!in_low_int()) && (!in_high_int())) {
  3107                           
  3108                           ;incstack = 0
  3109  001910  EC42  F00C         	call	_in_low_int	;wreg free
  3110  001914  0101               	movlb	1	; () banked
  3111  001916  0101               	movlb	1	; () banked
  3112  001918  5183               	movf	(?_in_low_int+1)& (0+255),w,b
  3113  00191A  0101               	movlb	1	; () banked
  3114  00191C  1182               	iorwf	?_in_low_int& (0+255),w,b
  3115  00191E  A4D8               	btfss	status,2,c
  3116  001920  D011               	goto	l3238
  3117                           
  3118                           ; BSR set to: 1
  3119  001922  ECA2  F00E         	call	_in_high_int	;wreg free
  3120  001926  0101               	movlb	1	; () banked
  3121  001928  0101               	movlb	1	; () banked
  3122  00192A  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  3123  00192C  0101               	movlb	1	; () banked
  3124  00192E  1180               	iorwf	?_in_high_int& (0+255),w,b
  3125  001930  A4D8               	btfss	status,2,c
  3126  001932  D008               	goto	l3238
  3127                           
  3128                           ; BSR set to: 1
  3129                           ;interrupts.c: 46: return (1);
  3130  001934  0E00               	movlw	0
  3131  001936  0101               	movlb	1	; () banked
  3132  001938  0101               	movlb	1	; () banked
  3133  00193A  6F85               	movwf	(?_in_main+1)& (0+255),b
  3134  00193C  0E01               	movlw	1
  3135  00193E  0101               	movlb	1	; () banked
  3136  001940  6F84               	movwf	?_in_main& (0+255),b
  3137  001942  0012               	return	
  3138  001944                     l3238:
  3139                           
  3140                           ; BSR set to: 1
  3141                           ;interrupts.c: 48: return (0);
  3142  001944  0E00               	movlw	0
  3143  001946  0101               	movlb	1	; () banked
  3144  001948  0101               	movlb	1	; () banked
  3145  00194A  6F85               	movwf	(?_in_main+1)& (0+255),b
  3146  00194C  0E00               	movlw	0
  3147  00194E  0101               	movlb	1	; () banked
  3148  001950  6F84               	movwf	?_in_main& (0+255),b
  3149  001952  0012               	return	
  3150  001954                     __end_of_in_main:
  3151                           	opt stack 0
  3152                           tblptru	equ	0xFF8
  3153                           prodh	equ	0xFF4
  3154                           prodl	equ	0xFF3
  3155                           intcon	equ	0xFF2
  3156                           postinc0	equ	0xFEE
  3157                           wreg	equ	0xFE8
  3158                           indf1	equ	0xFE7
  3159                           fsr1h	equ	0xFE2
  3160                           fsr1l	equ	0xFE1
  3161                           indf2	equ	0xFDF
  3162                           postinc2	equ	0xFDE
  3163                           postdec2	equ	0xFDD
  3164                           fsr2h	equ	0xFDA
  3165                           fsr2l	equ	0xFD9
  3166                           status	equ	0xFD8
  3167                           
  3168 ;; *************** function _in_low_int *****************
  3169 ;; Defined at:
  3170 ;;		line 33 in file "../src/interrupts.c"
  3171 ;; Parameters:    Size  Location     Type
  3172 ;;		None
  3173 ;; Auto vars:     Size  Location     Type
  3174 ;;		None
  3175 ;; Return value:  Size  Location     Type
  3176 ;;                  2    2[BANK1 ] int 
  3177 ;; Registers used:
  3178 ;;		wreg, status,2, status,0, cstack
  3179 ;; Tracked objects:
  3180 ;;		On entry : 0/0
  3181 ;;		On exit  : 0/0
  3182 ;;		Unchanged: 0/0
  3183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3184 ;;      Params:         0       0       2       0       0
  3185 ;;      Locals:         0       0       0       0       0
  3186 ;;      Temps:          0       0       0       0       0
  3187 ;;      Totals:         0       0       2       0       0
  3188 ;;Total ram usage:        2 bytes
  3189 ;; Hardware stack levels used:    1
  3190 ;; Hardware stack levels required when called:   11
  3191 ;; This function calls:
  3192 ;;		_in_high_int
  3193 ;; This function is called by:
  3194 ;;		_in_main
  3195 ;; This function uses a non-reentrant model
  3196 ;;
  3197                           
  3198                           	psect	text15
  3199  001884                     __ptext15:
  3200                           	opt stack 0
  3201  001884                     _in_low_int:
  3202                           	opt stack 17
  3203                           
  3204                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  3205                           
  3206                           ; BSR set to: 1
  3207                           ;incstack = 0
  3208  001884  ACF2               	btfss	intcon,6,c	;volatile
  3209  001886  D008               	goto	l3216
  3210                           
  3211                           ;interrupts.c: 36: return (0);
  3212  001888  0E00               	movlw	0
  3213  00188A  0101               	movlb	1	; () banked
  3214  00188C  0101               	movlb	1	; () banked
  3215  00188E  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  3216  001890  0E00               	movlw	0
  3217  001892  0101               	movlb	1	; () banked
  3218  001894  6F82               	movwf	?_in_low_int& (0+255),b
  3219  001896  0012               	return	
  3220  001898                     l3216:
  3221  001898  ECA2  F00E         	call	_in_high_int	;wreg free
  3222  00189C  0101               	movlb	1	; () banked
  3223  00189E  0101               	movlb	1	; () banked
  3224  0018A0  5181               	movf	(?_in_high_int+1)& (0+255),w,b
  3225  0018A2  0101               	movlb	1	; () banked
  3226  0018A4  1180               	iorwf	?_in_high_int& (0+255),w,b
  3227  0018A6  B4D8               	btfsc	status,2,c
  3228  0018A8  D008               	goto	l3224
  3229                           
  3230                           ; BSR set to: 1
  3231                           ;interrupts.c: 38: return (0);
  3232  0018AA  0E00               	movlw	0
  3233  0018AC  0101               	movlb	1	; () banked
  3234  0018AE  0101               	movlb	1	; () banked
  3235  0018B0  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  3236  0018B2  0E00               	movlw	0
  3237  0018B4  0101               	movlb	1	; () banked
  3238  0018B6  6F82               	movwf	?_in_low_int& (0+255),b
  3239  0018B8  0012               	return	
  3240  0018BA                     l3224:
  3241                           
  3242                           ; BSR set to: 1
  3243                           ;interrupts.c: 40: return (1);
  3244  0018BA  0E00               	movlw	0
  3245  0018BC  0101               	movlb	1	; () banked
  3246  0018BE  0101               	movlb	1	; () banked
  3247  0018C0  6F83               	movwf	(?_in_low_int+1)& (0+255),b
  3248  0018C2  0E01               	movlw	1
  3249  0018C4  0101               	movlb	1	; () banked
  3250  0018C6  6F82               	movwf	?_in_low_int& (0+255),b
  3251  0018C8  0012               	return	
  3252  0018CA                     __end_of_in_low_int:
  3253                           	opt stack 0
  3254                           tblptru	equ	0xFF8
  3255                           prodh	equ	0xFF4
  3256                           prodl	equ	0xFF3
  3257                           intcon	equ	0xFF2
  3258                           postinc0	equ	0xFEE
  3259                           wreg	equ	0xFE8
  3260                           indf1	equ	0xFE7
  3261                           fsr1h	equ	0xFE2
  3262                           fsr1l	equ	0xFE1
  3263                           indf2	equ	0xFDF
  3264                           postinc2	equ	0xFDE
  3265                           postdec2	equ	0xFDD
  3266                           fsr2h	equ	0xFDA
  3267                           fsr2l	equ	0xFD9
  3268                           status	equ	0xFD8
  3269                           
  3270 ;; *************** function _in_high_int *****************
  3271 ;; Defined at:
  3272 ;;		line 24 in file "../src/interrupts.c"
  3273 ;; Parameters:    Size  Location     Type
  3274 ;;		None
  3275 ;; Auto vars:     Size  Location     Type
  3276 ;;		None
  3277 ;; Return value:  Size  Location     Type
  3278 ;;                  2    0[BANK1 ] int 
  3279 ;; Registers used:
  3280 ;;		wreg, status,2
  3281 ;; Tracked objects:
  3282 ;;		On entry : 0/0
  3283 ;;		On exit  : 0/0
  3284 ;;		Unchanged: 0/0
  3285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3286 ;;      Params:         0       0       2       0       0
  3287 ;;      Locals:         0       0       0       0       0
  3288 ;;      Temps:          0       0       0       0       0
  3289 ;;      Totals:         0       0       2       0       0
  3290 ;;Total ram usage:        2 bytes
  3291 ;; Hardware stack levels used:    1
  3292 ;; Hardware stack levels required when called:   10
  3293 ;; This function calls:
  3294 ;;		Nothing
  3295 ;; This function is called by:
  3296 ;;		_in_low_int
  3297 ;;		_in_main
  3298 ;; This function uses a non-reentrant model
  3299 ;;
  3300                           
  3301                           	psect	text16
  3302  001D44                     __ptext16:
  3303                           	opt stack 0
  3304  001D44                     _in_high_int:
  3305                           	opt stack 17
  3306                           
  3307                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  3308                           
  3309                           ; BSR set to: 1
  3310                           ;incstack = 0
  3311  001D44  0E00               	movlw	0
  3312  001D46  AEF2               	btfss	intcon,7,c	;volatile
  3313  001D48  0E01               	movlw	1
  3314  001D4A  0101               	movlb	1	; () banked
  3315  001D4C  0101               	movlb	1	; () banked
  3316  001D4E  6F80               	movwf	?_in_high_int& (0+255),b
  3317  001D50  0101               	movlb	1	; () banked
  3318  001D52  6B81               	clrf	(?_in_high_int+1)& (0+255),b
  3319  001D54  0012               	return	
  3320  001D56                     __end_of_in_high_int:
  3321                           	opt stack 0
  3322                           tblptru	equ	0xFF8
  3323                           prodh	equ	0xFF4
  3324                           prodl	equ	0xFF3
  3325                           intcon	equ	0xFF2
  3326                           postinc0	equ	0xFEE
  3327                           wreg	equ	0xFE8
  3328                           indf1	equ	0xFE7
  3329                           fsr1h	equ	0xFE2
  3330                           fsr1l	equ	0xFE1
  3331                           indf2	equ	0xFDF
  3332                           postinc2	equ	0xFDE
  3333                           postdec2	equ	0xFDD
  3334                           fsr2h	equ	0xFDA
  3335                           fsr2l	equ	0xFD9
  3336                           status	equ	0xFD8
  3337                           
  3338 ;; *************** function _check_msg *****************
  3339 ;; Defined at:
  3340 ;;		line 222 in file "../src/messages.c"
  3341 ;; Parameters:    Size  Location     Type
  3342 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  3343 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3344 ;; Auto vars:     Size  Location     Type
  3345 ;;		None
  3346 ;; Return value:  Size  Location     Type
  3347 ;;                  1    wreg      unsigned char 
  3348 ;; Registers used:
  3349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3350 ;; Tracked objects:
  3351 ;;		On entry : 0/0
  3352 ;;		On exit  : 0/0
  3353 ;;		Unchanged: 0/0
  3354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3355 ;;      Params:         0       0       2       0       0
  3356 ;;      Locals:         0       0       0       0       0
  3357 ;;      Temps:          0       0       1       0       0
  3358 ;;      Totals:         0       0       3       0       0
  3359 ;;Total ram usage:        3 bytes
  3360 ;; Hardware stack levels used:    1
  3361 ;; Hardware stack levels required when called:   10
  3362 ;; This function calls:
  3363 ;;		Nothing
  3364 ;; This function is called by:
  3365 ;;		_block_on_To_msgqueues
  3366 ;; This function uses a non-reentrant model
  3367 ;;
  3368                           
  3369                           	psect	text17
  3370  001B44                     __ptext17:
  3371                           	opt stack 0
  3372  001B44                     _check_msg:
  3373                           	opt stack 19
  3374                           
  3375                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  3376                           
  3377                           ; BSR set to: 1
  3378                           ;incstack = 0
  3379  001B44  0101               	movlb	1	; () banked
  3380  001B46  EE20 F035          	lfsr	2,53
  3381  001B4A  0101               	movlb	1	; () banked
  3382  001B4C  5180               	movf	check_msg@qptr& (0+255),w,b
  3383  001B4E  26D9               	addwf	fsr2l,f,c
  3384  001B50  0101               	movlb	1	; () banked
  3385  001B52  5181               	movf	(check_msg@qptr+1)& (0+255),w,b
  3386  001B54  22DA               	addwfc	fsr2h,f,c
  3387  001B56  50DF               	movf	indf2,w,c
  3388  001B58  0101               	movlb	1	; () banked
  3389  001B5A  6F82               	movwf	??_check_msg& (0+255),b
  3390  001B5C  0101               	movlb	1	; () banked
  3391  001B5E  5182               	movf	??_check_msg& (0+255),w,b
  3392  001B60  0D0D               	mullw	13
  3393  001B62  50F3               	movf	prodl,w,c
  3394  001B64  0101               	movlb	1	; () banked
  3395  001B66  0101               	movlb	1	; () banked
  3396  001B68  2580               	addwf	check_msg@qptr& (0+255),w,b
  3397  001B6A  6ED9               	movwf	fsr2l,c
  3398  001B6C  50F4               	movf	prodh,w,c
  3399  001B6E  0101               	movlb	1	; () banked
  3400  001B70  0101               	movlb	1	; () banked
  3401  001B72  2181               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  3402  001B74  6EDA               	movwf	fsr2h,c
  3403  001B76  50DF               	movf	indf2,w,c
  3404  001B78  0012               	return	
  3405  001B7A                     __end_of_check_msg:
  3406                           	opt stack 0
  3407                           tblptru	equ	0xFF8
  3408                           prodh	equ	0xFF4
  3409                           prodl	equ	0xFF3
  3410                           intcon	equ	0xFF2
  3411                           postinc0	equ	0xFEE
  3412                           wreg	equ	0xFE8
  3413                           indf1	equ	0xFE7
  3414                           fsr1h	equ	0xFE2
  3415                           fsr1l	equ	0xFE1
  3416                           indf2	equ	0xFDF
  3417                           postinc2	equ	0xFDE
  3418                           postdec2	equ	0xFDD
  3419                           fsr2h	equ	0xFDA
  3420                           fsr2l	equ	0xFD9
  3421                           status	equ	0xFD8
  3422                           
  3423 ;; *************** function _Delay1KTCYx *****************
  3424 ;; Defined at:
  3425 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  3426 ;; Parameters:    Size  Location     Type
  3427 ;;  unit            1    wreg     unsigned char 
  3428 ;; Auto vars:     Size  Location     Type
  3429 ;;  unit            1    0[BANK1 ] unsigned char 
  3430 ;; Return value:  Size  Location     Type
  3431 ;;		None               void
  3432 ;; Registers used:
  3433 ;;		wreg
  3434 ;; Tracked objects:
  3435 ;;		On entry : 0/0
  3436 ;;		On exit  : 0/0
  3437 ;;		Unchanged: 0/0
  3438 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3439 ;;      Params:         0       0       0       0       0
  3440 ;;      Locals:         0       0       1       0       0
  3441 ;;      Temps:          0       0       0       0       0
  3442 ;;      Totals:         0       0       1       0       0
  3443 ;;Total ram usage:        1 bytes
  3444 ;; Hardware stack levels used:    1
  3445 ;; Hardware stack levels required when called:   10
  3446 ;; This function calls:
  3447 ;;		Nothing
  3448 ;; This function is called by:
  3449 ;;		_block_on_To_msgqueues
  3450 ;; This function uses a non-reentrant model
  3451 ;;
  3452                           
  3453                           	psect	text18
  3454  001D1C                     __ptext18:
  3455                           	opt stack 0
  3456  001D1C                     _Delay1KTCYx:
  3457                           	opt stack 19
  3458                           
  3459                           ; BSR set to: 1
  3460                           ;incstack = 0
  3461                           ;Delay1KTCYx@unit stored from wreg
  3462  001D1C  CFE8 F180          	movff	wreg,Delay1KTCYx@unit
  3463  001D20                     l902:
  3464  001D20  0EFA               	movlw	250
  3465  001D22                     u2647:
  3466  001D22  F000               	nop	
  3467  001D24  2EE8               	decfsz	wreg,f,c
  3468  001D26  D7FD               	goto	u2647
  3469  001D28  0101               	movlb	1	; () banked
  3470  001D2A  0101               	movlb	1	; () banked
  3471  001D2C  2F80               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  3472  001D2E  D7F8               	goto	l902
  3473  001D30  0012               	return	
  3474  001D32                     __end_of_Delay1KTCYx:
  3475                           	opt stack 0
  3476                           tblptru	equ	0xFF8
  3477                           prodh	equ	0xFF4
  3478                           prodl	equ	0xFF3
  3479                           intcon	equ	0xFF2
  3480                           postinc0	equ	0xFEE
  3481                           wreg	equ	0xFE8
  3482                           indf1	equ	0xFE7
  3483                           fsr1h	equ	0xFE2
  3484                           fsr1l	equ	0xFE1
  3485                           indf2	equ	0xFDF
  3486                           postinc2	equ	0xFDE
  3487                           postdec2	equ	0xFDD
  3488                           fsr2h	equ	0xFDA
  3489                           fsr2l	equ	0xFD9
  3490                           status	equ	0xFD8
  3491                           
  3492 ;; *************** function _ToMainLow_recvmsg *****************
  3493 ;; Defined at:
  3494 ;;		line 112 in file "../src/messages.c"
  3495 ;; Parameters:    Size  Location     Type
  3496 ;;  maxlength       1    wreg     unsigned char 
  3497 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3498 ;;		 -> main@msgtype(1), 
  3499 ;;  data            2   26[BANK1 ] PTR void 
  3500 ;;		 -> main@msgbuffer(11), 
  3501 ;; Auto vars:     Size  Location     Type
  3502 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3503 ;; Return value:  Size  Location     Type
  3504 ;;                  1    wreg      char 
  3505 ;; Registers used:
  3506 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3507 ;; Tracked objects:
  3508 ;;		On entry : 0/0
  3509 ;;		On exit  : 0/0
  3510 ;;		Unchanged: 0/0
  3511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3512 ;;      Params:         0       0       4       0       0
  3513 ;;      Locals:         0       0       1       0       0
  3514 ;;      Temps:          0       0       0       0       0
  3515 ;;      Totals:         0       0       5       0       0
  3516 ;;Total ram usage:        5 bytes
  3517 ;; Hardware stack levels used:    1
  3518 ;; Hardware stack levels required when called:   12
  3519 ;; This function calls:
  3520 ;;		_recv_msg
  3521 ;; This function is called by:
  3522 ;;		_main
  3523 ;; This function uses a non-reentrant model
  3524 ;;
  3525                           
  3526                           	psect	text19
  3527  001996                     __ptext19:
  3528                           	opt stack 0
  3529  001996                     _ToMainLow_recvmsg:
  3530                           	opt stack 18
  3531                           
  3532                           ; BSR set to: 1
  3533                           ;incstack = 0
  3534                           ;ToMainLow_recvmsg@maxlength stored from wreg
  3535  001996  CFE8 F19C          	movff	wreg,ToMainLow_recvmsg@maxlength
  3536                           
  3537                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  3538  00199A  0101               	movlb	1	; () banked
  3539  00199C  0E01               	movlw	high _ToMainLow_MQ
  3540  00199E  0101               	movlb	1	; () banked
  3541  0019A0  0101               	movlb	1	; () banked
  3542  0019A2  6F8B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3543  0019A4  0101               	movlb	1	; () banked
  3544  0019A6  0E4A               	movlw	low _ToMainLow_MQ
  3545  0019A8  0101               	movlb	1	; () banked
  3546  0019AA  0101               	movlb	1	; () banked
  3547  0019AC  6F8A               	movwf	recv_msg@qptr& (0+255),b
  3548  0019AE  C19C  F18C         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  3549  0019B2  0101               	movlb	1	; () banked
  3550  0019B4  0101               	movlb	1	; () banked
  3551  0019B6  C199  F18E         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  3552  0019BA  0101               	movlb	1	; () banked
  3553  0019BC  0101               	movlb	1	; () banked
  3554  0019BE  C198  F18D         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  3555  0019C2  0101               	movlb	1	; () banked
  3556  0019C4  0101               	movlb	1	; () banked
  3557  0019C6  C19B  F190         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  3558  0019CA  0101               	movlb	1	; () banked
  3559  0019CC  0101               	movlb	1	; () banked
  3560  0019CE  C19A  F18F         	movff	ToMainLow_recvmsg@data,recv_msg@data
  3561  0019D2  EC15  F006         	call	_recv_msg	;wreg free
  3562  0019D6  0012               	return	
  3563  0019D8                     __end_of_ToMainLow_recvmsg:
  3564                           	opt stack 0
  3565                           tblptru	equ	0xFF8
  3566                           prodh	equ	0xFF4
  3567                           prodl	equ	0xFF3
  3568                           intcon	equ	0xFF2
  3569                           postinc0	equ	0xFEE
  3570                           wreg	equ	0xFE8
  3571                           indf1	equ	0xFE7
  3572                           fsr1h	equ	0xFE2
  3573                           fsr1l	equ	0xFE1
  3574                           indf2	equ	0xFDF
  3575                           postinc2	equ	0xFDE
  3576                           postdec2	equ	0xFDD
  3577                           fsr2h	equ	0xFDA
  3578                           fsr2l	equ	0xFD9
  3579                           status	equ	0xFD8
  3580                           
  3581 ;; *************** function _ToMainHigh_recvmsg *****************
  3582 ;; Defined at:
  3583 ;;		line 135 in file "../src/messages.c"
  3584 ;; Parameters:    Size  Location     Type
  3585 ;;  maxlength       1    wreg     unsigned char 
  3586 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  3587 ;;		 -> main@msgtype(1), 
  3588 ;;  data            2   26[BANK1 ] PTR void 
  3589 ;;		 -> main@msgbuffer(11), 
  3590 ;; Auto vars:     Size  Location     Type
  3591 ;;  maxlength       1   28[BANK1 ] unsigned char 
  3592 ;; Return value:  Size  Location     Type
  3593 ;;                  1    wreg      char 
  3594 ;; Registers used:
  3595 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3596 ;; Tracked objects:
  3597 ;;		On entry : 0/0
  3598 ;;		On exit  : 0/0
  3599 ;;		Unchanged: 0/0
  3600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3601 ;;      Params:         0       0       4       0       0
  3602 ;;      Locals:         0       0       1       0       0
  3603 ;;      Temps:          0       0       0       0       0
  3604 ;;      Totals:         0       0       5       0       0
  3605 ;;Total ram usage:        5 bytes
  3606 ;; Hardware stack levels used:    1
  3607 ;; Hardware stack levels required when called:   12
  3608 ;; This function calls:
  3609 ;;		_recv_msg
  3610 ;; This function is called by:
  3611 ;;		_main
  3612 ;; This function uses a non-reentrant model
  3613 ;;
  3614                           
  3615                           	psect	text20
  3616  0019D8                     __ptext20:
  3617                           	opt stack 0
  3618  0019D8                     _ToMainHigh_recvmsg:
  3619                           	opt stack 18
  3620                           
  3621                           ;incstack = 0
  3622                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  3623  0019D8  CFE8 F19C          	movff	wreg,ToMainHigh_recvmsg@maxlength
  3624                           
  3625                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  3626  0019DC  0100               	movlb	0	; () banked
  3627  0019DE  0E00               	movlw	high _ToMainHigh_MQ
  3628  0019E0  0101               	movlb	1	; () banked
  3629  0019E2  0101               	movlb	1	; () banked
  3630  0019E4  6F8B               	movwf	(recv_msg@qptr+1)& (0+255),b
  3631  0019E6  0100               	movlb	0	; () banked
  3632  0019E8  0E80               	movlw	low _ToMainHigh_MQ
  3633  0019EA  0101               	movlb	1	; () banked
  3634  0019EC  0101               	movlb	1	; () banked
  3635  0019EE  6F8A               	movwf	recv_msg@qptr& (0+255),b
  3636  0019F0  C19C  F18C         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  3637  0019F4  0101               	movlb	1	; () banked
  3638  0019F6  0101               	movlb	1	; () banked
  3639  0019F8  C199  F18E         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  3640  0019FC  0101               	movlb	1	; () banked
  3641  0019FE  0101               	movlb	1	; () banked
  3642  001A00  C198  F18D         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  3643  001A04  0101               	movlb	1	; () banked
  3644  001A06  0101               	movlb	1	; () banked
  3645  001A08  C19B  F190         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  3646  001A0C  0101               	movlb	1	; () banked
  3647  001A0E  0101               	movlb	1	; () banked
  3648  001A10  C19A  F18F         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  3649  001A14  EC15  F006         	call	_recv_msg	;wreg free
  3650  001A18  0012               	return	
  3651  001A1A                     __end_of_ToMainHigh_recvmsg:
  3652                           	opt stack 0
  3653                           tblptru	equ	0xFF8
  3654                           prodh	equ	0xFF4
  3655                           prodl	equ	0xFF3
  3656                           intcon	equ	0xFF2
  3657                           postinc0	equ	0xFEE
  3658                           wreg	equ	0xFE8
  3659                           indf1	equ	0xFE7
  3660                           fsr1h	equ	0xFE2
  3661                           fsr1l	equ	0xFE1
  3662                           indf2	equ	0xFDF
  3663                           postinc2	equ	0xFDE
  3664                           postdec2	equ	0xFDD
  3665                           fsr2h	equ	0xFDA
  3666                           fsr2l	equ	0xFD9
  3667                           status	equ	0xFD8
  3668                           
  3669 ;; *************** function _recv_msg *****************
  3670 ;; Defined at:
  3671 ;;		line 63 in file "../src/messages.c"
  3672 ;; Parameters:    Size  Location     Type
  3673 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3674 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3675 ;;  maxlength       1   12[BANK1 ] unsigned char 
  3676 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  3677 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  3678 ;;  data            2   15[BANK1 ] PTR void 
  3679 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  3680 ;; Auto vars:     Size  Location     Type
  3681 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  3682 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3683 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3684 ;;  tlength         2   20[BANK1 ] unsigned int 
  3685 ;;  slot            1   19[BANK1 ] unsigned char 
  3686 ;; Return value:  Size  Location     Type
  3687 ;;                  1    wreg      char 
  3688 ;; Registers used:
  3689 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3690 ;; Tracked objects:
  3691 ;;		On entry : 0/0
  3692 ;;		On exit  : 0/0
  3693 ;;		Unchanged: 0/0
  3694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3695 ;;      Params:         0       0       7       0       0
  3696 ;;      Locals:         0       0       5       0       0
  3697 ;;      Temps:          0       0       2       0       0
  3698 ;;      Totals:         0       0      14       0       0
  3699 ;;Total ram usage:       14 bytes
  3700 ;; Hardware stack levels used:    1
  3701 ;; Hardware stack levels required when called:   11
  3702 ;; This function calls:
  3703 ;;		_memcpy
  3704 ;; This function is called by:
  3705 ;;		_ToMainLow_recvmsg
  3706 ;;		_ToMainHigh_recvmsg
  3707 ;;		_FromMainLow_recvmsg
  3708 ;; This function uses a non-reentrant model
  3709 ;;
  3710                           
  3711                           	psect	text21
  3712  000C2A                     __ptext21:
  3713                           	opt stack 0
  3714  000C2A                     _recv_msg:
  3715                           	opt stack 18
  3716                           
  3717                           ;messages.c: 64: unsigned char slot;
  3718                           ;messages.c: 68: msg *qmsg;
  3719                           ;messages.c: 69: size_t tlength;
  3720                           ;messages.c: 72: slot = qptr->cur_read_ind;
  3721                           
  3722                           ;incstack = 0
  3723  000C2A  0101               	movlb	1	; () banked
  3724  000C2C  EE20 F035          	lfsr	2,53
  3725  000C30  0101               	movlb	1	; () banked
  3726  000C32  518A               	movf	recv_msg@qptr& (0+255),w,b
  3727  000C34  26D9               	addwf	fsr2l,f,c
  3728  000C36  0101               	movlb	1	; () banked
  3729  000C38  518B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3730  000C3A  22DA               	addwfc	fsr2h,f,c
  3731  000C3C  50DF               	movf	indf2,w,c
  3732  000C3E  0101               	movlb	1	; () banked
  3733  000C40  0101               	movlb	1	; () banked
  3734  000C42  6F93               	movwf	recv_msg@slot& (0+255),b
  3735                           
  3736                           ; BSR set to: 1
  3737                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  3738  000C44  0101               	movlb	1	; () banked
  3739  000C46  0101               	movlb	1	; () banked
  3740  000C48  5193               	movf	recv_msg@slot& (0+255),w,b
  3741  000C4A  0D0D               	mullw	13
  3742  000C4C  50F3               	movf	prodl,w,c
  3743  000C4E  0101               	movlb	1	; () banked
  3744  000C50  0101               	movlb	1	; () banked
  3745  000C52  258A               	addwf	recv_msg@qptr& (0+255),w,b
  3746  000C54  0101               	movlb	1	; () banked
  3747  000C56  0101               	movlb	1	; () banked
  3748  000C58  6F96               	movwf	recv_msg@qmsg& (0+255),b
  3749  000C5A  50F4               	movf	prodh,w,c
  3750  000C5C  0101               	movlb	1	; () banked
  3751  000C5E  0101               	movlb	1	; () banked
  3752  000C60  218B               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  3753  000C62  0101               	movlb	1	; () banked
  3754  000C64  6F97               	movwf	(recv_msg@qmsg+1)& (0+255),b
  3755                           
  3756                           ; BSR set to: 1
  3757                           ;messages.c: 74: if (qmsg->full == 1) {
  3758  000C66  0E01               	movlw	1
  3759  000C68  C196  FFD9         	movff	recv_msg@qmsg,fsr2l
  3760  000C6C  C197  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3761  000C70  62DF               	cpfseq	indf2,c
  3762  000C72  D074               	goto	l3680
  3763                           
  3764                           ; BSR set to: 1
  3765                           ;messages.c: 76: if (qmsg->length > maxlength) {
  3766  000C74  0101               	movlb	1	; () banked
  3767  000C76  EE20 F001          	lfsr	2,1
  3768  000C7A  0101               	movlb	1	; () banked
  3769  000C7C  5196               	movf	recv_msg@qmsg& (0+255),w,b
  3770  000C7E  26D9               	addwf	fsr2l,f,c
  3771  000C80  0101               	movlb	1	; () banked
  3772  000C82  5197               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3773  000C84  22DA               	addwfc	fsr2h,f,c
  3774  000C86  50DF               	movf	indf2,w,c
  3775  000C88  0101               	movlb	1	; () banked
  3776  000C8A  0101               	movlb	1	; () banked
  3777  000C8C  5D8C               	subwf	recv_msg@maxlength& (0+255),w,b
  3778  000C8E  B0D8               	btfsc	status,0,c
  3779  000C90  D002               	goto	l3664
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;messages.c: 77: return (-3);
  3783  000C92  0EFD               	movlw	253
  3784  000C94  0012               	return	
  3785  000C96                     l3664:
  3786                           
  3787                           ; BSR set to: 1
  3788                           ;messages.c: 78: }
  3789                           ;messages.c: 80: tlength = qmsg->length;
  3790  000C96  0101               	movlb	1	; () banked
  3791  000C98  EE20 F001          	lfsr	2,1
  3792  000C9C  0101               	movlb	1	; () banked
  3793  000C9E  5196               	movf	recv_msg@qmsg& (0+255),w,b
  3794  000CA0  26D9               	addwf	fsr2l,f,c
  3795  000CA2  0101               	movlb	1	; () banked
  3796  000CA4  5197               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3797  000CA6  22DA               	addwfc	fsr2h,f,c
  3798  000CA8  50DF               	movf	indf2,w,c
  3799  000CAA  0101               	movlb	1	; () banked
  3800  000CAC  6F91               	movwf	??_recv_msg& (0+255),b
  3801  000CAE  0101               	movlb	1	; () banked
  3802  000CB0  5191               	movf	??_recv_msg& (0+255),w,b
  3803  000CB2  0101               	movlb	1	; () banked
  3804  000CB4  0101               	movlb	1	; () banked
  3805  000CB6  6F94               	movwf	recv_msg@tlength& (0+255),b
  3806  000CB8  0101               	movlb	1	; () banked
  3807  000CBA  6B95               	clrf	(recv_msg@tlength+1)& (0+255),b
  3808                           
  3809                           ; BSR set to: 1
  3810                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  3811  000CBC  0101               	movlb	1	; () banked
  3812  000CBE  0101               	movlb	1	; () banked
  3813  000CC0  C190  F181         	movff	recv_msg@data+1,memcpy@d1+1
  3814  000CC4  0101               	movlb	1	; () banked
  3815  000CC6  0101               	movlb	1	; () banked
  3816  000CC8  C18F  F180         	movff	recv_msg@data,memcpy@d1
  3817  000CCC  0E03               	movlw	3
  3818  000CCE  0101               	movlb	1	; () banked
  3819  000CD0  0101               	movlb	1	; () banked
  3820  000CD2  2596               	addwf	recv_msg@qmsg& (0+255),w,b
  3821  000CD4  0101               	movlb	1	; () banked
  3822  000CD6  6F91               	movwf	??_recv_msg& (0+255),b
  3823  000CD8  0E00               	movlw	0
  3824  000CDA  0101               	movlb	1	; () banked
  3825  000CDC  0101               	movlb	1	; () banked
  3826  000CDE  2197               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  3827  000CE0  0101               	movlb	1	; () banked
  3828  000CE2  6F92               	movwf	(??_recv_msg+1)& (0+255),b
  3829  000CE4  C191  F182         	movff	??_recv_msg,memcpy@s1
  3830  000CE8  C192  F183         	movff	??_recv_msg+1,memcpy@s1+1
  3831  000CEC  C194  F184         	movff	recv_msg@tlength,memcpy@n
  3832  000CF0  C195  F185         	movff	recv_msg@tlength+1,memcpy@n+1
  3833  000CF4  ECE4  F00B         	call	_memcpy	;wreg free
  3834                           
  3835                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  3836  000CF8  0101               	movlb	1	; () banked
  3837  000CFA  EE20 F035          	lfsr	2,53
  3838  000CFE  0101               	movlb	1	; () banked
  3839  000D00  518A               	movf	recv_msg@qptr& (0+255),w,b
  3840  000D02  26D9               	addwf	fsr2l,f,c
  3841  000D04  0101               	movlb	1	; () banked
  3842  000D06  518B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3843  000D08  22DA               	addwfc	fsr2h,f,c
  3844  000D0A  0101               	movlb	1	; () banked
  3845  000D0C  EE10 F035          	lfsr	1,53
  3846  000D10  0101               	movlb	1	; () banked
  3847  000D12  518A               	movf	recv_msg@qptr& (0+255),w,b
  3848  000D14  26E1               	addwf	fsr1l,f,c
  3849  000D16  0101               	movlb	1	; () banked
  3850  000D18  518B               	movf	(recv_msg@qptr+1)& (0+255),w,b
  3851  000D1A  22E2               	addwfc	fsr1h,f,c
  3852  000D1C  50E7               	movf	indf1,w,c
  3853  000D1E  0101               	movlb	1	; () banked
  3854  000D20  6F91               	movwf	??_recv_msg& (0+255),b
  3855  000D22  0101               	movlb	1	; () banked
  3856  000D24  2991               	incf	??_recv_msg& (0+255),w,b
  3857  000D26  0B03               	andlw	3
  3858  000D28  6EDF               	movwf	indf2,c
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  3862  000D2A  0101               	movlb	1	; () banked
  3863  000D2C  EE20 F002          	lfsr	2,2
  3864  000D30  0101               	movlb	1	; () banked
  3865  000D32  5196               	movf	recv_msg@qmsg& (0+255),w,b
  3866  000D34  26D9               	addwf	fsr2l,f,c
  3867  000D36  0101               	movlb	1	; () banked
  3868  000D38  5197               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  3869  000D3A  22DA               	addwfc	fsr2h,f,c
  3870  000D3C  C18D  FFE1         	movff	recv_msg@msgtype,fsr1l
  3871  000D40  C18E  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  3872  000D44  CFDF FFE7          	movff	indf2,indf1
  3873                           
  3874                           ; BSR set to: 1
  3875                           ;messages.c: 91: qmsg->full = 0;
  3876  000D48  C196  FFD9         	movff	recv_msg@qmsg,fsr2l
  3877  000D4C  C197  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  3878  000D50  0E00               	movlw	0
  3879  000D52  6EDF               	movwf	indf2,c
  3880                           
  3881                           ; BSR set to: 1
  3882                           ;messages.c: 92: return (tlength);
  3883  000D54  0101               	movlb	1	; () banked
  3884  000D56  0101               	movlb	1	; () banked
  3885  000D58  5194               	movf	recv_msg@tlength& (0+255),w,b
  3886  000D5A  0012               	return	
  3887  000D5C                     l3680:
  3888                           
  3889                           ; BSR set to: 1
  3890                           ;messages.c: 94: return (-4);
  3891  000D5C  0EFC               	movlw	252
  3892  000D5E  0012               	return	
  3893  000D60                     __end_of_recv_msg:
  3894                           	opt stack 0
  3895                           tblptru	equ	0xFF8
  3896                           prodh	equ	0xFF4
  3897                           prodl	equ	0xFF3
  3898                           intcon	equ	0xFF2
  3899                           postinc0	equ	0xFEE
  3900                           wreg	equ	0xFE8
  3901                           indf1	equ	0xFE7
  3902                           fsr1h	equ	0xFE2
  3903                           fsr1l	equ	0xFE1
  3904                           indf2	equ	0xFDF
  3905                           postinc2	equ	0xFDE
  3906                           postdec2	equ	0xFDD
  3907                           fsr2h	equ	0xFDA
  3908                           fsr2l	equ	0xFD9
  3909                           status	equ	0xFD8
  3910                           
  3911 ;; *************** function _memcpy *****************
  3912 ;; Defined at:
  3913 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;  d1              2    0[BANK1 ] PTR void 
  3916 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3917 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3918 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3919 ;;  s1              2    2[BANK1 ] PTR const void 
  3920 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3921 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3922 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3923 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@uc(22), 
  3924 ;;  n               2    4[BANK1 ] unsigned int 
  3925 ;; Auto vars:     Size  Location     Type
  3926 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  3927 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  3928 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  3929 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  3930 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@uc(22), 
  3931 ;;  d               2    6[BANK1 ] PTR unsigned char 
  3932 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3933 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  3934 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  3935 ;; Return value:  Size  Location     Type
  3936 ;;                  2    0[BANK1 ] PTR void 
  3937 ;; Registers used:
  3938 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3939 ;; Tracked objects:
  3940 ;;		On entry : 0/0
  3941 ;;		On exit  : 0/0
  3942 ;;		Unchanged: 0/0
  3943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3944 ;;      Params:         0       0       6       0       0
  3945 ;;      Locals:         0       0       4       0       0
  3946 ;;      Temps:          0       0       0       0       0
  3947 ;;      Totals:         0       0      10       0       0
  3948 ;;Total ram usage:       10 bytes
  3949 ;; Hardware stack levels used:    1
  3950 ;; Hardware stack levels required when called:   10
  3951 ;; This function calls:
  3952 ;;		Nothing
  3953 ;; This function is called by:
  3954 ;;		_send_msg
  3955 ;;		_recv_msg
  3956 ;; This function uses a non-reentrant model
  3957 ;;
  3958                           
  3959                           	psect	text22
  3960  0017C8                     __ptext22:
  3961                           	opt stack 0
  3962  0017C8                     _memcpy:
  3963                           	opt stack 17
  3964                           
  3965                           ; BSR set to: 1
  3966                           ;incstack = 0
  3967  0017C8  0101               	movlb	1	; () banked
  3968  0017CA  0101               	movlb	1	; () banked
  3969  0017CC  C183  F189         	movff	memcpy@s1+1,memcpy@s+1
  3970  0017D0  0101               	movlb	1	; () banked
  3971  0017D2  0101               	movlb	1	; () banked
  3972  0017D4  C182  F188         	movff	memcpy@s1,memcpy@s
  3973  0017D8  0101               	movlb	1	; () banked
  3974  0017DA  0101               	movlb	1	; () banked
  3975  0017DC  C181  F187         	movff	memcpy@d1+1,memcpy@d+1
  3976  0017E0  0101               	movlb	1	; () banked
  3977  0017E2  0101               	movlb	1	; () banked
  3978  0017E4  C180  F186         	movff	memcpy@d1,memcpy@d
  3979  0017E8  D012               	goto	l3650
  3980  0017EA                     l3644:
  3981                           
  3982                           ; BSR set to: 1
  3983  0017EA  C188  FFD9         	movff	memcpy@s,fsr2l
  3984  0017EE  C189  FFDA         	movff	memcpy@s+1,fsr2h
  3985  0017F2  C186  FFE1         	movff	memcpy@d,fsr1l
  3986  0017F6  C187  FFE2         	movff	memcpy@d+1,fsr1h
  3987  0017FA  CFDF FFE7          	movff	indf2,indf1
  3988                           
  3989                           ; BSR set to: 1
  3990  0017FE  0101               	movlb	1	; () banked
  3991  001800  0101               	movlb	1	; () banked
  3992  001802  4B88               	infsnz	memcpy@s& (0+255),f,b
  3993  001804  2B89               	incf	(memcpy@s+1)& (0+255),f,b
  3994                           
  3995                           ; BSR set to: 1
  3996  001806  0101               	movlb	1	; () banked
  3997  001808  0101               	movlb	1	; () banked
  3998  00180A  4B86               	infsnz	memcpy@d& (0+255),f,b
  3999  00180C  2B87               	incf	(memcpy@d+1)& (0+255),f,b
  4000  00180E                     l3650:
  4001                           
  4002                           ; BSR set to: 1
  4003  00180E  0101               	movlb	1	; () banked
  4004  001810  0101               	movlb	1	; () banked
  4005  001812  0784               	decf	memcpy@n& (0+255),f,b
  4006  001814  A0D8               	btfss	status,0,c
  4007  001816  0785               	decf	(memcpy@n+1)& (0+255),f,b
  4008  001818  0101               	movlb	1	; () banked
  4009  00181A  2984               	incf	memcpy@n& (0+255),w,b
  4010  00181C  B4D8               	btfsc	status,2,c
  4011  00181E  2985               	incf	(memcpy@n+1)& (0+255),w,b
  4012  001820  B4D8               	btfsc	status,2,c
  4013                           
  4014                           ; BSR set to: 1
  4015                           
  4016                           ; BSR set to: 1
  4017                           ;	Return value of _memcpy is never used
  4018  001822  0012               	return	
  4019  001824  D7E2               	goto	l3644
  4020  001826                     __end_of_memcpy:
  4021                           	opt stack 0
  4022                           tblptru	equ	0xFF8
  4023                           prodh	equ	0xFF4
  4024                           prodl	equ	0xFF3
  4025                           intcon	equ	0xFF2
  4026                           postinc0	equ	0xFEE
  4027                           wreg	equ	0xFE8
  4028                           indf1	equ	0xFE7
  4029                           fsr1h	equ	0xFE2
  4030                           fsr1l	equ	0xFE1
  4031                           indf2	equ	0xFDF
  4032                           postinc2	equ	0xFDE
  4033                           postdec2	equ	0xFDD
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8
  4037                           
  4038 ;; *************** function _SetChanADC *****************
  4039 ;; Defined at:
  4040 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4041 ;; Parameters:    Size  Location     Type
  4042 ;;  channel         1    wreg     unsigned char 
  4043 ;; Auto vars:     Size  Location     Type
  4044 ;;  channel         1    1[BANK1 ] unsigned char 
  4045 ;; Return value:  Size  Location     Type
  4046 ;;		None               void
  4047 ;; Registers used:
  4048 ;;		wreg, status,2, status,0
  4049 ;; Tracked objects:
  4050 ;;		On entry : 0/0
  4051 ;;		On exit  : 0/0
  4052 ;;		Unchanged: 0/0
  4053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4054 ;;      Params:         0       0       0       0       0
  4055 ;;      Locals:         0       0       1       0       0
  4056 ;;      Temps:          0       0       1       0       0
  4057 ;;      Totals:         0       0       2       0       0
  4058 ;;Total ram usage:        2 bytes
  4059 ;; Hardware stack levels used:    1
  4060 ;; Hardware stack levels required when called:   10
  4061 ;; This function calls:
  4062 ;;		Nothing
  4063 ;; This function is called by:
  4064 ;;		_main
  4065 ;; This function uses a non-reentrant model
  4066 ;;
  4067                           
  4068                           	psect	text23
  4069  001CDE                     __ptext23:
  4070                           	opt stack 0
  4071  001CDE                     _SetChanADC:
  4072                           	opt stack 20
  4073                           
  4074                           ; BSR set to: 1
  4075                           ;incstack = 0
  4076                           ;SetChanADC@channel stored from wreg
  4077  001CDE  CFE8 F181          	movff	wreg,SetChanADC@channel
  4078  001CE2  CFC2 F180          	movff	4034,??_SetChanADC	;volatile
  4079  001CE6  0EC3               	movlw	195
  4080  001CE8  0101               	movlb	1	; () banked
  4081  001CEA  1780               	andwf	??_SetChanADC& (0+255),f,b
  4082  001CEC  0101               	movlb	1	; () banked
  4083  001CEE  0101               	movlb	1	; () banked
  4084  001CF0  90D8               	bcf	status,0,c
  4085  001CF2  3181               	rrcf	SetChanADC@channel& (0+255),w,b
  4086  001CF4  0B3C               	andlw	60
  4087  001CF6  0101               	movlb	1	; () banked
  4088  001CF8  1180               	iorwf	??_SetChanADC& (0+255),w,b
  4089  001CFA  6EC2               	movwf	4034,c	;volatile
  4090                           
  4091                           ; BSR set to: 1
  4092  001CFC  0012               	return	
  4093  001CFE                     __end_of_SetChanADC:
  4094                           	opt stack 0
  4095                           tblptru	equ	0xFF8
  4096                           prodh	equ	0xFF4
  4097                           prodl	equ	0xFF3
  4098                           intcon	equ	0xFF2
  4099                           postinc0	equ	0xFEE
  4100                           wreg	equ	0xFE8
  4101                           indf1	equ	0xFE7
  4102                           fsr1h	equ	0xFE2
  4103                           fsr1l	equ	0xFE1
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _OpenUSART *****************
  4112 ;; Defined at:
  4113 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  config          1    wreg     unsigned char 
  4116 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;  config          1    5[BANK1 ] unsigned char 
  4119 ;; Return value:  Size  Location     Type
  4120 ;;		None               void
  4121 ;; Registers used:
  4122 ;;		wreg, status,2
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4128 ;;      Params:         0       0       2       0       0
  4129 ;;      Locals:         0       0       1       0       0
  4130 ;;      Temps:          0       0       3       0       0
  4131 ;;      Totals:         0       0       6       0       0
  4132 ;;Total ram usage:        6 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:   10
  4135 ;; This function calls:
  4136 ;;		Nothing
  4137 ;; This function is called by:
  4138 ;;		_main
  4139 ;; This function uses a non-reentrant model
  4140 ;;
  4141                           
  4142                           	psect	text24
  4143  0012E2                     __ptext24:
  4144                           	opt stack 0
  4145  0012E2                     _OpenUSART:
  4146                           	opt stack 20
  4147                           
  4148                           ; BSR set to: 1
  4149                           ;incstack = 0
  4150                           ;OpenUSART@config stored from wreg
  4151  0012E2  CFE8 F185          	movff	wreg,OpenUSART@config
  4152  0012E6  0E00               	movlw	0
  4153  0012E8  6EAC               	movwf	4012,c	;volatile
  4154  0012EA  0E00               	movlw	0
  4155  0012EC  6EAB               	movwf	4011,c	;volatile
  4156  0012EE  0101               	movlb	1	; () banked
  4157  0012F0  0101               	movlb	1	; () banked
  4158  0012F2  B185               	btfsc	OpenUSART@config& (0+255),0,b
  4159                           
  4160                           ; BSR set to: 1
  4161  0012F4  88AC               	bsf	4012,4,c	;volatile
  4162                           
  4163                           ; BSR set to: 1
  4164                           
  4165                           ; BSR set to: 1
  4166  0012F6  0101               	movlb	1	; () banked
  4167  0012F8  0101               	movlb	1	; () banked
  4168  0012FA  A385               	btfss	OpenUSART@config& (0+255),1,b
  4169  0012FC  D002               	goto	l3522
  4170                           
  4171                           ; BSR set to: 1
  4172  0012FE  8CAC               	bsf	4012,6,c	;volatile
  4173  001300  8CAB               	bsf	4011,6,c	;volatile
  4174  001302                     l3522:
  4175                           
  4176                           ; BSR set to: 1
  4177  001302  0101               	movlb	1	; () banked
  4178  001304  0101               	movlb	1	; () banked
  4179  001306  B585               	btfsc	OpenUSART@config& (0+255),2,b
  4180                           
  4181                           ; BSR set to: 1
  4182  001308  8EAC               	bsf	4012,7,c	;volatile
  4183                           
  4184                           ; BSR set to: 1
  4185                           
  4186                           ; BSR set to: 1
  4187  00130A  0101               	movlb	1	; () banked
  4188  00130C  0101               	movlb	1	; () banked
  4189  00130E  A785               	btfss	OpenUSART@config& (0+255),3,b
  4190  001310  D002               	goto	l669
  4191                           
  4192                           ; BSR set to: 1
  4193  001312  88AB               	bsf	4011,4,c	;volatile
  4194  001314  D001               	goto	l3530
  4195  001316                     l669:
  4196                           
  4197                           ; BSR set to: 1
  4198  001316  8AAB               	bsf	4011,5,c	;volatile
  4199  001318                     l3530:
  4200                           
  4201                           ; BSR set to: 1
  4202  001318  0101               	movlb	1	; () banked
  4203  00131A  0101               	movlb	1	; () banked
  4204  00131C  B985               	btfsc	OpenUSART@config& (0+255),4,b
  4205                           
  4206                           ; BSR set to: 1
  4207  00131E  84AC               	bsf	4012,2,c	;volatile
  4208                           
  4209                           ; BSR set to: 1
  4210  001320  989E               	bcf	3998,4,c	;volatile
  4211                           
  4212                           ; BSR set to: 1
  4213  001322  0101               	movlb	1	; () banked
  4214  001324  0101               	movlb	1	; () banked
  4215  001326  BB85               	btfsc	OpenUSART@config& (0+255),5,b
  4216                           
  4217                           ; BSR set to: 1
  4218  001328  86AB               	bsf	4011,3,c	;volatile
  4219                           
  4220                           ; BSR set to: 1
  4221                           
  4222                           ; BSR set to: 1
  4223  00132A  0101               	movlb	1	; () banked
  4224  00132C  0101               	movlb	1	; () banked
  4225  00132E  AD85               	btfss	OpenUSART@config& (0+255),6,b
  4226  001330  D002               	goto	l673
  4227                           
  4228                           ; BSR set to: 1
  4229  001332  8A9D               	bsf	3997,5,c	;volatile
  4230  001334  D001               	goto	l674
  4231  001336                     l673:
  4232                           
  4233                           ; BSR set to: 1
  4234  001336  9A9D               	bcf	3997,5,c	;volatile
  4235  001338                     l674:
  4236                           
  4237                           ; BSR set to: 1
  4238  001338  9A9E               	bcf	3998,5,c	;volatile
  4239                           
  4240                           ; BSR set to: 1
  4241  00133A  0101               	movlb	1	; () banked
  4242  00133C  0101               	movlb	1	; () banked
  4243  00133E  AF85               	btfss	OpenUSART@config& (0+255),7,b
  4244  001340  D002               	goto	l675
  4245                           
  4246                           ; BSR set to: 1
  4247  001342  889D               	bsf	3997,4,c	;volatile
  4248  001344  D001               	goto	l676
  4249  001346                     l675:
  4250                           
  4251                           ; BSR set to: 1
  4252  001346  989D               	bcf	3997,4,c	;volatile
  4253  001348                     l676:
  4254                           
  4255                           ; BSR set to: 1
  4256  001348  C180  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  4257                           
  4258                           ; BSR set to: 1
  4259  00134C  0101               	movlb	1	; () banked
  4260  00134E  C181  F182         	movff	OpenUSART@spbrg+1,??_OpenUSART
  4261  001352  C182  F183         	movff	??_OpenUSART,??_OpenUSART+1
  4262  001356  0101               	movlb	1	; () banked
  4263  001358  6B84               	clrf	(??_OpenUSART+2)& (0+255),b
  4264  00135A  0101               	movlb	1	; () banked
  4265  00135C  5183               	movf	(??_OpenUSART+1)& (0+255),w,b
  4266  00135E  6EB0               	movwf	4016,c	;volatile
  4267                           
  4268                           ; BSR set to: 1
  4269  001360  8AAC               	bsf	4012,5,c	;volatile
  4270                           
  4271                           ; BSR set to: 1
  4272  001362  8EAB               	bsf	4011,7,c	;volatile
  4273                           
  4274                           ; BSR set to: 1
  4275  001364  9C94               	bcf	3988,6,c	;volatile
  4276                           
  4277                           ; BSR set to: 1
  4278  001366  8E94               	bsf	3988,7,c	;volatile
  4279                           
  4280                           ; BSR set to: 1
  4281  001368  A8AC               	btfss	4012,4,c	;volatile
  4282  00136A  0012               	return	
  4283                           
  4284                           ; BSR set to: 1
  4285  00136C  BEAC               	btfsc	4012,7,c	;volatile
  4286  00136E  0012               	return	
  4287                           
  4288                           ; BSR set to: 1
  4289  001370  8C94               	bsf	3988,6,c	;volatile
  4290  001372  0012               	return	
  4291  001374                     __end_of_OpenUSART:
  4292                           	opt stack 0
  4293                           tblptru	equ	0xFF8
  4294                           prodh	equ	0xFF4
  4295                           prodl	equ	0xFF3
  4296                           intcon	equ	0xFF2
  4297                           postinc0	equ	0xFEE
  4298                           wreg	equ	0xFE8
  4299                           indf1	equ	0xFE7
  4300                           fsr1h	equ	0xFE2
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           postinc2	equ	0xFDE
  4304                           postdec2	equ	0xFDD
  4305                           fsr2h	equ	0xFDA
  4306                           fsr2l	equ	0xFD9
  4307                           status	equ	0xFD8
  4308                           
  4309 ;; *************** function _OpenTimer1 *****************
  4310 ;; Defined at:
  4311 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  4312 ;; Parameters:    Size  Location     Type
  4313 ;;  config          1    wreg     unsigned char 
  4314 ;; Auto vars:     Size  Location     Type
  4315 ;;  config          1    0[BANK1 ] unsigned char 
  4316 ;; Return value:  Size  Location     Type
  4317 ;;		None               void
  4318 ;; Registers used:
  4319 ;;		wreg, status,2, status,0
  4320 ;; Tracked objects:
  4321 ;;		On entry : 0/0
  4322 ;;		On exit  : 0/0
  4323 ;;		Unchanged: 0/0
  4324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4325 ;;      Params:         0       0       0       0       0
  4326 ;;      Locals:         0       0       1       0       0
  4327 ;;      Temps:          0       0       0       0       0
  4328 ;;      Totals:         0       0       1       0       0
  4329 ;;Total ram usage:        1 bytes
  4330 ;; Hardware stack levels used:    1
  4331 ;; Hardware stack levels required when called:   10
  4332 ;; This function calls:
  4333 ;;		Nothing
  4334 ;; This function is called by:
  4335 ;;		_main
  4336 ;; This function uses a non-reentrant model
  4337 ;;
  4338                           
  4339                           	psect	text25
  4340  001AD6                     __ptext25:
  4341                           	opt stack 0
  4342  001AD6                     _OpenTimer1:
  4343                           	opt stack 20
  4344                           
  4345                           ; BSR set to: 1
  4346                           ;incstack = 0
  4347                           ;OpenTimer1@config stored from wreg
  4348  001AD6  CFE8 F180          	movff	wreg,OpenTimer1@config
  4349  001ADA  0101               	movlb	1	; () banked
  4350  001ADC  0101               	movlb	1	; () banked
  4351  001ADE  5180               	movf	OpenTimer1@config& (0+255),w,b
  4352  001AE0  0B7E               	andlw	126
  4353  001AE2  6ECD               	movwf	4045,c	;volatile
  4354                           
  4355                           ; BSR set to: 1
  4356  001AE4  0101               	movlb	1	; () banked
  4357  001AE6  0101               	movlb	1	; () banked
  4358  001AE8  AD80               	btfss	OpenTimer1@config& (0+255),6,b
  4359  001AEA  D002               	goto	l625
  4360                           
  4361                           ; BSR set to: 1
  4362  001AEC  8ECD               	bsf	4045,7,c	;volatile
  4363  001AEE  D001               	goto	l3494
  4364  001AF0                     l625:
  4365                           
  4366                           ; BSR set to: 1
  4367  001AF0  9ECD               	bcf	4045,7,c	;volatile
  4368  001AF2                     l3494:
  4369                           
  4370                           ; BSR set to: 1
  4371  001AF2  0E00               	movlw	0
  4372  001AF4  6ECF               	movwf	4047,c	;volatile
  4373  001AF6  0E00               	movlw	0
  4374  001AF8  6ECE               	movwf	4046,c	;volatile
  4375                           
  4376                           ; BSR set to: 1
  4377  001AFA  909E               	bcf	3998,0,c	;volatile
  4378                           
  4379                           ; BSR set to: 1
  4380  001AFC  0101               	movlb	1	; () banked
  4381  001AFE  0101               	movlb	1	; () banked
  4382  001B00  AF80               	btfss	OpenTimer1@config& (0+255),7,b
  4383  001B02  D002               	goto	l627
  4384                           
  4385                           ; BSR set to: 1
  4386  001B04  809D               	bsf	3997,0,c	;volatile
  4387  001B06  D001               	goto	l628
  4388  001B08                     l627:
  4389                           
  4390                           ; BSR set to: 1
  4391  001B08  909D               	bcf	3997,0,c	;volatile
  4392  001B0A                     l628:
  4393                           
  4394                           ; BSR set to: 1
  4395  001B0A  80CD               	bsf	4045,0,c	;volatile
  4396                           
  4397                           ; BSR set to: 1
  4398  001B0C  0012               	return	
  4399  001B0E                     __end_of_OpenTimer1:
  4400                           	opt stack 0
  4401                           tblptru	equ	0xFF8
  4402                           prodh	equ	0xFF4
  4403                           prodl	equ	0xFF3
  4404                           intcon	equ	0xFF2
  4405                           postinc0	equ	0xFEE
  4406                           wreg	equ	0xFE8
  4407                           indf1	equ	0xFE7
  4408                           fsr1h	equ	0xFE2
  4409                           fsr1l	equ	0xFE1
  4410                           indf2	equ	0xFDF
  4411                           postinc2	equ	0xFDE
  4412                           postdec2	equ	0xFDD
  4413                           fsr2h	equ	0xFDA
  4414                           fsr2l	equ	0xFD9
  4415                           status	equ	0xFD8
  4416                           
  4417 ;; *************** function _OpenTimer0 *****************
  4418 ;; Defined at:
  4419 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  4420 ;; Parameters:    Size  Location     Type
  4421 ;;  config          1    wreg     unsigned char 
  4422 ;; Auto vars:     Size  Location     Type
  4423 ;;  config          1    0[BANK1 ] unsigned char 
  4424 ;; Return value:  Size  Location     Type
  4425 ;;		None               void
  4426 ;; Registers used:
  4427 ;;		wreg, status,2, status,0
  4428 ;; Tracked objects:
  4429 ;;		On entry : 0/0
  4430 ;;		On exit  : 0/0
  4431 ;;		Unchanged: 0/0
  4432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4433 ;;      Params:         0       0       0       0       0
  4434 ;;      Locals:         0       0       1       0       0
  4435 ;;      Temps:          0       0       0       0       0
  4436 ;;      Totals:         0       0       1       0       0
  4437 ;;Total ram usage:        1 bytes
  4438 ;; Hardware stack levels used:    1
  4439 ;; Hardware stack levels required when called:   10
  4440 ;; This function calls:
  4441 ;;		Nothing
  4442 ;; This function is called by:
  4443 ;;		_main
  4444 ;; This function uses a non-reentrant model
  4445 ;;
  4446                           
  4447                           	psect	text26
  4448  001C44                     __ptext26:
  4449                           	opt stack 0
  4450  001C44                     _OpenTimer0:
  4451                           	opt stack 20
  4452                           
  4453                           ; BSR set to: 1
  4454                           ;incstack = 0
  4455                           ;OpenTimer0@config stored from wreg
  4456  001C44  CFE8 F180          	movff	wreg,OpenTimer0@config
  4457  001C48  0101               	movlb	1	; () banked
  4458  001C4A  0101               	movlb	1	; () banked
  4459  001C4C  5180               	movf	OpenTimer0@config& (0+255),w,b
  4460  001C4E  0B7F               	andlw	127
  4461  001C50  6ED5               	movwf	4053,c	;volatile
  4462                           
  4463                           ; BSR set to: 1
  4464  001C52  0E00               	movlw	0
  4465  001C54  6ED7               	movwf	4055,c	;volatile
  4466                           
  4467                           ; BSR set to: 1
  4468  001C56  0E00               	movlw	0
  4469  001C58  6ED6               	movwf	4054,c	;volatile
  4470                           
  4471                           ; BSR set to: 1
  4472  001C5A  94F2               	bcf	intcon,2,c	;volatile
  4473                           
  4474                           ; BSR set to: 1
  4475  001C5C  0101               	movlb	1	; () banked
  4476  001C5E  0101               	movlb	1	; () banked
  4477  001C60  AF80               	btfss	OpenTimer0@config& (0+255),7,b
  4478  001C62  D002               	goto	l601
  4479                           
  4480                           ; BSR set to: 1
  4481  001C64  8AF2               	bsf	intcon,5,c	;volatile
  4482  001C66  D001               	goto	l602
  4483  001C68                     l601:
  4484                           
  4485                           ; BSR set to: 1
  4486  001C68  9AF2               	bcf	intcon,5,c	;volatile
  4487  001C6A                     l602:
  4488                           
  4489                           ; BSR set to: 1
  4490  001C6A  8ED5               	bsf	4053,7,c	;volatile
  4491                           
  4492                           ; BSR set to: 1
  4493  001C6C  0012               	return	
  4494  001C6E                     __end_of_OpenTimer0:
  4495                           	opt stack 0
  4496                           tblptru	equ	0xFF8
  4497                           prodh	equ	0xFF4
  4498                           prodl	equ	0xFF3
  4499                           intcon	equ	0xFF2
  4500                           postinc0	equ	0xFEE
  4501                           wreg	equ	0xFE8
  4502                           indf1	equ	0xFE7
  4503                           fsr1h	equ	0xFE2
  4504                           fsr1l	equ	0xFE1
  4505                           indf2	equ	0xFDF
  4506                           postinc2	equ	0xFDE
  4507                           postdec2	equ	0xFDD
  4508                           fsr2h	equ	0xFDA
  4509                           fsr2l	equ	0xFD9
  4510                           status	equ	0xFD8
  4511                           
  4512 ;; *************** function _OpenADC *****************
  4513 ;; Defined at:
  4514 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  4515 ;; Parameters:    Size  Location     Type
  4516 ;;  config          1    wreg     unsigned char 
  4517 ;;  config2         1    0[BANK1 ] unsigned char 
  4518 ;;  portconfig      1    1[BANK1 ] unsigned char 
  4519 ;; Auto vars:     Size  Location     Type
  4520 ;;  config          1    4[BANK1 ] unsigned char 
  4521 ;; Return value:  Size  Location     Type
  4522 ;;		None               void
  4523 ;; Registers used:
  4524 ;;		wreg, status,2, status,0
  4525 ;; Tracked objects:
  4526 ;;		On entry : 0/0
  4527 ;;		On exit  : 0/0
  4528 ;;		Unchanged: 0/0
  4529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4530 ;;      Params:         0       0       2       0       0
  4531 ;;      Locals:         0       0       1       0       0
  4532 ;;      Temps:          0       0       2       0       0
  4533 ;;      Totals:         0       0       5       0       0
  4534 ;;Total ram usage:        5 bytes
  4535 ;; Hardware stack levels used:    1
  4536 ;; Hardware stack levels required when called:   10
  4537 ;; This function calls:
  4538 ;;		Nothing
  4539 ;; This function is called by:
  4540 ;;		_main
  4541 ;; This function uses a non-reentrant model
  4542 ;;
  4543                           
  4544                           	psect	text27
  4545  001488                     __ptext27:
  4546                           	opt stack 0
  4547  001488                     _OpenADC:
  4548                           	opt stack 20
  4549                           
  4550                           ; BSR set to: 1
  4551                           ;incstack = 0
  4552                           ;OpenADC@config stored from wreg
  4553  001488  CFE8 F184          	movff	wreg,OpenADC@config
  4554  00148C  0E00               	movlw	0
  4555  00148E  6EC2               	movwf	4034,c	;volatile
  4556  001490  0E00               	movlw	0
  4557  001492  6EC0               	movwf	4032,c	;volatile
  4558  001494  0101               	movlb	1	; () banked
  4559  001496  0101               	movlb	1	; () banked
  4560  001498  90D8               	bcf	status,0,c
  4561  00149A  3180               	rrcf	OpenADC@config2& (0+255),w,b
  4562  00149C  0B3C               	andlw	60
  4563  00149E  6EC2               	movwf	4034,c	;volatile
  4564                           
  4565                           ; BSR set to: 1
  4566  0014A0  C180  F182         	movff	OpenADC@config2,??_OpenADC
  4567  0014A4  0101               	movlb	1	; () banked
  4568  0014A6  3B82               	swapf	??_OpenADC& (0+255),f,b
  4569  0014A8  0EF0               	movlw	240
  4570  0014AA  1782               	andwf	??_OpenADC& (0+255),f,b
  4571  0014AC  0E30               	movlw	48
  4572  0014AE  0101               	movlb	1	; () banked
  4573  0014B0  1782               	andwf	??_OpenADC& (0+255),f,b
  4574  0014B2  0101               	movlb	1	; () banked
  4575  0014B4  0101               	movlb	1	; () banked
  4576  0014B6  5181               	movf	OpenADC@portconfig& (0+255),w,b
  4577  0014B8  0B0F               	andlw	15
  4578  0014BA  0101               	movlb	1	; () banked
  4579  0014BC  1182               	iorwf	??_OpenADC& (0+255),w,b
  4580  0014BE  6EC1               	movwf	4033,c	;volatile
  4581                           
  4582                           ; BSR set to: 1
  4583  0014C0  C184  F182         	movff	OpenADC@config,??_OpenADC
  4584  0014C4  0101               	movlb	1	; () banked
  4585  0014C6  90D8               	bcf	status,0,c
  4586  0014C8  3782               	rlcf	??_OpenADC& (0+255),f,b
  4587  0014CA  0101               	movlb	1	; () banked
  4588  0014CC  90D8               	bcf	status,0,c
  4589  0014CE  3782               	rlcf	??_OpenADC& (0+255),f,b
  4590  0014D0  0E38               	movlw	56
  4591  0014D2  0101               	movlb	1	; () banked
  4592  0014D4  1782               	andwf	??_OpenADC& (0+255),f,b
  4593  0014D6  C184  F183         	movff	OpenADC@config,??_OpenADC+1
  4594  0014DA  0101               	movlb	1	; () banked
  4595  0014DC  3B83               	swapf	(??_OpenADC+1)& (0+255),f,b
  4596  0014DE  0E0F               	movlw	15
  4597  0014E0  1783               	andwf	(??_OpenADC+1)& (0+255),f,b
  4598  0014E2  0E07               	movlw	7
  4599  0014E4  0101               	movlb	1	; () banked
  4600  0014E6  1783               	andwf	(??_OpenADC+1)& (0+255),f,b
  4601  0014E8  0101               	movlb	1	; () banked
  4602  0014EA  0101               	movlb	1	; () banked
  4603  0014EC  5184               	movf	OpenADC@config& (0+255),w,b
  4604  0014EE  0B80               	andlw	128
  4605  0014F0  0101               	movlb	1	; () banked
  4606  0014F2  1183               	iorwf	(??_OpenADC+1)& (0+255),w,b
  4607  0014F4  0101               	movlb	1	; () banked
  4608  0014F6  1182               	iorwf	??_OpenADC& (0+255),w,b
  4609  0014F8  6EC0               	movwf	4032,c	;volatile
  4610                           
  4611                           ; BSR set to: 1
  4612  0014FA  0101               	movlb	1	; () banked
  4613  0014FC  0101               	movlb	1	; () banked
  4614  0014FE  AF80               	btfss	OpenADC@config2& (0+255),7,b
  4615  001500  D003               	goto	l575
  4616                           
  4617                           ; BSR set to: 1
  4618  001502  9C9E               	bcf	3998,6,c	;volatile
  4619  001504  8C9D               	bsf	3997,6,c	;volatile
  4620  001506  8CF2               	bsf	intcon,6,c	;volatile
  4621  001508                     l575:
  4622                           
  4623                           ; BSR set to: 1
  4624  001508  80C2               	bsf	4034,0,c	;volatile
  4625                           
  4626                           ; BSR set to: 1
  4627  00150A  0012               	return	
  4628  00150C                     __end_of_OpenADC:
  4629                           	opt stack 0
  4630                           tblptru	equ	0xFF8
  4631                           prodh	equ	0xFF4
  4632                           prodl	equ	0xFF3
  4633                           intcon	equ	0xFF2
  4634                           postinc0	equ	0xFEE
  4635                           wreg	equ	0xFE8
  4636                           indf1	equ	0xFE7
  4637                           fsr1h	equ	0xFE2
  4638                           fsr1l	equ	0xFE1
  4639                           indf2	equ	0xFDF
  4640                           postinc2	equ	0xFDE
  4641                           postdec2	equ	0xFDD
  4642                           fsr2h	equ	0xFDA
  4643                           fsr2l	equ	0xFD9
  4644                           status	equ	0xFD8
  4645                           
  4646 ;; *************** function _InterruptHandlerLow *****************
  4647 ;; Defined at:
  4648 ;;		line 136 in file "../src/interrupts.c"
  4649 ;; Parameters:    Size  Location     Type
  4650 ;;		None
  4651 ;; Auto vars:     Size  Location     Type
  4652 ;;		None
  4653 ;; Return value:  Size  Location     Type
  4654 ;;		None               void
  4655 ;; Registers used:
  4656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4657 ;; Tracked objects:
  4658 ;;		On entry : 0/0
  4659 ;;		On exit  : 0/0
  4660 ;;		Unchanged: 0/0
  4661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4662 ;;      Params:         0       0       0       0       0
  4663 ;;      Locals:         0       0       0       0       0
  4664 ;;      Temps:         17       0       0       0       0
  4665 ;;      Totals:        17       0       0       0       0
  4666 ;;Total ram usage:       17 bytes
  4667 ;; Hardware stack levels used:    1
  4668 ;; Hardware stack levels required when called:    9
  4669 ;; This function calls:
  4670 ;;		_timer1_int_handler
  4671 ;;		_uart_recv_int_handler
  4672 ;;		_uart_send_int_handler
  4673 ;; This function is called by:
  4674 ;;		Interrupt level 1
  4675 ;; This function uses a non-reentrant model
  4676 ;;
  4677                           
  4678                           	psect	intcodelo
  4679  000018                     __pintcodelo:
  4680                           	opt stack 0
  4681  000018                     _InterruptHandlerLow:
  4682                           	opt stack 17
  4683                           
  4684                           ; BSR set to: 1
  4685                           ;incstack = 0
  4686  000018  CFD8 F024          	movff	status,??_InterruptHandlerLow
  4687  00001C  CFE8 F025          	movff	wreg,??_InterruptHandlerLow+1
  4688  000020  CFE0 F026          	movff	bsr,??_InterruptHandlerLow+2
  4689  000024  CFFA F027          	movff	pclath,??_InterruptHandlerLow+3
  4690  000028  CFFB F028          	movff	pclatu,??_InterruptHandlerLow+4
  4691  00002C  CFE9 F029          	movff	fsr0l,??_InterruptHandlerLow+5
  4692  000030  CFEA F02A          	movff	fsr0h,??_InterruptHandlerLow+6
  4693  000034  CFE1 F02B          	movff	fsr1l,??_InterruptHandlerLow+7
  4694  000038  CFE2 F02C          	movff	fsr1h,??_InterruptHandlerLow+8
  4695  00003C  CFD9 F02D          	movff	fsr2l,??_InterruptHandlerLow+9
  4696  000040  CFDA F02E          	movff	fsr2h,??_InterruptHandlerLow+10
  4697  000044  CFF3 F02F          	movff	prodl,??_InterruptHandlerLow+11
  4698  000048  CFF4 F030          	movff	prodh,??_InterruptHandlerLow+12
  4699  00004C  CFF6 F031          	movff	tblptrl,??_InterruptHandlerLow+13
  4700  000050  CFF7 F032          	movff	tblptrh,??_InterruptHandlerLow+14
  4701  000054  CFF8 F033          	movff	tblptru,??_InterruptHandlerLow+15
  4702  000058  CFF5 F034          	movff	tablat,??_InterruptHandlerLow+16
  4703                           
  4704                           ;interrupts.c: 139: if (PIR1bits.TMR1IF) {
  4705  00005C  A09E               	btfss	3998,0,c	;volatile
  4706  00005E  D003               	goto	i1l3190
  4707                           
  4708                           ;interrupts.c: 140: PIR1bits.TMR1IF = 0;
  4709  000060  909E               	bcf	3998,0,c	;volatile
  4710                           
  4711                           ;interrupts.c: 141: timer1_int_handler();
  4712  000062  ECF3  F00D         	call	_timer1_int_handler	;wreg free
  4713  000066                     i1l3190:
  4714                           
  4715                           ;interrupts.c: 142: }
  4716                           ;interrupts.c: 145: if (PIR1bits.RCIF) {
  4717  000066  AA9E               	btfss	3998,5,c	;volatile
  4718  000068  D003               	goto	i1l3196
  4719                           
  4720                           ;interrupts.c: 146: PIR1bits.RCIF = 0;
  4721  00006A  9A9E               	bcf	3998,5,c	;volatile
  4722                           
  4723                           ;interrupts.c: 147: uart_recv_int_handler();
  4724  00006C  EC87  F001         	call	_uart_recv_int_handler	;wreg free
  4725  000070                     i1l3196:
  4726                           
  4727                           ;interrupts.c: 148: }
  4728                           ;interrupts.c: 151: if (PIR1bits.TX1IF) {
  4729  000070  B89E               	btfsc	3998,4,c	;volatile
  4730                           
  4731                           ;interrupts.c: 152: uart_send_int_handler();
  4732  000072  EC37  F00E         	call	_uart_send_int_handler	;wreg free
  4733  000076  C034  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  4734  00007A  C033  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  4735  00007E  C032  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  4736  000082  C031  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  4737  000086  C030  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  4738  00008A  C02F  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  4739  00008E  C02E  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  4740  000092  C02D  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  4741  000096  C02C  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  4742  00009A  C02B  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  4743  00009E  C02A  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  4744  0000A2  C029  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  4745  0000A6  C028  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  4746  0000AA  C027  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  4747  0000AE  C026  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  4748  0000B2  C025  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  4749  0000B6  C024  FFD8         	movff	??_InterruptHandlerLow,status
  4750  0000BA  0010               	retfie	
  4751  0000BC                     __end_of_InterruptHandlerLow:
  4752                           	opt stack 0
  4753                           pclatu	equ	0xFFB
  4754                           pclath	equ	0xFFA
  4755                           tblptru	equ	0xFF8
  4756                           tblptrh	equ	0xFF7
  4757                           tblptrl	equ	0xFF6
  4758                           tablat	equ	0xFF5
  4759                           prodh	equ	0xFF4
  4760                           prodl	equ	0xFF3
  4761                           intcon	equ	0xFF2
  4762                           postinc0	equ	0xFEE
  4763                           fsr0h	equ	0xFEA
  4764                           fsr0l	equ	0xFE9
  4765                           wreg	equ	0xFE8
  4766                           indf1	equ	0xFE7
  4767                           fsr1h	equ	0xFE2
  4768                           fsr1l	equ	0xFE1
  4769                           bsr	equ	0xFE0
  4770                           indf2	equ	0xFDF
  4771                           postinc2	equ	0xFDE
  4772                           postdec2	equ	0xFDD
  4773                           fsr2h	equ	0xFDA
  4774                           fsr2l	equ	0xFD9
  4775                           status	equ	0xFD8
  4776                           
  4777 ;; *************** function _uart_send_int_handler *****************
  4778 ;; Defined at:
  4779 ;;		line 117 in file "../src/my_uart.c"
  4780 ;; Parameters:    Size  Location     Type
  4781 ;;		None
  4782 ;; Auto vars:     Size  Location     Type
  4783 ;;		None
  4784 ;; Return value:  Size  Location     Type
  4785 ;;		None               void
  4786 ;; Registers used:
  4787 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4788 ;; Tracked objects:
  4789 ;;		On entry : 0/0
  4790 ;;		On exit  : 0/0
  4791 ;;		Unchanged: 0/0
  4792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4793 ;;      Params:         0       0       0       0       0
  4794 ;;      Locals:         0       0       0       0       0
  4795 ;;      Temps:          0       0       0       0       0
  4796 ;;      Totals:         0       0       0       0       0
  4797 ;;Total ram usage:        0 bytes
  4798 ;; Hardware stack levels used:    1
  4799 ;; Hardware stack levels required when called:    5
  4800 ;; This function calls:
  4801 ;;		Nothing
  4802 ;; This function is called by:
  4803 ;;		_InterruptHandlerLow
  4804 ;; This function uses a non-reentrant model
  4805 ;;
  4806                           
  4807                           	psect	text29
  4808  001C6E                     __ptext29:
  4809                           	opt stack 0
  4810  001C6E                     _uart_send_int_handler:
  4811                           	opt stack 20
  4812                           
  4813                           ;my_uart.c: 119: if (uc_ptr->Tx_buflen > 10) {
  4814                           
  4815                           ;incstack = 0
  4816  001C6E  EE20 F014          	lfsr	2,20
  4817  001C72  5067               	movf	_uc_ptr,w,c
  4818  001C74  26D9               	addwf	fsr2l,f,c
  4819  001C76  5068               	movf	_uc_ptr+1,w,c
  4820  001C78  22DA               	addwfc	fsr2h,f,c
  4821  001C7A  0E0A               	movlw	10
  4822  001C7C  64DF               	cpfsgt	indf2,c
  4823  001C7E  0012               	return	
  4824                           
  4825                           ;my_uart.c: 120: PIE1bits.TX1IE = 0;
  4826  001C80  989D               	bcf	3997,4,c	;volatile
  4827                           
  4828                           ;my_uart.c: 121: uc_ptr->Tx_buflen = 0;
  4829  001C82  EE20 F014          	lfsr	2,20
  4830  001C86  5067               	movf	_uc_ptr,w,c
  4831  001C88  26D9               	addwf	fsr2l,f,c
  4832  001C8A  5068               	movf	_uc_ptr+1,w,c
  4833  001C8C  22DA               	addwfc	fsr2h,f,c
  4834  001C8E  0E00               	movlw	0
  4835  001C90  6EDF               	movwf	indf2,c
  4836                           
  4837                           ;my_uart.c: 122: } else {
  4838  001C92  0012               	return	
  4839  001C94                     __end_of_uart_send_int_handler:
  4840                           	opt stack 0
  4841                           pclatu	equ	0xFFB
  4842                           pclath	equ	0xFFA
  4843                           tblptru	equ	0xFF8
  4844                           tblptrh	equ	0xFF7
  4845                           tblptrl	equ	0xFF6
  4846                           tablat	equ	0xFF5
  4847                           prodh	equ	0xFF4
  4848                           prodl	equ	0xFF3
  4849                           intcon	equ	0xFF2
  4850                           postinc0	equ	0xFEE
  4851                           fsr0h	equ	0xFEA
  4852                           fsr0l	equ	0xFE9
  4853                           wreg	equ	0xFE8
  4854                           indf1	equ	0xFE7
  4855                           fsr1h	equ	0xFE2
  4856                           fsr1l	equ	0xFE1
  4857                           bsr	equ	0xFE0
  4858                           indf2	equ	0xFDF
  4859                           postinc2	equ	0xFDE
  4860                           postdec2	equ	0xFDD
  4861                           fsr2h	equ	0xFDA
  4862                           fsr2l	equ	0xFD9
  4863                           status	equ	0xFD8
  4864                           
  4865 ;; *************** function _uart_recv_int_handler *****************
  4866 ;; Defined at:
  4867 ;;		line 14 in file "../src/my_uart.c"
  4868 ;; Parameters:    Size  Location     Type
  4869 ;;		None
  4870 ;; Auto vars:     Size  Location     Type
  4871 ;;  i               2   32[COMRAM] int 
  4872 ;;  checkSum        1   31[COMRAM] unsigned char 
  4873 ;;  data            1   34[COMRAM] unsigned char 
  4874 ;; Return value:  Size  Location     Type
  4875 ;;		None               void
  4876 ;; Registers used:
  4877 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4878 ;; Tracked objects:
  4879 ;;		On entry : 0/0
  4880 ;;		On exit  : 0/0
  4881 ;;		Unchanged: 0/0
  4882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4883 ;;      Params:         0       0       0       0       0
  4884 ;;      Locals:         4       0       0       0       0
  4885 ;;      Temps:          5       0       0       0       0
  4886 ;;      Totals:         9       0       0       0       0
  4887 ;;Total ram usage:        9 bytes
  4888 ;; Hardware stack levels used:    1
  4889 ;; Hardware stack levels required when called:    8
  4890 ;; This function calls:
  4891 ;;		_ReadUSART
  4892 ;;		_ToMainLow_sendmsg
  4893 ;;		i1_ToMainHigh_sendmsg
  4894 ;; This function is called by:
  4895 ;;		_InterruptHandlerLow
  4896 ;; This function uses a non-reentrant model
  4897 ;;
  4898                           
  4899                           	psect	text30
  4900  00030E                     __ptext30:
  4901                           	opt stack 0
  4902  00030E                     _uart_recv_int_handler:
  4903                           	opt stack 17
  4904                           
  4905                           ;my_uart.c: 28: if ((PIR1bits.RCIF)) {
  4906                           
  4907                           ;incstack = 0
  4908  00030E  AA9E               	btfss	3998,5,c	;volatile
  4909  000310  D103               	goto	i1l3178
  4910                           
  4911                           ;my_uart.c: 30: char data = ReadUSART();
  4912  000312  EC7F  F00E         	call	_ReadUSART	;wreg free
  4913  000316  6E23               	movwf	uart_recv_int_handler@data,c
  4914                           
  4915                           ;my_uart.c: 35: if (!msgtype_flag && data == 0xaa) {
  4916  000318  6662               	tstfsz	_msgtype_flag,c
  4917  00031A  D015               	goto	i1l3134
  4918  00031C  5023               	movf	uart_recv_int_handler@data,w,c
  4919  00031E  0AAA               	xorlw	170
  4920  000320  A4D8               	btfss	status,2,c
  4921  000322  D011               	goto	i1l3134
  4922                           
  4923                           ;my_uart.c: 36: uc_ptr->Rx_buffer[0] = data;
  4924  000324  EE20 F00A          	lfsr	2,10
  4925  000328  5067               	movf	_uc_ptr,w,c
  4926  00032A  26D9               	addwf	fsr2l,f,c
  4927  00032C  5068               	movf	_uc_ptr+1,w,c
  4928  00032E  22DA               	addwfc	fsr2h,f,c
  4929  000330  C023  FFDF         	movff	uart_recv_int_handler@data,indf2
  4930                           
  4931                           ;my_uart.c: 37: msgtype_flag = 0x1;
  4932  000334  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4933  000336  0E01               	movlw	1
  4934  000338  6E62               	movwf	_msgtype_flag,c
  4935  00033A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4936                           
  4937                           ;my_uart.c: 38: sendToSensorPIC_flag = 0x1;
  4938  00033C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4939  00033E  0E01               	movlw	1
  4940  000340  6E64               	movwf	_sendToSensorPIC_flag,c
  4941  000342  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  4942  000344  D01D               	goto	L1
  4943  000346                     i1l3134:
  4944                           
  4945                           ;my_uart.c: 48: else if (sendToSensorPIC_flag && data == 0x03) {
  4946  000346  5064               	movf	_sendToSensorPIC_flag,w,c
  4947  000348  B4D8               	btfsc	status,2,c
  4948  00034A  D022               	goto	i1l387
  4949  00034C  5023               	movf	uart_recv_int_handler@data,w,c
  4950  00034E  0A03               	xorlw	3
  4951  000350  A4D8               	btfss	status,2,c
  4952  000352  D01E               	goto	i1l387
  4953                           
  4954                           ;my_uart.c: 49: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  4955  000354  EE20 F015          	lfsr	2,21
  4956  000358  5067               	movf	_uc_ptr,w,c
  4957  00035A  26D9               	addwf	fsr2l,f,c
  4958  00035C  5068               	movf	_uc_ptr+1,w,c
  4959  00035E  22DA               	addwfc	fsr2h,f,c
  4960  000360  50DF               	movf	indf2,w,c
  4961  000362  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4962  000364  501B               	movf	??_uart_recv_int_handler,w,c
  4963  000366  0D01               	mullw	1
  4964  000368  0E0A               	movlw	10
  4965  00036A  26F3               	addwf	prodl,f,c
  4966  00036C  0E00               	movlw	0
  4967  00036E  22F4               	addwfc	prodh,f,c
  4968  000370  50F3               	movf	prodl,w,c
  4969  000372  2467               	addwf	_uc_ptr,w,c
  4970  000374  6ED9               	movwf	fsr2l,c
  4971  000376  50F4               	movf	prodh,w,c
  4972  000378  2068               	addwfc	_uc_ptr+1,w,c
  4973  00037A  6EDA               	movwf	fsr2h,c
  4974  00037C  C023  FFDF         	movff	uart_recv_int_handler@data,indf2
  4975  000380                     L1:
  4976                           
  4977                           ;my_uart.c: 51: uc_ptr->Rx_buflen++;
  4978  000380  EE20 F015          	lfsr	2,21
  4979  000384  5067               	movf	_uc_ptr,w,c
  4980  000386  26D9               	addwf	fsr2l,f,c
  4981  000388  5068               	movf	_uc_ptr+1,w,c
  4982  00038A  22DA               	addwfc	fsr2h,f,c
  4983  00038C  2ADF               	incf	indf2,f,c
  4984                           
  4985                           ;my_uart.c: 52: }
  4986  00038E  D0C4               	goto	i1l3178
  4987  000390                     i1l387:
  4988                           
  4989                           ;my_uart.c: 59: else if (!checksum_flag && uc_ptr->Rx_buflen == uc_ptr->Rx_buffer[1] - 1
      +                          ) {
  4990  000390  665D               	tstfsz	_checksum_flag,c
  4991  000392  D0C2               	goto	i1l3178
  4992  000394  0EFF               	movlw	255
  4993  000396  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  4994  000398  0EFF               	movlw	255
  4995  00039A  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  4996  00039C  EE20 F00B          	lfsr	2,11
  4997  0003A0  5067               	movf	_uc_ptr,w,c
  4998  0003A2  26D9               	addwf	fsr2l,f,c
  4999  0003A4  5068               	movf	_uc_ptr+1,w,c
  5000  0003A6  22DA               	addwfc	fsr2h,f,c
  5001  0003A8  50DF               	movf	indf2,w,c
  5002  0003AA  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  5003  0003AC  6A1E               	clrf	(??_uart_recv_int_handler+3)& (0+255),c
  5004  0003AE  501B               	movf	??_uart_recv_int_handler,w,c
  5005  0003B0  261D               	addwf	??_uart_recv_int_handler+2,f,c
  5006  0003B2  501C               	movf	??_uart_recv_int_handler+1,w,c
  5007  0003B4  221E               	addwfc	??_uart_recv_int_handler+3,f,c
  5008  0003B6  EE20 F015          	lfsr	2,21
  5009  0003BA  5067               	movf	_uc_ptr,w,c
  5010  0003BC  26D9               	addwf	fsr2l,f,c
  5011  0003BE  5068               	movf	_uc_ptr+1,w,c
  5012  0003C0  22DA               	addwfc	fsr2h,f,c
  5013  0003C2  50DF               	movf	indf2,w,c
  5014  0003C4  6E1F               	movwf	(??_uart_recv_int_handler+4)& (0+255),c
  5015  0003C6  501F               	movf	??_uart_recv_int_handler+4,w,c
  5016  0003C8  181D               	xorwf	??_uart_recv_int_handler+2,w,c
  5017  0003CA  101E               	iorwf	??_uart_recv_int_handler+3,w,c
  5018  0003CC  A4D8               	btfss	status,2,c
  5019  0003CE  D0A4               	goto	i1l3178
  5020                           
  5021                           ;my_uart.c: 60: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5022  0003D0  EE20 F015          	lfsr	2,21
  5023  0003D4  5067               	movf	_uc_ptr,w,c
  5024  0003D6  26D9               	addwf	fsr2l,f,c
  5025  0003D8  5068               	movf	_uc_ptr+1,w,c
  5026  0003DA  22DA               	addwfc	fsr2h,f,c
  5027  0003DC  50DF               	movf	indf2,w,c
  5028  0003DE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5029  0003E0  501B               	movf	??_uart_recv_int_handler,w,c
  5030  0003E2  0D01               	mullw	1
  5031  0003E4  0E0A               	movlw	10
  5032  0003E6  26F3               	addwf	prodl,f,c
  5033  0003E8  0E00               	movlw	0
  5034  0003EA  22F4               	addwfc	prodh,f,c
  5035  0003EC  50F3               	movf	prodl,w,c
  5036  0003EE  2467               	addwf	_uc_ptr,w,c
  5037  0003F0  6ED9               	movwf	fsr2l,c
  5038  0003F2  50F4               	movf	prodh,w,c
  5039  0003F4  2068               	addwfc	_uc_ptr+1,w,c
  5040  0003F6  6EDA               	movwf	fsr2h,c
  5041  0003F8  C023  FFDF         	movff	uart_recv_int_handler@data,indf2
  5042                           
  5043                           ;my_uart.c: 63: checksum_flag = 0x1;
  5044  0003FC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5045  0003FE  0E01               	movlw	1
  5046  000400  6E5D               	movwf	_checksum_flag,c
  5047  000402  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5048                           
  5049                           ;my_uart.c: 64: int i = 0;
  5050  000404  0E00               	movlw	0
  5051  000406  6E22               	movwf	uart_recv_int_handler@i+1,c
  5052  000408  0E00               	movlw	0
  5053  00040A  6E21               	movwf	uart_recv_int_handler@i,c
  5054                           
  5055                           ;my_uart.c: 65: unsigned char checkSum = 0x0;
  5056  00040C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5057  00040E  0E00               	movlw	0
  5058  000410  6E20               	movwf	uart_recv_int_handler@checkSum,c
  5059  000412  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5060                           
  5061                           ;my_uart.c: 67: for (; i < uc_ptr->Rx_buffer[1] - 1; i++) {
  5062  000414  D010               	goto	i1l3156
  5063  000416                     i1l3152:
  5064                           
  5065                           ;my_uart.c: 68: checkSum ^= uc_ptr->Rx_buffer[i];
  5066  000416  0E0A               	movlw	10
  5067  000418  2421               	addwf	uart_recv_int_handler@i,w,c
  5068  00041A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5069  00041C  0E00               	movlw	0
  5070  00041E  2022               	addwfc	uart_recv_int_handler@i+1,w,c
  5071  000420  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  5072  000422  501B               	movf	??_uart_recv_int_handler,w,c
  5073  000424  2467               	addwf	_uc_ptr,w,c
  5074  000426  6ED9               	movwf	fsr2l,c
  5075  000428  501C               	movf	??_uart_recv_int_handler+1,w,c
  5076  00042A  2068               	addwfc	_uc_ptr+1,w,c
  5077  00042C  6EDA               	movwf	fsr2h,c
  5078  00042E  50DF               	movf	indf2,w,c
  5079  000430  1A20               	xorwf	uart_recv_int_handler@checkSum,f,c
  5080  000432  4A21               	infsnz	uart_recv_int_handler@i,f,c
  5081  000434  2A22               	incf	uart_recv_int_handler@i+1,f,c
  5082  000436                     i1l3156:
  5083  000436  0EFF               	movlw	255
  5084  000438  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5085  00043A  0EFF               	movlw	255
  5086  00043C  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  5087  00043E  EE20 F00B          	lfsr	2,11
  5088  000442  5067               	movf	_uc_ptr,w,c
  5089  000444  26D9               	addwf	fsr2l,f,c
  5090  000446  5068               	movf	_uc_ptr+1,w,c
  5091  000448  22DA               	addwfc	fsr2h,f,c
  5092  00044A  50DF               	movf	indf2,w,c
  5093  00044C  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  5094  00044E  6A1E               	clrf	(??_uart_recv_int_handler+3)& (0+255),c
  5095  000450  501B               	movf	??_uart_recv_int_handler,w,c
  5096  000452  261D               	addwf	??_uart_recv_int_handler+2,f,c
  5097  000454  501C               	movf	??_uart_recv_int_handler+1,w,c
  5098  000456  221E               	addwfc	??_uart_recv_int_handler+3,f,c
  5099  000458  5022               	movf	uart_recv_int_handler@i+1,w,c
  5100  00045A  0A80               	xorlw	128
  5101  00045C  6E1F               	movwf	(??_uart_recv_int_handler+4)& (0+255),c
  5102  00045E  501D               	movf	??_uart_recv_int_handler+2,w,c
  5103  000460  5C21               	subwf	uart_recv_int_handler@i,w,c
  5104  000462  501E               	movf	??_uart_recv_int_handler+3,w,c
  5105  000464  0A80               	xorlw	128
  5106  000466  581F               	subwfb	(??_uart_recv_int_handler+4)& (0+255),w,c
  5107  000468  A0D8               	btfss	status,0,c
  5108  00046A  D7D5               	goto	i1l3152
  5109                           
  5110                           ;my_uart.c: 69: }
  5111                           ;my_uart.c: 71: if (checkSum != uc_ptr->Rx_buffer[uc_ptr->Rx_buflen]) {
  5112  00046C  EE20 F015          	lfsr	2,21
  5113  000470  5067               	movf	_uc_ptr,w,c
  5114  000472  26D9               	addwf	fsr2l,f,c
  5115  000474  5068               	movf	_uc_ptr+1,w,c
  5116  000476  22DA               	addwfc	fsr2h,f,c
  5117  000478  50DF               	movf	indf2,w,c
  5118  00047A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5119  00047C  501B               	movf	??_uart_recv_int_handler,w,c
  5120  00047E  0D01               	mullw	1
  5121  000480  0E0A               	movlw	10
  5122  000482  26F3               	addwf	prodl,f,c
  5123  000484  0E00               	movlw	0
  5124  000486  22F4               	addwfc	prodh,f,c
  5125  000488  50F3               	movf	prodl,w,c
  5126  00048A  2467               	addwf	_uc_ptr,w,c
  5127  00048C  6ED9               	movwf	fsr2l,c
  5128  00048E  50F4               	movf	prodh,w,c
  5129  000490  2068               	addwfc	_uc_ptr+1,w,c
  5130  000492  6EDA               	movwf	fsr2h,c
  5131  000494  50DF               	movf	indf2,w,c
  5132  000496  1820               	xorwf	uart_recv_int_handler@checkSum,w,c
  5133  000498  B4D8               	btfsc	status,2,c
  5134  00049A  D009               	goto	i1l3162
  5135                           
  5136                           ;my_uart.c: 73: uc_ptr->Rx_buflen = 0;
  5137  00049C  EE20 F015          	lfsr	2,21
  5138  0004A0  5067               	movf	_uc_ptr,w,c
  5139  0004A2  26D9               	addwf	fsr2l,f,c
  5140  0004A4  5068               	movf	_uc_ptr+1,w,c
  5141  0004A6  22DA               	addwfc	fsr2h,f,c
  5142  0004A8  0E00               	movlw	0
  5143  0004AA  6EDF               	movwf	indf2,c
  5144                           
  5145                           ;my_uart.c: 77: }
  5146  0004AC  D01D               	goto	i1l3168
  5147  0004AE                     i1l3162:
  5148                           
  5149                           ;my_uart.c: 85: else if (sendToSensorPIC_flag) {
  5150  0004AE  5064               	movf	_sendToSensorPIC_flag,w,c
  5151  0004B0  B4D8               	btfsc	status,2,c
  5152  0004B2  D01A               	goto	i1l3168
  5153                           
  5154                           ;my_uart.c: 86: uc_ptr->Rx_buflen++;
  5155  0004B4  EE20 F015          	lfsr	2,21
  5156  0004B8  5067               	movf	_uc_ptr,w,c
  5157  0004BA  26D9               	addwf	fsr2l,f,c
  5158  0004BC  5068               	movf	_uc_ptr+1,w,c
  5159  0004BE  22DA               	addwfc	fsr2h,f,c
  5160  0004C0  2ADF               	incf	indf2,f,c
  5161                           
  5162                           ;my_uart.c: 88: ToMainHigh_sendmsg(uc_ptr->Rx_buflen, 40, (void *) uc_ptr->Rx_buffer);
  5163  0004C2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5164  0004C4  0E28               	movlw	40
  5165  0004C6  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  5166  0004C8  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5167  0004CA  0E0A               	movlw	10
  5168  0004CC  2467               	addwf	_uc_ptr,w,c
  5169  0004CE  6E18               	movwf	i1ToMainHigh_sendmsg@data,c
  5170  0004D0  0E00               	movlw	0
  5171  0004D2  2068               	addwfc	_uc_ptr+1,w,c
  5172  0004D4  6E19               	movwf	i1ToMainHigh_sendmsg@data+1,c
  5173  0004D6  EE20 F015          	lfsr	2,21
  5174  0004DA  5067               	movf	_uc_ptr,w,c
  5175  0004DC  26D9               	addwf	fsr2l,f,c
  5176  0004DE  5068               	movf	_uc_ptr+1,w,c
  5177  0004E0  22DA               	addwfc	fsr2h,f,c
  5178  0004E2  50DF               	movf	indf2,w,c
  5179  0004E4  EC4A  F00E         	call	i1_ToMainHigh_sendmsg
  5180  0004E8                     i1l3168:
  5181                           
  5182                           ;my_uart.c: 89: }
  5183                           ;my_uart.c: 91: msgtype_flag = 0x0;
  5184  0004E8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5185  0004EA  0E00               	movlw	0
  5186  0004EC  6E62               	movwf	_msgtype_flag,c
  5187  0004EE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5188                           
  5189                           ;my_uart.c: 92: checksum_flag = 0x0;
  5190  0004F0  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5191  0004F2  0E00               	movlw	0
  5192  0004F4  6E5D               	movwf	_checksum_flag,c
  5193  0004F6  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5194                           
  5195                           ;my_uart.c: 93: sendToMotorPIC_flag = 0x0;
  5196  0004F8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5197  0004FA  0E00               	movlw	0
  5198  0004FC  6E63               	movwf	_sendToMotorPIC_flag,c
  5199  0004FE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5200                           
  5201                           ;my_uart.c: 94: sendToSensorPIC_flag = 0x0;
  5202  000500  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5203  000502  0E00               	movlw	0
  5204  000504  6E64               	movwf	_sendToSensorPIC_flag,c
  5205  000506  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5206                           
  5207                           ;my_uart.c: 95: uc_ptr->Rx_buflen = 0;
  5208  000508  EE20 F015          	lfsr	2,21
  5209  00050C  5067               	movf	_uc_ptr,w,c
  5210  00050E  26D9               	addwf	fsr2l,f,c
  5211  000510  5068               	movf	_uc_ptr+1,w,c
  5212  000512  22DA               	addwfc	fsr2h,f,c
  5213  000514  0E00               	movlw	0
  5214  000516  6EDF               	movwf	indf2,c
  5215  000518                     i1l3178:
  5216                           
  5217                           ;my_uart.c: 96: }
  5218                           ;my_uart.c: 97: }
  5219                           ;my_uart.c: 105: if (USART_Status.OVERRUN_ERROR == 1) {
  5220  000518  A65C               	btfss	_USART_Status,3,c
  5221  00051A  0012               	return	
  5222                           
  5223                           ;my_uart.c: 111: RCSTAbits.CREN = 0;
  5224  00051C  98AB               	bcf	4011,4,c	;volatile
  5225                           
  5226                           ;my_uart.c: 112: RCSTAbits.CREN = 1;
  5227  00051E  88AB               	bsf	4011,4,c	;volatile
  5228                           
  5229                           ;my_uart.c: 113: ToMainLow_sendmsg(0, 30, (void *) 0);
  5230  000520  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5231  000522  0E1E               	movlw	30
  5232  000524  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5233  000526  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5234  000528  0E00               	movlw	0
  5235  00052A  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5236  00052C  0E00               	movlw	0
  5237  00052E  6E18               	movwf	ToMainLow_sendmsg@data,c
  5238  000530  0E00               	movlw	0
  5239  000532  EC5D  F00E         	call	_ToMainLow_sendmsg
  5240  000536  0012               	return	
  5241  000538                     __end_of_uart_recv_int_handler:
  5242                           	opt stack 0
  5243                           pclatu	equ	0xFFB
  5244                           pclath	equ	0xFFA
  5245                           tblptru	equ	0xFF8
  5246                           tblptrh	equ	0xFF7
  5247                           tblptrl	equ	0xFF6
  5248                           tablat	equ	0xFF5
  5249                           prodh	equ	0xFF4
  5250                           prodl	equ	0xFF3
  5251                           intcon	equ	0xFF2
  5252                           postinc0	equ	0xFEE
  5253                           fsr0h	equ	0xFEA
  5254                           fsr0l	equ	0xFE9
  5255                           wreg	equ	0xFE8
  5256                           indf1	equ	0xFE7
  5257                           fsr1h	equ	0xFE2
  5258                           fsr1l	equ	0xFE1
  5259                           bsr	equ	0xFE0
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           fsr2h	equ	0xFDA
  5264                           fsr2l	equ	0xFD9
  5265                           status	equ	0xFD8
  5266                           
  5267 ;; *************** function i1_ToMainHigh_sendmsg *****************
  5268 ;; Defined at:
  5269 ;;		line 126 in file "../src/messages.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  length          1    wreg     unsigned char 
  5272 ;;  msgtype         1   22[COMRAM] unsigned char 
  5273 ;;  data            2   23[COMRAM] PTR void 
  5274 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(22), 
  5275 ;; Auto vars:     Size  Location     Type
  5276 ;;  length          1   25[COMRAM] unsigned char 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  1    wreg      char 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5286 ;;      Params:         3       0       0       0       0
  5287 ;;      Locals:         1       0       0       0       0
  5288 ;;      Temps:          0       0       0       0       0
  5289 ;;      Totals:         4       0       0       0       0
  5290 ;;Total ram usage:        4 bytes
  5291 ;; Hardware stack levels used:    1
  5292 ;; Hardware stack levels required when called:    7
  5293 ;; This function calls:
  5294 ;;		i1_send_msg
  5295 ;; This function is called by:
  5296 ;;		_uart_recv_int_handler
  5297 ;; This function uses a non-reentrant model
  5298 ;;
  5299                           
  5300                           	psect	text31
  5301  001C94                     __ptext31:
  5302                           	opt stack 0
  5303  001C94                     i1_ToMainHigh_sendmsg:
  5304                           	opt stack 17
  5305                           
  5306                           ;incstack = 0
  5307                           ;i1ToMainHigh_sendmsg@length stored from wreg
  5308  001C94  CFE8 F01A          	movff	wreg,i1ToMainHigh_sendmsg@length
  5309                           
  5310                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  5311                           ;	Return value of i1_ToMainHigh_sendmsg is never used
  5312  001C98  0100               	movlb	0	; () banked
  5313  001C9A  0E00               	movlw	high _ToMainHigh_MQ
  5314  001C9C  6E0C               	movwf	i1send_msg@qptr+1,c
  5315  001C9E  0100               	movlb	0	; () banked
  5316  001CA0  0E80               	movlw	low _ToMainHigh_MQ
  5317  001CA2  6E0B               	movwf	i1send_msg@qptr,c
  5318  001CA4  C01A  F00D         	movff	i1ToMainHigh_sendmsg@length,i1send_msg@length
  5319  001CA8  C017  F00E         	movff	i1ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  5320  001CAC  C019  F010         	movff	i1ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  5321  001CB0  C018  F00F         	movff	i1ToMainHigh_sendmsg@data,i1send_msg@data
  5322  001CB4  EC1C  F009         	call	i1_send_msg	;wreg free
  5323  001CB8  0012               	return	
  5324  001CBA                     __end_ofi1_ToMainHigh_sendmsg:
  5325                           	opt stack 0
  5326                           pclatu	equ	0xFFB
  5327                           pclath	equ	0xFFA
  5328                           tblptru	equ	0xFF8
  5329                           tblptrh	equ	0xFF7
  5330                           tblptrl	equ	0xFF6
  5331                           tablat	equ	0xFF5
  5332                           prodh	equ	0xFF4
  5333                           prodl	equ	0xFF3
  5334                           intcon	equ	0xFF2
  5335                           postinc0	equ	0xFEE
  5336                           fsr0h	equ	0xFEA
  5337                           fsr0l	equ	0xFE9
  5338                           wreg	equ	0xFE8
  5339                           indf1	equ	0xFE7
  5340                           fsr1h	equ	0xFE2
  5341                           fsr1l	equ	0xFE1
  5342                           bsr	equ	0xFE0
  5343                           indf2	equ	0xFDF
  5344                           postinc2	equ	0xFDE
  5345                           postdec2	equ	0xFDD
  5346                           fsr2h	equ	0xFDA
  5347                           fsr2l	equ	0xFD9
  5348                           status	equ	0xFD8
  5349                           
  5350 ;; *************** function _ReadUSART *****************
  5351 ;; Defined at:
  5352 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5353 ;; Parameters:    Size  Location     Type
  5354 ;;		None
  5355 ;; Auto vars:     Size  Location     Type
  5356 ;;  data            1    0[COMRAM] unsigned char 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  1    wreg      unsigned char 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5366 ;;      Params:         0       0       0       0       0
  5367 ;;      Locals:         1       0       0       0       0
  5368 ;;      Temps:          0       0       0       0       0
  5369 ;;      Totals:         1       0       0       0       0
  5370 ;;Total ram usage:        1 bytes
  5371 ;; Hardware stack levels used:    1
  5372 ;; Hardware stack levels required when called:    5
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_uart_recv_int_handler
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text32
  5381  001CFE                     __ptext32:
  5382                           	opt stack 0
  5383  001CFE                     _ReadUSART:
  5384                           	opt stack 19
  5385                           
  5386                           ;incstack = 0
  5387  001CFE  0EF2               	movlw	242
  5388  001D00  165C               	andwf	_USART_Status,f,c
  5389  001D02  ACAB               	btfss	4011,6,c	;volatile
  5390  001D04  D003               	goto	i1l687
  5391  001D06  905C               	bcf	_USART_Status,0,c
  5392  001D08  B0AB               	btfsc	4011,0,c	;volatile
  5393  001D0A  805C               	bsf	_USART_Status,0,c
  5394  001D0C                     i1l687:
  5395  001D0C  B4AB               	btfsc	4011,2,c	;volatile
  5396  001D0E  845C               	bsf	_USART_Status,2,c
  5397  001D10  B2AB               	btfsc	4011,1,c	;volatile
  5398  001D12  865C               	bsf	_USART_Status,3,c
  5399  001D14  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5400  001D18  5001               	movf	ReadUSART@data,w,c
  5401  001D1A  0012               	return	
  5402  001D1C                     __end_of_ReadUSART:
  5403                           	opt stack 0
  5404                           pclatu	equ	0xFFB
  5405                           pclath	equ	0xFFA
  5406                           tblptru	equ	0xFF8
  5407                           tblptrh	equ	0xFF7
  5408                           tblptrl	equ	0xFF6
  5409                           tablat	equ	0xFF5
  5410                           prodh	equ	0xFF4
  5411                           prodl	equ	0xFF3
  5412                           intcon	equ	0xFF2
  5413                           postinc0	equ	0xFEE
  5414                           fsr0h	equ	0xFEA
  5415                           fsr0l	equ	0xFE9
  5416                           wreg	equ	0xFE8
  5417                           indf1	equ	0xFE7
  5418                           fsr1h	equ	0xFE2
  5419                           fsr1l	equ	0xFE1
  5420                           bsr	equ	0xFE0
  5421                           indf2	equ	0xFDF
  5422                           postinc2	equ	0xFDE
  5423                           postdec2	equ	0xFDD
  5424                           fsr2h	equ	0xFDA
  5425                           fsr2l	equ	0xFD9
  5426                           status	equ	0xFD8
  5427                           
  5428 ;; *************** function _timer1_int_handler *****************
  5429 ;; Defined at:
  5430 ;;		line 43 in file "../src/user_interrupts.c"
  5431 ;; Parameters:    Size  Location     Type
  5432 ;;		None
  5433 ;; Auto vars:     Size  Location     Type
  5434 ;;  result          2   27[COMRAM] unsigned int 
  5435 ;; Return value:  Size  Location     Type
  5436 ;;		None               void
  5437 ;; Registers used:
  5438 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5439 ;; Tracked objects:
  5440 ;;		On entry : 0/0
  5441 ;;		On exit  : 0/0
  5442 ;;		Unchanged: 0/0
  5443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5444 ;;      Params:         0       0       0       0       0
  5445 ;;      Locals:         2       0       0       0       0
  5446 ;;      Temps:          1       0       0       0       0
  5447 ;;      Totals:         3       0       0       0       0
  5448 ;;Total ram usage:        3 bytes
  5449 ;; Hardware stack levels used:    1
  5450 ;; Hardware stack levels required when called:    8
  5451 ;; This function calls:
  5452 ;;		_ReadTimer1
  5453 ;;		_ToMainLow_sendmsg
  5454 ;;		_WriteTimer1
  5455 ;; This function is called by:
  5456 ;;		_InterruptHandlerLow
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           	psect	text33
  5461  001BE6                     __ptext33:
  5462                           	opt stack 0
  5463  001BE6                     _timer1_int_handler:
  5464                           	opt stack 17
  5465                           
  5466                           ;user_interrupts.c: 44: unsigned int result;
  5467                           ;user_interrupts.c: 51: result = ReadTimer1();
  5468                           
  5469                           ;incstack = 0
  5470  001BE6  ECB4  F00E         	call	_ReadTimer1	;wreg free
  5471  001BEA  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  5472  001BEE  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  5473                           
  5474                           ;user_interrupts.c: 52: ToMainLow_sendmsg(0, 11, (void *) 0);
  5475  001BF2  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  5476  001BF4  0E0B               	movlw	11
  5477  001BF6  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5478  001BF8  501B               	movf	??_timer1_int_handler& (0+255),w,c
  5479  001BFA  0E00               	movlw	0
  5480  001BFC  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5481  001BFE  0E00               	movlw	0
  5482  001C00  6E18               	movwf	ToMainLow_sendmsg@data,c
  5483  001C02  0E00               	movlw	0
  5484  001C04  EC5D  F00E         	call	_ToMainLow_sendmsg
  5485                           
  5486                           ;user_interrupts.c: 55: WriteTimer1(0);
  5487  001C08  0E00               	movlw	0
  5488  001C0A  6E02               	movwf	WriteTimer1@timer1+1,c
  5489  001C0C  0E00               	movlw	0
  5490  001C0E  6E01               	movwf	WriteTimer1@timer1,c
  5491  001C10  ECAB  F00E         	call	_WriteTimer1	;wreg free
  5492  001C14  0012               	return	
  5493  001C16                     __end_of_timer1_int_handler:
  5494                           	opt stack 0
  5495                           pclatu	equ	0xFFB
  5496                           pclath	equ	0xFFA
  5497                           tblptru	equ	0xFF8
  5498                           tblptrh	equ	0xFF7
  5499                           tblptrl	equ	0xFF6
  5500                           tablat	equ	0xFF5
  5501                           prodh	equ	0xFF4
  5502                           prodl	equ	0xFF3
  5503                           intcon	equ	0xFF2
  5504                           postinc0	equ	0xFEE
  5505                           fsr0h	equ	0xFEA
  5506                           fsr0l	equ	0xFE9
  5507                           wreg	equ	0xFE8
  5508                           indf1	equ	0xFE7
  5509                           fsr1h	equ	0xFE2
  5510                           fsr1l	equ	0xFE1
  5511                           bsr	equ	0xFE0
  5512                           indf2	equ	0xFDF
  5513                           postinc2	equ	0xFDE
  5514                           postdec2	equ	0xFDD
  5515                           fsr2h	equ	0xFDA
  5516                           fsr2l	equ	0xFD9
  5517                           status	equ	0xFD8
  5518                           
  5519 ;; *************** function _WriteTimer1 *****************
  5520 ;; Defined at:
  5521 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  5522 ;; Parameters:    Size  Location     Type
  5523 ;;  timer1          2    0[COMRAM] unsigned int 
  5524 ;; Auto vars:     Size  Location     Type
  5525 ;;  timer           2    2[COMRAM] struct Timers
  5526 ;; Return value:  Size  Location     Type
  5527 ;;		None               void
  5528 ;; Registers used:
  5529 ;;		None
  5530 ;; Tracked objects:
  5531 ;;		On entry : 0/0
  5532 ;;		On exit  : 0/0
  5533 ;;		Unchanged: 0/0
  5534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5535 ;;      Params:         2       0       0       0       0
  5536 ;;      Locals:         2       0       0       0       0
  5537 ;;      Temps:          0       0       0       0       0
  5538 ;;      Totals:         4       0       0       0       0
  5539 ;;Total ram usage:        4 bytes
  5540 ;; Hardware stack levels used:    1
  5541 ;; Hardware stack levels required when called:    5
  5542 ;; This function calls:
  5543 ;;		Nothing
  5544 ;; This function is called by:
  5545 ;;		_timer1_int_handler
  5546 ;; This function uses a non-reentrant model
  5547 ;;
  5548                           
  5549                           	psect	text34
  5550  001D56                     __ptext34:
  5551                           	opt stack 0
  5552  001D56                     _WriteTimer1:
  5553                           	opt stack 19
  5554                           
  5555                           ;incstack = 0
  5556  001D56  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  5557  001D5A  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  5558  001D5E  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  5559  001D62  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  5560  001D66  0012               	return	
  5561  001D68                     __end_of_WriteTimer1:
  5562                           	opt stack 0
  5563                           pclatu	equ	0xFFB
  5564                           pclath	equ	0xFFA
  5565                           tblptru	equ	0xFF8
  5566                           tblptrh	equ	0xFF7
  5567                           tblptrl	equ	0xFF6
  5568                           tablat	equ	0xFF5
  5569                           prodh	equ	0xFF4
  5570                           prodl	equ	0xFF3
  5571                           intcon	equ	0xFF2
  5572                           postinc0	equ	0xFEE
  5573                           fsr0h	equ	0xFEA
  5574                           fsr0l	equ	0xFE9
  5575                           wreg	equ	0xFE8
  5576                           indf1	equ	0xFE7
  5577                           fsr1h	equ	0xFE2
  5578                           fsr1l	equ	0xFE1
  5579                           bsr	equ	0xFE0
  5580                           indf2	equ	0xFDF
  5581                           postinc2	equ	0xFDE
  5582                           postdec2	equ	0xFDD
  5583                           fsr2h	equ	0xFDA
  5584                           fsr2l	equ	0xFD9
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function _ToMainLow_sendmsg *****************
  5588 ;; Defined at:
  5589 ;;		line 103 in file "../src/messages.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;  length          1    wreg     unsigned char 
  5592 ;;  msgtype         1   22[COMRAM] unsigned char 
  5593 ;;  data            2   23[COMRAM] PTR void 
  5594 ;;		 -> NULL(0), 
  5595 ;; Auto vars:     Size  Location     Type
  5596 ;;  length          1   25[COMRAM] unsigned char 
  5597 ;; Return value:  Size  Location     Type
  5598 ;;                  1    wreg      char 
  5599 ;; Registers used:
  5600 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5601 ;; Tracked objects:
  5602 ;;		On entry : 0/0
  5603 ;;		On exit  : 0/0
  5604 ;;		Unchanged: 0/0
  5605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5606 ;;      Params:         3       0       0       0       0
  5607 ;;      Locals:         1       0       0       0       0
  5608 ;;      Temps:          0       0       0       0       0
  5609 ;;      Totals:         4       0       0       0       0
  5610 ;;Total ram usage:        4 bytes
  5611 ;; Hardware stack levels used:    1
  5612 ;; Hardware stack levels required when called:    7
  5613 ;; This function calls:
  5614 ;;		i1_send_msg
  5615 ;; This function is called by:
  5616 ;;		_uart_recv_int_handler
  5617 ;;		_timer1_int_handler
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           
  5621                           	psect	text35
  5622  001CBA                     __ptext35:
  5623                           	opt stack 0
  5624  001CBA                     _ToMainLow_sendmsg:
  5625                           	opt stack 17
  5626                           
  5627                           ;incstack = 0
  5628                           ;ToMainLow_sendmsg@length stored from wreg
  5629  001CBA  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  5630                           
  5631                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  5632                           ;	Return value of _ToMainLow_sendmsg is never used
  5633  001CBE  0101               	movlb	1	; () banked
  5634  001CC0  0E01               	movlw	high _ToMainLow_MQ
  5635  001CC2  6E0C               	movwf	i1send_msg@qptr+1,c
  5636  001CC4  0101               	movlb	1	; () banked
  5637  001CC6  0E4A               	movlw	low _ToMainLow_MQ
  5638  001CC8  6E0B               	movwf	i1send_msg@qptr,c
  5639  001CCA  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  5640  001CCE  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  5641  001CD2  6A10               	clrf	i1send_msg@data+1,c
  5642  001CD4  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  5643  001CD8  EC1C  F009         	call	i1_send_msg	;wreg free
  5644  001CDC  0012               	return	
  5645  001CDE                     __end_of_ToMainLow_sendmsg:
  5646                           	opt stack 0
  5647                           pclatu	equ	0xFFB
  5648                           pclath	equ	0xFFA
  5649                           tblptru	equ	0xFF8
  5650                           tblptrh	equ	0xFF7
  5651                           tblptrl	equ	0xFF6
  5652                           tablat	equ	0xFF5
  5653                           prodh	equ	0xFF4
  5654                           prodl	equ	0xFF3
  5655                           intcon	equ	0xFF2
  5656                           postinc0	equ	0xFEE
  5657                           fsr0h	equ	0xFEA
  5658                           fsr0l	equ	0xFE9
  5659                           wreg	equ	0xFE8
  5660                           indf1	equ	0xFE7
  5661                           fsr1h	equ	0xFE2
  5662                           fsr1l	equ	0xFE1
  5663                           bsr	equ	0xFE0
  5664                           indf2	equ	0xFDF
  5665                           postinc2	equ	0xFDE
  5666                           postdec2	equ	0xFDD
  5667                           fsr2h	equ	0xFDA
  5668                           fsr2l	equ	0xFD9
  5669                           status	equ	0xFD8
  5670                           
  5671 ;; *************** function i1_send_msg *****************
  5672 ;; Defined at:
  5673 ;;		line 24 in file "../src/messages.c"
  5674 ;; Parameters:    Size  Location     Type
  5675 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  5676 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5677 ;;  length          1   12[COMRAM] unsigned char 
  5678 ;;  msgtype         1   13[COMRAM] unsigned char 
  5679 ;;  data            2   14[COMRAM] PTR void 
  5680 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(22), 
  5681 ;; Auto vars:     Size  Location     Type
  5682 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  5683 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5684 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  5685 ;;  send_msg        2   17[COMRAM] unsigned int 
  5686 ;;  send_msg        1   19[COMRAM] unsigned char 
  5687 ;; Return value:  Size  Location     Type
  5688 ;;                  1    wreg      char 
  5689 ;; Registers used:
  5690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5691 ;; Tracked objects:
  5692 ;;		On entry : 0/0
  5693 ;;		On exit  : 0/0
  5694 ;;		Unchanged: 0/0
  5695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5696 ;;      Params:         6       0       0       0       0
  5697 ;;      Locals:         5       0       0       0       0
  5698 ;;      Temps:          1       0       0       0       0
  5699 ;;      Totals:        12       0       0       0       0
  5700 ;;Total ram usage:       12 bytes
  5701 ;; Hardware stack levels used:    1
  5702 ;; Hardware stack levels required when called:    6
  5703 ;; This function calls:
  5704 ;;		i1_memcpy
  5705 ;; This function is called by:
  5706 ;;		_ToMainLow_sendmsg
  5707 ;;		i1_ToMainHigh_sendmsg
  5708 ;; This function uses a non-reentrant model
  5709 ;;
  5710                           
  5711                           	psect	text36
  5712  001238                     __ptext36:
  5713                           	opt stack 0
  5714  001238                     i1_send_msg:
  5715                           	opt stack 17
  5716                           
  5717                           ;messages.c: 25: unsigned char slot;
  5718                           ;messages.c: 27: msg *qmsg;
  5719                           ;messages.c: 28: size_t tlength = length;
  5720                           
  5721                           ;incstack = 0
  5722  001238  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  5723  00123C  6A13               	clrf	i1send_msg@tlength+1,c
  5724                           
  5725                           ;messages.c: 38: slot = qptr->cur_write_ind;
  5726  00123E  EE20 F034          	lfsr	2,52
  5727  001242  500B               	movf	i1send_msg@qptr,w,c
  5728  001244  26D9               	addwf	fsr2l,f,c
  5729  001246  500C               	movf	i1send_msg@qptr+1,w,c
  5730  001248  22DA               	addwfc	fsr2h,f,c
  5731  00124A  50DF               	movf	indf2,w,c
  5732  00124C  6E14               	movwf	i1send_msg@slot,c
  5733                           
  5734                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  5735  00124E  5014               	movf	i1send_msg@slot,w,c
  5736  001250  0D0D               	mullw	13
  5737  001252  50F3               	movf	prodl,w,c
  5738  001254  240B               	addwf	i1send_msg@qptr,w,c
  5739  001256  6E15               	movwf	i1send_msg@qmsg,c
  5740  001258  50F4               	movf	prodh,w,c
  5741  00125A  200C               	addwfc	i1send_msg@qptr+1,w,c
  5742  00125C  6E16               	movwf	i1send_msg@qmsg+1,c
  5743                           
  5744                           ;messages.c: 41: if (qmsg->full != 0) {
  5745  00125E  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5746  001262  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5747  001266  50DF               	movf	indf2,w,c
  5748  001268  B4D8               	btfsc	status,2,c
  5749  00126A  D002               	goto	i1l3094
  5750                           
  5751                           ;messages.c: 42: return (-1);
  5752  00126C  0EFF               	movlw	255
  5753  00126E  0012               	return	
  5754  001270                     i1l3094:
  5755                           
  5756                           ;messages.c: 43: }
  5757                           ;messages.c: 46: qmsg->length = length;
  5758  001270  EE20 F001          	lfsr	2,1
  5759  001274  5015               	movf	i1send_msg@qmsg,w,c
  5760  001276  26D9               	addwf	fsr2l,f,c
  5761  001278  5016               	movf	i1send_msg@qmsg+1,w,c
  5762  00127A  22DA               	addwfc	fsr2h,f,c
  5763  00127C  C00D  FFDF         	movff	i1send_msg@length,indf2
  5764                           
  5765                           ;messages.c: 47: qmsg->msgtype = msgtype;
  5766  001280  EE20 F002          	lfsr	2,2
  5767  001284  5015               	movf	i1send_msg@qmsg,w,c
  5768  001286  26D9               	addwf	fsr2l,f,c
  5769  001288  5016               	movf	i1send_msg@qmsg+1,w,c
  5770  00128A  22DA               	addwfc	fsr2h,f,c
  5771  00128C  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  5772                           
  5773                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  5774  001290  0E03               	movlw	3
  5775  001292  2415               	addwf	i1send_msg@qmsg,w,c
  5776  001294  6E01               	movwf	i1memcpy@d1,c
  5777  001296  0E00               	movlw	0
  5778  001298  2016               	addwfc	i1send_msg@qmsg+1,w,c
  5779  00129A  6E02               	movwf	i1memcpy@d1+1,c
  5780  00129C  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  5781  0012A0  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  5782  0012A4  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  5783  0012A8  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  5784  0012AC  EC2E  F00D         	call	i1_memcpy	;wreg free
  5785                           
  5786                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  5787  0012B0  EE20 F034          	lfsr	2,52
  5788  0012B4  500B               	movf	i1send_msg@qptr,w,c
  5789  0012B6  26D9               	addwf	fsr2l,f,c
  5790  0012B8  500C               	movf	i1send_msg@qptr+1,w,c
  5791  0012BA  22DA               	addwfc	fsr2h,f,c
  5792  0012BC  EE10 F034          	lfsr	1,52
  5793  0012C0  500B               	movf	i1send_msg@qptr,w,c
  5794  0012C2  26E1               	addwf	fsr1l,f,c
  5795  0012C4  500C               	movf	i1send_msg@qptr+1,w,c
  5796  0012C6  22E2               	addwfc	fsr1h,f,c
  5797  0012C8  50E7               	movf	indf1,w,c
  5798  0012CA  6E11               	movwf	??i1_send_msg& (0+255),c
  5799  0012CC  2811               	incf	??i1_send_msg,w,c
  5800  0012CE  0B03               	andlw	3
  5801  0012D0  6EDF               	movwf	indf2,c
  5802                           
  5803                           ;messages.c: 59: qmsg->full = 1;
  5804  0012D2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  5805  0012D6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  5806  0012DA  0E01               	movlw	1
  5807  0012DC  6EDF               	movwf	indf2,c
  5808                           
  5809                           ;messages.c: 60: return (1);
  5810  0012DE  0E01               	movlw	1
  5811  0012E0  0012               	return	
  5812  0012E2                     __end_ofi1_send_msg:
  5813                           	opt stack 0
  5814                           pclatu	equ	0xFFB
  5815                           pclath	equ	0xFFA
  5816                           tblptru	equ	0xFF8
  5817                           tblptrh	equ	0xFF7
  5818                           tblptrl	equ	0xFF6
  5819                           tablat	equ	0xFF5
  5820                           prodh	equ	0xFF4
  5821                           prodl	equ	0xFF3
  5822                           intcon	equ	0xFF2
  5823                           postinc0	equ	0xFEE
  5824                           fsr0h	equ	0xFEA
  5825                           fsr0l	equ	0xFE9
  5826                           wreg	equ	0xFE8
  5827                           indf1	equ	0xFE7
  5828                           fsr1h	equ	0xFE2
  5829                           fsr1l	equ	0xFE1
  5830                           bsr	equ	0xFE0
  5831                           indf2	equ	0xFDF
  5832                           postinc2	equ	0xFDE
  5833                           postdec2	equ	0xFDD
  5834                           fsr2h	equ	0xFDA
  5835                           fsr2l	equ	0xFD9
  5836                           status	equ	0xFD8
  5837                           
  5838 ;; *************** function i1_memcpy *****************
  5839 ;; Defined at:
  5840 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  5841 ;; Parameters:    Size  Location     Type
  5842 ;;  d1              2    0[COMRAM] PTR void 
  5843 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5844 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5845 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5846 ;;  s1              2    2[COMRAM] PTR const void 
  5847 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5848 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5849 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5850 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@uc(22), 
  5851 ;;  n               2    4[COMRAM] unsigned int 
  5852 ;; Auto vars:     Size  Location     Type
  5853 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  5854 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  5855 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  5856 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  5857 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@uc(22), 
  5858 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  5859 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  5860 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  5861 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  2    0[COMRAM] PTR void 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5871 ;;      Params:         6       0       0       0       0
  5872 ;;      Locals:         4       0       0       0       0
  5873 ;;      Temps:          0       0       0       0       0
  5874 ;;      Totals:        10       0       0       0       0
  5875 ;;Total ram usage:       10 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    5
  5878 ;; This function calls:
  5879 ;;		Nothing
  5880 ;; This function is called by:
  5881 ;;		i1_send_msg
  5882 ;; This function uses a non-reentrant model
  5883 ;;
  5884                           
  5885                           	psect	text37
  5886  001A5C                     __ptext37:
  5887                           	opt stack 0
  5888  001A5C                     i1_memcpy:
  5889                           	opt stack 17
  5890                           
  5891                           ;incstack = 0
  5892  001A5C  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  5893  001A60  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  5894  001A64  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  5895  001A68  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  5896  001A6C  D00E               	goto	i1l3070
  5897  001A6E                     i1l3064:
  5898  001A6E  C009  FFD9         	movff	i1memcpy@s,fsr2l
  5899  001A72  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  5900  001A76  C007  FFE1         	movff	i1memcpy@d,fsr1l
  5901  001A7A  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  5902  001A7E  CFDF FFE7          	movff	indf2,indf1
  5903  001A82  4A09               	infsnz	i1memcpy@s,f,c
  5904  001A84  2A0A               	incf	i1memcpy@s+1,f,c
  5905  001A86  4A07               	infsnz	i1memcpy@d,f,c
  5906  001A88  2A08               	incf	i1memcpy@d+1,f,c
  5907  001A8A                     i1l3070:
  5908  001A8A  0605               	decf	i1memcpy@n,f,c
  5909  001A8C  A0D8               	btfss	status,0,c
  5910  001A8E  0606               	decf	i1memcpy@n+1,f,c
  5911  001A90  2805               	incf	i1memcpy@n& (0+255),w,c
  5912  001A92  B4D8               	btfsc	status,2,c
  5913  001A94  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  5914  001A96  B4D8               	btfsc	status,2,c
  5915                           
  5916                           ;	Return value of i1_memcpy is never used
  5917  001A98  0012               	return	
  5918  001A9A  D7E9               	goto	i1l3064
  5919  001A9C                     __end_ofi1_memcpy:
  5920                           	opt stack 0
  5921                           pclatu	equ	0xFFB
  5922                           pclath	equ	0xFFA
  5923                           tblptru	equ	0xFF8
  5924                           tblptrh	equ	0xFF7
  5925                           tblptrl	equ	0xFF6
  5926                           tablat	equ	0xFF5
  5927                           prodh	equ	0xFF4
  5928                           prodl	equ	0xFF3
  5929                           intcon	equ	0xFF2
  5930                           postinc0	equ	0xFEE
  5931                           fsr0h	equ	0xFEA
  5932                           fsr0l	equ	0xFE9
  5933                           wreg	equ	0xFE8
  5934                           indf1	equ	0xFE7
  5935                           fsr1h	equ	0xFE2
  5936                           fsr1l	equ	0xFE1
  5937                           bsr	equ	0xFE0
  5938                           indf2	equ	0xFDF
  5939                           postinc2	equ	0xFDE
  5940                           postdec2	equ	0xFDD
  5941                           fsr2h	equ	0xFDA
  5942                           fsr2l	equ	0xFD9
  5943                           status	equ	0xFD8
  5944                           
  5945 ;; *************** function _ReadTimer1 *****************
  5946 ;; Defined at:
  5947 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  5948 ;; Parameters:    Size  Location     Type
  5949 ;;		None
  5950 ;; Auto vars:     Size  Location     Type
  5951 ;;  timer           2    2[COMRAM] struct Timers
  5952 ;; Return value:  Size  Location     Type
  5953 ;;                  2    0[COMRAM] unsigned int 
  5954 ;; Registers used:
  5955 ;;		None
  5956 ;; Tracked objects:
  5957 ;;		On entry : 0/0
  5958 ;;		On exit  : 0/0
  5959 ;;		Unchanged: 0/0
  5960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5961 ;;      Params:         2       0       0       0       0
  5962 ;;      Locals:         2       0       0       0       0
  5963 ;;      Temps:          0       0       0       0       0
  5964 ;;      Totals:         4       0       0       0       0
  5965 ;;Total ram usage:        4 bytes
  5966 ;; Hardware stack levels used:    1
  5967 ;; Hardware stack levels required when called:    5
  5968 ;; This function calls:
  5969 ;;		Nothing
  5970 ;; This function is called by:
  5971 ;;		_timer1_int_handler
  5972 ;; This function uses a non-reentrant model
  5973 ;;
  5974                           
  5975                           	psect	text38
  5976  001D68                     __ptext38:
  5977                           	opt stack 0
  5978  001D68                     _ReadTimer1:
  5979                           	opt stack 19
  5980                           
  5981                           ;incstack = 0
  5982  001D68  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  5983  001D6C  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  5984  001D70  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  5985  001D74  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  5986  001D78  0012               	return	
  5987  001D7A                     __end_of_ReadTimer1:
  5988                           	opt stack 0
  5989                           pclatu	equ	0xFFB
  5990                           pclath	equ	0xFFA
  5991                           tblptru	equ	0xFF8
  5992                           tblptrh	equ	0xFF7
  5993                           tblptrl	equ	0xFF6
  5994                           tablat	equ	0xFF5
  5995                           prodh	equ	0xFF4
  5996                           prodl	equ	0xFF3
  5997                           intcon	equ	0xFF2
  5998                           postinc0	equ	0xFEE
  5999                           fsr0h	equ	0xFEA
  6000                           fsr0l	equ	0xFE9
  6001                           wreg	equ	0xFE8
  6002                           indf1	equ	0xFE7
  6003                           fsr1h	equ	0xFE2
  6004                           fsr1l	equ	0xFE1
  6005                           bsr	equ	0xFE0
  6006                           indf2	equ	0xFDF
  6007                           postinc2	equ	0xFDE
  6008                           postdec2	equ	0xFDD
  6009                           fsr2h	equ	0xFDA
  6010                           fsr2l	equ	0xFD9
  6011                           status	equ	0xFD8
  6012                           
  6013 ;; *************** function _InterruptHandlerHigh *****************
  6014 ;; Defined at:
  6015 ;;		line 88 in file "../src/interrupts.c"
  6016 ;; Parameters:    Size  Location     Type
  6017 ;;		None
  6018 ;; Auto vars:     Size  Location     Type
  6019 ;;		None
  6020 ;; Return value:  Size  Location     Type
  6021 ;;		None               void
  6022 ;; Registers used:
  6023 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6024 ;; Tracked objects:
  6025 ;;		On entry : 0/0
  6026 ;;		On exit  : 0/0
  6027 ;;		Unchanged: 0/0
  6028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6029 ;;      Params:         0       0       0       0       0
  6030 ;;      Locals:         0       0       0       0       0
  6031 ;;      Temps:          0      14       0       0       0
  6032 ;;      Totals:         0      14       0       0       0
  6033 ;;Total ram usage:       14 bytes
  6034 ;; Hardware stack levels used:    1
  6035 ;; Hardware stack levels required when called:    4
  6036 ;; This function calls:
  6037 ;;		_SleepIfOkay
  6038 ;;		_adc_int_hand
  6039 ;;		_i2c_int_handler
  6040 ;;		_timer0_int_handler
  6041 ;; This function is called by:
  6042 ;;		Interrupt level 2
  6043 ;; This function uses a non-reentrant model
  6044 ;;
  6045                           
  6046                           	psect	intcode
  6047  000008                     __pintcode:
  6048                           	opt stack 0
  6049  000008                     _InterruptHandlerHigh:
  6050                           	opt stack 17
  6051                           
  6052                           ;incstack = 0
  6053  000008  CFFA F0DA          	movff	pclath,??_InterruptHandlerHigh
  6054  00000C  CFFB F0DB          	movff	pclatu,??_InterruptHandlerHigh+1
  6055  000010  EFBA  F009         	goto	int_func
  6056                           pclatu	equ	0xFFB
  6057                           pclath	equ	0xFFA
  6058                           tblptru	equ	0xFF8
  6059                           tblptrh	equ	0xFF7
  6060                           tblptrl	equ	0xFF6
  6061                           tablat	equ	0xFF5
  6062                           prodh	equ	0xFF4
  6063                           prodl	equ	0xFF3
  6064                           intcon	equ	0xFF2
  6065                           postinc0	equ	0xFEE
  6066                           fsr0h	equ	0xFEA
  6067                           fsr0l	equ	0xFE9
  6068                           wreg	equ	0xFE8
  6069                           indf1	equ	0xFE7
  6070                           fsr1h	equ	0xFE2
  6071                           fsr1l	equ	0xFE1
  6072                           bsr	equ	0xFE0
  6073                           indf2	equ	0xFDF
  6074                           postinc2	equ	0xFDE
  6075                           postdec2	equ	0xFDD
  6076                           fsr2h	equ	0xFDA
  6077                           fsr2l	equ	0xFD9
  6078                           status	equ	0xFD8
  6079                           
  6080                           	psect	intcode_body
  6081  001374                     __pintcode_body:
  6082                           	opt stack 17
  6083  001374                     int_func:
  6084                           	opt stack 17
  6085  001374  CFE9 F0DC          	movff	fsr0l,??_InterruptHandlerHigh+2
  6086  001378  CFEA F0DD          	movff	fsr0h,??_InterruptHandlerHigh+3
  6087  00137C  CFE1 F0DE          	movff	fsr1l,??_InterruptHandlerHigh+4
  6088  001380  CFE2 F0DF          	movff	fsr1h,??_InterruptHandlerHigh+5
  6089  001384  CFD9 F0E0          	movff	fsr2l,??_InterruptHandlerHigh+6
  6090  001388  CFDA F0E1          	movff	fsr2h,??_InterruptHandlerHigh+7
  6091  00138C  CFF3 F0E2          	movff	prodl,??_InterruptHandlerHigh+8
  6092  001390  CFF4 F0E3          	movff	prodh,??_InterruptHandlerHigh+9
  6093  001394  CFF6 F0E4          	movff	tblptrl,??_InterruptHandlerHigh+10
  6094  001398  CFF7 F0E5          	movff	tblptrh,??_InterruptHandlerHigh+11
  6095  00139C  CFF8 F0E6          	movff	tblptru,??_InterruptHandlerHigh+12
  6096  0013A0  CFF5 F0E7          	movff	tablat,??_InterruptHandlerHigh+13
  6097                           
  6098                           ;interrupts.c: 93: if (PIR1bits.ADIF);
  6099  0013A4  509E               	movf	3998,w,c	;volatile
  6100                           
  6101                           ;interrupts.c: 94: {
  6102                           ;interrupts.c: 95: PIR1bits.ADIF = 0;
  6103  0013A6  9C9E               	bcf	3998,6,c	;volatile
  6104                           
  6105                           ;interrupts.c: 96: adc_int_hand();
  6106  0013A8  EC5B  F005         	call	_adc_int_hand	;wreg free
  6107                           
  6108                           ;interrupts.c: 97: }
  6109                           ;interrupts.c: 100: if (PIR1bits.SSPIF) {
  6110  0013AC  A69E               	btfss	3998,3,c	;volatile
  6111  0013AE  D003               	goto	i2l3252
  6112                           
  6113                           ;interrupts.c: 102: PIR1bits.SSPIF = 0;
  6114  0013B0  969E               	bcf	3998,3,c	;volatile
  6115                           
  6116                           ;interrupts.c: 104: i2c_int_handler();
  6117  0013B2  EC79  F00B         	call	_i2c_int_handler	;wreg free
  6118  0013B6                     i2l3252:
  6119                           
  6120                           ;interrupts.c: 105: }
  6121                           ;interrupts.c: 108: if (INTCONbits.TMR0IF) {
  6122  0013B6  A4F2               	btfss	intcon,2,c	;volatile
  6123  0013B8  D003               	goto	i2l3258
  6124                           
  6125                           ;interrupts.c: 109: INTCONbits.TMR0IF = 0;
  6126  0013BA  94F2               	bcf	intcon,2,c	;volatile
  6127                           
  6128                           ;interrupts.c: 111: timer0_int_handler();
  6129  0013BC  ECFF  F009         	call	_timer0_int_handler	;wreg free
  6130  0013C0                     i2l3258:
  6131                           
  6132                           ;interrupts.c: 112: }
  6133                           ;interrupts.c: 122: SleepIfOkay();
  6134  0013C0  ECAF  F00B         	call	_SleepIfOkay	;wreg free
  6135  0013C4  C0E7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6136  0013C8  C0E6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6137  0013CC  C0E5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6138  0013D0  C0E4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6139  0013D4  C0E3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6140  0013D8  C0E2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6141  0013DC  C0E1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6142  0013E0  C0E0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6143  0013E4  C0DF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6144  0013E8  C0DE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6145  0013EC  C0DD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6146  0013F0  C0DC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6147  0013F4  C0DB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6148  0013F8  C0DA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6149  0013FC  0011               	retfie		f
  6150  0013FE                     __end_of_InterruptHandlerHigh:
  6151                           	opt stack 0
  6152                           pclatu	equ	0xFFB
  6153                           pclath	equ	0xFFA
  6154                           tblptru	equ	0xFF8
  6155                           tblptrh	equ	0xFF7
  6156                           tblptrl	equ	0xFF6
  6157                           tablat	equ	0xFF5
  6158                           prodh	equ	0xFF4
  6159                           prodl	equ	0xFF3
  6160                           intcon	equ	0xFF2
  6161                           postinc0	equ	0xFEE
  6162                           fsr0h	equ	0xFEA
  6163                           fsr0l	equ	0xFE9
  6164                           wreg	equ	0xFE8
  6165                           indf1	equ	0xFE7
  6166                           fsr1h	equ	0xFE2
  6167                           fsr1l	equ	0xFE1
  6168                           bsr	equ	0xFE0
  6169                           indf2	equ	0xFDF
  6170                           postinc2	equ	0xFDE
  6171                           postdec2	equ	0xFDD
  6172                           fsr2h	equ	0xFDA
  6173                           fsr2l	equ	0xFD9
  6174                           status	equ	0xFD8
  6175                           
  6176 ;; *************** function _timer0_int_handler *****************
  6177 ;; Defined at:
  6178 ;;		line 18 in file "../src/user_interrupts.c"
  6179 ;; Parameters:    Size  Location     Type
  6180 ;;		None
  6181 ;; Auto vars:     Size  Location     Type
  6182 ;;  val             2   34[BANK0 ] unsigned int 
  6183 ;;  msgtype         2   32[BANK0 ] int 
  6184 ;;  length          2   30[BANK0 ] int 
  6185 ;; Return value:  Size  Location     Type
  6186 ;;		None               void
  6187 ;; Registers used:
  6188 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6189 ;; Tracked objects:
  6190 ;;		On entry : 0/0
  6191 ;;		On exit  : 0/0
  6192 ;;		Unchanged: 0/0
  6193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6194 ;;      Params:         0       0       0       0       0
  6195 ;;      Locals:         0       6       0       0       0
  6196 ;;      Temps:          0       1       0       0       0
  6197 ;;      Totals:         0       7       0       0       0
  6198 ;;Total ram usage:        7 bytes
  6199 ;; Hardware stack levels used:    1
  6200 ;; Hardware stack levels required when called:    3
  6201 ;; This function calls:
  6202 ;;		_FromMainHigh_recvmsg
  6203 ;;		_WriteTimer0
  6204 ;;		i2_ToMainHigh_sendmsg
  6205 ;; This function is called by:
  6206 ;;		_InterruptHandlerHigh
  6207 ;; This function uses a non-reentrant model
  6208 ;;
  6209                           
  6210                           	psect	text40
  6211  0013FE                     __ptext40:
  6212                           	opt stack 0
  6213  0013FE                     _timer0_int_handler:
  6214                           	opt stack 17
  6215                           
  6216                           ;user_interrupts.c: 19: unsigned int val;
  6217                           ;user_interrupts.c: 20: int length, msgtype;
  6218                           ;user_interrupts.c: 31: WriteTimer0(0);
  6219                           
  6220                           ;incstack = 0
  6221  0013FE  0E00               	movlw	0
  6222  001400  0100               	movlb	0	; () banked
  6223  001402  0100               	movlb	0	; () banked
  6224  001404  6FB7               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6225  001406  0E00               	movlw	0
  6226  001408  0100               	movlb	0	; () banked
  6227  00140A  6FB6               	movwf	WriteTimer0@timer0& (0+255),b
  6228  00140C  ECBD  F00E         	call	_WriteTimer0	;wreg free
  6229                           
  6230                           ;user_interrupts.c: 34: length = FromMainHigh_recvmsg(sizeof (val), (unsigned char *) &m
      +                          sgtype, (void *) &val);
  6231  001410  0100               	movlb	0	; () banked
  6232  001412  0E00               	movlw	high timer0_int_handler@msgtype
  6233  001414  0100               	movlb	0	; () banked
  6234  001416  0100               	movlb	0	; () banked
  6235  001418  6FCF               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6236  00141A  0100               	movlb	0	; () banked
  6237  00141C  0ED6               	movlw	low timer0_int_handler@msgtype
  6238  00141E  0100               	movlb	0	; () banked
  6239  001420  0100               	movlb	0	; () banked
  6240  001422  6FCE               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6241  001424  0100               	movlb	0	; () banked
  6242  001426  0E00               	movlw	high timer0_int_handler@val
  6243  001428  0100               	movlb	0	; () banked
  6244  00142A  0100               	movlb	0	; () banked
  6245  00142C  6FD1               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6246  00142E  0100               	movlb	0	; () banked
  6247  001430  0ED8               	movlw	low timer0_int_handler@val
  6248  001432  0100               	movlb	0	; () banked
  6249  001434  0100               	movlb	0	; () banked
  6250  001436  6FD0               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6251  001438  0E02               	movlw	2
  6252  00143A  EC0D  F00D         	call	_FromMainHigh_recvmsg
  6253  00143E  0100               	movlb	0	; () banked
  6254  001440  0100               	movlb	0	; () banked
  6255  001442  6FD4               	movwf	timer0_int_handler@length& (0+255),b
  6256  001444  0100               	movlb	0	; () banked
  6257  001446  6BD5               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6258  001448  0100               	movlb	0	; () banked
  6259  00144A  BFD4               	btfsc	timer0_int_handler@length& (0+255),7,b
  6260  00144C  07D5               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6261                           
  6262                           ; BSR set to: 0
  6263                           ;user_interrupts.c: 35: if (length == sizeof (val)) {
  6264  00144E  0100               	movlb	0	; () banked
  6265  001450  0100               	movlb	0	; () banked
  6266  001452  51D4               	movf	timer0_int_handler@length& (0+255),w,b
  6267  001454  0A02               	xorlw	2
  6268  001456  11D5               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6269  001458  A4D8               	btfss	status,2,c
  6270  00145A  0012               	return	
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;user_interrupts.c: 36: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6274  00145C  0100               	movlb	0	; () banked
  6275  00145E  6FD3               	movwf	??_timer0_int_handler& (0+255),b
  6276  001460  0E0A               	movlw	10
  6277  001462  0100               	movlb	0	; () banked
  6278  001464  0100               	movlb	0	; () banked
  6279  001466  6FCC               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6280  001468  0100               	movlb	0	; () banked
  6281  00146A  51D3               	movf	??_timer0_int_handler& (0+255),w,b
  6282  00146C  0100               	movlb	0	; () banked
  6283  00146E  0E00               	movlw	high timer0_int_handler@val
  6284  001470  0100               	movlb	0	; () banked
  6285  001472  0100               	movlb	0	; () banked
  6286  001474  6FCE               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  6287  001476  0100               	movlb	0	; () banked
  6288  001478  0ED8               	movlw	low timer0_int_handler@val
  6289  00147A  0100               	movlb	0	; () banked
  6290  00147C  0100               	movlb	0	; () banked
  6291  00147E  6FCD               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  6292  001480  0E02               	movlw	2
  6293  001482  ECBD  F00D         	call	i2_ToMainHigh_sendmsg
  6294  001486  0012               	return	
  6295  001488                     __end_of_timer0_int_handler:
  6296                           	opt stack 0
  6297                           pclatu	equ	0xFFB
  6298                           pclath	equ	0xFFA
  6299                           tblptru	equ	0xFF8
  6300                           tblptrh	equ	0xFF7
  6301                           tblptrl	equ	0xFF6
  6302                           tablat	equ	0xFF5
  6303                           prodh	equ	0xFF4
  6304                           prodl	equ	0xFF3
  6305                           intcon	equ	0xFF2
  6306                           postinc0	equ	0xFEE
  6307                           fsr0h	equ	0xFEA
  6308                           fsr0l	equ	0xFE9
  6309                           wreg	equ	0xFE8
  6310                           indf1	equ	0xFE7
  6311                           fsr1h	equ	0xFE2
  6312                           fsr1l	equ	0xFE1
  6313                           bsr	equ	0xFE0
  6314                           indf2	equ	0xFDF
  6315                           postinc2	equ	0xFDE
  6316                           postdec2	equ	0xFDD
  6317                           fsr2h	equ	0xFDA
  6318                           fsr2l	equ	0xFD9
  6319                           status	equ	0xFD8
  6320                           
  6321 ;; *************** function i2_ToMainHigh_sendmsg *****************
  6322 ;; Defined at:
  6323 ;;		line 126 in file "../src/messages.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  length          1    wreg     unsigned char 
  6326 ;;  msgtype         1   22[BANK0 ] unsigned char 
  6327 ;;  data            2   23[BANK0 ] PTR void 
  6328 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(22), 
  6329 ;; Auto vars:     Size  Location     Type
  6330 ;;  length          1   25[BANK0 ] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  1    wreg      char 
  6333 ;; Registers used:
  6334 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6340 ;;      Params:         0       3       0       0       0
  6341 ;;      Locals:         0       1       0       0       0
  6342 ;;      Temps:          0       0       0       0       0
  6343 ;;      Totals:         0       4       0       0       0
  6344 ;;Total ram usage:        4 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    2
  6347 ;; This function calls:
  6348 ;;		i2_send_msg
  6349 ;; This function is called by:
  6350 ;;		_timer0_int_handler
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           
  6354                           	psect	text41
  6355  001B7A                     __ptext41:
  6356                           	opt stack 0
  6357  001B7A                     i2_ToMainHigh_sendmsg:
  6358                           	opt stack 17
  6359                           
  6360                           ;incstack = 0
  6361                           ;i2ToMainHigh_sendmsg@length stored from wreg
  6362  001B7A  CFE8 F0CF          	movff	wreg,i2ToMainHigh_sendmsg@length
  6363                           
  6364                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6365                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  6366  001B7E  0100               	movlb	0	; () banked
  6367  001B80  0E00               	movlw	high _ToMainHigh_MQ
  6368  001B82  0100               	movlb	0	; () banked
  6369  001B84  0100               	movlb	0	; () banked
  6370  001B86  6FC1               	movwf	(i2send_msg@qptr+1)& (0+255),b
  6371  001B88  0100               	movlb	0	; () banked
  6372  001B8A  0E80               	movlw	low _ToMainHigh_MQ
  6373  001B8C  0100               	movlb	0	; () banked
  6374  001B8E  0100               	movlb	0	; () banked
  6375  001B90  6FC0               	movwf	i2send_msg@qptr& (0+255),b
  6376  001B92  C0CF  F0C2         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  6377  001B96  C0CC  F0C3         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  6378  001B9A  0100               	movlb	0	; () banked
  6379  001B9C  0100               	movlb	0	; () banked
  6380  001B9E  C0CE  F0C5         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  6381  001BA2  0100               	movlb	0	; () banked
  6382  001BA4  0100               	movlb	0	; () banked
  6383  001BA6  C0CD  F0C4         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  6384  001BAA  ECCD  F007         	call	i2_send_msg	;wreg free
  6385  001BAE  0012               	return	
  6386  001BB0                     __end_ofi2_ToMainHigh_sendmsg:
  6387                           	opt stack 0
  6388                           pclatu	equ	0xFFB
  6389                           pclath	equ	0xFFA
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           intcon	equ	0xFF2
  6397                           postinc0	equ	0xFEE
  6398                           fsr0h	equ	0xFEA
  6399                           fsr0l	equ	0xFE9
  6400                           wreg	equ	0xFE8
  6401                           indf1	equ	0xFE7
  6402                           fsr1h	equ	0xFE2
  6403                           fsr1l	equ	0xFE1
  6404                           bsr	equ	0xFE0
  6405                           indf2	equ	0xFDF
  6406                           postinc2	equ	0xFDE
  6407                           postdec2	equ	0xFDD
  6408                           fsr2h	equ	0xFDA
  6409                           fsr2l	equ	0xFD9
  6410                           status	equ	0xFD8
  6411                           
  6412 ;; *************** function i2_send_msg *****************
  6413 ;; Defined at:
  6414 ;;		line 24 in file "../src/messages.c"
  6415 ;; Parameters:    Size  Location     Type
  6416 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  6417 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6418 ;;  length          1   12[BANK0 ] unsigned char 
  6419 ;;  msgtype         1   13[BANK0 ] unsigned char 
  6420 ;;  data            2   14[BANK0 ] PTR void 
  6421 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(22), 
  6422 ;; Auto vars:     Size  Location     Type
  6423 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  6424 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6425 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6426 ;;  send_msg        2   17[BANK0 ] unsigned int 
  6427 ;;  send_msg        1   19[BANK0 ] unsigned char 
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      char 
  6430 ;; Registers used:
  6431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6437 ;;      Params:         0       6       0       0       0
  6438 ;;      Locals:         0       5       0       0       0
  6439 ;;      Temps:          0       1       0       0       0
  6440 ;;      Totals:         0      12       0       0       0
  6441 ;;Total ram usage:       12 bytes
  6442 ;; Hardware stack levels used:    1
  6443 ;; Hardware stack levels required when called:    1
  6444 ;; This function calls:
  6445 ;;		i2_memcpy
  6446 ;; This function is called by:
  6447 ;;		i2_ToMainHigh_sendmsg
  6448 ;; This function uses a non-reentrant model
  6449 ;;
  6450                           
  6451                           	psect	text42
  6452  000F9A                     __ptext42:
  6453                           	opt stack 0
  6454  000F9A                     i2_send_msg:
  6455                           	opt stack 17
  6456                           
  6457                           ;messages.c: 25: unsigned char slot;
  6458                           ;messages.c: 27: msg *qmsg;
  6459                           ;messages.c: 28: size_t tlength = length;
  6460                           
  6461                           ;incstack = 0
  6462  000F9A  0100               	movlb	0	; () banked
  6463  000F9C  0100               	movlb	0	; () banked
  6464  000F9E  C0C2  F0C7         	movff	i2send_msg@length,i2send_msg@tlength
  6465  000FA2  0100               	movlb	0	; () banked
  6466  000FA4  0100               	movlb	0	; () banked
  6467  000FA6  6BC8               	clrf	(i2send_msg@tlength+1)& (0+255),b
  6468                           
  6469                           ; BSR set to: 0
  6470                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6471  000FA8  0100               	movlb	0	; () banked
  6472  000FAA  EE20 F034          	lfsr	2,52
  6473  000FAE  0100               	movlb	0	; () banked
  6474  000FB0  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  6475  000FB2  26D9               	addwf	fsr2l,f,c
  6476  000FB4  0100               	movlb	0	; () banked
  6477  000FB6  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6478  000FB8  22DA               	addwfc	fsr2h,f,c
  6479  000FBA  50DF               	movf	indf2,w,c
  6480  000FBC  0100               	movlb	0	; () banked
  6481  000FBE  0100               	movlb	0	; () banked
  6482  000FC0  6FC9               	movwf	i2send_msg@slot& (0+255),b
  6483                           
  6484                           ; BSR set to: 0
  6485                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6486  000FC2  0100               	movlb	0	; () banked
  6487  000FC4  0100               	movlb	0	; () banked
  6488  000FC6  51C9               	movf	i2send_msg@slot& (0+255),w,b
  6489  000FC8  0D0D               	mullw	13
  6490  000FCA  50F3               	movf	prodl,w,c
  6491  000FCC  0100               	movlb	0	; () banked
  6492  000FCE  0100               	movlb	0	; () banked
  6493  000FD0  25C0               	addwf	i2send_msg@qptr& (0+255),w,b
  6494  000FD2  0100               	movlb	0	; () banked
  6495  000FD4  0100               	movlb	0	; () banked
  6496  000FD6  6FCA               	movwf	i2send_msg@qmsg& (0+255),b
  6497  000FD8  50F4               	movf	prodh,w,c
  6498  000FDA  0100               	movlb	0	; () banked
  6499  000FDC  0100               	movlb	0	; () banked
  6500  000FDE  21C1               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  6501  000FE0  0100               	movlb	0	; () banked
  6502  000FE2  6FCB               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;messages.c: 41: if (qmsg->full != 0) {
  6506  000FE4  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6507  000FE8  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6508  000FEC  50DF               	movf	indf2,w,c
  6509  000FEE  B4D8               	btfsc	status,2,c
  6510  000FF0  D002               	goto	i2l3878
  6511                           
  6512                           ; BSR set to: 0
  6513                           ;messages.c: 42: return (-1);
  6514  000FF2  0EFF               	movlw	255
  6515  000FF4  0012               	return	
  6516  000FF6                     i2l3878:
  6517                           
  6518                           ; BSR set to: 0
  6519                           ;messages.c: 43: }
  6520                           ;messages.c: 46: qmsg->length = length;
  6521  000FF6  0100               	movlb	0	; () banked
  6522  000FF8  EE20 F001          	lfsr	2,1
  6523  000FFC  0100               	movlb	0	; () banked
  6524  000FFE  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  6525  001000  26D9               	addwf	fsr2l,f,c
  6526  001002  0100               	movlb	0	; () banked
  6527  001004  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6528  001006  22DA               	addwfc	fsr2h,f,c
  6529  001008  0100               	movlb	0	; () banked
  6530  00100A  C0C2  FFDF         	movff	i2send_msg@length,indf2
  6531                           
  6532                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6533  00100E  0100               	movlb	0	; () banked
  6534  001010  EE20 F002          	lfsr	2,2
  6535  001014  0100               	movlb	0	; () banked
  6536  001016  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  6537  001018  26D9               	addwf	fsr2l,f,c
  6538  00101A  0100               	movlb	0	; () banked
  6539  00101C  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  6540  00101E  22DA               	addwfc	fsr2h,f,c
  6541  001020  0100               	movlb	0	; () banked
  6542  001022  C0C3  FFDF         	movff	i2send_msg@msgtype,indf2
  6543                           
  6544                           ; BSR set to: 0
  6545                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6546  001026  0E03               	movlw	3
  6547  001028  0100               	movlb	0	; () banked
  6548  00102A  0100               	movlb	0	; () banked
  6549  00102C  25CA               	addwf	i2send_msg@qmsg& (0+255),w,b
  6550  00102E  0100               	movlb	0	; () banked
  6551  001030  0100               	movlb	0	; () banked
  6552  001032  6FB6               	movwf	i2memcpy@d1& (0+255),b
  6553  001034  0E00               	movlw	0
  6554  001036  0100               	movlb	0	; () banked
  6555  001038  0100               	movlb	0	; () banked
  6556  00103A  21CB               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  6557  00103C  0100               	movlb	0	; () banked
  6558  00103E  6FB7               	movwf	(i2memcpy@d1+1)& (0+255),b
  6559  001040  0100               	movlb	0	; () banked
  6560  001042  0100               	movlb	0	; () banked
  6561  001044  C0C5  F0B9         	movff	i2send_msg@data+1,i2memcpy@s1+1
  6562  001048  0100               	movlb	0	; () banked
  6563  00104A  0100               	movlb	0	; () banked
  6564  00104C  C0C4  F0B8         	movff	i2send_msg@data,i2memcpy@s1
  6565  001050  C0C7  F0BA         	movff	i2send_msg@tlength,i2memcpy@n
  6566  001054  C0C8  F0BB         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  6567  001058  EC13  F00C         	call	i2_memcpy	;wreg free
  6568                           
  6569                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6570  00105C  0100               	movlb	0	; () banked
  6571  00105E  EE20 F034          	lfsr	2,52
  6572  001062  0100               	movlb	0	; () banked
  6573  001064  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  6574  001066  26D9               	addwf	fsr2l,f,c
  6575  001068  0100               	movlb	0	; () banked
  6576  00106A  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6577  00106C  22DA               	addwfc	fsr2h,f,c
  6578  00106E  0100               	movlb	0	; () banked
  6579  001070  EE10 F034          	lfsr	1,52
  6580  001074  0100               	movlb	0	; () banked
  6581  001076  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  6582  001078  26E1               	addwf	fsr1l,f,c
  6583  00107A  0100               	movlb	0	; () banked
  6584  00107C  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  6585  00107E  22E2               	addwfc	fsr1h,f,c
  6586  001080  50E7               	movf	indf1,w,c
  6587  001082  0100               	movlb	0	; () banked
  6588  001084  6FC6               	movwf	??i2_send_msg& (0+255),b
  6589  001086  0100               	movlb	0	; () banked
  6590  001088  29C6               	incf	??i2_send_msg& (0+255),w,b
  6591  00108A  0B03               	andlw	3
  6592  00108C  6EDF               	movwf	indf2,c
  6593                           
  6594                           ; BSR set to: 0
  6595                           ;messages.c: 59: qmsg->full = 1;
  6596  00108E  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  6597  001092  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  6598  001096  0E01               	movlw	1
  6599  001098  6EDF               	movwf	indf2,c
  6600                           
  6601                           ; BSR set to: 0
  6602                           ;messages.c: 60: return (1);
  6603  00109A  0E01               	movlw	1
  6604  00109C  0012               	return	
  6605  00109E                     __end_ofi2_send_msg:
  6606                           	opt stack 0
  6607                           pclatu	equ	0xFFB
  6608                           pclath	equ	0xFFA
  6609                           tblptru	equ	0xFF8
  6610                           tblptrh	equ	0xFF7
  6611                           tblptrl	equ	0xFF6
  6612                           tablat	equ	0xFF5
  6613                           prodh	equ	0xFF4
  6614                           prodl	equ	0xFF3
  6615                           intcon	equ	0xFF2
  6616                           postinc0	equ	0xFEE
  6617                           fsr0h	equ	0xFEA
  6618                           fsr0l	equ	0xFE9
  6619                           wreg	equ	0xFE8
  6620                           indf1	equ	0xFE7
  6621                           fsr1h	equ	0xFE2
  6622                           fsr1l	equ	0xFE1
  6623                           bsr	equ	0xFE0
  6624                           indf2	equ	0xFDF
  6625                           postinc2	equ	0xFDE
  6626                           postdec2	equ	0xFDD
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _WriteTimer0 *****************
  6632 ;; Defined at:
  6633 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  timer0          2    0[BANK0 ] unsigned int 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  timer           2    2[BANK0 ] struct Timers
  6638 ;; Return value:  Size  Location     Type
  6639 ;;		None               void
  6640 ;; Registers used:
  6641 ;;		None
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6647 ;;      Params:         0       2       0       0       0
  6648 ;;      Locals:         0       2       0       0       0
  6649 ;;      Temps:          0       0       0       0       0
  6650 ;;      Totals:         0       4       0       0       0
  6651 ;;Total ram usage:        4 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; This function calls:
  6654 ;;		Nothing
  6655 ;; This function is called by:
  6656 ;;		_timer0_int_handler
  6657 ;; This function uses a non-reentrant model
  6658 ;;
  6659                           
  6660                           	psect	text43
  6661  001D7A                     __ptext43:
  6662                           	opt stack 0
  6663  001D7A                     _WriteTimer0:
  6664                           	opt stack 19
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;incstack = 0
  6668  001D7A  C0B6  F0B8         	movff	WriteTimer0@timer0,WriteTimer0@timer
  6669  001D7E  C0B7  F0B9         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  6670  001D82  C0B9  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  6671  001D86  C0B8  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  6672  001D8A  0012               	return	
  6673  001D8C                     __end_of_WriteTimer0:
  6674                           	opt stack 0
  6675                           pclatu	equ	0xFFB
  6676                           pclath	equ	0xFFA
  6677                           tblptru	equ	0xFF8
  6678                           tblptrh	equ	0xFF7
  6679                           tblptrl	equ	0xFF6
  6680                           tablat	equ	0xFF5
  6681                           prodh	equ	0xFF4
  6682                           prodl	equ	0xFF3
  6683                           intcon	equ	0xFF2
  6684                           postinc0	equ	0xFEE
  6685                           fsr0h	equ	0xFEA
  6686                           fsr0l	equ	0xFE9
  6687                           wreg	equ	0xFE8
  6688                           indf1	equ	0xFE7
  6689                           fsr1h	equ	0xFE2
  6690                           fsr1l	equ	0xFE1
  6691                           bsr	equ	0xFE0
  6692                           indf2	equ	0xFDF
  6693                           postinc2	equ	0xFDE
  6694                           postdec2	equ	0xFDD
  6695                           fsr2h	equ	0xFDA
  6696                           fsr2l	equ	0xFD9
  6697                           status	equ	0xFD8
  6698                           
  6699 ;; *************** function _FromMainHigh_recvmsg *****************
  6700 ;; Defined at:
  6701 ;;		line 183 in file "../src/messages.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  maxlength       1    wreg     unsigned char 
  6704 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  6705 ;;		 -> timer0_int_handler@msgtype(2), 
  6706 ;;  data            2   26[BANK0 ] PTR void 
  6707 ;;		 -> timer0_int_handler@val(2), 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  maxlength       1   28[BANK0 ] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      char 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6719 ;;      Params:         0       4       0       0       0
  6720 ;;      Locals:         0       1       0       0       0
  6721 ;;      Temps:          0       0       0       0       0
  6722 ;;      Totals:         0       5       0       0       0
  6723 ;;Total ram usage:        5 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    2
  6726 ;; This function calls:
  6727 ;;		i2_recv_msg
  6728 ;; This function is called by:
  6729 ;;		_timer0_int_handler
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text44
  6734  001A1A                     __ptext44:
  6735                           	opt stack 0
  6736  001A1A                     _FromMainHigh_recvmsg:
  6737                           	opt stack 17
  6738                           
  6739                           ;incstack = 0
  6740                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  6741  001A1A  CFE8 F0D2          	movff	wreg,FromMainHigh_recvmsg@maxlength
  6742                           
  6743                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  6744  001A1E  0102               	movlb	2	; () banked
  6745  001A20  0E02               	movlw	high _FromMainHigh_MQ
  6746  001A22  0100               	movlb	0	; () banked
  6747  001A24  0100               	movlb	0	; () banked
  6748  001A26  6FC1               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  6749  001A28  0102               	movlb	2	; () banked
  6750  001A2A  0E00               	movlw	low _FromMainHigh_MQ
  6751  001A2C  0100               	movlb	0	; () banked
  6752  001A2E  0100               	movlb	0	; () banked
  6753  001A30  6FC0               	movwf	i2recv_msg@qptr& (0+255),b
  6754  001A32  C0D2  F0C2         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  6755  001A36  0100               	movlb	0	; () banked
  6756  001A38  0100               	movlb	0	; () banked
  6757  001A3A  C0CF  F0C4         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  6758  001A3E  0100               	movlb	0	; () banked
  6759  001A40  0100               	movlb	0	; () banked
  6760  001A42  C0CE  F0C3         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  6761  001A46  0100               	movlb	0	; () banked
  6762  001A48  0100               	movlb	0	; () banked
  6763  001A4A  C0D1  F0C6         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  6764  001A4E  0100               	movlb	0	; () banked
  6765  001A50  0100               	movlb	0	; () banked
  6766  001A52  C0D0  F0C5         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  6767  001A56  ECB0  F006         	call	i2_recv_msg	;wreg free
  6768  001A5A  0012               	return	
  6769  001A5C                     __end_of_FromMainHigh_recvmsg:
  6770                           	opt stack 0
  6771                           pclatu	equ	0xFFB
  6772                           pclath	equ	0xFFA
  6773                           tblptru	equ	0xFF8
  6774                           tblptrh	equ	0xFF7
  6775                           tblptrl	equ	0xFF6
  6776                           tablat	equ	0xFF5
  6777                           prodh	equ	0xFF4
  6778                           prodl	equ	0xFF3
  6779                           intcon	equ	0xFF2
  6780                           postinc0	equ	0xFEE
  6781                           fsr0h	equ	0xFEA
  6782                           fsr0l	equ	0xFE9
  6783                           wreg	equ	0xFE8
  6784                           indf1	equ	0xFE7
  6785                           fsr1h	equ	0xFE2
  6786                           fsr1l	equ	0xFE1
  6787                           bsr	equ	0xFE0
  6788                           indf2	equ	0xFDF
  6789                           postinc2	equ	0xFDE
  6790                           postdec2	equ	0xFDD
  6791                           fsr2h	equ	0xFDA
  6792                           fsr2l	equ	0xFD9
  6793                           status	equ	0xFD8
  6794                           
  6795 ;; *************** function i2_recv_msg *****************
  6796 ;; Defined at:
  6797 ;;		line 63 in file "../src/messages.c"
  6798 ;; Parameters:    Size  Location     Type
  6799 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  6800 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6801 ;;  maxlength       1   12[BANK0 ] unsigned char 
  6802 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  6803 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  6804 ;;  data            2   15[BANK0 ] PTR void 
  6805 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6806 ;; Auto vars:     Size  Location     Type
  6807 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  6808 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6809 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6810 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  6811 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  6812 ;; Return value:  Size  Location     Type
  6813 ;;                  1    wreg      char 
  6814 ;; Registers used:
  6815 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6816 ;; Tracked objects:
  6817 ;;		On entry : 0/0
  6818 ;;		On exit  : 0/0
  6819 ;;		Unchanged: 0/0
  6820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6821 ;;      Params:         0       7       0       0       0
  6822 ;;      Locals:         0       5       0       0       0
  6823 ;;      Temps:          0       2       0       0       0
  6824 ;;      Totals:         0      14       0       0       0
  6825 ;;Total ram usage:       14 bytes
  6826 ;; Hardware stack levels used:    1
  6827 ;; Hardware stack levels required when called:    1
  6828 ;; This function calls:
  6829 ;;		i2_memcpy
  6830 ;; This function is called by:
  6831 ;;		_FromMainHigh_recvmsg
  6832 ;; This function uses a non-reentrant model
  6833 ;;
  6834                           
  6835                           	psect	text45
  6836  000D60                     __ptext45:
  6837                           	opt stack 0
  6838  000D60                     i2_recv_msg:
  6839                           	opt stack 17
  6840                           
  6841                           ;messages.c: 64: unsigned char slot;
  6842                           ;messages.c: 68: msg *qmsg;
  6843                           ;messages.c: 69: size_t tlength;
  6844                           ;messages.c: 72: slot = qptr->cur_read_ind;
  6845                           
  6846                           ;incstack = 0
  6847  000D60  0100               	movlb	0	; () banked
  6848  000D62  EE20 F035          	lfsr	2,53
  6849  000D66  0100               	movlb	0	; () banked
  6850  000D68  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  6851  000D6A  26D9               	addwf	fsr2l,f,c
  6852  000D6C  0100               	movlb	0	; () banked
  6853  000D6E  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6854  000D70  22DA               	addwfc	fsr2h,f,c
  6855  000D72  50DF               	movf	indf2,w,c
  6856  000D74  0100               	movlb	0	; () banked
  6857  000D76  0100               	movlb	0	; () banked
  6858  000D78  6FC9               	movwf	i2recv_msg@slot& (0+255),b
  6859                           
  6860                           ; BSR set to: 0
  6861                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  6862  000D7A  0100               	movlb	0	; () banked
  6863  000D7C  0100               	movlb	0	; () banked
  6864  000D7E  51C9               	movf	i2recv_msg@slot& (0+255),w,b
  6865  000D80  0D0D               	mullw	13
  6866  000D82  50F3               	movf	prodl,w,c
  6867  000D84  0100               	movlb	0	; () banked
  6868  000D86  0100               	movlb	0	; () banked
  6869  000D88  25C0               	addwf	i2recv_msg@qptr& (0+255),w,b
  6870  000D8A  0100               	movlb	0	; () banked
  6871  000D8C  0100               	movlb	0	; () banked
  6872  000D8E  6FCC               	movwf	i2recv_msg@qmsg& (0+255),b
  6873  000D90  50F4               	movf	prodh,w,c
  6874  000D92  0100               	movlb	0	; () banked
  6875  000D94  0100               	movlb	0	; () banked
  6876  000D96  21C1               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  6877  000D98  0100               	movlb	0	; () banked
  6878  000D9A  6FCD               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  6879                           
  6880                           ; BSR set to: 0
  6881                           ;messages.c: 74: if (qmsg->full == 1) {
  6882  000D9C  0E01               	movlw	1
  6883  000D9E  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  6884  000DA2  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  6885  000DA6  62DF               	cpfseq	indf2,c
  6886  000DA8  D074               	goto	i2l3918
  6887                           
  6888                           ; BSR set to: 0
  6889                           ;messages.c: 76: if (qmsg->length > maxlength) {
  6890  000DAA  0100               	movlb	0	; () banked
  6891  000DAC  EE20 F001          	lfsr	2,1
  6892  000DB0  0100               	movlb	0	; () banked
  6893  000DB2  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  6894  000DB4  26D9               	addwf	fsr2l,f,c
  6895  000DB6  0100               	movlb	0	; () banked
  6896  000DB8  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6897  000DBA  22DA               	addwfc	fsr2h,f,c
  6898  000DBC  50DF               	movf	indf2,w,c
  6899  000DBE  0100               	movlb	0	; () banked
  6900  000DC0  0100               	movlb	0	; () banked
  6901  000DC2  5DC2               	subwf	i2recv_msg@maxlength& (0+255),w,b
  6902  000DC4  B0D8               	btfsc	status,0,c
  6903  000DC6  D002               	goto	i2l3902
  6904                           
  6905                           ; BSR set to: 0
  6906                           ;messages.c: 77: return (-3);
  6907  000DC8  0EFD               	movlw	253
  6908  000DCA  0012               	return	
  6909  000DCC                     i2l3902:
  6910                           
  6911                           ; BSR set to: 0
  6912                           ;messages.c: 78: }
  6913                           ;messages.c: 80: tlength = qmsg->length;
  6914  000DCC  0100               	movlb	0	; () banked
  6915  000DCE  EE20 F001          	lfsr	2,1
  6916  000DD2  0100               	movlb	0	; () banked
  6917  000DD4  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  6918  000DD6  26D9               	addwf	fsr2l,f,c
  6919  000DD8  0100               	movlb	0	; () banked
  6920  000DDA  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6921  000DDC  22DA               	addwfc	fsr2h,f,c
  6922  000DDE  50DF               	movf	indf2,w,c
  6923  000DE0  0100               	movlb	0	; () banked
  6924  000DE2  6FC7               	movwf	??i2_recv_msg& (0+255),b
  6925  000DE4  0100               	movlb	0	; () banked
  6926  000DE6  51C7               	movf	??i2_recv_msg& (0+255),w,b
  6927  000DE8  0100               	movlb	0	; () banked
  6928  000DEA  0100               	movlb	0	; () banked
  6929  000DEC  6FCA               	movwf	i2recv_msg@tlength& (0+255),b
  6930  000DEE  0100               	movlb	0	; () banked
  6931  000DF0  6BCB               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  6935  000DF2  0100               	movlb	0	; () banked
  6936  000DF4  0100               	movlb	0	; () banked
  6937  000DF6  C0C6  F0B7         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  6938  000DFA  0100               	movlb	0	; () banked
  6939  000DFC  0100               	movlb	0	; () banked
  6940  000DFE  C0C5  F0B6         	movff	i2recv_msg@data,i2memcpy@d1
  6941  000E02  0E03               	movlw	3
  6942  000E04  0100               	movlb	0	; () banked
  6943  000E06  0100               	movlb	0	; () banked
  6944  000E08  25CC               	addwf	i2recv_msg@qmsg& (0+255),w,b
  6945  000E0A  0100               	movlb	0	; () banked
  6946  000E0C  6FC7               	movwf	??i2_recv_msg& (0+255),b
  6947  000E0E  0E00               	movlw	0
  6948  000E10  0100               	movlb	0	; () banked
  6949  000E12  0100               	movlb	0	; () banked
  6950  000E14  21CD               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  6951  000E16  0100               	movlb	0	; () banked
  6952  000E18  6FC8               	movwf	(??i2_recv_msg+1)& (0+255),b
  6953  000E1A  C0C7  F0B8         	movff	??i2_recv_msg,i2memcpy@s1
  6954  000E1E  C0C8  F0B9         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  6955  000E22  C0CA  F0BA         	movff	i2recv_msg@tlength,i2memcpy@n
  6956  000E26  C0CB  F0BB         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  6957  000E2A  EC13  F00C         	call	i2_memcpy	;wreg free
  6958                           
  6959                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  6960  000E2E  0100               	movlb	0	; () banked
  6961  000E30  EE20 F035          	lfsr	2,53
  6962  000E34  0100               	movlb	0	; () banked
  6963  000E36  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  6964  000E38  26D9               	addwf	fsr2l,f,c
  6965  000E3A  0100               	movlb	0	; () banked
  6966  000E3C  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6967  000E3E  22DA               	addwfc	fsr2h,f,c
  6968  000E40  0100               	movlb	0	; () banked
  6969  000E42  EE10 F035          	lfsr	1,53
  6970  000E46  0100               	movlb	0	; () banked
  6971  000E48  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  6972  000E4A  26E1               	addwf	fsr1l,f,c
  6973  000E4C  0100               	movlb	0	; () banked
  6974  000E4E  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  6975  000E50  22E2               	addwfc	fsr1h,f,c
  6976  000E52  50E7               	movf	indf1,w,c
  6977  000E54  0100               	movlb	0	; () banked
  6978  000E56  6FC7               	movwf	??i2_recv_msg& (0+255),b
  6979  000E58  0100               	movlb	0	; () banked
  6980  000E5A  29C7               	incf	??i2_recv_msg& (0+255),w,b
  6981  000E5C  0B03               	andlw	3
  6982  000E5E  6EDF               	movwf	indf2,c
  6983                           
  6984                           ; BSR set to: 0
  6985                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  6986  000E60  0100               	movlb	0	; () banked
  6987  000E62  EE20 F002          	lfsr	2,2
  6988  000E66  0100               	movlb	0	; () banked
  6989  000E68  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  6990  000E6A  26D9               	addwf	fsr2l,f,c
  6991  000E6C  0100               	movlb	0	; () banked
  6992  000E6E  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  6993  000E70  22DA               	addwfc	fsr2h,f,c
  6994  000E72  C0C3  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  6995  000E76  C0C4  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  6996  000E7A  CFDF FFE7          	movff	indf2,indf1
  6997                           
  6998                           ; BSR set to: 0
  6999                           ;messages.c: 91: qmsg->full = 0;
  7000  000E7E  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7001  000E82  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7002  000E86  0E00               	movlw	0
  7003  000E88  6EDF               	movwf	indf2,c
  7004                           
  7005                           ; BSR set to: 0
  7006                           ;messages.c: 92: return (tlength);
  7007  000E8A  0100               	movlb	0	; () banked
  7008  000E8C  0100               	movlb	0	; () banked
  7009  000E8E  51CA               	movf	i2recv_msg@tlength& (0+255),w,b
  7010  000E90  0012               	return	
  7011  000E92                     i2l3918:
  7012                           
  7013                           ; BSR set to: 0
  7014                           ;messages.c: 94: return (-4);
  7015  000E92  0EFC               	movlw	252
  7016  000E94  0012               	return	
  7017  000E96                     __end_ofi2_recv_msg:
  7018                           	opt stack 0
  7019                           pclatu	equ	0xFFB
  7020                           pclath	equ	0xFFA
  7021                           tblptru	equ	0xFF8
  7022                           tblptrh	equ	0xFF7
  7023                           tblptrl	equ	0xFF6
  7024                           tablat	equ	0xFF5
  7025                           prodh	equ	0xFF4
  7026                           prodl	equ	0xFF3
  7027                           intcon	equ	0xFF2
  7028                           postinc0	equ	0xFEE
  7029                           fsr0h	equ	0xFEA
  7030                           fsr0l	equ	0xFE9
  7031                           wreg	equ	0xFE8
  7032                           indf1	equ	0xFE7
  7033                           fsr1h	equ	0xFE2
  7034                           fsr1l	equ	0xFE1
  7035                           bsr	equ	0xFE0
  7036                           indf2	equ	0xFDF
  7037                           postinc2	equ	0xFDE
  7038                           postdec2	equ	0xFDD
  7039                           fsr2h	equ	0xFDA
  7040                           fsr2l	equ	0xFD9
  7041                           status	equ	0xFD8
  7042                           
  7043 ;; *************** function i2_memcpy *****************
  7044 ;; Defined at:
  7045 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7046 ;; Parameters:    Size  Location     Type
  7047 ;;  d1              2    0[BANK0 ] PTR void 
  7048 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7049 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7050 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7051 ;;  s1              2    2[BANK0 ] PTR const void 
  7052 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7053 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7054 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7055 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@uc(22), 
  7056 ;;  n               2    4[BANK0 ] unsigned int 
  7057 ;; Auto vars:     Size  Location     Type
  7058 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  7059 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7060 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7061 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7062 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@uc(22), 
  7063 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  7064 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7065 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7066 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7067 ;; Return value:  Size  Location     Type
  7068 ;;                  2    0[BANK0 ] PTR void 
  7069 ;; Registers used:
  7070 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7071 ;; Tracked objects:
  7072 ;;		On entry : 0/0
  7073 ;;		On exit  : 0/0
  7074 ;;		Unchanged: 0/0
  7075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7076 ;;      Params:         0       6       0       0       0
  7077 ;;      Locals:         0       4       0       0       0
  7078 ;;      Temps:          0       0       0       0       0
  7079 ;;      Totals:         0      10       0       0       0
  7080 ;;Total ram usage:       10 bytes
  7081 ;; Hardware stack levels used:    1
  7082 ;; This function calls:
  7083 ;;		Nothing
  7084 ;; This function is called by:
  7085 ;;		i2_send_msg
  7086 ;;		i2_recv_msg
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text46
  7091  001826                     __ptext46:
  7092                           	opt stack 0
  7093  001826                     i2_memcpy:
  7094                           	opt stack 17
  7095                           
  7096                           ; BSR set to: 0
  7097                           ;incstack = 0
  7098  001826  0100               	movlb	0	; () banked
  7099  001828  0100               	movlb	0	; () banked
  7100  00182A  C0B9  F0BF         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7101  00182E  0100               	movlb	0	; () banked
  7102  001830  0100               	movlb	0	; () banked
  7103  001832  C0B8  F0BE         	movff	i2memcpy@s1,i2memcpy@s
  7104  001836  0100               	movlb	0	; () banked
  7105  001838  0100               	movlb	0	; () banked
  7106  00183A  C0B7  F0BD         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7107  00183E  0100               	movlb	0	; () banked
  7108  001840  0100               	movlb	0	; () banked
  7109  001842  C0B6  F0BC         	movff	i2memcpy@d1,i2memcpy@d
  7110  001846  D012               	goto	i2l3938
  7111  001848                     i2l3932:
  7112                           
  7113                           ; BSR set to: 0
  7114  001848  C0BE  FFD9         	movff	i2memcpy@s,fsr2l
  7115  00184C  C0BF  FFDA         	movff	i2memcpy@s+1,fsr2h
  7116  001850  C0BC  FFE1         	movff	i2memcpy@d,fsr1l
  7117  001854  C0BD  FFE2         	movff	i2memcpy@d+1,fsr1h
  7118  001858  CFDF FFE7          	movff	indf2,indf1
  7119                           
  7120                           ; BSR set to: 0
  7121  00185C  0100               	movlb	0	; () banked
  7122  00185E  0100               	movlb	0	; () banked
  7123  001860  4BBE               	infsnz	i2memcpy@s& (0+255),f,b
  7124  001862  2BBF               	incf	(i2memcpy@s+1)& (0+255),f,b
  7125                           
  7126                           ; BSR set to: 0
  7127  001864  0100               	movlb	0	; () banked
  7128  001866  0100               	movlb	0	; () banked
  7129  001868  4BBC               	infsnz	i2memcpy@d& (0+255),f,b
  7130  00186A  2BBD               	incf	(i2memcpy@d+1)& (0+255),f,b
  7131  00186C                     i2l3938:
  7132                           
  7133                           ; BSR set to: 0
  7134  00186C  0100               	movlb	0	; () banked
  7135  00186E  0100               	movlb	0	; () banked
  7136  001870  07BA               	decf	i2memcpy@n& (0+255),f,b
  7137  001872  A0D8               	btfss	status,0,c
  7138  001874  07BB               	decf	(i2memcpy@n+1)& (0+255),f,b
  7139  001876  0100               	movlb	0	; () banked
  7140  001878  29BA               	incf	i2memcpy@n& (0+255),w,b
  7141  00187A  B4D8               	btfsc	status,2,c
  7142  00187C  29BB               	incf	(i2memcpy@n+1)& (0+255),w,b
  7143  00187E  B4D8               	btfsc	status,2,c
  7144                           
  7145                           ; BSR set to: 0
  7146                           
  7147                           ; BSR set to: 0
  7148                           ;	Return value of i2_memcpy is never used
  7149  001880  0012               	return	
  7150  001882  D7E2               	goto	i2l3932
  7151  001884                     __end_ofi2_memcpy:
  7152                           	opt stack 0
  7153                           pclatu	equ	0xFFB
  7154                           pclath	equ	0xFFA
  7155                           tblptru	equ	0xFF8
  7156                           tblptrh	equ	0xFF7
  7157                           tblptrl	equ	0xFF6
  7158                           tablat	equ	0xFF5
  7159                           prodh	equ	0xFF4
  7160                           prodl	equ	0xFF3
  7161                           intcon	equ	0xFF2
  7162                           postinc0	equ	0xFEE
  7163                           fsr0h	equ	0xFEA
  7164                           fsr0l	equ	0xFE9
  7165                           wreg	equ	0xFE8
  7166                           indf1	equ	0xFE7
  7167                           fsr1h	equ	0xFE2
  7168                           fsr1l	equ	0xFE1
  7169                           bsr	equ	0xFE0
  7170                           indf2	equ	0xFDF
  7171                           postinc2	equ	0xFDE
  7172                           postdec2	equ	0xFDD
  7173                           fsr2h	equ	0xFDA
  7174                           fsr2l	equ	0xFD9
  7175                           status	equ	0xFD8
  7176                           
  7177 ;; *************** function _i2c_int_handler *****************
  7178 ;; Defined at:
  7179 ;;		line 146 in file "../src/my_i2c.c"
  7180 ;; Parameters:    Size  Location     Type
  7181 ;;		None
  7182 ;; Auto vars:     Size  Location     Type
  7183 ;;		None
  7184 ;; Return value:  Size  Location     Type
  7185 ;;		None               void
  7186 ;; Registers used:
  7187 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7193 ;;      Params:         0       0       0       0       0
  7194 ;;      Locals:         0       0       0       0       0
  7195 ;;      Temps:          0       0       0       0       0
  7196 ;;      Totals:         0       0       0       0       0
  7197 ;;Total ram usage:        0 bytes
  7198 ;; Hardware stack levels used:    1
  7199 ;; Hardware stack levels required when called:    1
  7200 ;; This function calls:
  7201 ;;		_i2c_int_handler_master_rx
  7202 ;;		_i2c_int_handler_master_tx
  7203 ;; This function is called by:
  7204 ;;		_InterruptHandlerHigh
  7205 ;; This function uses a non-reentrant model
  7206 ;;
  7207                           
  7208                           	psect	text47
  7209  0016F2                     __ptext47:
  7210                           	opt stack 0
  7211  0016F2                     _i2c_int_handler:
  7212                           	opt stack 19
  7213                           
  7214                           ;my_i2c.c: 148: if ((ic_ptr->rx_i2c == 1) && (ic_ptr->tx_i2c == 0)) {
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;incstack = 0
  7218  0016F2  0100               	movlb	0	; () banked
  7219  0016F4  EE20 F021          	lfsr	2,33
  7220  0016F8  0100               	movlb	0	; () banked
  7221  0016FA  51E8               	movf	_ic_ptr& (0+255),w,b
  7222  0016FC  26D9               	addwf	fsr2l,f,c
  7223  0016FE  0100               	movlb	0	; () banked
  7224  001700  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7225  001702  22DA               	addwfc	fsr2h,f,c
  7226  001704  0E01               	movlw	1
  7227  001706  62DF               	cpfseq	indf2,c
  7228  001708  D00F               	goto	i2l3318
  7229                           
  7230                           ; BSR set to: 0
  7231  00170A  0100               	movlb	0	; () banked
  7232  00170C  EE20 F020          	lfsr	2,32
  7233  001710  0100               	movlb	0	; () banked
  7234  001712  51E8               	movf	_ic_ptr& (0+255),w,b
  7235  001714  26D9               	addwf	fsr2l,f,c
  7236  001716  0100               	movlb	0	; () banked
  7237  001718  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7238  00171A  22DA               	addwfc	fsr2h,f,c
  7239  00171C  50DF               	movf	indf2,w,c
  7240  00171E  A4D8               	btfss	status,2,c
  7241  001720  D003               	goto	i2l3318
  7242                           
  7243                           ; BSR set to: 0
  7244                           ;my_i2c.c: 149: i2c_int_handler_master_rx();
  7245  001722  ECAB  F003         	call	_i2c_int_handler_master_rx	;wreg free
  7246                           
  7247                           ;my_i2c.c: 150: } else if ((ic_ptr->tx_i2c == 1) && (ic_ptr->rx_i2c == 0)) {
  7248  001726  0012               	return	
  7249  001728                     i2l3318:
  7250  001728  0100               	movlb	0	; () banked
  7251  00172A  EE20 F020          	lfsr	2,32
  7252  00172E  0100               	movlb	0	; () banked
  7253  001730  51E8               	movf	_ic_ptr& (0+255),w,b
  7254  001732  26D9               	addwf	fsr2l,f,c
  7255  001734  0100               	movlb	0	; () banked
  7256  001736  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7257  001738  22DA               	addwfc	fsr2h,f,c
  7258  00173A  0E01               	movlw	1
  7259  00173C  62DF               	cpfseq	indf2,c
  7260  00173E  0012               	return	
  7261                           
  7262                           ; BSR set to: 0
  7263  001740  0100               	movlb	0	; () banked
  7264  001742  EE20 F021          	lfsr	2,33
  7265  001746  0100               	movlb	0	; () banked
  7266  001748  51E8               	movf	_ic_ptr& (0+255),w,b
  7267  00174A  26D9               	addwf	fsr2l,f,c
  7268  00174C  0100               	movlb	0	; () banked
  7269  00174E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7270  001750  22DA               	addwfc	fsr2h,f,c
  7271  001752  50DF               	movf	indf2,w,c
  7272  001754  A4D8               	btfss	status,2,c
  7273  001756  0012               	return	
  7274                           
  7275                           ; BSR set to: 0
  7276                           ;my_i2c.c: 151: i2c_int_handler_master_tx();
  7277  001758  EC9C  F002         	call	_i2c_int_handler_master_tx	;wreg free
  7278  00175C  0012               	return	
  7279  00175E                     __end_of_i2c_int_handler:
  7280                           	opt stack 0
  7281                           pclatu	equ	0xFFB
  7282                           pclath	equ	0xFFA
  7283                           tblptru	equ	0xFF8
  7284                           tblptrh	equ	0xFF7
  7285                           tblptrl	equ	0xFF6
  7286                           tablat	equ	0xFF5
  7287                           prodh	equ	0xFF4
  7288                           prodl	equ	0xFF3
  7289                           intcon	equ	0xFF2
  7290                           postinc0	equ	0xFEE
  7291                           fsr0h	equ	0xFEA
  7292                           fsr0l	equ	0xFE9
  7293                           wreg	equ	0xFE8
  7294                           indf1	equ	0xFE7
  7295                           fsr1h	equ	0xFE2
  7296                           fsr1l	equ	0xFE1
  7297                           bsr	equ	0xFE0
  7298                           indf2	equ	0xFDF
  7299                           postinc2	equ	0xFDE
  7300                           postdec2	equ	0xFDD
  7301                           fsr2h	equ	0xFDA
  7302                           fsr2l	equ	0xFD9
  7303                           status	equ	0xFD8
  7304                           
  7305 ;; *************** function _i2c_int_handler_master_tx *****************
  7306 ;; Defined at:
  7307 ;;		line 232 in file "../src/my_i2c.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;		None               void
  7314 ;; Registers used:
  7315 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7321 ;;      Params:         0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0
  7323 ;;      Temps:          0       4       0       0       0
  7324 ;;      Totals:         0       4       0       0       0
  7325 ;;Total ram usage:        4 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; This function calls:
  7328 ;;		Nothing
  7329 ;; This function is called by:
  7330 ;;		_i2c_int_handler
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text48
  7335  000538                     __ptext48:
  7336                           	opt stack 0
  7337  000538                     _i2c_int_handler_master_tx:
  7338                           	opt stack 19
  7339                           
  7340                           ;my_i2c.c: 235: switch (ic_ptr->status) {
  7341                           
  7342                           ;incstack = 0
  7343  000538  D0F7               	goto	i2l3828
  7344  00053A                     i2l3802:
  7345                           
  7346                           ;my_i2c.c: 239: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7347  00053A  0100               	movlb	0	; () banked
  7348  00053C  EE20 F01A          	lfsr	2,26
  7349  000540  0100               	movlb	0	; () banked
  7350  000542  51E8               	movf	_ic_ptr& (0+255),w,b
  7351  000544  26D9               	addwf	fsr2l,f,c
  7352  000546  0100               	movlb	0	; () banked
  7353  000548  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7354  00054A  22DA               	addwfc	fsr2h,f,c
  7355  00054C  50DF               	movf	indf2,w,c
  7356  00054E  0100               	movlb	0	; () banked
  7357  000550  6FB6               	movwf	??_i2c_int_handler_master_tx& (0+255),b
  7358  000552  0100               	movlb	0	; () banked
  7359  000554  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  7360  000556  0D01               	mullw	1
  7361  000558  0E0F               	movlw	15
  7362  00055A  26F3               	addwf	prodl,f,c
  7363  00055C  0E00               	movlw	0
  7364  00055E  22F4               	addwfc	prodh,f,c
  7365  000560  50F3               	movf	prodl,w,c
  7366  000562  0100               	movlb	0	; () banked
  7367  000564  0100               	movlb	0	; () banked
  7368  000566  25E8               	addwf	_ic_ptr& (0+255),w,b
  7369  000568  6ED9               	movwf	fsr2l,c
  7370  00056A  50F4               	movf	prodh,w,c
  7371  00056C  0100               	movlb	0	; () banked
  7372  00056E  0100               	movlb	0	; () banked
  7373  000570  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7374  000572  6EDA               	movwf	fsr2h,c
  7375  000574  50DF               	movf	indf2,w,c
  7376  000576  6EC9               	movwf	4041,c	;volatile
  7377                           
  7378                           ; BSR set to: 0
  7379                           ;my_i2c.c: 240: ic_ptr->status = 0x6;
  7380  000578  0100               	movlb	0	; () banked
  7381  00057A  EE20 F00C          	lfsr	2,12
  7382  00057E  0100               	movlb	0	; () banked
  7383  000580  51E8               	movf	_ic_ptr& (0+255),w,b
  7384  000582  26D9               	addwf	fsr2l,f,c
  7385  000584  0100               	movlb	0	; () banked
  7386  000586  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7387  000588  22DA               	addwfc	fsr2h,f,c
  7388  00058A  0E06               	movlw	6
  7389  00058C  6EDF               	movwf	indf2,c
  7390                           
  7391                           ;my_i2c.c: 241: break;
  7392  00058E  0012               	return	
  7393  000590                     i2l337:
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;my_i2c.c: 245: if (!SSPCON2bits.ACKSTAT) {
  7397  000590  BCC5               	btfsc	4037,6,c	;volatile
  7398  000592  D039               	goto	i2l3810
  7399                           
  7400                           ; BSR set to: 0
  7401                           ;my_i2c.c: 247: SSPCON2bits.ACKDT = 1;
  7402  000594  8AC5               	bsf	4037,5,c	;volatile
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;my_i2c.c: 249: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  7406  000596  0100               	movlb	0	; () banked
  7407  000598  EE20 F01C          	lfsr	2,28
  7408  00059C  0100               	movlb	0	; () banked
  7409  00059E  51E8               	movf	_ic_ptr& (0+255),w,b
  7410  0005A0  26D9               	addwf	fsr2l,f,c
  7411  0005A2  0100               	movlb	0	; () banked
  7412  0005A4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7413  0005A6  22DA               	addwfc	fsr2h,f,c
  7414  0005A8  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  7415  0005AC  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  7416  0005B0  0E0F               	movlw	15
  7417  0005B2  0100               	movlb	0	; () banked
  7418  0005B4  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  7419  0005B6  0E00               	movlw	0
  7420  0005B8  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  7421  0005BA  0100               	movlb	0	; () banked
  7422  0005BC  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  7423  0005BE  0100               	movlb	0	; () banked
  7424  0005C0  0100               	movlb	0	; () banked
  7425  0005C2  25E8               	addwf	_ic_ptr& (0+255),w,b
  7426  0005C4  6ED9               	movwf	fsr2l,c
  7427  0005C6  0100               	movlb	0	; () banked
  7428  0005C8  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  7429  0005CA  0100               	movlb	0	; () banked
  7430  0005CC  0100               	movlb	0	; () banked
  7431  0005CE  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7432  0005D0  6EDA               	movwf	fsr2h,c
  7433  0005D2  50DF               	movf	indf2,w,c
  7434  0005D4  6EC9               	movwf	4041,c	;volatile
  7435                           
  7436                           ;my_i2c.c: 251: ic_ptr->bufferCounterSend++;
  7437  0005D6  0100               	movlb	0	; () banked
  7438  0005D8  EE20 F01C          	lfsr	2,28
  7439  0005DC  0100               	movlb	0	; () banked
  7440  0005DE  51E8               	movf	_ic_ptr& (0+255),w,b
  7441  0005E0  26D9               	addwf	fsr2l,f,c
  7442  0005E2  0100               	movlb	0	; () banked
  7443  0005E4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7444  0005E6  22DA               	addwfc	fsr2h,f,c
  7445  0005E8  2ADE               	incf	postinc2,f,c
  7446  0005EA  0E00               	movlw	0
  7447  0005EC  22DD               	addwfc	postdec2,f,c
  7448                           
  7449                           ;my_i2c.c: 252: ic_ptr->status = 0x7;
  7450  0005EE  0100               	movlb	0	; () banked
  7451  0005F0  EE20 F00C          	lfsr	2,12
  7452  0005F4  0100               	movlb	0	; () banked
  7453  0005F6  51E8               	movf	_ic_ptr& (0+255),w,b
  7454  0005F8  26D9               	addwf	fsr2l,f,c
  7455  0005FA  0100               	movlb	0	; () banked
  7456  0005FC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7457  0005FE  22DA               	addwfc	fsr2h,f,c
  7458  000600  0E07               	movlw	7
  7459  000602  6EDF               	movwf	indf2,c
  7460                           
  7461                           ;my_i2c.c: 255: } else {
  7462  000604  0012               	return	
  7463  000606                     i2l3810:
  7464                           
  7465                           ; BSR set to: 0
  7466                           ;my_i2c.c: 256: ic_ptr->status = 1;
  7467  000606  0100               	movlb	0	; () banked
  7468  000608  EE20 F00C          	lfsr	2,12
  7469  00060C  0100               	movlb	0	; () banked
  7470  00060E  51E8               	movf	_ic_ptr& (0+255),w,b
  7471  000610  26D9               	addwf	fsr2l,f,c
  7472  000612  0100               	movlb	0	; () banked
  7473  000614  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7474  000616  22DA               	addwfc	fsr2h,f,c
  7475  000618  0E01               	movlw	1
  7476  00061A  6EDF               	movwf	indf2,c
  7477  00061C  0012               	return	
  7478  00061E                     i2l340:
  7479                           
  7480                           ; BSR set to: 0
  7481                           ;my_i2c.c: 262: if (!SSPCON2bits.ACKSTAT) {
  7482  00061E  BCC5               	btfsc	4037,6,c	;volatile
  7483  000620  D06B               	goto	i2l3822
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;my_i2c.c: 266: SSPCON2bits.ACKDT = 1;
  7487  000622  8AC5               	bsf	4037,5,c	;volatile
  7488                           
  7489                           ; BSR set to: 0
  7490                           ;my_i2c.c: 268: if (ic_ptr->bufferCounterSend == (ic_ptr->outbuflen)) {
  7491  000624  0100               	movlb	0	; () banked
  7492  000626  EE20 F01C          	lfsr	2,28
  7493  00062A  0100               	movlb	0	; () banked
  7494  00062C  51E8               	movf	_ic_ptr& (0+255),w,b
  7495  00062E  26D9               	addwf	fsr2l,f,c
  7496  000630  0100               	movlb	0	; () banked
  7497  000632  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7498  000634  22DA               	addwfc	fsr2h,f,c
  7499  000636  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  7500  00063A  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  7501  00063E  0100               	movlb	0	; () banked
  7502  000640  EE20 F019          	lfsr	2,25
  7503  000644  0100               	movlb	0	; () banked
  7504  000646  51E8               	movf	_ic_ptr& (0+255),w,b
  7505  000648  26D9               	addwf	fsr2l,f,c
  7506  00064A  0100               	movlb	0	; () banked
  7507  00064C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7508  00064E  22DA               	addwfc	fsr2h,f,c
  7509  000650  50DF               	movf	indf2,w,c
  7510  000652  0100               	movlb	0	; () banked
  7511  000654  6FB8               	movwf	(??_i2c_int_handler_master_tx+2)& (0+255),b
  7512  000656  6BB9               	clrf	(??_i2c_int_handler_master_tx+3)& (0+255),b
  7513  000658  0100               	movlb	0	; () banked
  7514  00065A  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  7515  00065C  0100               	movlb	0	; () banked
  7516  00065E  19B9               	xorwf	(??_i2c_int_handler_master_tx+3)& (0+255),w,b
  7517  000660  E104               	bnz	i2u256_45
  7518  000662  0100               	movlb	0	; () banked
  7519  000664  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  7520  000666  0100               	movlb	0	; () banked
  7521  000668  19B8               	xorwf	(??_i2c_int_handler_master_tx+2)& (0+255),w,b
  7522  00066A                     i2u256_45:
  7523  00066A  A4D8               	btfss	status,2,c
  7524  00066C  D00D               	goto	i2l3820
  7525                           
  7526                           ; BSR set to: 0
  7527                           ;my_i2c.c: 269: ic_ptr->status = 0xA;
  7528  00066E  0100               	movlb	0	; () banked
  7529  000670  EE20 F00C          	lfsr	2,12
  7530  000674  0100               	movlb	0	; () banked
  7531  000676  51E8               	movf	_ic_ptr& (0+255),w,b
  7532  000678  26D9               	addwf	fsr2l,f,c
  7533  00067A  0100               	movlb	0	; () banked
  7534  00067C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7535  00067E  22DA               	addwfc	fsr2h,f,c
  7536  000680  0E0A               	movlw	10
  7537  000682  6EDF               	movwf	indf2,c
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;my_i2c.c: 271: SSP1CON2bits.PEN = 1;
  7541  000684  84C5               	bsf	4037,2,c	;volatile
  7542                           
  7543                           ;my_i2c.c: 273: } else {
  7544  000686  0012               	return	
  7545  000688                     i2l3820:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;my_i2c.c: 275: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  7549  000688  0100               	movlb	0	; () banked
  7550  00068A  EE20 F01C          	lfsr	2,28
  7551  00068E  0100               	movlb	0	; () banked
  7552  000690  51E8               	movf	_ic_ptr& (0+255),w,b
  7553  000692  26D9               	addwf	fsr2l,f,c
  7554  000694  0100               	movlb	0	; () banked
  7555  000696  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7556  000698  22DA               	addwfc	fsr2h,f,c
  7557  00069A  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  7558  00069E  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  7559  0006A2  0E0F               	movlw	15
  7560  0006A4  0100               	movlb	0	; () banked
  7561  0006A6  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  7562  0006A8  0E00               	movlw	0
  7563  0006AA  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  7564  0006AC  0100               	movlb	0	; () banked
  7565  0006AE  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  7566  0006B0  0100               	movlb	0	; () banked
  7567  0006B2  0100               	movlb	0	; () banked
  7568  0006B4  25E8               	addwf	_ic_ptr& (0+255),w,b
  7569  0006B6  6ED9               	movwf	fsr2l,c
  7570  0006B8  0100               	movlb	0	; () banked
  7571  0006BA  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  7572  0006BC  0100               	movlb	0	; () banked
  7573  0006BE  0100               	movlb	0	; () banked
  7574  0006C0  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7575  0006C2  6EDA               	movwf	fsr2h,c
  7576  0006C4  50DF               	movf	indf2,w,c
  7577  0006C6  6EC9               	movwf	4041,c	;volatile
  7578                           
  7579                           ;my_i2c.c: 277: ic_ptr->bufferCounterSend++;
  7580  0006C8  0100               	movlb	0	; () banked
  7581  0006CA  EE20 F01C          	lfsr	2,28
  7582  0006CE  0100               	movlb	0	; () banked
  7583  0006D0  51E8               	movf	_ic_ptr& (0+255),w,b
  7584  0006D2  26D9               	addwf	fsr2l,f,c
  7585  0006D4  0100               	movlb	0	; () banked
  7586  0006D6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7587  0006D8  22DA               	addwfc	fsr2h,f,c
  7588  0006DA  2ADE               	incf	postinc2,f,c
  7589  0006DC  0E00               	movlw	0
  7590  0006DE  22DD               	addwfc	postdec2,f,c
  7591                           
  7592                           ;my_i2c.c: 278: ic_ptr->status = 0x7;
  7593  0006E0  0100               	movlb	0	; () banked
  7594  0006E2  EE20 F00C          	lfsr	2,12
  7595  0006E6  0100               	movlb	0	; () banked
  7596  0006E8  51E8               	movf	_ic_ptr& (0+255),w,b
  7597  0006EA  26D9               	addwf	fsr2l,f,c
  7598  0006EC  0100               	movlb	0	; () banked
  7599  0006EE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7600  0006F0  22DA               	addwfc	fsr2h,f,c
  7601  0006F2  0E07               	movlw	7
  7602  0006F4  6EDF               	movwf	indf2,c
  7603  0006F6  0012               	return	
  7604  0006F8                     i2l3822:
  7605                           
  7606                           ; BSR set to: 0
  7607                           ;my_i2c.c: 282: ic_ptr->status = 0x9;
  7608  0006F8  0100               	movlb	0	; () banked
  7609  0006FA  EE20 F00C          	lfsr	2,12
  7610  0006FE  0100               	movlb	0	; () banked
  7611  000700  51E8               	movf	_ic_ptr& (0+255),w,b
  7612  000702  26D9               	addwf	fsr2l,f,c
  7613  000704  0100               	movlb	0	; () banked
  7614  000706  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7615  000708  22DA               	addwfc	fsr2h,f,c
  7616  00070A  0E09               	movlw	9
  7617  00070C  6EDF               	movwf	indf2,c
  7618  00070E  0012               	return	
  7619  000710                     i2l3824:
  7620                           
  7621                           ; BSR set to: 0
  7622                           ;my_i2c.c: 287: ic_ptr->status = 0x3;
  7623  000710  0100               	movlb	0	; () banked
  7624  000712  EE20 F00C          	lfsr	2,12
  7625  000716  0100               	movlb	0	; () banked
  7626  000718  51E8               	movf	_ic_ptr& (0+255),w,b
  7627  00071A  26D9               	addwf	fsr2l,f,c
  7628  00071C  0100               	movlb	0	; () banked
  7629  00071E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7630  000720  22DA               	addwfc	fsr2h,f,c
  7631  000722  0E03               	movlw	3
  7632  000724  6EDF               	movwf	indf2,c
  7633                           
  7634                           ;my_i2c.c: 290: break;
  7635  000726  0012               	return	
  7636  000728                     i2l3828:
  7637  000728  0100               	movlb	0	; () banked
  7638  00072A  EE20 F00C          	lfsr	2,12
  7639  00072E  0100               	movlb	0	; () banked
  7640  000730  51E8               	movf	_ic_ptr& (0+255),w,b
  7641  000732  26D9               	addwf	fsr2l,f,c
  7642  000734  0100               	movlb	0	; () banked
  7643  000736  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7644  000738  22DA               	addwfc	fsr2h,f,c
  7645  00073A  50DF               	movf	indf2,w,c
  7646                           
  7647                           ; Switch size 1, requested type "space"
  7648                           ; Number of cases is 4, Range of values is 5 to 10
  7649                           ; switch strategies available:
  7650                           ; Name         Instructions Cycles
  7651                           ; simple_byte           13     7 (average)
  7652                           ;	Chosen strategy is simple_byte
  7653  00073C  0A05               	xorlw	5	; case 5
  7654  00073E  B4D8               	btfsc	status,2,c
  7655  000740  D6FC               	goto	i2l3802
  7656  000742  0A03               	xorlw	3	; case 6
  7657  000744  B4D8               	btfsc	status,2,c
  7658  000746  D724               	goto	i2l337
  7659  000748  0A01               	xorlw	1	; case 7
  7660  00074A  B4D8               	btfsc	status,2,c
  7661  00074C  D768               	goto	i2l340
  7662  00074E  0A0D               	xorlw	13	; case 10
  7663  000750  A4D8               	btfss	status,2,c
  7664  000752  0012               	return	
  7665  000754  D7DD               	goto	i2l3824
  7666  000756                     __end_of_i2c_int_handler_master_tx:
  7667                           	opt stack 0
  7668                           pclatu	equ	0xFFB
  7669                           pclath	equ	0xFFA
  7670                           tblptru	equ	0xFF8
  7671                           tblptrh	equ	0xFF7
  7672                           tblptrl	equ	0xFF6
  7673                           tablat	equ	0xFF5
  7674                           prodh	equ	0xFF4
  7675                           prodl	equ	0xFF3
  7676                           intcon	equ	0xFF2
  7677                           postinc0	equ	0xFEE
  7678                           fsr0h	equ	0xFEA
  7679                           fsr0l	equ	0xFE9
  7680                           wreg	equ	0xFE8
  7681                           indf1	equ	0xFE7
  7682                           fsr1h	equ	0xFE2
  7683                           fsr1l	equ	0xFE1
  7684                           bsr	equ	0xFE0
  7685                           indf2	equ	0xFDF
  7686                           postinc2	equ	0xFDE
  7687                           postdec2	equ	0xFDD
  7688                           fsr2h	equ	0xFDA
  7689                           fsr2l	equ	0xFD9
  7690                           status	equ	0xFD8
  7691                           
  7692 ;; *************** function _i2c_int_handler_master_rx *****************
  7693 ;; Defined at:
  7694 ;;		line 155 in file "../src/my_i2c.c"
  7695 ;; Parameters:    Size  Location     Type
  7696 ;;		None
  7697 ;; Auto vars:     Size  Location     Type
  7698 ;;		None
  7699 ;; Return value:  Size  Location     Type
  7700 ;;		None               void
  7701 ;; Registers used:
  7702 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7703 ;; Tracked objects:
  7704 ;;		On entry : 0/0
  7705 ;;		On exit  : 0/0
  7706 ;;		Unchanged: 0/0
  7707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7708 ;;      Params:         0       0       0       0       0
  7709 ;;      Locals:         0       0       0       0       0
  7710 ;;      Temps:          0       4       0       0       0
  7711 ;;      Totals:         0       4       0       0       0
  7712 ;;Total ram usage:        4 bytes
  7713 ;; Hardware stack levels used:    1
  7714 ;; This function calls:
  7715 ;;		Nothing
  7716 ;; This function is called by:
  7717 ;;		_i2c_int_handler
  7718 ;; This function uses a non-reentrant model
  7719 ;;
  7720                           
  7721                           	psect	text49
  7722  000756                     __ptext49:
  7723                           	opt stack 0
  7724  000756                     _i2c_int_handler_master_rx:
  7725                           	opt stack 19
  7726                           
  7727                           ;my_i2c.c: 156: switch (ic_ptr->status) {
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;incstack = 0
  7731  000756  D0C0               	goto	i2l3798
  7732  000758                     i2l3774:
  7733                           
  7734                           ;my_i2c.c: 160: SSPBUF = ic_ptr->slave_addr_rc;
  7735  000758  0100               	movlb	0	; () banked
  7736  00075A  EE20 F022          	lfsr	2,34
  7737  00075E  0100               	movlb	0	; () banked
  7738  000760  51E8               	movf	_ic_ptr& (0+255),w,b
  7739  000762  26D9               	addwf	fsr2l,f,c
  7740  000764  0100               	movlb	0	; () banked
  7741  000766  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7742  000768  22DA               	addwfc	fsr2h,f,c
  7743  00076A  50DF               	movf	indf2,w,c
  7744  00076C  6EC9               	movwf	4041,c	;volatile
  7745                           
  7746                           ;my_i2c.c: 161: ic_ptr->status = 0xD;
  7747  00076E  0100               	movlb	0	; () banked
  7748  000770  EE20 F00C          	lfsr	2,12
  7749  000774  0100               	movlb	0	; () banked
  7750  000776  51E8               	movf	_ic_ptr& (0+255),w,b
  7751  000778  26D9               	addwf	fsr2l,f,c
  7752  00077A  0100               	movlb	0	; () banked
  7753  00077C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7754  00077E  22DA               	addwfc	fsr2h,f,c
  7755  000780  0E0D               	movlw	13
  7756  000782  6EDF               	movwf	indf2,c
  7757                           
  7758                           ;my_i2c.c: 162: break;
  7759  000784  0012               	return	
  7760  000786                     i2l322:
  7761                           
  7762                           ; BSR set to: 0
  7763                           ;my_i2c.c: 166: if (!SSPCON2bits.ACKSTAT) {
  7764  000786  BCC5               	btfsc	4037,6,c	;volatile
  7765  000788  D00D               	goto	i2l3780
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;my_i2c.c: 168: SSPCON2bits.RCEN = 1;
  7769  00078A  86C5               	bsf	4037,3,c	;volatile
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;my_i2c.c: 170: ic_ptr->status = 0xF;
  7773  00078C  0100               	movlb	0	; () banked
  7774  00078E  EE20 F00C          	lfsr	2,12
  7775  000792  0100               	movlb	0	; () banked
  7776  000794  51E8               	movf	_ic_ptr& (0+255),w,b
  7777  000796  26D9               	addwf	fsr2l,f,c
  7778  000798  0100               	movlb	0	; () banked
  7779  00079A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7780  00079C  22DA               	addwfc	fsr2h,f,c
  7781  00079E  0E0F               	movlw	15
  7782  0007A0  6EDF               	movwf	indf2,c
  7783                           
  7784                           ;my_i2c.c: 172: } else {
  7785  0007A2  0012               	return	
  7786  0007A4                     i2l3780:
  7787                           
  7788                           ; BSR set to: 0
  7789                           ;my_i2c.c: 173: ic_ptr->status = 0xE;
  7790  0007A4  0100               	movlb	0	; () banked
  7791  0007A6  EE20 F00C          	lfsr	2,12
  7792  0007AA  0100               	movlb	0	; () banked
  7793  0007AC  51E8               	movf	_ic_ptr& (0+255),w,b
  7794  0007AE  26D9               	addwf	fsr2l,f,c
  7795  0007B0  0100               	movlb	0	; () banked
  7796  0007B2  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7797  0007B4  22DA               	addwfc	fsr2h,f,c
  7798  0007B6  0E0E               	movlw	14
  7799  0007B8  6EDF               	movwf	indf2,c
  7800  0007BA  0012               	return	
  7801  0007BC                     i2l3782:
  7802                           
  7803                           ; BSR set to: 0
  7804                           ;my_i2c.c: 179: ic_ptr->buffer[ic_ptr->bufferCounterRx] = SSPBUF;
  7805  0007BC  0100               	movlb	0	; () banked
  7806  0007BE  EE20 F01E          	lfsr	2,30
  7807  0007C2  0100               	movlb	0	; () banked
  7808  0007C4  51E8               	movf	_ic_ptr& (0+255),w,b
  7809  0007C6  26D9               	addwf	fsr2l,f,c
  7810  0007C8  0100               	movlb	0	; () banked
  7811  0007CA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7812  0007CC  22DA               	addwfc	fsr2h,f,c
  7813  0007CE  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  7814  0007D2  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  7815  0007D6  0100               	movlb	0	; () banked
  7816  0007D8  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  7817  0007DA  0100               	movlb	0	; () banked
  7818  0007DC  0100               	movlb	0	; () banked
  7819  0007DE  25E8               	addwf	_ic_ptr& (0+255),w,b
  7820  0007E0  6ED9               	movwf	fsr2l,c
  7821  0007E2  0100               	movlb	0	; () banked
  7822  0007E4  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  7823  0007E6  0100               	movlb	0	; () banked
  7824  0007E8  0100               	movlb	0	; () banked
  7825  0007EA  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7826  0007EC  6EDA               	movwf	fsr2h,c
  7827  0007EE  CFC9 FFDF          	movff	4041,indf2	;volatile
  7828                           
  7829                           ;my_i2c.c: 180: ic_ptr->bufferCounterRx++;
  7830  0007F2  0100               	movlb	0	; () banked
  7831  0007F4  EE20 F01E          	lfsr	2,30
  7832  0007F8  0100               	movlb	0	; () banked
  7833  0007FA  51E8               	movf	_ic_ptr& (0+255),w,b
  7834  0007FC  26D9               	addwf	fsr2l,f,c
  7835  0007FE  0100               	movlb	0	; () banked
  7836  000800  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7837  000802  22DA               	addwfc	fsr2h,f,c
  7838  000804  2ADE               	incf	postinc2,f,c
  7839  000806  0E00               	movlw	0
  7840  000808  22DD               	addwfc	postdec2,f,c
  7841                           
  7842                           ;my_i2c.c: 181: if (ic_ptr->buflen == ic_ptr->bufferCounterRx) {
  7843  00080A  0100               	movlb	0	; () banked
  7844  00080C  EE20 F01E          	lfsr	2,30
  7845  000810  0100               	movlb	0	; () banked
  7846  000812  51E8               	movf	_ic_ptr& (0+255),w,b
  7847  000814  26D9               	addwf	fsr2l,f,c
  7848  000816  0100               	movlb	0	; () banked
  7849  000818  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7850  00081A  22DA               	addwfc	fsr2h,f,c
  7851  00081C  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  7852  000820  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  7853  000824  0100               	movlb	0	; () banked
  7854  000826  EE20 F00A          	lfsr	2,10
  7855  00082A  0100               	movlb	0	; () banked
  7856  00082C  51E8               	movf	_ic_ptr& (0+255),w,b
  7857  00082E  26D9               	addwf	fsr2l,f,c
  7858  000830  0100               	movlb	0	; () banked
  7859  000832  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7860  000834  22DA               	addwfc	fsr2h,f,c
  7861  000836  50DF               	movf	indf2,w,c
  7862  000838  0100               	movlb	0	; () banked
  7863  00083A  6FB8               	movwf	(??_i2c_int_handler_master_rx+2)& (0+255),b
  7864  00083C  6BB9               	clrf	(??_i2c_int_handler_master_rx+3)& (0+255),b
  7865  00083E  0100               	movlb	0	; () banked
  7866  000840  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  7867  000842  0100               	movlb	0	; () banked
  7868  000844  19B9               	xorwf	(??_i2c_int_handler_master_rx+3)& (0+255),w,b
  7869  000846  E104               	bnz	i2u253_45
  7870  000848  0100               	movlb	0	; () banked
  7871  00084A  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  7872  00084C  0100               	movlb	0	; () banked
  7873  00084E  19B8               	xorwf	(??_i2c_int_handler_master_rx+2)& (0+255),w,b
  7874  000850                     i2u253_45:
  7875  000850  A4D8               	btfss	status,2,c
  7876  000852  D00E               	goto	i2l326
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;my_i2c.c: 182: SSPCON2bits.ACKDT = 1;
  7880  000854  8AC5               	bsf	4037,5,c	;volatile
  7881                           
  7882                           ;my_i2c.c: 183: SSPCON2bits.ACKEN = 1;
  7883  000856  88C5               	bsf	4037,4,c	;volatile
  7884                           
  7885                           ; BSR set to: 0
  7886                           ;my_i2c.c: 185: ic_ptr->status = 0x11;
  7887  000858  0100               	movlb	0	; () banked
  7888  00085A  EE20 F00C          	lfsr	2,12
  7889  00085E  0100               	movlb	0	; () banked
  7890  000860  51E8               	movf	_ic_ptr& (0+255),w,b
  7891  000862  26D9               	addwf	fsr2l,f,c
  7892  000864  0100               	movlb	0	; () banked
  7893  000866  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7894  000868  22DA               	addwfc	fsr2h,f,c
  7895  00086A  0E11               	movlw	17
  7896  00086C  6EDF               	movwf	indf2,c
  7897                           
  7898                           ;my_i2c.c: 186: } else {
  7899  00086E  0012               	return	
  7900  000870                     i2l326:
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;my_i2c.c: 187: SSPCON2bits.ACKDT = 0;
  7904  000870  9AC5               	bcf	4037,5,c	;volatile
  7905                           
  7906                           ;my_i2c.c: 188: SSPCON2bits.ACKEN = 1;
  7907  000872  88C5               	bsf	4037,4,c	;volatile
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;my_i2c.c: 191: ic_ptr->status = 0x10;
  7911  000874  0100               	movlb	0	; () banked
  7912  000876  EE20 F00C          	lfsr	2,12
  7913  00087A  0100               	movlb	0	; () banked
  7914  00087C  51E8               	movf	_ic_ptr& (0+255),w,b
  7915  00087E  26D9               	addwf	fsr2l,f,c
  7916  000880  0100               	movlb	0	; () banked
  7917  000882  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7918  000884  22DA               	addwfc	fsr2h,f,c
  7919  000886  0E10               	movlw	16
  7920  000888  6EDF               	movwf	indf2,c
  7921  00088A  0012               	return	
  7922  00088C                     i2l328:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;my_i2c.c: 207: SSPCON2bits.RCEN = 1;
  7926  00088C  86C5               	bsf	4037,3,c	;volatile
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;my_i2c.c: 209: ic_ptr->status = 0xF;
  7930  00088E  0100               	movlb	0	; () banked
  7931  000890  EE20 F00C          	lfsr	2,12
  7932  000894  0100               	movlb	0	; () banked
  7933  000896  51E8               	movf	_ic_ptr& (0+255),w,b
  7934  000898  26D9               	addwf	fsr2l,f,c
  7935  00089A  0100               	movlb	0	; () banked
  7936  00089C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7937  00089E  22DA               	addwfc	fsr2h,f,c
  7938  0008A0  0E0F               	movlw	15
  7939  0008A2  6EDF               	movwf	indf2,c
  7940                           
  7941                           ;my_i2c.c: 211: break;
  7942  0008A4  0012               	return	
  7943  0008A6                     i2l329:
  7944                           
  7945                           ; BSR set to: 0
  7946                           ;my_i2c.c: 213: {
  7947                           ;my_i2c.c: 215: SSPCON2bits.PEN = 1;
  7948  0008A6  84C5               	bsf	4037,2,c	;volatile
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;my_i2c.c: 216: ic_ptr->status = 0x12;
  7952  0008A8  0100               	movlb	0	; () banked
  7953  0008AA  EE20 F00C          	lfsr	2,12
  7954  0008AE  0100               	movlb	0	; () banked
  7955  0008B0  51E8               	movf	_ic_ptr& (0+255),w,b
  7956  0008B2  26D9               	addwf	fsr2l,f,c
  7957  0008B4  0100               	movlb	0	; () banked
  7958  0008B6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7959  0008B8  22DA               	addwfc	fsr2h,f,c
  7960  0008BA  0E12               	movlw	18
  7961  0008BC  6EDF               	movwf	indf2,c
  7962                           
  7963                           ;my_i2c.c: 218: }
  7964                           ;my_i2c.c: 219: break;
  7965  0008BE  0012               	return	
  7966  0008C0                     i2l3794:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;my_i2c.c: 222: ic_ptr->status = 0x3;
  7970  0008C0  0100               	movlb	0	; () banked
  7971  0008C2  EE20 F00C          	lfsr	2,12
  7972  0008C6  0100               	movlb	0	; () banked
  7973  0008C8  51E8               	movf	_ic_ptr& (0+255),w,b
  7974  0008CA  26D9               	addwf	fsr2l,f,c
  7975  0008CC  0100               	movlb	0	; () banked
  7976  0008CE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7977  0008D0  22DA               	addwfc	fsr2h,f,c
  7978  0008D2  0E03               	movlw	3
  7979  0008D4  6EDF               	movwf	indf2,c
  7980                           
  7981                           ;my_i2c.c: 225: break;
  7982  0008D6  0012               	return	
  7983  0008D8                     i2l3798:
  7984  0008D8  0100               	movlb	0	; () banked
  7985  0008DA  EE20 F00C          	lfsr	2,12
  7986  0008DE  0100               	movlb	0	; () banked
  7987  0008E0  51E8               	movf	_ic_ptr& (0+255),w,b
  7988  0008E2  26D9               	addwf	fsr2l,f,c
  7989  0008E4  0100               	movlb	0	; () banked
  7990  0008E6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  7991  0008E8  22DA               	addwfc	fsr2h,f,c
  7992  0008EA  50DF               	movf	indf2,w,c
  7993                           
  7994                           ; Switch size 1, requested type "space"
  7995                           ; Number of cases is 6, Range of values is 12 to 18
  7996                           ; switch strategies available:
  7997                           ; Name         Instructions Cycles
  7998                           ; simple_byte           19    10 (average)
  7999                           ;	Chosen strategy is simple_byte
  8000  0008EC  0A0C               	xorlw	12	; case 12
  8001  0008EE  B4D8               	btfsc	status,2,c
  8002  0008F0  D733               	goto	i2l3774
  8003  0008F2  0A01               	xorlw	1	; case 13
  8004  0008F4  B4D8               	btfsc	status,2,c
  8005  0008F6  D747               	goto	i2l322
  8006  0008F8  0A02               	xorlw	2	; case 15
  8007  0008FA  B4D8               	btfsc	status,2,c
  8008  0008FC  D75F               	goto	i2l3782
  8009  0008FE  0A1F               	xorlw	31	; case 16
  8010  000900  B4D8               	btfsc	status,2,c
  8011  000902  D7C4               	goto	i2l328
  8012  000904  0A01               	xorlw	1	; case 17
  8013  000906  B4D8               	btfsc	status,2,c
  8014  000908  D7CE               	goto	i2l329
  8015  00090A  0A03               	xorlw	3	; case 18
  8016  00090C  A4D8               	btfss	status,2,c
  8017  00090E  0012               	return	
  8018  000910  D7D7               	goto	i2l3794
  8019  000912                     __end_of_i2c_int_handler_master_rx:
  8020                           	opt stack 0
  8021                           pclatu	equ	0xFFB
  8022                           pclath	equ	0xFFA
  8023                           tblptru	equ	0xFF8
  8024                           tblptrh	equ	0xFF7
  8025                           tblptrl	equ	0xFF6
  8026                           tablat	equ	0xFF5
  8027                           prodh	equ	0xFF4
  8028                           prodl	equ	0xFF3
  8029                           intcon	equ	0xFF2
  8030                           postinc0	equ	0xFEE
  8031                           fsr0h	equ	0xFEA
  8032                           fsr0l	equ	0xFE9
  8033                           wreg	equ	0xFE8
  8034                           indf1	equ	0xFE7
  8035                           fsr1h	equ	0xFE2
  8036                           fsr1l	equ	0xFE1
  8037                           bsr	equ	0xFE0
  8038                           indf2	equ	0xFDF
  8039                           postinc2	equ	0xFDE
  8040                           postdec2	equ	0xFDD
  8041                           fsr2h	equ	0xFDA
  8042                           fsr2l	equ	0xFD9
  8043                           status	equ	0xFD8
  8044                           
  8045 ;; *************** function _adc_int_hand *****************
  8046 ;; Defined at:
  8047 ;;		line 12 in file "../src/adc_int_handler.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;		None
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  c               2    4[BANK0 ] int 
  8052 ;;  c               2    2[BANK0 ] int 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;		None               void
  8055 ;; Registers used:
  8056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8062 ;;      Params:         0       0       0       0       0
  8063 ;;      Locals:         0       4       0       0       0
  8064 ;;      Temps:          0       0       0       0       0
  8065 ;;      Totals:         0       4       0       0       0
  8066 ;;Total ram usage:        4 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; Hardware stack levels required when called:    1
  8069 ;; This function calls:
  8070 ;;		_ReadADC
  8071 ;; This function is called by:
  8072 ;;		_InterruptHandlerHigh
  8073 ;; This function uses a non-reentrant model
  8074 ;;
  8075                           
  8076                           	psect	text50
  8077  000AB6                     __ptext50:
  8078                           	opt stack 0
  8079  000AB6                     _adc_int_hand:
  8080                           	opt stack 19
  8081                           
  8082                           ;adc_int_handler.c: 18: ADCResult = 0;
  8083                           
  8084                           ; BSR set to: 0
  8085                           ;incstack = 0
  8086  000AB6  0E00               	movlw	0
  8087  000AB8  6E52               	movwf	_ADCResult+1,c
  8088  000ABA  0E00               	movlw	0
  8089  000ABC  6E51               	movwf	_ADCResult,c
  8090                           
  8091                           ;adc_int_handler.c: 19: ADCResult = (int) ReadADC() >> 2;
  8092  000ABE  ECCF  F00E         	call	_ReadADC	;wreg free
  8093  000AC2  0100               	movlb	0	; () banked
  8094  000AC4  0100               	movlb	0	; () banked
  8095  000AC6  0100               	movlb	0	; () banked
  8096  000AC8  0100               	movlb	0	; () banked
  8097  000ACA  35B7               	rlcf	(?_ReadADC+1)& (0+255),w,b
  8098  000ACC  33B7               	rrcf	(?_ReadADC+1)& (0+255),f,b
  8099  000ACE  33B6               	rrcf	?_ReadADC& (0+255),f,b
  8100  000AD0  0100               	movlb	0	; () banked
  8101  000AD2  0100               	movlb	0	; () banked
  8102  000AD4  0100               	movlb	0	; () banked
  8103  000AD6  0100               	movlb	0	; () banked
  8104  000AD8  35B7               	rlcf	(?_ReadADC+1)& (0+255),w,b
  8105  000ADA  33B7               	rrcf	(?_ReadADC+1)& (0+255),f,b
  8106  000ADC  33B6               	rrcf	?_ReadADC& (0+255),f,b
  8107  000ADE  0100               	movlb	0	; () banked
  8108  000AE0  C0B6  F051         	movff	?_ReadADC,_ADCResult
  8109  000AE4  0100               	movlb	0	; () banked
  8110  000AE6  C0B7  F052         	movff	?_ReadADC+1,_ADCResult+1
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;adc_int_handler.c: 21: if (previousValue != (unsigned int) ADCResult) {
  8114  000AEA  5052               	movf	_ADCResult+1,w,c
  8115  000AEC  185A               	xorwf	_previousValue+1,w,c
  8116  000AEE  E102               	bnz	i2u198_45
  8117  000AF0  5051               	movf	_ADCResult,w,c
  8118  000AF2  1859               	xorwf	_previousValue,w,c
  8119  000AF4                     i2u198_45:
  8120  000AF4  B4D8               	btfsc	status,2,c
  8121  000AF6  0012               	return	
  8122                           
  8123                           ; BSR set to: 0
  8124                           ;adc_int_handler.c: 23: if (bufferFlag == 0x0) {
  8125  000AF8  5054               	movf	_bufferFlag+1,w,c
  8126  000AFA  1053               	iorwf	_bufferFlag,w,c
  8127  000AFC  A4D8               	btfss	status,2,c
  8128  000AFE  D046               	goto	i2l3288
  8129                           
  8130                           ; BSR set to: 0
  8131                           ;adc_int_handler.c: 24: ADCBuffer0[bufferLen++] = ADCResult;
  8132  000B00  0E3F               	movlw	low _ADCBuffer0
  8133  000B02  2455               	addwf	_bufferLen,w,c
  8134  000B04  6ED9               	movwf	fsr2l,c
  8135  000B06  0E00               	movlw	high _ADCBuffer0
  8136  000B08  2056               	addwfc	_bufferLen+1,w,c
  8137  000B0A  6EDA               	movwf	fsr2h,c
  8138  000B0C  C051  FFDF         	movff	_ADCResult,indf2
  8139                           
  8140                           ; BSR set to: 0
  8141  000B10  4A55               	infsnz	_bufferLen,f,c
  8142  000B12  2A56               	incf	_bufferLen+1,f,c
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;adc_int_handler.c: 26: if (bufferLen > 5) {
  8146  000B14  5056               	movf	_bufferLen+1,w,c
  8147  000B16  0A80               	xorlw	128
  8148  000B18  0F80               	addlw	-128
  8149  000B1A  0E06               	movlw	6
  8150  000B1C  B4D8               	btfsc	status,2,c
  8151  000B1E  5C55               	subwf	_bufferLen,w,c
  8152  000B20  A0D8               	btfss	status,0,c
  8153  000B22  D07E               	goto	i2l3310
  8154                           
  8155                           ; BSR set to: 0
  8156                           ;adc_int_handler.c: 27: int c = 0;
  8157  000B24  0E00               	movlw	0
  8158  000B26  0100               	movlb	0	; () banked
  8159  000B28  0100               	movlb	0	; () banked
  8160  000B2A  6FB9               	movwf	(adc_int_hand@c+1)& (0+255),b
  8161  000B2C  0E00               	movlw	0
  8162  000B2E  0100               	movlb	0	; () banked
  8163  000B30  6FB8               	movwf	adc_int_hand@c& (0+255),b
  8164  000B32                     
  8165                           ; BSR set to: 0
  8166                           ;adc_int_handler.c: 28: for (; c < 5; c++) {
  8167  000B32  0100               	movlb	0	; () banked
  8168  000B34  0100               	movlb	0	; () banked
  8169  000B36  51B9               	movf	(adc_int_hand@c+1)& (0+255),w,b
  8170  000B38  0A80               	xorlw	128
  8171  000B3A  0F80               	addlw	-128
  8172  000B3C  0E05               	movlw	5
  8173  000B3E  B4D8               	btfsc	status,2,c
  8174  000B40  5DB8               	subwf	adc_int_hand@c& (0+255),w,b
  8175  000B42  B0D8               	btfsc	status,0,c
  8176  000B44  D01B               	goto	i2l3286
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;adc_int_handler.c: 29: buff[c] = ADCBuffer0[c];
  8180                           
  8181                           ; BSR set to: 0
  8182                           
  8183                           ; BSR set to: 0
  8184  000B46  0E3F               	movlw	low _ADCBuffer0
  8185  000B48  0100               	movlb	0	; () banked
  8186  000B4A  0100               	movlb	0	; () banked
  8187  000B4C  25B8               	addwf	adc_int_hand@c& (0+255),w,b
  8188  000B4E  6ED9               	movwf	fsr2l,c
  8189  000B50  0E00               	movlw	high _ADCBuffer0
  8190  000B52  0100               	movlb	0	; () banked
  8191  000B54  0100               	movlb	0	; () banked
  8192  000B56  21B9               	addwfc	(adc_int_hand@c+1)& (0+255),w,b
  8193  000B58  6EDA               	movwf	fsr2h,c
  8194  000B5A  0E49               	movlw	low _buff
  8195  000B5C  0100               	movlb	0	; () banked
  8196  000B5E  0100               	movlb	0	; () banked
  8197  000B60  25B8               	addwf	adc_int_hand@c& (0+255),w,b
  8198  000B62  6EE1               	movwf	fsr1l,c
  8199  000B64  0E00               	movlw	high _buff
  8200  000B66  0100               	movlb	0	; () banked
  8201  000B68  0100               	movlb	0	; () banked
  8202  000B6A  21B9               	addwfc	(adc_int_hand@c+1)& (0+255),w,b
  8203  000B6C  6EE2               	movwf	fsr1h,c
  8204  000B6E  CFDF FFE7          	movff	indf2,indf1
  8205                           
  8206                           ; BSR set to: 0
  8207  000B72  0100               	movlb	0	; () banked
  8208  000B74  0100               	movlb	0	; () banked
  8209  000B76  4BB8               	infsnz	adc_int_hand@c& (0+255),f,b
  8210  000B78  2BB9               	incf	(adc_int_hand@c+1)& (0+255),f,b
  8211  000B7A  D7DB               	goto	L2
  8212  000B7C                     i2l3286:
  8213                           
  8214                           ; BSR set to: 0
  8215                           ;adc_int_handler.c: 30: }
  8216                           ;adc_int_handler.c: 32: bufferLen = 0;
  8217  000B7C  0E00               	movlw	0
  8218  000B7E  6E56               	movwf	_bufferLen+1,c
  8219  000B80  0E00               	movlw	0
  8220  000B82  6E55               	movwf	_bufferLen,c
  8221                           
  8222                           ;adc_int_handler.c: 33: bufferFlag = 0x1;
  8223  000B84  0E00               	movlw	0
  8224  000B86  6E54               	movwf	_bufferFlag+1,c
  8225  000B88  0E01               	movlw	1
  8226  000B8A  D049               	goto	L3
  8227  000B8C                     i2l3288:
  8228                           
  8229                           ; BSR set to: 0
  8230  000B8C  0453               	decf	_bufferFlag,w,c
  8231  000B8E  1054               	iorwf	_bufferFlag+1,w,c
  8232  000B90  A4D8               	btfss	status,2,c
  8233  000B92  D046               	goto	i2l3310
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;adc_int_handler.c: 36: ADCBuffer1[bufferLen++] = ADCResult;
  8237  000B94  0E44               	movlw	low _ADCBuffer1
  8238  000B96  2455               	addwf	_bufferLen,w,c
  8239  000B98  6ED9               	movwf	fsr2l,c
  8240  000B9A  0E00               	movlw	high _ADCBuffer1
  8241  000B9C  2056               	addwfc	_bufferLen+1,w,c
  8242  000B9E  6EDA               	movwf	fsr2h,c
  8243  000BA0  C051  FFDF         	movff	_ADCResult,indf2
  8244                           
  8245                           ; BSR set to: 0
  8246  000BA4  4A55               	infsnz	_bufferLen,f,c
  8247  000BA6  2A56               	incf	_bufferLen+1,f,c
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;adc_int_handler.c: 38: if (bufferLen > 5) {
  8251  000BA8  5056               	movf	_bufferLen+1,w,c
  8252  000BAA  0A80               	xorlw	128
  8253  000BAC  0F80               	addlw	-128
  8254  000BAE  0E06               	movlw	6
  8255  000BB0  B4D8               	btfsc	status,2,c
  8256  000BB2  5C55               	subwf	_bufferLen,w,c
  8257  000BB4  A0D8               	btfss	status,0,c
  8258  000BB6  D034               	goto	i2l3310
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;adc_int_handler.c: 39: int c = 0;
  8262  000BB8  0E00               	movlw	0
  8263  000BBA  0100               	movlb	0	; () banked
  8264  000BBC  0100               	movlb	0	; () banked
  8265  000BBE  6FBB               	movwf	(adc_int_hand@c_1624+1)& (0+255),b
  8266  000BC0  0E00               	movlw	0
  8267  000BC2  0100               	movlb	0	; () banked
  8268  000BC4  6FBA               	movwf	adc_int_hand@c_1624& (0+255),b
  8269  000BC6                     
  8270                           ; BSR set to: 0
  8271                           ;adc_int_handler.c: 40: for (; c < 5; c++) {
  8272  000BC6  0100               	movlb	0	; () banked
  8273  000BC8  0100               	movlb	0	; () banked
  8274  000BCA  51BB               	movf	(adc_int_hand@c_1624+1)& (0+255),w,b
  8275  000BCC  0A80               	xorlw	128
  8276  000BCE  0F80               	addlw	-128
  8277  000BD0  0E05               	movlw	5
  8278  000BD2  B4D8               	btfsc	status,2,c
  8279  000BD4  5DBA               	subwf	adc_int_hand@c_1624& (0+255),w,b
  8280  000BD6  B0D8               	btfsc	status,0,c
  8281  000BD8  D01B               	goto	i2l3308
  8282                           
  8283                           ; BSR set to: 0
  8284                           ;adc_int_handler.c: 41: buff[c] = ADCBuffer0[c];
  8285                           
  8286                           ; BSR set to: 0
  8287                           
  8288                           ; BSR set to: 0
  8289  000BDA  0E3F               	movlw	low _ADCBuffer0
  8290  000BDC  0100               	movlb	0	; () banked
  8291  000BDE  0100               	movlb	0	; () banked
  8292  000BE0  25BA               	addwf	adc_int_hand@c_1624& (0+255),w,b
  8293  000BE2  6ED9               	movwf	fsr2l,c
  8294  000BE4  0E00               	movlw	high _ADCBuffer0
  8295  000BE6  0100               	movlb	0	; () banked
  8296  000BE8  0100               	movlb	0	; () banked
  8297  000BEA  21BB               	addwfc	(adc_int_hand@c_1624+1)& (0+255),w,b
  8298  000BEC  6EDA               	movwf	fsr2h,c
  8299  000BEE  0E49               	movlw	low _buff
  8300  000BF0  0100               	movlb	0	; () banked
  8301  000BF2  0100               	movlb	0	; () banked
  8302  000BF4  25BA               	addwf	adc_int_hand@c_1624& (0+255),w,b
  8303  000BF6  6EE1               	movwf	fsr1l,c
  8304  000BF8  0E00               	movlw	high _buff
  8305  000BFA  0100               	movlb	0	; () banked
  8306  000BFC  0100               	movlb	0	; () banked
  8307  000BFE  21BB               	addwfc	(adc_int_hand@c_1624+1)& (0+255),w,b
  8308  000C00  6EE2               	movwf	fsr1h,c
  8309  000C02  CFDF FFE7          	movff	indf2,indf1
  8310                           
  8311                           ; BSR set to: 0
  8312  000C06  0100               	movlb	0	; () banked
  8313  000C08  0100               	movlb	0	; () banked
  8314  000C0A  4BBA               	infsnz	adc_int_hand@c_1624& (0+255),f,b
  8315  000C0C  2BBB               	incf	(adc_int_hand@c_1624+1)& (0+255),f,b
  8316  000C0E  D7DB               	goto	L4
  8317  000C10                     i2l3308:
  8318                           
  8319                           ; BSR set to: 0
  8320                           ;adc_int_handler.c: 42: }
  8321                           ;adc_int_handler.c: 44: bufferLen = 0;
  8322  000C10  0E00               	movlw	0
  8323  000C12  6E56               	movwf	_bufferLen+1,c
  8324  000C14  0E00               	movlw	0
  8325  000C16  6E55               	movwf	_bufferLen,c
  8326                           
  8327                           ;adc_int_handler.c: 45: bufferFlag = 0x0;
  8328  000C18  0E00               	movlw	0
  8329  000C1A  6E54               	movwf	_bufferFlag+1,c
  8330  000C1C  0E00               	movlw	0
  8331  000C1E                     L3:
  8332  000C1E  6E53               	movwf	_bufferFlag,c
  8333  000C20                     i2l3310:
  8334                           
  8335                           ; BSR set to: 0
  8336                           ;adc_int_handler.c: 46: }
  8337                           ;adc_int_handler.c: 47: }
  8338                           ;adc_int_handler.c: 49: previousValue = ADCResult;
  8339  000C20  C051  F059         	movff	_ADCResult,_previousValue
  8340  000C24  C052  F05A         	movff	_ADCResult+1,_previousValue+1
  8341  000C28  0012               	return	
  8342  000C2A                     __end_of_adc_int_hand:
  8343                           	opt stack 0
  8344                           pclatu	equ	0xFFB
  8345                           pclath	equ	0xFFA
  8346                           tblptru	equ	0xFF8
  8347                           tblptrh	equ	0xFF7
  8348                           tblptrl	equ	0xFF6
  8349                           tablat	equ	0xFF5
  8350                           prodh	equ	0xFF4
  8351                           prodl	equ	0xFF3
  8352                           intcon	equ	0xFF2
  8353                           postinc0	equ	0xFEE
  8354                           fsr0h	equ	0xFEA
  8355                           fsr0l	equ	0xFE9
  8356                           wreg	equ	0xFE8
  8357                           indf1	equ	0xFE7
  8358                           fsr1h	equ	0xFE2
  8359                           fsr1l	equ	0xFE1
  8360                           bsr	equ	0xFE0
  8361                           indf2	equ	0xFDF
  8362                           postinc2	equ	0xFDE
  8363                           postdec2	equ	0xFDD
  8364                           fsr2h	equ	0xFDA
  8365                           fsr2l	equ	0xFD9
  8366                           status	equ	0xFD8
  8367                           
  8368 ;; *************** function _ReadADC *****************
  8369 ;; Defined at:
  8370 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  8371 ;; Parameters:    Size  Location     Type
  8372 ;;		None
  8373 ;; Auto vars:     Size  Location     Type
  8374 ;;		None
  8375 ;; Return value:  Size  Location     Type
  8376 ;;                  2    0[BANK0 ] int 
  8377 ;; Registers used:
  8378 ;;		wreg, status,2
  8379 ;; Tracked objects:
  8380 ;;		On entry : 0/0
  8381 ;;		On exit  : 0/0
  8382 ;;		Unchanged: 0/0
  8383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8384 ;;      Params:         0       2       0       0       0
  8385 ;;      Locals:         0       0       0       0       0
  8386 ;;      Temps:          0       0       0       0       0
  8387 ;;      Totals:         0       2       0       0       0
  8388 ;;Total ram usage:        2 bytes
  8389 ;; Hardware stack levels used:    1
  8390 ;; This function calls:
  8391 ;;		Nothing
  8392 ;; This function is called by:
  8393 ;;		_adc_int_hand
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text51
  8398  001D9E                     __ptext51:
  8399                           	opt stack 0
  8400  001D9E                     _ReadADC:
  8401                           	opt stack 19
  8402                           
  8403                           ; BSR set to: 0
  8404                           ;incstack = 0
  8405  001D9E  50C4               	movf	4036,w,c	;volatile
  8406  001DA0  0100               	movlb	0	; () banked
  8407  001DA2  0100               	movlb	0	; () banked
  8408  001DA4  6FB7               	movwf	(?_ReadADC+1)& (0+255),b
  8409  001DA6  50C3               	movf	4035,w,c	;volatile
  8410  001DA8  0100               	movlb	0	; () banked
  8411  001DAA  6FB6               	movwf	?_ReadADC& (0+255),b
  8412  001DAC  0012               	return	
  8413  001DAE                     __end_of_ReadADC:
  8414                           	opt stack 0
  8415                           pclatu	equ	0xFFB
  8416                           pclath	equ	0xFFA
  8417                           tblptru	equ	0xFF8
  8418                           tblptrh	equ	0xFF7
  8419                           tblptrl	equ	0xFF6
  8420                           tablat	equ	0xFF5
  8421                           prodh	equ	0xFF4
  8422                           prodl	equ	0xFF3
  8423                           intcon	equ	0xFF2
  8424                           postinc0	equ	0xFEE
  8425                           fsr0h	equ	0xFEA
  8426                           fsr0l	equ	0xFE9
  8427                           wreg	equ	0xFE8
  8428                           indf1	equ	0xFE7
  8429                           fsr1h	equ	0xFE2
  8430                           fsr1l	equ	0xFE1
  8431                           bsr	equ	0xFE0
  8432                           indf2	equ	0xFDF
  8433                           postinc2	equ	0xFDE
  8434                           postdec2	equ	0xFDD
  8435                           fsr2h	equ	0xFDA
  8436                           fsr2l	equ	0xFD9
  8437                           status	equ	0xFD8
  8438                           
  8439 ;; *************** function _SleepIfOkay *****************
  8440 ;; Defined at:
  8441 ;;		line 228 in file "../src/messages.c"
  8442 ;; Parameters:    Size  Location     Type
  8443 ;;		None
  8444 ;; Auto vars:     Size  Location     Type
  8445 ;;		None
  8446 ;; Return value:  Size  Location     Type
  8447 ;;		None               void
  8448 ;; Registers used:
  8449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8450 ;; Tracked objects:
  8451 ;;		On entry : 0/0
  8452 ;;		On exit  : 0/0
  8453 ;;		Unchanged: 0/0
  8454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8455 ;;      Params:         0       0       0       0       0
  8456 ;;      Locals:         0       0       0       0       0
  8457 ;;      Temps:          0       0       0       0       0
  8458 ;;      Totals:         0       0       0       0       0
  8459 ;;Total ram usage:        0 bytes
  8460 ;; Hardware stack levels used:    1
  8461 ;; Hardware stack levels required when called:    2
  8462 ;; This function calls:
  8463 ;;		_enter_sleep_mode
  8464 ;;		i2_check_msg
  8465 ;;		i2_in_high_int
  8466 ;;		i2_in_low_int
  8467 ;; This function is called by:
  8468 ;;		_InterruptHandlerHigh
  8469 ;; This function uses a non-reentrant model
  8470 ;;
  8471                           
  8472                           	psect	text52
  8473  00175E                     __ptext52:
  8474                           	opt stack 0
  8475  00175E                     _SleepIfOkay:
  8476                           	opt stack 18
  8477                           
  8478                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8479                           
  8480                           ; BSR set to: 0
  8481                           ;incstack = 0
  8482  00175E  665B               	tstfsz	_MQ_Main_Willing_to_block,c
  8483  001760  D001               	goto	i2l3336
  8484  001762  0012               	return	
  8485  001764                     i2l3336:
  8486                           
  8487                           ;messages.c: 232: }
  8488                           ;messages.c: 235: if (in_low_int()) {
  8489  001764  EC65  F00C         	call	i2_in_low_int	;wreg free
  8490  001768  0100               	movlb	0	; () banked
  8491  00176A  0100               	movlb	0	; () banked
  8492  00176C  51B9               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8493  00176E  0100               	movlb	0	; () banked
  8494  001770  11B8               	iorwf	?i2_in_low_int& (0+255),w,b
  8495  001772  A4D8               	btfss	status,2,c
  8496  001774  0012               	return	
  8497                           
  8498                           ; BSR set to: 0
  8499                           ;messages.c: 237: }
  8500                           ;messages.c: 240: if (!in_high_int()) {
  8501                           
  8502                           ; BSR set to: 0
  8503                           
  8504                           ; BSR set to: 0
  8505                           ;messages.c: 236: return;
  8506  001776  ECC6  F00E         	call	i2_in_high_int	;wreg free
  8507  00177A  0100               	movlb	0	; () banked
  8508  00177C  0100               	movlb	0	; () banked
  8509  00177E  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8510  001780  0100               	movlb	0	; () banked
  8511  001782  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  8512  001784  B4D8               	btfsc	status,2,c
  8513  001786  0012               	return	
  8514                           
  8515                           ; BSR set to: 0
  8516                           ;messages.c: 242: }
  8517                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8518                           
  8519                           ; BSR set to: 0
  8520                           
  8521                           ; BSR set to: 0
  8522                           ;messages.c: 241: return;
  8523  001788  0100               	movlb	0	; () banked
  8524  00178A  0E00               	movlw	high _ToMainHigh_MQ
  8525  00178C  0100               	movlb	0	; () banked
  8526  00178E  0100               	movlb	0	; () banked
  8527  001790  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8528  001792  0100               	movlb	0	; () banked
  8529  001794  0E80               	movlw	low _ToMainHigh_MQ
  8530  001796  0100               	movlb	0	; () banked
  8531  001798  0100               	movlb	0	; () banked
  8532  00179A  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  8533  00179C  ECD8  F00D         	call	i2_check_msg	;wreg free
  8534  0017A0  0900               	iorlw	0
  8535  0017A2  A4D8               	btfss	status,2,c
  8536  0017A4  0012               	return	
  8537                           
  8538                           ;messages.c: 249: }
  8539                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8540                           
  8541                           ;messages.c: 248: return;
  8542  0017A6  0101               	movlb	1	; () banked
  8543  0017A8  0E01               	movlw	high _ToMainLow_MQ
  8544  0017AA  0100               	movlb	0	; () banked
  8545  0017AC  0100               	movlb	0	; () banked
  8546  0017AE  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8547  0017B0  0101               	movlb	1	; () banked
  8548  0017B2  0E4A               	movlw	low _ToMainLow_MQ
  8549  0017B4  0100               	movlb	0	; () banked
  8550  0017B6  0100               	movlb	0	; () banked
  8551  0017B8  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  8552  0017BA  ECD8  F00D         	call	i2_check_msg	;wreg free
  8553  0017BE  0900               	iorlw	0
  8554  0017C0  B4D8               	btfsc	status,2,c
  8555                           
  8556                           ;messages.c: 252: }
  8557                           ;messages.c: 253: enter_sleep_mode();
  8558                           
  8559                           ;messages.c: 251: return;
  8560  0017C2  ECDB  F00E         	call	_enter_sleep_mode	;wreg free
  8561  0017C6  0012               	return	
  8562  0017C8                     __end_of_SleepIfOkay:
  8563                           	opt stack 0
  8564                           pclatu	equ	0xFFB
  8565                           pclath	equ	0xFFA
  8566                           tblptru	equ	0xFF8
  8567                           tblptrh	equ	0xFF7
  8568                           tblptrl	equ	0xFF6
  8569                           tablat	equ	0xFF5
  8570                           prodh	equ	0xFF4
  8571                           prodl	equ	0xFF3
  8572                           intcon	equ	0xFF2
  8573                           postinc0	equ	0xFEE
  8574                           fsr0h	equ	0xFEA
  8575                           fsr0l	equ	0xFE9
  8576                           wreg	equ	0xFE8
  8577                           indf1	equ	0xFE7
  8578                           fsr1h	equ	0xFE2
  8579                           fsr1l	equ	0xFE1
  8580                           bsr	equ	0xFE0
  8581                           indf2	equ	0xFDF
  8582                           postinc2	equ	0xFDE
  8583                           postdec2	equ	0xFDD
  8584                           fsr2h	equ	0xFDA
  8585                           fsr2l	equ	0xFD9
  8586                           status	equ	0xFD8
  8587                           
  8588 ;; *************** function i2_in_low_int *****************
  8589 ;; Defined at:
  8590 ;;		line 33 in file "../src/interrupts.c"
  8591 ;; Parameters:    Size  Location     Type
  8592 ;;		None
  8593 ;; Auto vars:     Size  Location     Type
  8594 ;;		None
  8595 ;; Return value:  Size  Location     Type
  8596 ;;                  2    2[BANK0 ] int 
  8597 ;; Registers used:
  8598 ;;		wreg, status,2, status,0, cstack
  8599 ;; Tracked objects:
  8600 ;;		On entry : 0/0
  8601 ;;		On exit  : 0/0
  8602 ;;		Unchanged: 0/0
  8603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8604 ;;      Params:         0       2       0       0       0
  8605 ;;      Locals:         0       0       0       0       0
  8606 ;;      Temps:          0       0       0       0       0
  8607 ;;      Totals:         0       2       0       0       0
  8608 ;;Total ram usage:        2 bytes
  8609 ;; Hardware stack levels used:    1
  8610 ;; Hardware stack levels required when called:    1
  8611 ;; This function calls:
  8612 ;;		i2_in_high_int
  8613 ;; This function is called by:
  8614 ;;		_SleepIfOkay
  8615 ;; This function uses a non-reentrant model
  8616 ;;
  8617                           
  8618                           	psect	text53
  8619  0018CA                     __ptext53:
  8620                           	opt stack 0
  8621  0018CA                     i2_in_low_int:
  8622                           	opt stack 18
  8623                           
  8624                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  8625                           
  8626                           ;incstack = 0
  8627  0018CA  ACF2               	btfss	intcon,6,c	;volatile
  8628  0018CC  D008               	goto	i2l3854
  8629                           
  8630                           ;interrupts.c: 36: return (0);
  8631  0018CE  0E00               	movlw	0
  8632  0018D0  0100               	movlb	0	; () banked
  8633  0018D2  0100               	movlb	0	; () banked
  8634  0018D4  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  8635  0018D6  0E00               	movlw	0
  8636  0018D8  0100               	movlb	0	; () banked
  8637  0018DA  6FB8               	movwf	?i2_in_low_int& (0+255),b
  8638  0018DC  0012               	return	
  8639  0018DE                     i2l3854:
  8640  0018DE  ECC6  F00E         	call	i2_in_high_int	;wreg free
  8641  0018E2  0100               	movlb	0	; () banked
  8642  0018E4  0100               	movlb	0	; () banked
  8643  0018E6  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8644  0018E8  0100               	movlb	0	; () banked
  8645  0018EA  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  8646  0018EC  B4D8               	btfsc	status,2,c
  8647  0018EE  D008               	goto	i2l3862
  8648                           
  8649                           ; BSR set to: 0
  8650                           ;interrupts.c: 38: return (0);
  8651  0018F0  0E00               	movlw	0
  8652  0018F2  0100               	movlb	0	; () banked
  8653  0018F4  0100               	movlb	0	; () banked
  8654  0018F6  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  8655  0018F8  0E00               	movlw	0
  8656  0018FA  0100               	movlb	0	; () banked
  8657  0018FC  6FB8               	movwf	?i2_in_low_int& (0+255),b
  8658  0018FE  0012               	return	
  8659  001900                     i2l3862:
  8660                           
  8661                           ; BSR set to: 0
  8662                           ;interrupts.c: 40: return (1);
  8663  001900  0E00               	movlw	0
  8664  001902  0100               	movlb	0	; () banked
  8665  001904  0100               	movlb	0	; () banked
  8666  001906  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  8667  001908  0E01               	movlw	1
  8668  00190A  0100               	movlb	0	; () banked
  8669  00190C  6FB8               	movwf	?i2_in_low_int& (0+255),b
  8670  00190E  0012               	return	
  8671  001910                     __end_ofi2_in_low_int:
  8672                           	opt stack 0
  8673                           pclatu	equ	0xFFB
  8674                           pclath	equ	0xFFA
  8675                           tblptru	equ	0xFF8
  8676                           tblptrh	equ	0xFF7
  8677                           tblptrl	equ	0xFF6
  8678                           tablat	equ	0xFF5
  8679                           prodh	equ	0xFF4
  8680                           prodl	equ	0xFF3
  8681                           intcon	equ	0xFF2
  8682                           postinc0	equ	0xFEE
  8683                           fsr0h	equ	0xFEA
  8684                           fsr0l	equ	0xFE9
  8685                           wreg	equ	0xFE8
  8686                           indf1	equ	0xFE7
  8687                           fsr1h	equ	0xFE2
  8688                           fsr1l	equ	0xFE1
  8689                           bsr	equ	0xFE0
  8690                           indf2	equ	0xFDF
  8691                           postinc2	equ	0xFDE
  8692                           postdec2	equ	0xFDD
  8693                           fsr2h	equ	0xFDA
  8694                           fsr2l	equ	0xFD9
  8695                           status	equ	0xFD8
  8696                           
  8697 ;; *************** function i2_in_high_int *****************
  8698 ;; Defined at:
  8699 ;;		line 24 in file "../src/interrupts.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;		None
  8702 ;; Auto vars:     Size  Location     Type
  8703 ;;		None
  8704 ;; Return value:  Size  Location     Type
  8705 ;;                  2    0[BANK0 ] int 
  8706 ;; Registers used:
  8707 ;;		wreg, status,2
  8708 ;; Tracked objects:
  8709 ;;		On entry : 0/0
  8710 ;;		On exit  : 0/0
  8711 ;;		Unchanged: 0/0
  8712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8713 ;;      Params:         0       2       0       0       0
  8714 ;;      Locals:         0       0       0       0       0
  8715 ;;      Temps:          0       0       0       0       0
  8716 ;;      Totals:         0       2       0       0       0
  8717 ;;Total ram usage:        2 bytes
  8718 ;; Hardware stack levels used:    1
  8719 ;; This function calls:
  8720 ;;		Nothing
  8721 ;; This function is called by:
  8722 ;;		_SleepIfOkay
  8723 ;;		i2_in_low_int
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           	psect	text54
  8728  001D8C                     __ptext54:
  8729                           	opt stack 0
  8730  001D8C                     i2_in_high_int:
  8731                           	opt stack 18
  8732                           
  8733                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  8734                           
  8735                           ; BSR set to: 0
  8736                           ;incstack = 0
  8737  001D8C  0E00               	movlw	0
  8738  001D8E  AEF2               	btfss	intcon,7,c	;volatile
  8739  001D90  0E01               	movlw	1
  8740  001D92  0100               	movlb	0	; () banked
  8741  001D94  0100               	movlb	0	; () banked
  8742  001D96  6FB6               	movwf	?i2_in_high_int& (0+255),b
  8743  001D98  0100               	movlb	0	; () banked
  8744  001D9A  6BB7               	clrf	(?i2_in_high_int+1)& (0+255),b
  8745  001D9C  0012               	return	
  8746  001D9E                     __end_ofi2_in_high_int:
  8747                           	opt stack 0
  8748                           pclatu	equ	0xFFB
  8749                           pclath	equ	0xFFA
  8750                           tblptru	equ	0xFF8
  8751                           tblptrh	equ	0xFF7
  8752                           tblptrl	equ	0xFF6
  8753                           tablat	equ	0xFF5
  8754                           prodh	equ	0xFF4
  8755                           prodl	equ	0xFF3
  8756                           intcon	equ	0xFF2
  8757                           postinc0	equ	0xFEE
  8758                           fsr0h	equ	0xFEA
  8759                           fsr0l	equ	0xFE9
  8760                           wreg	equ	0xFE8
  8761                           indf1	equ	0xFE7
  8762                           fsr1h	equ	0xFE2
  8763                           fsr1l	equ	0xFE1
  8764                           bsr	equ	0xFE0
  8765                           indf2	equ	0xFDF
  8766                           postinc2	equ	0xFDE
  8767                           postdec2	equ	0xFDD
  8768                           fsr2h	equ	0xFDA
  8769                           fsr2l	equ	0xFD9
  8770                           status	equ	0xFD8
  8771                           
  8772 ;; *************** function i2_check_msg *****************
  8773 ;; Defined at:
  8774 ;;		line 222 in file "../src/messages.c"
  8775 ;; Parameters:    Size  Location     Type
  8776 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  8777 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  8778 ;; Auto vars:     Size  Location     Type
  8779 ;;		None
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  1    wreg      unsigned char 
  8782 ;; Registers used:
  8783 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8789 ;;      Params:         0       2       0       0       0
  8790 ;;      Locals:         0       0       0       0       0
  8791 ;;      Temps:          0       1       0       0       0
  8792 ;;      Totals:         0       3       0       0       0
  8793 ;;Total ram usage:        3 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; This function calls:
  8796 ;;		Nothing
  8797 ;; This function is called by:
  8798 ;;		_SleepIfOkay
  8799 ;; This function uses a non-reentrant model
  8800 ;;
  8801                           
  8802                           	psect	text55
  8803  001BB0                     __ptext55:
  8804                           	opt stack 0
  8805  001BB0                     i2_check_msg:
  8806                           	opt stack 19
  8807                           
  8808                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;incstack = 0
  8812  001BB0  0100               	movlb	0	; () banked
  8813  001BB2  EE20 F035          	lfsr	2,53
  8814  001BB6  0100               	movlb	0	; () banked
  8815  001BB8  51B6               	movf	i2check_msg@qptr& (0+255),w,b
  8816  001BBA  26D9               	addwf	fsr2l,f,c
  8817  001BBC  0100               	movlb	0	; () banked
  8818  001BBE  51B7               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  8819  001BC0  22DA               	addwfc	fsr2h,f,c
  8820  001BC2  50DF               	movf	indf2,w,c
  8821  001BC4  0100               	movlb	0	; () banked
  8822  001BC6  6FB8               	movwf	??i2_check_msg& (0+255),b
  8823  001BC8  0100               	movlb	0	; () banked
  8824  001BCA  51B8               	movf	??i2_check_msg& (0+255),w,b
  8825  001BCC  0D0D               	mullw	13
  8826  001BCE  50F3               	movf	prodl,w,c
  8827  001BD0  0100               	movlb	0	; () banked
  8828  001BD2  0100               	movlb	0	; () banked
  8829  001BD4  25B6               	addwf	i2check_msg@qptr& (0+255),w,b
  8830  001BD6  6ED9               	movwf	fsr2l,c
  8831  001BD8  50F4               	movf	prodh,w,c
  8832  001BDA  0100               	movlb	0	; () banked
  8833  001BDC  0100               	movlb	0	; () banked
  8834  001BDE  21B7               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  8835  001BE0  6EDA               	movwf	fsr2h,c
  8836  001BE2  50DF               	movf	indf2,w,c
  8837  001BE4  0012               	return	
  8838  001BE6                     __end_ofi2_check_msg:
  8839                           	opt stack 0
  8840                           pclatu	equ	0xFFB
  8841                           pclath	equ	0xFFA
  8842                           tblptru	equ	0xFF8
  8843                           tblptrh	equ	0xFF7
  8844                           tblptrl	equ	0xFF6
  8845                           tablat	equ	0xFF5
  8846                           prodh	equ	0xFF4
  8847                           prodl	equ	0xFF3
  8848                           intcon	equ	0xFF2
  8849                           postinc0	equ	0xFEE
  8850                           fsr0h	equ	0xFEA
  8851                           fsr0l	equ	0xFE9
  8852                           wreg	equ	0xFE8
  8853                           indf1	equ	0xFE7
  8854                           fsr1h	equ	0xFE2
  8855                           fsr1l	equ	0xFE1
  8856                           bsr	equ	0xFE0
  8857                           indf2	equ	0xFDF
  8858                           postinc2	equ	0xFDE
  8859                           postdec2	equ	0xFDD
  8860                           fsr2h	equ	0xFDA
  8861                           fsr2l	equ	0xFD9
  8862                           status	equ	0xFD8
  8863                           
  8864 ;; *************** function _enter_sleep_mode *****************
  8865 ;; Defined at:
  8866 ;;		line 202 in file "../src/messages.c"
  8867 ;; Parameters:    Size  Location     Type
  8868 ;;		None
  8869 ;; Auto vars:     Size  Location     Type
  8870 ;;		None
  8871 ;; Return value:  Size  Location     Type
  8872 ;;		None               void
  8873 ;; Registers used:
  8874 ;;		None
  8875 ;; Tracked objects:
  8876 ;;		On entry : 0/0
  8877 ;;		On exit  : 0/0
  8878 ;;		Unchanged: 0/0
  8879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8880 ;;      Params:         0       0       0       0       0
  8881 ;;      Locals:         0       0       0       0       0
  8882 ;;      Temps:          0       0       0       0       0
  8883 ;;      Totals:         0       0       0       0       0
  8884 ;;Total ram usage:        0 bytes
  8885 ;; Hardware stack levels used:    1
  8886 ;; This function calls:
  8887 ;;		Nothing
  8888 ;; This function is called by:
  8889 ;;		_SleepIfOkay
  8890 ;; This function uses a non-reentrant model
  8891 ;;
  8892                           
  8893                           	psect	text56
  8894  001DB6                     __ptext56:
  8895                           	opt stack 0
  8896  001DB6                     _enter_sleep_mode:
  8897                           	opt stack 19
  8898                           
  8899                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  8900                           
  8901                           ; BSR set to: 0
  8902                           ;incstack = 0
  8903  001DB6  8ED3               	bsf	4051,7,c	;volatile
  8904  001DB8  0003               	sleep		;# 
  8905  001DBA  0012               	return	
  8906  001DBC                     __end_of_enter_sleep_mode:
  8907                           	opt stack 0
  8908  0000                     pclatu	equ	0xFFB
  8909                           pclath	equ	0xFFA
  8910                           tblptru	equ	0xFF8
  8911                           tblptrh	equ	0xFF7
  8912                           tblptrl	equ	0xFF6
  8913                           tablat	equ	0xFF5
  8914                           prodh	equ	0xFF4
  8915                           prodl	equ	0xFF3
  8916                           intcon	equ	0xFF2
  8917                           postinc0	equ	0xFEE
  8918                           fsr0h	equ	0xFEA
  8919                           fsr0l	equ	0xFE9
  8920                           wreg	equ	0xFE8
  8921                           indf1	equ	0xFE7
  8922                           fsr1h	equ	0xFE2
  8923                           fsr1l	equ	0xFE1
  8924                           bsr	equ	0xFE0
  8925                           indf2	equ	0xFDF
  8926                           postinc2	equ	0xFDE
  8927                           postdec2	equ	0xFDD
  8928                           fsr2h	equ	0xFDA
  8929                           fsr2l	equ	0xFD9
  8930                           status	equ	0xFD8
  8931                           pclatu	equ	0xFFB
  8932                           pclath	equ	0xFFA
  8933                           tblptru	equ	0xFF8
  8934                           tblptrh	equ	0xFF7
  8935                           tblptrl	equ	0xFF6
  8936                           tablat	equ	0xFF5
  8937                           prodh	equ	0xFF4
  8938                           prodl	equ	0xFF3
  8939                           intcon	equ	0xFF2
  8940                           postinc0	equ	0xFEE
  8941                           fsr0h	equ	0xFEA
  8942                           fsr0l	equ	0xFE9
  8943                           wreg	equ	0xFE8
  8944                           indf1	equ	0xFE7
  8945                           fsr1h	equ	0xFE2
  8946                           fsr1l	equ	0xFE1
  8947                           bsr	equ	0xFE0
  8948                           indf2	equ	0xFDF
  8949                           postinc2	equ	0xFDE
  8950                           postdec2	equ	0xFDD
  8951                           fsr2h	equ	0xFDA
  8952                           fsr2l	equ	0xFD9
  8953                           status	equ	0xFD8
  8954                           
  8955                           	psect	param0
  8956  0000                     pclatu	equ	0xFFB
  8957                           pclath	equ	0xFFA
  8958                           tblptru	equ	0xFF8
  8959                           tblptrh	equ	0xFF7
  8960                           tblptrl	equ	0xFF6
  8961                           tablat	equ	0xFF5
  8962                           prodh	equ	0xFF4
  8963                           prodl	equ	0xFF3
  8964                           intcon	equ	0xFF2
  8965                           postinc0	equ	0xFEE
  8966                           fsr0h	equ	0xFEA
  8967                           fsr0l	equ	0xFE9
  8968                           wreg	equ	0xFE8
  8969                           indf1	equ	0xFE7
  8970                           fsr1h	equ	0xFE2
  8971                           fsr1l	equ	0xFE1
  8972                           bsr	equ	0xFE0
  8973                           indf2	equ	0xFDF
  8974                           postinc2	equ	0xFDE
  8975                           postdec2	equ	0xFDD
  8976                           fsr2h	equ	0xFDA
  8977                           fsr2l	equ	0xFD9
  8978                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         286
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     52     104
    BANK0           128     50     106
    BANK1           256    115     243
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    i2c_lthread@i2cptr	PTR struct __i2c_thread_struct size(2) Largest target is 2
		 -> main@i2cthread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[22]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@uc(BANK1[22]), 

    i2c_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 22
		 -> main@uc(BANK1[22]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 22
		 -> NULL(NULL[0]), main@uc(BANK1[22]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 35
		 -> main@ic(BANK1[35]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 35
		 -> NULL(NULL[0]), main@ic(BANK1[35]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 22
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@uc(BANK1[22]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 22
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@uc(BANK1[22]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->i1_ToMainHigh_sendmsg
    i1_ToMainHigh_sendmsg->i1_send_msg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_int_handler_master_rx
    _i2c_int_handler->_i2c_int_handler_master_tx
    _adc_int_hand->_ReadADC
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_i2c_lthread
    _init_queues->_init_queue
    _i2c_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                87    87      0   11205
                                             35 BANK1     80    80      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                        _i2c_lthread
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_lthread                                          9     1      8    3752
                                             26 BANK1      9     1      8
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                     11     9      2     257
                                              0 BANK1     11     9      2
 ---------------------------------------------------------------------------------
 (2) _i2c_master_recv                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2541
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    8085
                                             35 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                9     9      0    5389
                                             26 COMRAM     9     9      0
                          _ReadUSART
                  _ToMainLow_sendmsg
               i1_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainHigh_sendmsg                                 4     1      3    2608
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2696
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2577
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2299
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7011
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                       _adc_int_hand
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6547
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    3231
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2859
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0       0
          _i2c_int_handler_master_rx
          _i2c_int_handler_master_tx
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_tx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_rx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) _adc_int_hand                                        4     4      0     180
                                              2 BANK0      4     4      0
                            _ReadADC
 ---------------------------------------------------------------------------------
 (12) _ReadADC                                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
     _i2c_master_recv
     _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     i1_ToMainHigh_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_send_int_handler

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _adc_int_hand
     _ReadADC
   _i2c_int_handler
     _i2c_int_handler_master_rx
     _i2c_int_handler_master_tx
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0       5        0.0%
BANK1              100     73      F3       6       94.9%
BITBANK0            80      0       0       3        0.0%
BANK0               80     32      6A       4       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     34      68       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FB      11        0.0%
DATA                 0      0     1FB      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Wed Mar 12 13:39:28 2014

          _MQ_Main_Willing_to_block 005B               ?i2_ToMainHigh_sendmsg 00CC  
         __end_of_ToMainLow_recvmsg 19D8                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1CDE                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 00C3                   i2recv_msg@tlength 00CA  
                               l308 1178                                 l601 1C68  
                               l602 1C6A                                 l625 1AF0  
                               l627 1B08                                 l299 0AAE  
                               l628 1B0A                                 l902 1D20  
                               l575 1508                                 l673 1336  
                               l674 1338                                 l675 1346  
                               l676 1348                                 l669 1316  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                               _buf 0035                      _FromMainLow_MQ 0114  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 0180                    ??_init_uart_recv 0182  
                   ReadTimer1@timer 0003                         main@config1 01B0  
                       main@config2 01B1   __end_of_i2c_int_handler_master_rx 0912  
 __end_of_i2c_int_handler_master_tx 0756                 i2recv_msg@maxlength 00C2  
                              l3224 18BA                                l3216 1898  
                              l3238 1944                                l3422 0222  
                              l3430 02D8                                l3414 01E0  
                              l3424 0274                                l3530 1318  
                              l3522 1302                                l3612 1652  
                              l3428 02C6                                l3630 0EF2  
                              l3650 180E                                l3722 0934  
                              l3644 17EA                                l3580 1602  
                              l3732 09B8                                l3494 1AF2  
                              l3574 15D6                                l3664 0C96  
                              l3680 0D5C                                l3568 15AA  
                              l3736 0A32                                l3592 11CE  
                              l3754 10C0                                l3594 11FA  
                              _LATB 000F8A                                u2647 1D22  
                   _FromMainHigh_MQ 0200                       __CFG_FCMEN$ON 000000  
             __size_of_adc_int_hand 0174                                _buff 0049  
            ?_block_on_To_msgqueues 0001                                _main 00C0  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01B9                          i1_send_msg 1238  
                              pclat 000FFA                         i2_check_msg 1BB0  
                              prodh 000FF4                                prodl 000FF3  
                              start 00BC                          i2_recv_msg 0D60  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 0F9A  
     __size_of_i2c_configure_master 0042                       ??_i2c_lthread 01A2  
         ToMainHigh_recvmsg@msgtype 0198                     __end_of_ReadADC 1DAE  
                    send_msg@length 018C                     __end_of_OpenADC 150C  
       __size_of_timer0_int_handler 008A                         _Delay1KTCYx 1D1C  
                             ?_main 0001                               _T0CON 000FD5  
                             _T1CON 000FCD                          i1memcpy@d1 0001  
                             i2l322 0786                               i1l387 0390  
                             i2l340 061E                               i2l326 0870  
                             i2l328 088C                               i2l329 08A6  
                             i2l337 0590                               i1l687 1D0C  
                        i1memcpy@s1 0003         FromMainHigh_recvmsg@msgtype 00CE  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXSTA 000FAC                          i2memcpy@d1 00B6  
                        i2memcpy@s1 00B8                        ?_init_queues 0001  
                      _adc_int_hand 0AB6           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 1954                               _count 005E  
      __end_ofi1_ToMainHigh_sendmsg 1CBA          ToMainLow_recvmsg@maxlength 019C  
                             tablat 000FF5                               status 000FD8  
          i2ToMainHigh_sendmsg@data 00CD                    __end_ofi1_memcpy 1A9C  
                  __end_ofi2_memcpy 1884                     __initialization 1A9C  
            ??i2_ToMainHigh_sendmsg 00CF                        __end_of_main 030E  
                        _ReadTimer1 1D68         __size_of_timer1_int_handler 0030  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0024  
     __size_of_FromMainHigh_recvmsg 0042               __size_ofi2_in_low_int 0046  
               __end_of_i2c_lthread 1238                              ??_main 01A3  
                   send_msg@msgtype 018D                       __activetblptr 000002  
                   send_msg@tlength 0191                          _SetChanADC 1CDE  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ADRESH 000FC4  
                            _ADRESL 000FC3             ??_uart_recv_int_handler 001B  
                            i1l3070 1A8A                              i1l3134 0346  
                            i1l3064 1A6E                              i1l3152 0416  
                            i1l3162 04AE                              i1l3156 0436  
                            i1l3094 1270                              i1l3190 0066  
                            i1l3168 04E8                              i1l3178 0518  
                            i1l3196 0070                              i2l3310 0C20  
                        _OpenTimer0 1C44                          _OpenTimer1 1AD6  
                            i2l3308 0C10                              i2l3252 13B6  
                            i2l3318 1728                      __CFG_WDTEN$OFF 000000  
                            i2l3336 1764                              i2l3258 13C0  
                            i2l3286 0B7C                              i2l3288 0B8C  
                            i2l3810 0606                              i2l3802 053A  
                            i2l3820 0688                              i2l3822 06F8  
                            i2l3902 0DCC                              i2l3824 0710  
                            i2l3780 07A4                              i2l3828 0728  
                            i2l3932 1848                              i2l3862 1900  
                            i2l3854 18DE                              i2l3782 07BC  
                            i2l3774 0758                              i2l3918 0E92  
                            i2l3794 08C0                              i2l3938 186C  
                            i2l3798 08D8                              i2l3878 0FF6  
                     ??_SleepIfOkay 00BA                  __size_of_ReadUSART 001E  
                            _OSCCON 000FD3                              _SPBRGH 000FB0  
                            _SSPADD 000FC8                              _SSPBUF 000FC9  
                       ?i1_send_msg 000B                           ??_ReadADC 00B8  
         uart_recv_int_handler@data 0023                         ?i2_recv_msg 00C0  
                         ??_OpenADC 0182                        i2_in_low_int 18CA  
                       ?i2_send_msg 00C0                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 16F2  
                   _i2c_master_recv 109E                     _i2c_master_send 0912  
                  OpenTimer0@config 0180                              _ic_ptr 00E8  
                     main@msgbuffer 01A5                    __end_of_init_i2c 158C  
                  OpenTimer1@config 0180                              _length 0057  
                            _memcpy 17C8                              clear_0 1AA2  
                            clear_1 1AAE                              clear_2 1ABA  
                            clear_3 1AC6                              _uc_ptr 0067  
                            main@ic 01D0                              main@uc 01BA  
                  __end_of_recv_msg 0D60                           ??_in_main 0186  
                  __end_of_send_msg 0F9A               timer0_int_handler@val 00D8  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 0183  
          ToMainLow_recvmsg@msgtype 0198         ??_i2c_int_handler_master_rx 00B6  
       ??_i2c_int_handler_master_tx 00B6                __size_of_in_high_int 0012  
                i2c_lthread@msgtype 019C                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1ACC  
        __end_of_ToMainHigh_recvmsg 1A1A          __end_of_ToMainHigh_sendmsg 1B44  
    __size_of_uart_send_int_handler 0026       __end_of_uart_send_int_handler 1C94  
       __end_of_init_timer1_lthread 1D44                 __end_of_SleepIfOkay 17C8  
                       _i2c_lthread 1180                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 0012                         ?_ReadTimer1 0001  
                __size_of_check_msg 0036                i1_ToMainHigh_sendmsg 1C94  
                 __end_of_ReadUSART 1D1C           timer0_int_handler@msgtype 00D6  
                       ?_SetChanADC 0001                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 13F6  
       __end_of_InterruptHandlerLow 00BC                           ?i2_memcpy 00B6  
                     _ToMainHigh_MQ 0080                 __size_ofi2_recv_msg 0136  
                  _enter_sleep_mode 1DB6                 __size_ofi2_send_msg 0104  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1374  
                     check_msg@qptr 0180             ??_block_on_To_msgqueues 0186  
              __size_of_init_queues 006E                          __pbssBANK0 0080  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0067             __end_of_i2c_int_handler 175E  
                      ?i2_check_msg 00B6             __end_of_i2c_master_recv 1180  
           __end_of_i2c_master_send 0AB6           _i2c_int_handler_master_rx 0756  
         _i2c_int_handler_master_tx 0538               ?i1_ToMainHigh_sendmsg 0017  
                 recv_msg@maxlength 018C                     recv_msg@msgtype 018D  
                   recv_msg@tlength 0194                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 00B8                             ?_memcpy 0180  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 00B8  
                     ??_WriteTimer1 0003                 _sendToMotorPIC_flag 0063  
      __end_of_i2c_configure_master 1996                          ??i1_memcpy 0007  
                        _bufferFlag 0053                          ??i2_memcpy 00BC  
                  i1send_msg@length 000D                       i2_in_high_int 1D8C  
                           _SSPCON1 000FC6                 __size_of_ReadTimer1 0012  
                 __end_of_check_msg 1B7A                           ?_init_i2c 0180  
                       _SleepIfOkay 175E                             _ReadADC 1D9E  
                         ?_recv_msg 018A                           _ADCResult 0051  
                           _OpenADC 1488                          _in_low_int 1884  
                           __Hparam 0000                 __size_of_SetChanADC 0020  
                         ?_send_msg 018A                             __Lparam 0000  
        __end_of_timer0_int_handler 1488                    init_uart_recv@uc 0180  
                   __CFG_STVREN$OFF 000000                             __pcinit 1A9C  
                   __size_of_memcpy 005E                          _init_queue 160A  
                           __ramtop 0400                 __size_of_OpenTimer0 002A  
               __size_of_OpenTimer1 0038                             __ptext0 00C0  
                           __ptext1 1C16                             __ptext2 1D32  
                           __ptext3 1684                             __ptext4 160A  
                           __ptext5 150C                             __ptext6 1180  
                           __ptext7 0912                             __ptext8 109E  
                           __ptext9 1B0E                           _T0CONbits 000FD5  
                           _in_main 1910                           _T1CONbits 000FCD  
               __end_of_WriteTimer0 1D8C                 __end_of_WriteTimer1 1D68  
                    ?i2_in_high_int 00B6                             _msgtype 0061  
                    OpenADC@config2 0180                             _voltage 004E  
                    __pintcode_body 1374        __end_of_FromMainHigh_recvmsg 1A5C  
              end_of_initialization 1ACC      __size_of_uart_recv_int_handler 022A  
                           memcpy@d 0186                             memcpy@n 0184  
                           memcpy@s 0188            i1ToMainHigh_sendmsg@data 0018  
     __end_of_uart_recv_int_handler 0538              uart_recv_int_handler@i 0021  
                        ??_init_i2c 0182                       __Lmediumconst 0000  
                           int_func 1374                        ??i1_send_msg 0011  
           __size_of_init_uart_recv 002E                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 00C7                    ?_i2c_master_recv 0001  
                  ?_i2c_master_send 0180                          ??_recv_msg 0191  
                      ??i2_send_msg 00C6                          ??_send_msg 0190  
                    main@portconfig 01B2          __end_of_timer1_int_handler 1C16  
                         _RCSTAbits 000FAB              ??i1_ToMainHigh_sendmsg 001A  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0196  
     __size_ofi2_ToMainHigh_sendmsg 0036                      _last_reg_recvd 005F  
                __end_ofi1_send_msg 12E2                           _TRISCbits 000F94  
                __end_ofi2_recv_msg 0E96                  __end_ofi2_send_msg 109E  
     FromMainHigh_recvmsg@maxlength 00D2            timer1_int_handler@result 001C  
                 main@slave_address 01B3                           _TXSTAbits 000FAC  
                        main@length 01B8                         ?_in_low_int 0182  
              _i2c_configure_master 1954                        ?_i2c_lthread 019A  
              __size_ofi2_check_msg 0036            __end_of_enter_sleep_mode 1DBC  
                      ??_ReadTimer1 0003                  _ToMainHigh_recvmsg 19D8  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1B0E  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                       _BAUDCONbits 000FB8                         ?_init_queue 0180  
                         i2memcpy@d 00BC                         _WriteTimer0 1D7A  
                       _WriteTimer1 1D56                           i2memcpy@n 00BA  
                         i2memcpy@s 00BE                      __end_of_memcpy 1826  
                 _enable_interrupts 1DAE                  adc_int_hand@c_1624 00BA  
              __size_of_Delay1KTCYx 0016                        ??_SetChanADC 0180  
__size_of_i2c_int_handler_master_rx 01BC  __size_of_i2c_int_handler_master_tx 021E  
               ?_ToMainHigh_recvmsg 0198                     ??i2_in_high_int 00B8  
               ?_ToMainHigh_sendmsg 0196                  ?_enable_interrupts 0001  
               start_initialization 1A9C                       ??_in_high_int 0182  
                         _ReadUSART 1CFE       uart_recv_int_handler@checkSum 0020  
                     _checksum_flag 005D                   __size_ofi1_memcpy 0040  
       i1ToMainHigh_sendmsg@msgtype 0017                   __size_ofi2_memcpy 005E  
               ??_enable_interrupts 0180                        ??_OpenTimer0 0180  
                      ??_OpenTimer1 0180      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 1D7A       __end_of_block_on_To_msgqueues 160A  
                         _OpenUSART 12E2        __end_of_InterruptHandlerHigh 13FE  
                        init_i2c@ic 0180                ??_ToMainHigh_recvmsg 019C  
              ??_ToMainHigh_sendmsg 0199               ?_i2c_configure_master 0001  
                __end_of_SetChanADC 1CFE                   i2c_lthread@i2cptr 019A  
             _uart_send_int_handler 1C6E           __end_of_enable_interrupts 1DB6  
                          ??_memcpy 0186                _FromMainHigh_recvmsg 1A1A  
      __size_of_init_timer1_lthread 0012                   i2c_lthread@length 019E  
                __end_of_OpenTimer0 1C6E                  __end_of_OpenTimer1 1B0E  
                       __pbssCOMRAM 0035                          ?_ReadUSART 0001  
                     ??_init_queues 0184                       __pcstackBANK0 00B6  
                     __pcstackBANK1 0180                 __size_of_in_low_int 0046  
                     ?_adc_int_hand 0001                 __CFG_CCP2MX$DEFAULT 000000  
                   Delay1KTCYx@unit 0180            ToMainLow_sendmsg@msgtype 0017  
      __size_of_InterruptHandlerLow 00A4                 __end_of_in_high_int 1D56  
                        ?_OpenUSART 0180                        ?_SleepIfOkay 0001  
             ToMainLow_recvmsg@data 019A                        _ToMainLow_MQ 014A  
               __size_of_init_queue 007A                      _init_uart_recv 1C16  
                          ?_ReadADC 00B6                           _check_msg 1B44  
                         __pnvBANK0 00E8                   __size_of_init_i2c 0080  
                 OpenADC@portconfig 0181                            ?_OpenADC 0180  
                      recv_msg@data 018F                        recv_msg@qmsg 0196  
                      recv_msg@slot 0193                        recv_msg@qptr 018A  
        i2ToMainHigh_sendmsg@length 00CF                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 0104  
                     adc_int_hand@c 00B8               ?_FromMainHigh_recvmsg 00CE  
                       __pintcodelo 0018                           _bufferLen 0055  
            ToMainHigh_recvmsg@data 019A                            ?_in_main 0184  
                 WriteTimer0@timer0 00B6                  _timer0_int_handler 13FE  
                 WriteTimer1@timer1 0001                      ??_adc_int_hand 00B8  
             ToMainLow_sendmsg@data 0018                 ?_timer0_int_handler 0001  
            __end_of_init_uart_recv 1C44                 __end_of_init_queues 16F2  
             i2c_master_recv@length 0180                       OpenADC@config 0184  
            ??_i2c_configure_master 0180                     i2check_msg@qptr 00B6  
                        ?_check_msg 0180                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                           _msgbuffer 0100  
                     ?i2_in_low_int 00B8                            i2u253_45 0850  
                          i2u256_45 066A                            _PIR1bits 000F9E  
            ?_uart_send_int_handler 0001                            i2u198_45 0AF4  
            ToMainHigh_sendmsg@data 0197                            _RCONbits 000FD0  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 00D3  
              __size_of_i2c_lthread 00B8               i2c_master_send@length 0188  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                          _ADCON0bits 000FC2  
                _timer1_int_handler 1BE6                            i1_memcpy 1A5C  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1826            FromMainHigh_recvmsg@data 00D0  
                       _in_high_int 1D44                        send_msg@data 018E  
                      send_msg@qmsg 0194                        send_msg@slot 0193  
                      send_msg@qptr 018A                          _ADCBuffer0 003F  
                        _ADCBuffer1 0044        __end_ofi2_ToMainHigh_sendmsg 1BB0  
               ?_timer1_int_handler 0001                     ?_init_uart_recv 0180  
                       ??_OpenUSART 0182                     OpenUSART@config 0185  
                    ??i2_in_low_int 00BA                            __Hparam0 0000  
             _uart_recv_int_handler 030E                        ??_in_low_int 0184  
                  __size_of_ReadADC 0010                            __Lparam0 0000  
                  __size_of_OpenADC 0084                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 00D2                ??_timer1_int_handler 001B  
     __size_ofi1_ToMainHigh_sendmsg 0026            __size_of_i2c_int_handler 006C  
                       _length_flag 0060                  ??_enter_sleep_mode 00B6  
          __size_of_i2c_master_recv 00E2            __size_of_i2c_master_send 01A4  
                      ??_init_queue 0182                        ?_WriteTimer0 00B6  
                      ?_WriteTimer1 0001             ToMainLow_sendmsg@length 001A  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 00C3         ToMainHigh_recvmsg@maxlength 019C  
                 i2send_msg@tlength 00C7             init_timer1_lthread@tptr 0180  
                       _init_queues 1684                  __end_of_in_low_int 18CA  
              _sendToSensorPIC_flag 0064                            __ptext10 0E96  
                          __ptext11 1954                            __ptext20 19D8  
                          __ptext12 1DAE                            __ptext21 0C2A  
                          __ptext13 158C                            __ptext30 030E  
                          __ptext22 17C8                            __ptext14 1910  
                          __ptext31 1C94                            __ptext23 1CDE  
                          __ptext15 1884                            __ptext40 13FE  
                          __ptext32 1CFE                            __ptext24 12E2  
                          __ptext16 1D44                            __ptext41 1B7A  
                          __ptext33 1BE6                            __ptext25 1AD6  
                          __ptext17 1B44                            __ptext50 0AB6  
                          __ptext42 0F9A                            __ptext34 1D56  
                          __ptext26 1C44                            __ptext18 1D1C  
                          __ptext51 1D9E                            __ptext43 1D7A  
                          __ptext35 1CBA                            __ptext27 1488  
                          __ptext19 1996                            __ptext52 175E  
                          __ptext44 1A1A                            __ptext36 1238  
                          __ptext53 18CA                            __ptext45 0D60  
                          __ptext37 1A5C                            __ptext29 1C6E  
                          __ptext54 1D8C                            __ptext46 1826  
                          __ptext38 1D68                            __ptext55 1BB0  
                          __ptext47 16F2                            __ptext56 1DB6  
                          __ptext48 0538                            __ptext49 0756  
                      _SSP1CON2bits 000FC5                      i1send_msg@data 000F  
    i2c_configure_master@slave_addr 0180                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
          timer0_int_handler@length 00D4                        _sent_i2c_msg 0065  
                          _init_i2c 150C                 _init_timer1_lthread 1D32  
                     __size_of_main 024E                       ??i2_check_msg 00B8  
                 main@t1thread_data 01B4                         ??_check_msg 0182  
                __end_of_init_queue 1684                __size_of_SleepIfOkay 006A  
                          _recv_msg 0C2A                            _send_msg 0E96  
                          _uartData 0066                __end_of_adc_int_hand 0C2A  
                    init_queue@qptr 0180                      i2recv_msg@data 00C5  
                    i2recv_msg@qmsg 00CC                       ??_Delay1KTCYx 0180  
                    i2recv_msg@slot 00C9                      i2recv_msg@qptr 00C0  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0180  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                main@i2cthread_data 01B6                      OpenUSART@spbrg 0180  
                          memcpy@d1 0180                            memcpy@s1 0182  
             __end_ofi2_in_high_int 1D9E                    i2send_msg@length 00C2  
                          intlevel1 0000                            intlevel2 0000  
                      _msgtype_flag 0062                ?_InterruptHandlerLow 0001  
            ?_uart_recv_int_handler 0001                   SetChanADC@channel 0181  
             _block_on_To_msgqueues 158C         __size_of_ToMainHigh_recvmsg 0042  
       __size_of_ToMainHigh_sendmsg 0036                       _previousValue 0059  
                        _OSCCONbits 000FD3         i2ToMainHigh_sendmsg@msgtype 00CC  
          ToMainHigh_sendmsg@length 0199                 __end_ofi2_check_msg 1BE6  
              i2_ToMainHigh_sendmsg 1B7A               ??_init_timer1_lthread 0182  
            ??_InterruptHandlerHigh 00DA                   _ToMainLow_recvmsg 1996  
                 _ToMainLow_sendmsg 1CBA                __end_ofi2_in_low_int 1910  
                ?_ToMainLow_recvmsg 0198                 __end_of_Delay1KTCYx 1D32  
                 ??_i2c_int_handler 00BA                  ?_ToMainLow_sendmsg 0017  
                 ??_i2c_master_recv 0180                   ??_i2c_master_send 0182  
                i2c_master_send@msg 0180                         _SSPCON2bits 000FC5  
        ?_i2c_int_handler_master_rx 0001          ?_i2c_int_handler_master_tx 0001  
              i2c_lthread@msgbuffer 01A0                      i2send_msg@data 00C4  
             ??_InterruptHandlerLow 0024                 ??_ToMainLow_recvmsg 019C  
                    i2send_msg@qmsg 00CA                      i2send_msg@slot 00C9  
                    i2send_msg@qptr 00C0                 ??_ToMainLow_sendmsg 001A  
        i1ToMainHigh_sendmsg@length 001A             ??_uart_send_int_handler 0001  
                  i2c_master_send@i 0189                        _USART_Status 005C  
