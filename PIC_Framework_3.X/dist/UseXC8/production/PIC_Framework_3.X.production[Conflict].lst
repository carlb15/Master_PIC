

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Mar 01 14:18:42 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	text20,global,reloc=2,class=CODE,delta=1
    39                           	psect	text21,global,reloc=2,class=CODE,delta=1
    40                           	psect	text22,global,reloc=2,class=CODE,delta=1
    41                           	psect	text23,global,reloc=2,class=CODE,delta=1
    42                           	psect	text24,global,reloc=2,class=CODE,delta=1
    43                           	psect	text25,global,reloc=2,class=CODE,delta=1
    44                           	psect	text26,global,reloc=2,class=CODE,delta=1
    45                           	psect	text27,global,reloc=2,class=CODE,delta=1
    46                           	psect	text28,global,reloc=2,class=CODE,delta=1
    47                           	psect	text29,global,reloc=2,class=CODE,delta=1
    48                           	psect	text30,global,reloc=2,class=CODE,delta=1
    49                           	psect	text31,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	text33,global,reloc=2,class=CODE,delta=1
    52                           	psect	text34,global,reloc=2,class=CODE,delta=1
    53                           	psect	text35,global,reloc=2,class=CODE,delta=1
    54                           	psect	text36,global,reloc=2,class=CODE,delta=1
    55                           	psect	text37,global,reloc=2,class=CODE,delta=1
    56                           	psect	text38,global,reloc=2,class=CODE,delta=1
    57                           	psect	text39,global,reloc=2,class=CODE,delta=1
    58                           	psect	text40,global,reloc=2,class=CODE,delta=1
    59                           	psect	text41,global,reloc=2,class=CODE,delta=1
    60                           	psect	text42,global,reloc=2,class=CODE,delta=1
    61                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    62                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    81                           	psect	param0,global,class=BANK0,space=1,delta=1
    82  0000                     
    83                           	psect	idataCOMRAM
    84  001C62                     __pidataCOMRAM:
    85                           	opt stack 0
    86                           
    87                           ;initializer for readMessages@F5196
    88  001C62  A8                 	db	168
    89  0000                     _ADCON0	set	4034
    90  0000                     _ADCON0bits	set	4034
    91  0000                     _ADCON1	set	4033
    92  0000                     _ADCON2	set	4032
    93  0000                     _ADRESH	set	4036
    94  0000                     _ADRESL	set	4035
    95  0000                     _BAUDCONbits	set	4024
    96  0000                     _INTCONbits	set	4082
    97  0000                     _IPR1bits	set	3999
    98  0000                     _LATB	set	3978
    99  0000                     _OSCCON	set	4051
   100  0000                     _OSCCONbits	set	4051
   101  0000                     _OSCTUNEbits	set	3995
   102  0000                     _PIE1bits	set	3997
   103  0000                     _PIR1bits	set	3998
   104  0000                     _RCONbits	set	4048
   105  0000                     _RCREG	set	4014
   106  0000                     _RCSTA	set	4011
   107  0000                     _RCSTAbits	set	4011
   108  0000                     _SPBRG	set	4015
   109  0000                     _SPBRGH	set	4016
   110  0000                     _SSP1CON2	set	4037
   111  0000                     _SSP1CON2bits	set	4037
   112  0000                     _SSP1STATbits	set	4039
   113  0000                     _SSPADD	set	4040
   114  0000                     _SSPBUF	set	4041
   115  0000                     _SSPCON1	set	4038
   116  0000                     _SSPCON1bits	set	4038
   117  0000                     _SSPCON2	set	4037
   118  0000                     _SSPCON2bits	set	4037
   119  0000                     _SSPSTAT	set	4039
   120  0000                     _SSPSTATbits	set	4039
   121  0000                     _T0CON	set	4053
   122  0000                     _T0CONbits	set	4053
   123  0000                     _T1CON	set	4045
   124  0000                     _T1CONbits	set	4045
   125  0000                     _TMR0H	set	4055
   126  0000                     _TMR0L	set	4054
   127  0000                     _TMR1H	set	4047
   128  0000                     _TMR1L	set	4046
   129  0000                     _TRISB	set	3987
   130  0000                     _TRISCbits	set	3988
   131  0000                     _TXREG	set	4013
   132  0000                     _TXSTA	set	4012
   133  0000                     _TXSTAbits	set	4012
   134                           
   135                           	psect	nvCOMRAM
   136  00005C                     __pnvCOMRAM:
   137                           	opt stack 0
   138  00005C                     _uc_ptr:
   139                           	opt stack 0
   140  00005C                     	ds	2
   141                           
   142                           	psect	nvBANK0
   143  0000CC                     __pnvBANK0:
   144                           	opt stack 0
   145  0000CC                     _ic_ptr:
   146                           	opt stack 0
   147  0000CC                     	ds	2
   148                           
   149                           ; #config settings
   150  0000                     
   151                           	psect	cinit
   152  001698                     __pcinit:
   153                           	opt stack 0
   154  001698                     start_initialization:
   155                           	opt stack 0
   156  001698                     __initialization:
   157                           	opt stack 0
   158                           
   159                           ; Clear objects allocated to BANK2 (54 bytes)
   160  001698  EE02  F045         	lfsr	0,__pbssBANK2
   161  00169C  0E36               	movlw	54
   162  00169E                     clear_0:
   163  00169E  6AEE               	clrf	postinc0,c
   164  0016A0  06E8               	decf	wreg,f,c
   165  0016A2  E1FD               	bnz	clear_0
   166                           
   167                           ; Clear objects allocated to BANK1 (162 bytes)
   168  0016A4  EE01  F000         	lfsr	0,__pbssBANK1
   169  0016A8  0EA2               	movlw	162
   170  0016AA                     clear_1:
   171  0016AA  6AEE               	clrf	postinc0,c
   172  0016AC  06E8               	decf	wreg,f,c
   173  0016AE  E1FD               	bnz	clear_1
   174                           
   175                           ; Clear objects allocated to BANK0 (26 bytes)
   176  0016B0  EE00  F0B2         	lfsr	0,__pbssBANK0
   177  0016B4  0E1A               	movlw	26
   178  0016B6                     clear_2:
   179  0016B6  6AEE               	clrf	postinc0,c
   180  0016B8  06E8               	decf	wreg,f,c
   181  0016BA  E1FD               	bnz	clear_2
   182                           
   183                           ; Clear objects allocated to COMRAM (45 bytes)
   184  0016BC  EE00  F02F         	lfsr	0,__pbssCOMRAM
   185  0016C0  0E2D               	movlw	45
   186  0016C2                     clear_3:
   187  0016C2  6AEE               	clrf	postinc0,c
   188  0016C4  06E8               	decf	wreg,f,c
   189  0016C6  E1FD               	bnz	clear_3
   190                           
   191                           ; Initialize objects allocated to COMRAM (1 bytes)
   192                           ; load TBLPTR registers with __pidataCOMRAM
   193  0016C8  0E62               	movlw	low __pidataCOMRAM
   194  0016CA  6EF6               	movwf	tblptrl,c
   195  0016CC  0E1C               	movlw	high __pidataCOMRAM
   196  0016CE  6EF7               	movwf	tblptrh,c
   197  0016D0  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   198  0016D2  6EF8               	movwf	tblptru,c
   199  0016D4  0009               	tblrd		*+	;fetch initializer
   200  0016D6  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   201  0016DA                     end_of_initialization:
   202                           	opt stack 0
   203  0016DA                     __end_of__initialization:
   204                           	opt stack 0
   205  0016DA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   206  0016DC  6EF8               	movwf	tblptru,c
   207  0016DE  0100               	movlb	0
   208  0016E0  EF61  F000         	goto	_main	;jump to C main() function
   209                           tblptru	equ	0xFF8
   210                           tblptrh	equ	0xFF7
   211                           tblptrl	equ	0xFF6
   212                           tablat	equ	0xFF5
   213                           postinc0	equ	0xFEE
   214                           wreg	equ	0xFE8
   215                           
   216                           	psect	bssCOMRAM
   217  00002F                     __pbssCOMRAM:
   218                           	opt stack 0
   219  00002F                     _motorBuff:
   220                           	opt stack 0
   221  00002F                     	ds	6
   222  000035                     _ADCBuffer0:
   223                           	opt stack 0
   224  000035                     	ds	5
   225  00003A                     _ADCBuffer1:
   226                           	opt stack 0
   227  00003A                     	ds	5
   228  00003F                     _voltage:
   229                           	opt stack 0
   230  00003F                     	ds	3
   231  000042                     _ADCResult:
   232                           	opt stack 0
   233  000042                     	ds	2
   234  000044                     _bufferFlag:
   235                           	opt stack 0
   236  000044                     	ds	2
   237  000046                     _bufferLen:
   238                           	opt stack 0
   239  000046                     	ds	2
   240  000048                     _length:
   241                           	opt stack 0
   242  000048                     	ds	2
   243  00004A                     _previousValue:
   244                           	opt stack 0
   245  00004A                     	ds	2
   246  00004C                     _MQ_Main_Willing_to_block:
   247                           	opt stack 0
   248  00004C                     	ds	1
   249  00004D                     _USART_Status:
   250                           	opt stack 0
   251  00004D                     	ds	1
   252  00004E                     _buflen:
   253                           	opt stack 0
   254  00004E                     	ds	1
   255  00004F                     _last_reg_recvd:
   256                           	opt stack 0
   257  00004F                     	ds	1
   258  000050                     _msgtype:
   259                           	opt stack 0
   260  000050                     	ds	1
   261  000051                     _uartData:
   262                           	opt stack 0
   263  000051                     	ds	1
   264  000052                     _buff:
   265                           	opt stack 0
   266  000052                     	ds	10
   267                           tblptru	equ	0xFF8
   268                           tblptrh	equ	0xFF7
   269                           tblptrl	equ	0xFF6
   270                           tablat	equ	0xFF5
   271                           postinc0	equ	0xFEE
   272                           wreg	equ	0xFE8
   273                           
   274                           	psect	dataCOMRAM
   275  00005E                     __pdataCOMRAM:
   276                           	opt stack 0
   277  00005E                     readMessages@F5196:
   278                           	opt stack 0
   279  00005E                     	ds	1
   280                           tblptru	equ	0xFF8
   281                           tblptrh	equ	0xFF7
   282                           tblptrl	equ	0xFF6
   283                           tablat	equ	0xFF5
   284                           postinc0	equ	0xFEE
   285                           wreg	equ	0xFE8
   286                           
   287                           	psect	bssBANK0
   288  0000B2                     __pbssBANK0:
   289                           	opt stack 0
   290  0000B2                     _msgbuffer:
   291                           	opt stack 0
   292  0000B2                     	ds	20
   293  0000C6                     _buffer:
   294                           	opt stack 0
   295  0000C6                     	ds	6
   296                           tblptru	equ	0xFF8
   297                           tblptrh	equ	0xFF7
   298                           tblptrl	equ	0xFF6
   299                           tablat	equ	0xFF5
   300                           postinc0	equ	0xFEE
   301                           wreg	equ	0xFE8
   302                           
   303                           	psect	bssBANK1
   304  000100                     __pbssBANK1:
   305                           	opt stack 0
   306  000100                     _FromMainLow_MQ:
   307                           	opt stack 0
   308  000100                     	ds	54
   309  000136                     _ToMainHigh_MQ:
   310                           	opt stack 0
   311  000136                     	ds	54
   312  00016C                     _ToMainLow_MQ:
   313                           	opt stack 0
   314  00016C                     	ds	54
   315                           tblptru	equ	0xFF8
   316                           tblptrh	equ	0xFF7
   317                           tblptrl	equ	0xFF6
   318                           tablat	equ	0xFF5
   319                           postinc0	equ	0xFEE
   320                           wreg	equ	0xFE8
   321                           
   322                           	psect	bssBANK2
   323  000245                     __pbssBANK2:
   324                           	opt stack 0
   325  000245                     _FromMainHigh_MQ:
   326                           	opt stack 0
   327  000245                     	ds	54
   328                           tblptru	equ	0xFF8
   329                           tblptrh	equ	0xFF7
   330                           tblptrl	equ	0xFF6
   331                           tablat	equ	0xFF5
   332                           postinc0	equ	0xFEE
   333                           wreg	equ	0xFE8
   334                           
   335                           	psect	cstackBANK2
   336  000200                     __pcstackBANK2:
   337                           	opt stack 0
   338  000200                     main@last_reg_recvd:
   339                           	opt stack 0
   340                           
   341                           ; 1 bytes @ 0x0
   342  000200                     	ds	1
   343  000201                     main@config1:
   344                           	opt stack 0
   345                           
   346                           ; 1 bytes @ 0x1
   347  000201                     	ds	1
   348  000202                     main@config2:
   349                           	opt stack 0
   350                           
   351                           ; 1 bytes @ 0x2
   352  000202                     	ds	1
   353  000203                     main@portconfig:
   354                           	opt stack 0
   355                           
   356                           ; 1 bytes @ 0x3
   357  000203                     	ds	1
   358  000204                     main@msgbuffer:
   359                           	opt stack 0
   360                           
   361                           ; 11 bytes @ 0x4
   362  000204                     	ds	11
   363  00020F                     main@t0thread_data:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0xF
   367  00020F                     	ds	2
   368  000211                     main@uthread_data:
   369                           	opt stack 0
   370                           
   371                           ; 2 bytes @ 0x11
   372  000211                     	ds	2
   373  000213                     main@t1thread_data:
   374                           	opt stack 0
   375                           
   376                           ; 2 bytes @ 0x13
   377  000213                     	ds	2
   378  000215                     main@uc:
   379                           	opt stack 0
   380                           
   381                           ; 14 bytes @ 0x15
   382  000215                     	ds	14
   383  000223                     main@msgtype:
   384                           	opt stack 0
   385                           
   386                           ; 1 bytes @ 0x23
   387  000223                     	ds	1
   388  000224                     main@length:
   389                           	opt stack 0
   390                           
   391                           ; 1 bytes @ 0x24
   392  000224                     	ds	1
   393  000225                     main@ic:
   394                           	opt stack 0
   395                           
   396                           ; 32 bytes @ 0x25
   397  000225                     	ds	32
   398                           tblptru	equ	0xFF8
   399                           tblptrh	equ	0xFF7
   400                           tblptrl	equ	0xFF6
   401                           tablat	equ	0xFF5
   402                           postinc0	equ	0xFEE
   403                           wreg	equ	0xFE8
   404                           
   405                           	psect	cstackBANK1
   406  0001A2                     __pcstackBANK1:
   407                           	opt stack 0
   408  0001A2                     ??_SetChanADC:
   409  0001A2                     ?_in_high_int:
   410                           	opt stack 0
   411  0001A2                     ?___lwmod:
   412                           	opt stack 0
   413  0001A2                     i2c_configure_slave@addr:
   414                           	opt stack 0
   415  0001A2                     OpenADC@config2:
   416                           	opt stack 0
   417  0001A2                     OpenTimer0@config:
   418                           	opt stack 0
   419  0001A2                     OpenTimer1@config:
   420                           	opt stack 0
   421  0001A2                     Delay1KTCYx@unit:
   422                           	opt stack 0
   423  0001A2                     init_queue@qptr:
   424                           	opt stack 0
   425  0001A2                     check_msg@qptr:
   426                           	opt stack 0
   427  0001A2                     i2c_master_send@msg:
   428                           	opt stack 0
   429  0001A2                     init_i2c@ic:
   430                           	opt stack 0
   431  0001A2                     init_uart_recv@uc:
   432                           	opt stack 0
   433  0001A2                     uart_retrieve_buffer@length:
   434                           	opt stack 0
   435  0001A2                     timer0_lthread@tptr:
   436                           	opt stack 0
   437  0001A2                     init_timer1_lthread@tptr:
   438                           	opt stack 0
   439  0001A2                     OpenUSART@spbrg:
   440                           	opt stack 0
   441  0001A2                     ___lwmod@dividend:
   442                           	opt stack 0
   443  0001A2                     memcpy@d1:
   444                           	opt stack 0
   445                           
   446                           ; 2 bytes @ 0x0
   447  0001A2                     	ds	1
   448  0001A3                     OpenADC@portconfig:
   449                           	opt stack 0
   450  0001A3                     SetChanADC@channel:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x1
   454  0001A3                     	ds	1
   455  0001A4                     ??_OpenADC:
   456  0001A4                     ??_OpenUSART:
   457  0001A4                     ??_i2c_master_send:
   458  0001A4                     ??_init_queue:
   459  0001A4                     ??_check_msg:
   460  0001A4                     ?_in_low_int:
   461                           	opt stack 0
   462  0001A4                     uart_retrieve_buffer@msgbuffer:
   463                           	opt stack 0
   464  0001A4                     timer0_lthread@msgtype:
   465                           	opt stack 0
   466  0001A4                     ___lwmod@divisor:
   467                           	opt stack 0
   468  0001A4                     memcpy@s1:
   469                           	opt stack 0
   470                           
   471                           ; 2 bytes @ 0x2
   472  0001A4                     	ds	1
   473  0001A5                     init_queue@i:
   474                           	opt stack 0
   475                           
   476                           ; 1 bytes @ 0x3
   477  0001A5                     	ds	1
   478  0001A6                     ??_init_queues:
   479  0001A6                     ??_uart_retrieve_buffer:
   480  0001A6                     ??___lwmod:
   481  0001A6                     ?_in_main:
   482                           	opt stack 0
   483  0001A6                     OpenADC@config:
   484                           	opt stack 0
   485  0001A6                     timer0_lthread@length:
   486                           	opt stack 0
   487  0001A6                     memcpy@n:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x4
   491  0001A6                     	ds	1
   492  0001A7                     OpenUSART@config:
   493                           	opt stack 0
   494  0001A7                     ___lwmod@counter:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x5
   498  0001A7                     	ds	1
   499  0001A8                     ??_block_on_To_msgqueues:
   500  0001A8                     timer0_lthread@msgbuffer:
   501                           	opt stack 0
   502  0001A8                     memcpy@d:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x6
   506  0001A8                     	ds	1
   507  0001A9                     uart_retrieve_buffer@i:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x7
   511  0001A9                     	ds	1
   512  0001AA                     i2c_master_send@length:
   513                           	opt stack 0
   514  0001AA                     timer0_lthread@msgval:
   515                           	opt stack 0
   516  0001AA                     memcpy@s:
   517                           	opt stack 0
   518                           
   519                           ; 2 bytes @ 0x8
   520  0001AA                     	ds	1
   521  0001AB                     i2c_master_send@i:
   522                           	opt stack 0
   523                           
   524                           ; 2 bytes @ 0x9
   525  0001AB                     	ds	1
   526  0001AC                     send_msg@qptr:
   527                           	opt stack 0
   528  0001AC                     recv_msg@qptr:
   529                           	opt stack 0
   530                           
   531                           ; 2 bytes @ 0xA
   532  0001AC                     	ds	2
   533  0001AE                     send_msg@length:
   534                           	opt stack 0
   535  0001AE                     recv_msg@maxlength:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0xC
   539  0001AE                     	ds	1
   540  0001AF                     send_msg@msgtype:
   541                           	opt stack 0
   542  0001AF                     recv_msg@msgtype:
   543                           	opt stack 0
   544                           
   545                           ; 2 bytes @ 0xD
   546  0001AF                     	ds	1
   547  0001B0                     send_msg@data:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0xE
   551  0001B0                     	ds	1
   552  0001B1                     recv_msg@data:
   553                           	opt stack 0
   554                           
   555                           ; 2 bytes @ 0xF
   556  0001B1                     	ds	1
   557  0001B2                     ??_send_msg:
   558                           
   559                           ; 0 bytes @ 0x10
   560  0001B2                     	ds	1
   561  0001B3                     ??_recv_msg:
   562  0001B3                     send_msg@tlength:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x11
   566  0001B3                     	ds	2
   567  0001B5                     send_msg@slot:
   568                           	opt stack 0
   569  0001B5                     recv_msg@slot:
   570                           	opt stack 0
   571                           
   572                           ; 1 bytes @ 0x13
   573  0001B5                     	ds	1
   574  0001B6                     send_msg@qmsg:
   575                           	opt stack 0
   576  0001B6                     recv_msg@tlength:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0x14
   580  0001B6                     	ds	2
   581  0001B8                     ToMainHigh_sendmsg@msgtype:
   582                           	opt stack 0
   583  0001B8                     FromMainHigh_sendmsg@msgtype:
   584                           	opt stack 0
   585  0001B8                     recv_msg@qmsg:
   586                           	opt stack 0
   587                           
   588                           ; 2 bytes @ 0x16
   589  0001B8                     	ds	1
   590  0001B9                     ToMainHigh_sendmsg@data:
   591                           	opt stack 0
   592  0001B9                     FromMainHigh_sendmsg@data:
   593                           	opt stack 0
   594                           
   595                           ; 2 bytes @ 0x17
   596  0001B9                     	ds	1
   597  0001BA                     ToMainLow_recvmsg@msgtype:
   598                           	opt stack 0
   599  0001BA                     ToMainHigh_recvmsg@msgtype:
   600                           	opt stack 0
   601                           
   602                           ; 2 bytes @ 0x18
   603  0001BA                     	ds	1
   604  0001BB                     ToMainHigh_sendmsg@length:
   605                           	opt stack 0
   606  0001BB                     FromMainHigh_sendmsg@length:
   607                           	opt stack 0
   608                           
   609                           ; 1 bytes @ 0x19
   610  0001BB                     	ds	1
   611  0001BC                     ToMainLow_recvmsg@data:
   612                           	opt stack 0
   613  0001BC                     ToMainHigh_recvmsg@data:
   614                           	opt stack 0
   615  0001BC                     timer1_lthread@tptr:
   616                           	opt stack 0
   617  0001BC                     uart_lthread@uptr:
   618                           	opt stack 0
   619                           
   620                           ; 2 bytes @ 0x1A
   621  0001BC                     	ds	2
   622  0001BE                     ToMainLow_recvmsg@maxlength:
   623                           	opt stack 0
   624  0001BE                     ToMainHigh_recvmsg@maxlength:
   625                           	opt stack 0
   626  0001BE                     timer1_lthread@msgtype:
   627                           	opt stack 0
   628  0001BE                     uart_lthread@msgtype:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x1C
   632  0001BE                     	ds	2
   633  0001C0                     timer1_lthread@length:
   634                           	opt stack 0
   635  0001C0                     uart_lthread@length:
   636                           	opt stack 0
   637                           
   638                           ; 2 bytes @ 0x1E
   639  0001C0                     	ds	2
   640  0001C2                     timer1_lthread@msgbuffer:
   641                           	opt stack 0
   642  0001C2                     uart_lthread@msgbuffer:
   643                           	opt stack 0
   644                           
   645                           ; 2 bytes @ 0x20
   646  0001C2                     	ds	2
   647  0001C4                     ??_timer1_lthread:
   648  0001C4                     ??_uart_lthread:
   649                           
   650                           ; 0 bytes @ 0x22
   651  0001C4                     	ds	1
   652  0001C5                     timer1_lthread@retval:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0x23
   656  0001C5                     	ds	1
   657  0001C6                     ??_main:
   658                           
   659                           ; 0 bytes @ 0x24
   660  0001C6                     	ds	2
   661                           tblptru	equ	0xFF8
   662                           tblptrh	equ	0xFF7
   663                           tblptrl	equ	0xFF6
   664                           tablat	equ	0xFF5
   665                           postinc0	equ	0xFEE
   666                           wreg	equ	0xFE8
   667                           
   668                           	psect	cstackBANK0
   669  000080                     __pcstackBANK0:
   670                           	opt stack 0
   671  000080                     ??_i2c_int_handler_master_tx:
   672  000080                     ?_ReadADC:
   673                           	opt stack 0
   674  000080                     ?i2_in_high_int:
   675                           	opt stack 0
   676  000080                     WriteTimer0@timer0:
   677                           	opt stack 0
   678  000080                     i2check_msg@qptr:
   679                           	opt stack 0
   680  000080                     i2memcpy@d1:
   681                           	opt stack 0
   682                           
   683                           ; 2 bytes @ 0x0
   684  000080                     	ds	2
   685  000082                     ??i2_check_msg:
   686  000082                     ?i2_in_low_int:
   687                           	opt stack 0
   688  000082                     adc_int_hand@c:
   689                           	opt stack 0
   690  000082                     WriteTimer0@timer:
   691                           	opt stack 0
   692  000082                     i2memcpy@s1:
   693                           	opt stack 0
   694                           
   695                           ; 2 bytes @ 0x2
   696  000082                     	ds	2
   697  000084                     adc_int_hand@c_2250:
   698                           	opt stack 0
   699  000084                     i2memcpy@n:
   700                           	opt stack 0
   701                           
   702                           ; 2 bytes @ 0x4
   703  000084                     	ds	2
   704  000086                     i2memcpy@d:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x6
   708  000086                     	ds	2
   709  000088                     i2memcpy@s:
   710                           	opt stack 0
   711                           
   712                           ; 2 bytes @ 0x8
   713  000088                     	ds	2
   714  00008A                     i2send_msg@qptr:
   715                           	opt stack 0
   716  00008A                     i2recv_msg@qptr:
   717                           	opt stack 0
   718                           
   719                           ; 2 bytes @ 0xA
   720  00008A                     	ds	2
   721  00008C                     i2send_msg@length:
   722                           	opt stack 0
   723  00008C                     i2recv_msg@maxlength:
   724                           	opt stack 0
   725                           
   726                           ; 1 bytes @ 0xC
   727  00008C                     	ds	1
   728  00008D                     i2send_msg@msgtype:
   729                           	opt stack 0
   730  00008D                     i2recv_msg@msgtype:
   731                           	opt stack 0
   732                           
   733                           ; 2 bytes @ 0xD
   734  00008D                     	ds	1
   735  00008E                     i2send_msg@data:
   736                           	opt stack 0
   737                           
   738                           ; 2 bytes @ 0xE
   739  00008E                     	ds	1
   740  00008F                     i2recv_msg@data:
   741                           	opt stack 0
   742                           
   743                           ; 2 bytes @ 0xF
   744  00008F                     	ds	1
   745  000090                     ??i2_send_msg:
   746                           
   747                           ; 0 bytes @ 0x10
   748  000090                     	ds	1
   749  000091                     ??i2_recv_msg:
   750  000091                     i2send_msg@tlength:
   751                           	opt stack 0
   752                           
   753                           ; 2 bytes @ 0x11
   754  000091                     	ds	2
   755  000093                     i2send_msg@slot:
   756                           	opt stack 0
   757  000093                     i2recv_msg@slot:
   758                           	opt stack 0
   759                           
   760                           ; 1 bytes @ 0x13
   761  000093                     	ds	1
   762  000094                     i2send_msg@qmsg:
   763                           	opt stack 0
   764  000094                     i2recv_msg@tlength:
   765                           	opt stack 0
   766                           
   767                           ; 2 bytes @ 0x14
   768  000094                     	ds	2
   769  000096                     i2ToMainHigh_sendmsg@msgtype:
   770                           	opt stack 0
   771  000096                     i2recv_msg@qmsg:
   772                           	opt stack 0
   773                           
   774                           ; 2 bytes @ 0x16
   775  000096                     	ds	1
   776  000097                     i2ToMainHigh_sendmsg@data:
   777                           	opt stack 0
   778                           
   779                           ; 2 bytes @ 0x17
   780  000097                     	ds	1
   781  000098                     FromMainHigh_recvmsg@msgtype:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x18
   785  000098                     	ds	1
   786  000099                     i2ToMainHigh_sendmsg@length:
   787                           	opt stack 0
   788                           
   789                           ; 1 bytes @ 0x19
   790  000099                     	ds	1
   791  00009A                     FromMainHigh_recvmsg@data:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x1A
   795  00009A                     	ds	2
   796  00009C                     FromMainHigh_recvmsg@maxlength:
   797                           	opt stack 0
   798                           
   799                           ; 1 bytes @ 0x1C
   800  00009C                     	ds	1
   801  00009D                     ??_timer0_int_handler:
   802                           
   803                           ; 0 bytes @ 0x1D
   804  00009D                     	ds	1
   805  00009E                     timer0_int_handler@length:
   806                           	opt stack 0
   807                           
   808                           ; 2 bytes @ 0x1E
   809  00009E                     	ds	2
   810  0000A0                     timer0_int_handler@msgtype:
   811                           	opt stack 0
   812                           
   813                           ; 2 bytes @ 0x20
   814  0000A0                     	ds	2
   815  0000A2                     timer0_int_handler@val:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x22
   819  0000A2                     	ds	2
   820  0000A4                     ??_InterruptHandlerHigh:
   821                           
   822                           ; 0 bytes @ 0x24
   823  0000A4                     	ds	14
   824  0000B2                     tblptru	equ	0xFF8
   825                           tblptrh	equ	0xFF7
   826                           tblptrl	equ	0xFF6
   827                           tablat	equ	0xFF5
   828                           postinc0	equ	0xFEE
   829                           wreg	equ	0xFE8
   830                           
   831                           ; 0 bytes @ 0x32
   832                           
   833                           	psect	cstackCOMRAM
   834  000001                     __pcstackCOMRAM:
   835                           	opt stack 0
   836  000001                     ?_ReadTimer1:
   837                           	opt stack 0
   838  000001                     ReadUSART@data:
   839                           	opt stack 0
   840  000001                     WriteUSART@data:
   841                           	opt stack 0
   842  000001                     WriteTimer1@timer1:
   843                           	opt stack 0
   844  000001                     i1memcpy@d1:
   845                           	opt stack 0
   846                           
   847                           ; 2 bytes @ 0x0
   848  000001                     	ds	1
   849  000002                     ??_uart_send_int_handler:
   850                           
   851                           ; 0 bytes @ 0x1
   852  000002                     	ds	1
   853  000003                     ReadTimer1@timer:
   854                           	opt stack 0
   855  000003                     WriteTimer1@timer:
   856                           	opt stack 0
   857  000003                     i1memcpy@s1:
   858                           	opt stack 0
   859                           
   860                           ; 2 bytes @ 0x2
   861  000003                     	ds	2
   862  000005                     i1memcpy@n:
   863                           	opt stack 0
   864                           
   865                           ; 2 bytes @ 0x4
   866  000005                     	ds	2
   867  000007                     i1memcpy@d:
   868                           	opt stack 0
   869                           
   870                           ; 2 bytes @ 0x6
   871  000007                     	ds	2
   872  000009                     i1memcpy@s:
   873                           	opt stack 0
   874                           
   875                           ; 2 bytes @ 0x8
   876  000009                     	ds	2
   877  00000B                     i1send_msg@qptr:
   878                           	opt stack 0
   879                           
   880                           ; 2 bytes @ 0xA
   881  00000B                     	ds	2
   882  00000D                     i1send_msg@length:
   883                           	opt stack 0
   884                           
   885                           ; 1 bytes @ 0xC
   886  00000D                     	ds	1
   887  00000E                     i1send_msg@msgtype:
   888                           	opt stack 0
   889                           
   890                           ; 1 bytes @ 0xD
   891  00000E                     	ds	1
   892  00000F                     i1send_msg@data:
   893                           	opt stack 0
   894                           
   895                           ; 2 bytes @ 0xE
   896  00000F                     	ds	2
   897  000011                     ??i1_send_msg:
   898                           
   899                           ; 0 bytes @ 0x10
   900  000011                     	ds	1
   901  000012                     i1send_msg@tlength:
   902                           	opt stack 0
   903                           
   904                           ; 2 bytes @ 0x11
   905  000012                     	ds	2
   906  000014                     i1send_msg@slot:
   907                           	opt stack 0
   908                           
   909                           ; 1 bytes @ 0x13
   910  000014                     	ds	1
   911  000015                     i1send_msg@qmsg:
   912                           	opt stack 0
   913                           
   914                           ; 2 bytes @ 0x14
   915  000015                     	ds	2
   916  000017                     ToMainLow_sendmsg@msgtype:
   917                           	opt stack 0
   918                           
   919                           ; 1 bytes @ 0x16
   920  000017                     	ds	1
   921  000018                     ToMainLow_sendmsg@data:
   922                           	opt stack 0
   923                           
   924                           ; 2 bytes @ 0x17
   925  000018                     	ds	2
   926  00001A                     ToMainLow_sendmsg@length:
   927                           	opt stack 0
   928                           
   929                           ; 1 bytes @ 0x19
   930  00001A                     	ds	1
   931  00001B                     ??_timer1_int_handler:
   932  00001B                     ??_uart_recv_int_handler:
   933                           
   934                           ; 0 bytes @ 0x1A
   935  00001B                     	ds	1
   936  00001C                     timer1_int_handler@result:
   937                           	opt stack 0
   938                           
   939                           ; 2 bytes @ 0x1B
   940  00001C                     	ds	2
   941  00001E                     ??_InterruptHandlerLow:
   942                           
   943                           ; 0 bytes @ 0x1D
   944  00001E                     	ds	17
   945                           tblptru	equ	0xFF8
   946                           tblptrh	equ	0xFF7
   947                           tblptrl	equ	0xFF6
   948                           tablat	equ	0xFF5
   949                           postinc0	equ	0xFEE
   950                           wreg	equ	0xFE8
   951                           
   952 ;;
   953 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   954 ;;
   955 ;; *************** function _main *****************
   956 ;; Defined at:
   957 ;;		line 189 in file "../src/main.c"
   958 ;; Parameters:    Size  Location     Type
   959 ;;		None
   960 ;; Auto vars:     Size  Location     Type
   961 ;;  ic             32   37[BANK2 ] struct __i2c_comm
   962 ;;  uc             14   21[BANK2 ] struct __uart_comm
   963 ;;  msgbuffer      11    4[BANK2 ] unsigned char [11]
   964 ;;  t1thread_dat    2   19[BANK2 ] struct __timer1_thread_s
   965 ;;  uthread_data    2   17[BANK2 ] struct __uart_thread_str
   966 ;;  t0thread_dat    2   15[BANK2 ] struct __timer0_thread_s
   967 ;;  length          1   36[BANK2 ] char 
   968 ;;  msgtype         1   35[BANK2 ] unsigned char 
   969 ;;  portconfig      1    3[BANK2 ] unsigned char 
   970 ;;  config2         1    2[BANK2 ] unsigned char 
   971 ;;  config1         1    1[BANK2 ] unsigned char 
   972 ;;  last_reg_rec    1    0[BANK2 ] unsigned char 
   973 ;;  i               1    0        unsigned char 
   974 ;;  c               1    0        unsigned char 
   975 ;; Return value:  Size  Location     Type
   976 ;;		None               void
   977 ;; Registers used:
   978 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         0       0       0      69       0
   986 ;;      Temps:          0       0       2       0       0
   987 ;;      Totals:         0       0       2      69       0
   988 ;;Total ram usage:       71 bytes
   989 ;; Hardware stack levels required when called:   14
   990 ;; This function calls:
   991 ;;		_OpenADC
   992 ;;		_OpenTimer0
   993 ;;		_OpenTimer1
   994 ;;		_OpenUSART
   995 ;;		_SetChanADC
   996 ;;		_ToMainHigh_recvmsg
   997 ;;		_ToMainLow_recvmsg
   998 ;;		_block_on_To_msgqueues
   999 ;;		_enable_interrupts
  1000 ;;		_i2c_configure_slave
  1001 ;;		_i2c_master_send
  1002 ;;		_init_i2c
  1003 ;;		_init_queues
  1004 ;;		_init_timer1_lthread
  1005 ;;		_init_uart_recv
  1006 ;;		_timer0_lthread
  1007 ;;		_timer1_lthread
  1008 ;;		_uart_lthread
  1009 ;; This function is called by:
  1010 ;;		Startup code after reset
  1011 ;; This function uses a non-reentrant model
  1012 ;;
  1013                           
  1014                           	psect	text0
  1015  0000C2                     __ptext0:
  1016                           	opt stack 0
  1017  0000C2                     _main:
  1018                           	opt stack 17
  1019                           
  1020                           ;main.c: 190: char c;
  1021                           ;main.c: 191: signed char length;
  1022                           ;main.c: 192: unsigned char msgtype;
  1023                           ;main.c: 193: unsigned char last_reg_recvd;
  1024                           ;main.c: 194: uart_comm uc;
  1025                           ;main.c: 195: i2c_comm ic;
  1026                           ;main.c: 196: unsigned char msgbuffer[10 + 1];
  1027                           ;main.c: 197: unsigned char i;
  1028                           ;main.c: 198: uart_thread_struct uthread_data;
  1029                           ;main.c: 199: timer1_thread_struct t1thread_data;
  1030                           ;main.c: 200: timer0_thread_struct t0thread_data;
  1031                           ;main.c: 202: unsigned char config1 = 0x00, config2 = 0x00, portconfig = 0x00;
  1032                           
  1033                           ;incstack = 0
  1034  0000C2  0101               	movlb	1	; () banked
  1035  0000C4  6FC6               	movwf	??_main& (0+255),b
  1036  0000C6  0E00               	movlw	0
  1037  0000C8  0102               	movlb	2	; () banked
  1038  0000CA  0102               	movlb	2	; () banked
  1039  0000CC  6F01               	movwf	main@config1& (0+255),b
  1040  0000CE  0101               	movlb	1	; () banked
  1041  0000D0  51C6               	movf	??_main& (0+255),w,b
  1042  0000D2  0101               	movlb	1	; () banked
  1043  0000D4  6FC6               	movwf	??_main& (0+255),b
  1044  0000D6  0E00               	movlw	0
  1045  0000D8  0102               	movlb	2	; () banked
  1046  0000DA  0102               	movlb	2	; () banked
  1047  0000DC  6F02               	movwf	main@config2& (0+255),b
  1048  0000DE  0101               	movlb	1	; () banked
  1049  0000E0  51C6               	movf	??_main& (0+255),w,b
  1050  0000E2  0101               	movlb	1	; () banked
  1051  0000E4  6FC6               	movwf	??_main& (0+255),b
  1052  0000E6  0E00               	movlw	0
  1053  0000E8  0102               	movlb	2	; () banked
  1054  0000EA  0102               	movlb	2	; () banked
  1055  0000EC  6F03               	movwf	main@portconfig& (0+255),b
  1056  0000EE  0101               	movlb	1	; () banked
  1057  0000F0  51C6               	movf	??_main& (0+255),w,b
  1058                           
  1059                           ; BSR set to: 1
  1060                           ;main.c: 203: config1 = 0b10011111 | 0b11111111 | 0b11110011;
  1061  0000F2  0102               	movlb	2	; () banked
  1062  0000F4  0102               	movlb	2	; () banked
  1063  0000F6  6901               	setf	main@config1& (0+255),b
  1064                           
  1065                           ; BSR set to: 2
  1066                           ;main.c: 204: config2 = 0b10000111 | 0b11111111 | 0b11111100;
  1067  0000F8  0102               	movlb	2	; () banked
  1068  0000FA  0102               	movlb	2	; () banked
  1069  0000FC  6902               	setf	main@config2& (0+255),b
  1070                           
  1071                           ; BSR set to: 2
  1072                           ;main.c: 206: portconfig = 0b11111111;
  1073  0000FE  0102               	movlb	2	; () banked
  1074  000100  0102               	movlb	2	; () banked
  1075  000102  6903               	setf	main@portconfig& (0+255),b
  1076                           
  1077                           ; BSR set to: 2
  1078                           ;main.c: 215: OSCCON = 0x82;
  1079  000104  0E82               	movlw	130
  1080  000106  6ED3               	movwf	4051,c	;volatile
  1081                           
  1082                           ; BSR set to: 2
  1083                           ;main.c: 216: OSCTUNEbits.PLLEN = 1;
  1084  000108  8C9B               	bsf	3995,6,c	;volatile
  1085                           
  1086                           ; BSR set to: 2
  1087                           ;main.c: 235: init_uart_recv(&uc);
  1088  00010A  0102               	movlb	2	; () banked
  1089  00010C  0E02               	movlw	high main@uc
  1090  00010E  0101               	movlb	1	; () banked
  1091  000110  0101               	movlb	1	; () banked
  1092  000112  6FA3               	movwf	(init_uart_recv@uc+1)& (0+255),b
  1093  000114  0102               	movlb	2	; () banked
  1094  000116  0E15               	movlw	low main@uc
  1095  000118  0101               	movlb	1	; () banked
  1096  00011A  0101               	movlb	1	; () banked
  1097  00011C  6FA2               	movwf	init_uart_recv@uc& (0+255),b
  1098  00011E  EC5B  F00D         	call	_init_uart_recv	;wreg free
  1099                           
  1100                           ;main.c: 238: init_i2c(&ic);
  1101  000122  0102               	movlb	2	; () banked
  1102  000124  0E02               	movlw	high main@ic
  1103  000126  0101               	movlb	1	; () banked
  1104  000128  0101               	movlb	1	; () banked
  1105  00012A  6FA3               	movwf	(init_i2c@ic+1)& (0+255),b
  1106  00012C  0102               	movlb	2	; () banked
  1107  00012E  0E25               	movlw	low main@ic
  1108  000130  0101               	movlb	1	; () banked
  1109  000132  0101               	movlb	1	; () banked
  1110  000134  6FA2               	movwf	init_i2c@ic& (0+255),b
  1111  000136  EC84  F00A         	call	_init_i2c	;wreg free
  1112                           
  1113                           ;main.c: 241: init_timer1_lthread(&t1thread_data);
  1114  00013A  0102               	movlb	2	; () banked
  1115  00013C  0E02               	movlw	high main@t1thread_data
  1116  00013E  0101               	movlb	1	; () banked
  1117  000140  0101               	movlb	1	; () banked
  1118  000142  6FA3               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1119  000144  0102               	movlb	2	; () banked
  1120  000146  0E13               	movlw	low main@t1thread_data
  1121  000148  0101               	movlb	1	; () banked
  1122  00014A  0101               	movlb	1	; () banked
  1123  00014C  6FA2               	movwf	init_timer1_lthread@tptr& (0+255),b
  1124  00014E  ECEB  F00D         	call	_init_timer1_lthread	;wreg free
  1125                           
  1126                           ;main.c: 244: init_queues();
  1127  000152  EC4D  F00A         	call	_init_queues	;wreg free
  1128                           
  1129                           ;main.c: 248: TRISB = 0x0;
  1130  000156  0E00               	movlw	0
  1131  000158  6E93               	movwf	3987,c	;volatile
  1132                           
  1133                           ;main.c: 249: LATB = 0x0;
  1134  00015A  0E00               	movlw	0
  1135  00015C  6E8A               	movwf	3978,c	;volatile
  1136                           
  1137                           ;main.c: 262: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110011);
  1138  00015E  0ED3               	movlw	211
  1139  000160  EC72  F00D         	call	_OpenTimer0
  1140                           
  1141                           ;main.c: 265: OpenADC(0b11011111 & 0b11111111 & 0b11110011,
  1142                           ;main.c: 266: 0b10000111 & 0b10001111 &
  1143                           ;main.c: 267: 0b11111111 & 0b11111110 &
  1144                           ;main.c: 268: 0b11111101, 0b1011);
  1145  000164  0101               	movlb	1	; () banked
  1146  000166  6FC6               	movwf	??_main& (0+255),b
  1147  000168  0E84               	movlw	132
  1148  00016A  0101               	movlb	1	; () banked
  1149  00016C  0101               	movlb	1	; () banked
  1150  00016E  6FA2               	movwf	OpenADC@config2& (0+255),b
  1151  000170  0101               	movlb	1	; () banked
  1152  000172  51C6               	movf	??_main& (0+255),w,b
  1153  000174  0101               	movlb	1	; () banked
  1154  000176  6FC7               	movwf	(??_main+1)& (0+255),b
  1155  000178  0E0B               	movlw	11
  1156  00017A  0101               	movlb	1	; () banked
  1157  00017C  0101               	movlb	1	; () banked
  1158  00017E  6FA3               	movwf	OpenADC@portconfig& (0+255),b
  1159  000180  0101               	movlb	1	; () banked
  1160  000182  51C7               	movf	(??_main+1)& (0+255),w,b
  1161  000184  0ED3               	movlw	211
  1162  000186  EC1B  F009         	call	_OpenADC
  1163                           
  1164                           ;main.c: 269: SetChanADC(0b10000111);
  1165  00018A  0E87               	movlw	135
  1166  00018C  ECAE  F00D         	call	_SetChanADC
  1167                           
  1168                           ;main.c: 279: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1169  000190  0EF5               	movlw	245
  1170  000192  ECA0  F00C         	call	_OpenTimer1
  1171                           
  1172                           ;main.c: 286: IPR1bits.TMR1IP = 0;
  1173  000196  909F               	bcf	3999,0,c	;volatile
  1174                           
  1175                           ;main.c: 288: IPR1bits.RCIP = 0;
  1176  000198  9A9F               	bcf	3999,5,c	;volatile
  1177                           
  1178                           ;main.c: 290: IPR1bits.TXIP = 0;
  1179  00019A  989F               	bcf	3999,4,c	;volatile
  1180                           
  1181                           ;main.c: 292: IPR1bits.SSPIP = 1;
  1182  00019C  869F               	bsf	3999,3,c	;volatile
  1183                           
  1184                           ;main.c: 294: IPR1bits.ADIP = 1;
  1185  00019E  8C9F               	bsf	3999,6,c	;volatile
  1186                           
  1187                           ;main.c: 304: i2c_configure_slave(0x9E);
  1188  0001A0  0E9E               	movlw	158
  1189  0001A2  EC87  F00D         	call	_i2c_configure_slave
  1190                           
  1191                           ;main.c: 319: PIE1bits.SSPIE = 1;
  1192  0001A6  869D               	bsf	3997,3,c	;volatile
  1193                           
  1194                           ;main.c: 320: PIE1bits.RCIE = 1;
  1195  0001A8  8A9D               	bsf	3997,5,c	;volatile
  1196                           
  1197                           ;main.c: 336: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1198                           ;main.c: 337: 0b11111111 & 0b11111111, 155);
  1199  0001AA  0E00               	movlw	0
  1200  0001AC  0101               	movlb	1	; () banked
  1201  0001AE  0101               	movlb	1	; () banked
  1202  0001B0  6FA3               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1203  0001B2  0E9B               	movlw	155
  1204  0001B4  0101               	movlb	1	; () banked
  1205  0001B6  6FA2               	movwf	OpenUSART@spbrg& (0+255),b
  1206  0001B8  0E7C               	movlw	124
  1207  0001BA  EC03  F008         	call	_OpenUSART
  1208                           
  1209                           ;main.c: 338: BAUDCONbits.BRG16 = 0;
  1210  0001BE  96B8               	bcf	4024,3,c	;volatile
  1211                           
  1212                           ;main.c: 339: RCSTAbits.SPEN = 1;
  1213  0001C0  8EAB               	bsf	4011,7,c	;volatile
  1214                           
  1215                           ;main.c: 340: RCSTAbits.CREN = 1;
  1216  0001C2  88AB               	bsf	4011,4,c	;volatile
  1217                           
  1218                           ;main.c: 345: bufferFlag = 0x0;
  1219  0001C4  0E00               	movlw	0
  1220  0001C6  6E45               	movwf	_bufferFlag+1,c
  1221  0001C8  0E00               	movlw	0
  1222  0001CA  6E44               	movwf	_bufferFlag,c
  1223                           
  1224                           ;main.c: 348: enable_interrupts();
  1225  0001CC  EC29  F00E         	call	_enable_interrupts	;wreg free
  1226  0001D0                     l3488:
  1227                           
  1228                           ;main.c: 372: block_on_To_msgqueues();
  1229  0001D0  EC5D  F009         	call	_block_on_To_msgqueues	;wreg free
  1230                           
  1231                           ;main.c: 380: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1232  0001D4  0102               	movlb	2	; () banked
  1233  0001D6  0E02               	movlw	high main@msgtype
  1234  0001D8  0101               	movlb	1	; () banked
  1235  0001DA  0101               	movlb	1	; () banked
  1236  0001DC  6FBB               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1237  0001DE  0102               	movlb	2	; () banked
  1238  0001E0  0E23               	movlw	low main@msgtype
  1239  0001E2  0101               	movlb	1	; () banked
  1240  0001E4  0101               	movlb	1	; () banked
  1241  0001E6  6FBA               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1242  0001E8  0102               	movlb	2	; () banked
  1243  0001EA  0E02               	movlw	high main@msgbuffer
  1244  0001EC  0101               	movlb	1	; () banked
  1245  0001EE  0101               	movlb	1	; () banked
  1246  0001F0  6FBD               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1247  0001F2  0102               	movlb	2	; () banked
  1248  0001F4  0E04               	movlw	low main@msgbuffer
  1249  0001F6  0101               	movlb	1	; () banked
  1250  0001F8  0101               	movlb	1	; () banked
  1251  0001FA  6FBC               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1252  0001FC  0E0A               	movlw	10
  1253  0001FE  EC20  F00C         	call	_ToMainHigh_recvmsg
  1254  000202  0102               	movlb	2	; () banked
  1255  000204  0102               	movlb	2	; () banked
  1256  000206  6F24               	movwf	main@length& (0+255),b
  1257                           
  1258                           ; BSR set to: 2
  1259                           ;main.c: 382: if (length < 0) {
  1260  000208  0102               	movlb	2	; () banked
  1261  00020A  0102               	movlb	2	; () banked
  1262  00020C  BF24               	btfsc	main@length& (0+255),7,b
  1263  00020E  D04D               	goto	l3504
  1264  000210  D03C               	goto	l3502
  1265  000212                     l3496:
  1266                           
  1267                           ; BSR set to: 2
  1268                           ;main.c: 390: {
  1269                           ;main.c: 391: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1270  000212  0102               	movlb	2	; () banked
  1271  000214  0E02               	movlw	high main@t0thread_data
  1272  000216  0101               	movlb	1	; () banked
  1273  000218  0101               	movlb	1	; () banked
  1274  00021A  6FA3               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1275  00021C  0102               	movlb	2	; () banked
  1276  00021E  0E0F               	movlw	low main@t0thread_data
  1277  000220  0101               	movlb	1	; () banked
  1278  000222  0101               	movlb	1	; () banked
  1279  000224  6FA2               	movwf	timer0_lthread@tptr& (0+255),b
  1280  000226  0102               	movlb	2	; () banked
  1281  000228  0101               	movlb	1	; () banked
  1282  00022A  C223  F1A4         	movff	main@msgtype,timer0_lthread@msgtype
  1283  00022E  0101               	movlb	1	; () banked
  1284  000230  0101               	movlb	1	; () banked
  1285  000232  6BA5               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1286  000234  0102               	movlb	2	; () banked
  1287  000236  0102               	movlb	2	; () banked
  1288  000238  5124               	movf	main@length& (0+255),w,b
  1289  00023A  0101               	movlb	1	; () banked
  1290  00023C  0101               	movlb	1	; () banked
  1291  00023E  6FA6               	movwf	timer0_lthread@length& (0+255),b
  1292  000240  0101               	movlb	1	; () banked
  1293  000242  6BA7               	clrf	(timer0_lthread@length+1)& (0+255),b
  1294  000244  0101               	movlb	1	; () banked
  1295  000246  BFA6               	btfsc	timer0_lthread@length& (0+255),7,b
  1296  000248  07A7               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1297  00024A  0102               	movlb	2	; () banked
  1298  00024C  0E02               	movlw	high main@msgbuffer
  1299  00024E  0101               	movlb	1	; () banked
  1300  000250  0101               	movlb	1	; () banked
  1301  000252  6FA9               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1302  000254  0102               	movlb	2	; () banked
  1303  000256  0E04               	movlw	low main@msgbuffer
  1304  000258  0101               	movlb	1	; () banked
  1305  00025A  0101               	movlb	1	; () banked
  1306  00025C  6FA8               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1307  00025E  ECE2  F00D         	call	_timer0_lthread	;wreg free
  1308                           
  1309                           ;main.c: 392: break;
  1310  000262  D023               	goto	l3504
  1311  000264                     l3498:
  1312                           
  1313                           ;main.c: 395: {
  1314                           ;main.c: 397: i2c_master_send(length, msgbuffer);
  1315  000264  0102               	movlb	2	; () banked
  1316  000266  0E02               	movlw	high main@msgbuffer
  1317  000268  0101               	movlb	1	; () banked
  1318  00026A  0101               	movlb	1	; () banked
  1319  00026C  6FA3               	movwf	(i2c_master_send@msg+1)& (0+255),b
  1320  00026E  0102               	movlb	2	; () banked
  1321  000270  0E04               	movlw	low main@msgbuffer
  1322  000272  0101               	movlb	1	; () banked
  1323  000274  0101               	movlb	1	; () banked
  1324  000276  6FA2               	movwf	i2c_master_send@msg& (0+255),b
  1325  000278  0102               	movlb	2	; () banked
  1326  00027A  0102               	movlb	2	; () banked
  1327  00027C  5124               	movf	main@length& (0+255),w,b
  1328  00027E  EC44  F003         	call	_i2c_master_send
  1329                           
  1330                           ;main.c: 398: break;
  1331  000282  D013               	goto	l3504
  1332  000284                     l158:
  1333                           
  1334                           ; BSR set to: 2
  1335                           ;main.c: 401: {
  1336                           ;main.c: 404: last_reg_recvd = msgbuffer[0];
  1337  000284  C204  F200         	movff	main@msgbuffer,main@last_reg_recvd
  1338                           
  1339                           ;main.c: 405: break;
  1340  000288  D010               	goto	l3504
  1341  00028A                     l3502:
  1342                           
  1343                           ; BSR set to: 2
  1344  00028A  0102               	movlb	2	; () banked
  1345  00028C  0102               	movlb	2	; () banked
  1346  00028E  5123               	movf	main@msgtype& (0+255),w,b
  1347                           
  1348                           ; Switch size 1, requested type "space"
  1349                           ; Number of cases is 5, Range of values is 10 to 42
  1350                           ; switch strategies available:
  1351                           ; Name         Instructions Cycles
  1352                           ; simple_byte           16     9 (average)
  1353                           ;	Chosen strategy is simple_byte
  1354  000290  0A0A               	xorlw	10	; case 10
  1355  000292  B4D8               	btfsc	status,2,c
  1356  000294  D7BE               	goto	l3496
  1357  000296  0A2D               	xorlw	45	; case 39
  1358  000298  B4D8               	btfsc	status,2,c
  1359  00029A  D007               	goto	l3504
  1360  00029C  0A0F               	xorlw	15	; case 40
  1361  00029E  B4D8               	btfsc	status,2,c
  1362  0002A0  D7E1               	goto	l3498
  1363  0002A2  0A01               	xorlw	1	; case 41
  1364  0002A4  B4D8               	btfsc	status,2,c
  1365  0002A6  D7EE               	goto	l158
  1366  0002A8  0A03               	xorlw	3	; case 42
  1367  0002AA                     l3504:
  1368                           
  1369                           ;main.c: 425: }
  1370                           ;main.c: 428: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1371  0002AA  0102               	movlb	2	; () banked
  1372  0002AC  0E02               	movlw	high main@msgtype
  1373  0002AE  0101               	movlb	1	; () banked
  1374  0002B0  0101               	movlb	1	; () banked
  1375  0002B2  6FBB               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1376  0002B4  0102               	movlb	2	; () banked
  1377  0002B6  0E23               	movlw	low main@msgtype
  1378  0002B8  0101               	movlb	1	; () banked
  1379  0002BA  0101               	movlb	1	; () banked
  1380  0002BC  6FBA               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1381  0002BE  0102               	movlb	2	; () banked
  1382  0002C0  0E02               	movlw	high main@msgbuffer
  1383  0002C2  0101               	movlb	1	; () banked
  1384  0002C4  0101               	movlb	1	; () banked
  1385  0002C6  6FBD               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1386  0002C8  0102               	movlb	2	; () banked
  1387  0002CA  0E04               	movlw	low main@msgbuffer
  1388  0002CC  0101               	movlb	1	; () banked
  1389  0002CE  0101               	movlb	1	; () banked
  1390  0002D0  6FBC               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1391  0002D2  0E0A               	movlw	10
  1392  0002D4  ECFF  F00B         	call	_ToMainLow_recvmsg
  1393  0002D8  0102               	movlb	2	; () banked
  1394  0002DA  0102               	movlb	2	; () banked
  1395  0002DC  6F24               	movwf	main@length& (0+255),b
  1396                           
  1397                           ; BSR set to: 2
  1398                           ;main.c: 429: if (length < 0) {
  1399  0002DE  0102               	movlb	2	; () banked
  1400  0002E0  0102               	movlb	2	; () banked
  1401  0002E2  BF24               	btfsc	main@length& (0+255),7,b
  1402  0002E4  D775               	goto	l3488
  1403  0002E6  D0A4               	goto	l3520
  1404  0002E8                     l3510:
  1405                           
  1406                           ; BSR set to: 2
  1407                           ;main.c: 437: {
  1408                           ;main.c: 438: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1409  0002E8  0102               	movlb	2	; () banked
  1410  0002EA  0E02               	movlw	high main@t1thread_data
  1411  0002EC  0101               	movlb	1	; () banked
  1412  0002EE  0101               	movlb	1	; () banked
  1413  0002F0  6FBD               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1414  0002F2  0102               	movlb	2	; () banked
  1415  0002F4  0E13               	movlw	low main@t1thread_data
  1416  0002F6  0101               	movlb	1	; () banked
  1417  0002F8  0101               	movlb	1	; () banked
  1418  0002FA  6FBC               	movwf	timer1_lthread@tptr& (0+255),b
  1419  0002FC  0102               	movlb	2	; () banked
  1420  0002FE  0101               	movlb	1	; () banked
  1421  000300  C223  F1BE         	movff	main@msgtype,timer1_lthread@msgtype
  1422  000304  0101               	movlb	1	; () banked
  1423  000306  0101               	movlb	1	; () banked
  1424  000308  6BBF               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1425  00030A  0102               	movlb	2	; () banked
  1426  00030C  0102               	movlb	2	; () banked
  1427  00030E  5124               	movf	main@length& (0+255),w,b
  1428  000310  0101               	movlb	1	; () banked
  1429  000312  0101               	movlb	1	; () banked
  1430  000314  6FC0               	movwf	timer1_lthread@length& (0+255),b
  1431  000316  0101               	movlb	1	; () banked
  1432  000318  6BC1               	clrf	(timer1_lthread@length+1)& (0+255),b
  1433  00031A  0101               	movlb	1	; () banked
  1434  00031C  BFC0               	btfsc	timer1_lthread@length& (0+255),7,b
  1435  00031E  07C1               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1436  000320  0102               	movlb	2	; () banked
  1437  000322  0E02               	movlw	high main@msgbuffer
  1438  000324  0101               	movlb	1	; () banked
  1439  000326  0101               	movlb	1	; () banked
  1440  000328  6FC3               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1441  00032A  0102               	movlb	2	; () banked
  1442  00032C  0E04               	movlw	low main@msgbuffer
  1443  00032E  0101               	movlb	1	; () banked
  1444  000330  0101               	movlb	1	; () banked
  1445  000332  6FC2               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1446  000334  EC14  F00A         	call	_timer1_lthread	;wreg free
  1447                           
  1448                           ;main.c: 439: break;
  1449  000338  D74B               	goto	l3488
  1450  00033A                     l3512:
  1451                           
  1452                           ;main.c: 442: {
  1453                           ;main.c: 443: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1454  00033A  0102               	movlb	2	; () banked
  1455  00033C  0E02               	movlw	high main@uthread_data
  1456  00033E  0101               	movlb	1	; () banked
  1457  000340  0101               	movlb	1	; () banked
  1458  000342  6FBD               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1459  000344  0102               	movlb	2	; () banked
  1460  000346  0E11               	movlw	low main@uthread_data
  1461  000348  0101               	movlb	1	; () banked
  1462  00034A  0101               	movlb	1	; () banked
  1463  00034C  6FBC               	movwf	uart_lthread@uptr& (0+255),b
  1464  00034E  0102               	movlb	2	; () banked
  1465  000350  0101               	movlb	1	; () banked
  1466  000352  C223  F1BE         	movff	main@msgtype,uart_lthread@msgtype
  1467  000356  0101               	movlb	1	; () banked
  1468  000358  0101               	movlb	1	; () banked
  1469  00035A  6BBF               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1470  00035C  0102               	movlb	2	; () banked
  1471  00035E  0102               	movlb	2	; () banked
  1472  000360  5124               	movf	main@length& (0+255),w,b
  1473  000362  0101               	movlb	1	; () banked
  1474  000364  0101               	movlb	1	; () banked
  1475  000366  6FC0               	movwf	uart_lthread@length& (0+255),b
  1476  000368  0101               	movlb	1	; () banked
  1477  00036A  6BC1               	clrf	(uart_lthread@length+1)& (0+255),b
  1478  00036C  0101               	movlb	1	; () banked
  1479  00036E  BFC0               	btfsc	uart_lthread@length& (0+255),7,b
  1480  000370  07C1               	decf	(uart_lthread@length+1)& (0+255),f,b
  1481  000372  0102               	movlb	2	; () banked
  1482  000374  0E02               	movlw	high main@msgbuffer
  1483  000376  0101               	movlb	1	; () banked
  1484  000378  0101               	movlb	1	; () banked
  1485  00037A  6FC3               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1486  00037C  0102               	movlb	2	; () banked
  1487  00037E  0E04               	movlw	low main@msgbuffer
  1488  000380  0101               	movlb	1	; () banked
  1489  000382  0101               	movlb	1	; () banked
  1490  000384  6FC2               	movwf	uart_lthread@msgbuffer& (0+255),b
  1491  000386  ECD9  F009         	call	_uart_lthread	;wreg free
  1492                           
  1493                           ;main.c: 444: break;
  1494  00038A  D722               	goto	l3488
  1495  00038C                     l3514:
  1496                           
  1497                           ;main.c: 447: {
  1498                           ;main.c: 448: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1499  00038C  0102               	movlb	2	; () banked
  1500  00038E  0E02               	movlw	high main@uthread_data
  1501  000390  0101               	movlb	1	; () banked
  1502  000392  0101               	movlb	1	; () banked
  1503  000394  6FBD               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1504  000396  0102               	movlb	2	; () banked
  1505  000398  0E11               	movlw	low main@uthread_data
  1506  00039A  0101               	movlb	1	; () banked
  1507  00039C  0101               	movlb	1	; () banked
  1508  00039E  6FBC               	movwf	uart_lthread@uptr& (0+255),b
  1509  0003A0  0102               	movlb	2	; () banked
  1510  0003A2  0101               	movlb	1	; () banked
  1511  0003A4  C223  F1BE         	movff	main@msgtype,uart_lthread@msgtype
  1512  0003A8  0101               	movlb	1	; () banked
  1513  0003AA  0101               	movlb	1	; () banked
  1514  0003AC  6BBF               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1515  0003AE  0102               	movlb	2	; () banked
  1516  0003B0  0102               	movlb	2	; () banked
  1517  0003B2  5124               	movf	main@length& (0+255),w,b
  1518  0003B4  0101               	movlb	1	; () banked
  1519  0003B6  0101               	movlb	1	; () banked
  1520  0003B8  6FC0               	movwf	uart_lthread@length& (0+255),b
  1521  0003BA  0101               	movlb	1	; () banked
  1522  0003BC  6BC1               	clrf	(uart_lthread@length+1)& (0+255),b
  1523  0003BE  0101               	movlb	1	; () banked
  1524  0003C0  BFC0               	btfsc	uart_lthread@length& (0+255),7,b
  1525  0003C2  07C1               	decf	(uart_lthread@length+1)& (0+255),f,b
  1526  0003C4  0102               	movlb	2	; () banked
  1527  0003C6  0E02               	movlw	high main@msgbuffer
  1528  0003C8  0101               	movlb	1	; () banked
  1529  0003CA  0101               	movlb	1	; () banked
  1530  0003CC  6FC3               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1531  0003CE  0102               	movlb	2	; () banked
  1532  0003D0  0E04               	movlw	low main@msgbuffer
  1533  0003D2  0101               	movlb	1	; () banked
  1534  0003D4  0101               	movlb	1	; () banked
  1535  0003D6  6FC2               	movwf	uart_lthread@msgbuffer& (0+255),b
  1536  0003D8  ECD9  F009         	call	_uart_lthread	;wreg free
  1537                           
  1538                           ;main.c: 449: break;
  1539  0003DC  D6F9               	goto	l3488
  1540  0003DE                     l3516:
  1541                           
  1542                           ;main.c: 452: {
  1543                           ;main.c: 454: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1544  0003DE  0102               	movlb	2	; () banked
  1545  0003E0  0E02               	movlw	high main@uthread_data
  1546  0003E2  0101               	movlb	1	; () banked
  1547  0003E4  0101               	movlb	1	; () banked
  1548  0003E6  6FBD               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1549  0003E8  0102               	movlb	2	; () banked
  1550  0003EA  0E11               	movlw	low main@uthread_data
  1551  0003EC  0101               	movlb	1	; () banked
  1552  0003EE  0101               	movlb	1	; () banked
  1553  0003F0  6FBC               	movwf	uart_lthread@uptr& (0+255),b
  1554  0003F2  0102               	movlb	2	; () banked
  1555  0003F4  0101               	movlb	1	; () banked
  1556  0003F6  C223  F1BE         	movff	main@msgtype,uart_lthread@msgtype
  1557  0003FA  0101               	movlb	1	; () banked
  1558  0003FC  0101               	movlb	1	; () banked
  1559  0003FE  6BBF               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1560  000400  0102               	movlb	2	; () banked
  1561  000402  0102               	movlb	2	; () banked
  1562  000404  5124               	movf	main@length& (0+255),w,b
  1563  000406  0101               	movlb	1	; () banked
  1564  000408  0101               	movlb	1	; () banked
  1565  00040A  6FC0               	movwf	uart_lthread@length& (0+255),b
  1566  00040C  0101               	movlb	1	; () banked
  1567  00040E  6BC1               	clrf	(uart_lthread@length+1)& (0+255),b
  1568  000410  0101               	movlb	1	; () banked
  1569  000412  BFC0               	btfsc	uart_lthread@length& (0+255),7,b
  1570  000414  07C1               	decf	(uart_lthread@length+1)& (0+255),f,b
  1571  000416  0102               	movlb	2	; () banked
  1572  000418  0E02               	movlw	high main@msgbuffer
  1573  00041A  0101               	movlb	1	; () banked
  1574  00041C  0101               	movlb	1	; () banked
  1575  00041E  6FC3               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1576  000420  0102               	movlb	2	; () banked
  1577  000422  0E04               	movlw	low main@msgbuffer
  1578  000424  0101               	movlb	1	; () banked
  1579  000426  0101               	movlb	1	; () banked
  1580  000428  6FC2               	movwf	uart_lthread@msgbuffer& (0+255),b
  1581  00042A  ECD9  F009         	call	_uart_lthread	;wreg free
  1582                           
  1583                           ;main.c: 455: break;
  1584  00042E  D6D0               	goto	l3488
  1585  000430                     l3520:
  1586  000430  0102               	movlb	2	; () banked
  1587  000432  0102               	movlb	2	; () banked
  1588  000434  5123               	movf	main@msgtype& (0+255),w,b
  1589                           
  1590                           ; Switch size 1, requested type "space"
  1591                           ; Number of cases is 4, Range of values is 11 to 33
  1592                           ; switch strategies available:
  1593                           ; Name         Instructions Cycles
  1594                           ; simple_byte           13     7 (average)
  1595                           ;	Chosen strategy is simple_byte
  1596  000436  0A0B               	xorlw	11	; case 11
  1597  000438  B4D8               	btfsc	status,2,c
  1598  00043A  D756               	goto	l3510
  1599  00043C  0A15               	xorlw	21	; case 30
  1600  00043E  B4D8               	btfsc	status,2,c
  1601  000440  D77C               	goto	l3512
  1602  000442  0A3E               	xorlw	62	; case 32
  1603  000444  B4D8               	btfsc	status,2,c
  1604  000446  D7A2               	goto	l3514
  1605  000448  0A01               	xorlw	1	; case 33
  1606  00044A  B4D8               	btfsc	status,2,c
  1607  00044C  D7C8               	goto	l3516
  1608  00044E  D6C0               	goto	l3488
  1609  000450                     __end_of_main:
  1610                           	opt stack 0
  1611                           tblptru	equ	0xFF8
  1612                           tblptrh	equ	0xFF7
  1613                           tblptrl	equ	0xFF6
  1614                           tablat	equ	0xFF5
  1615                           postinc0	equ	0xFEE
  1616                           wreg	equ	0xFE8
  1617                           status	equ	0xFD8
  1618                           
  1619 ;; *************** function _uart_lthread *****************
  1620 ;; Defined at:
  1621 ;;		line 12 in file "../src/uart_thread.c"
  1622 ;; Parameters:    Size  Location     Type
  1623 ;;  uptr            2   26[BANK1 ] PTR struct __uart_thread
  1624 ;;		 -> main@uthread_data(2), 
  1625 ;;  msgtype         2   28[BANK1 ] int 
  1626 ;;  length          2   30[BANK1 ] int 
  1627 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1628 ;;		 -> main@msgbuffer(11), 
  1629 ;; Auto vars:     Size  Location     Type
  1630 ;;		None
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  2   26[BANK1 ] int 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1640 ;;      Params:         0       0       8       0       0
  1641 ;;      Locals:         0       0       0       0       0
  1642 ;;      Temps:          0       0       1       0       0
  1643 ;;      Totals:         0       0       9       0       0
  1644 ;;Total ram usage:        9 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:   13
  1647 ;; This function calls:
  1648 ;;		_ToMainHigh_sendmsg
  1649 ;;		_uart_retrieve_buffer
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           	psect	text1
  1656  0013B2                     __ptext1:
  1657                           	opt stack 0
  1658  0013B2                     _uart_lthread:
  1659                           	opt stack 17
  1660                           
  1661                           ;uart_thread.c: 13: if (msgtype == 30) {
  1662                           
  1663                           ; BSR set to: 2
  1664                           ;incstack = 0
  1665  0013B2  0101               	movlb	1	; () banked
  1666  0013B4  0101               	movlb	1	; () banked
  1667  0013B6  51BE               	movf	uart_lthread@msgtype& (0+255),w,b
  1668  0013B8  0A1E               	xorlw	30
  1669  0013BA  11BF               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1670  0013BC  B4D8               	btfsc	status,2,c
  1671  0013BE  0012               	return	
  1672                           
  1673                           ; BSR set to: 1
  1674                           
  1675                           ; BSR set to: 1
  1676                           
  1677                           ; BSR set to: 1
  1678                           ;uart_thread.c: 15: } else if (msgtype == 32) {
  1679  0013C0  0101               	movlb	1	; () banked
  1680  0013C2  0101               	movlb	1	; () banked
  1681  0013C4  51BE               	movf	uart_lthread@msgtype& (0+255),w,b
  1682  0013C6  0A20               	xorlw	32
  1683  0013C8  11BF               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1684  0013CA  A4D8               	btfss	status,2,c
  1685  0013CC  D010               	goto	l3736
  1686                           
  1687                           ; BSR set to: 1
  1688                           ;uart_thread.c: 17: uart_retrieve_buffer(length, msgbuffer);
  1689  0013CE  C1C0  F1A2         	movff	uart_lthread@length,uart_retrieve_buffer@length
  1690  0013D2  C1C1  F1A3         	movff	uart_lthread@length+1,uart_retrieve_buffer@length+1
  1691  0013D6  0101               	movlb	1	; () banked
  1692  0013D8  0101               	movlb	1	; () banked
  1693  0013DA  C1C3  F1A5         	movff	uart_lthread@msgbuffer+1,uart_retrieve_buffer@msgbuffer+1
  1694  0013DE  0101               	movlb	1	; () banked
  1695  0013E0  0101               	movlb	1	; () banked
  1696  0013E2  C1C2  F1A4         	movff	uart_lthread@msgbuffer,uart_retrieve_buffer@msgbuffer
  1697  0013E6  ECB0  F007         	call	_uart_retrieve_buffer	;wreg free
  1698                           
  1699                           ;uart_thread.c: 19: PIE1bits.TX1IE = 0x1;
  1700  0013EA  889D               	bsf	3997,4,c	;volatile
  1701                           
  1702                           ;uart_thread.c: 20: } else if (msgtype == 33) {
  1703  0013EC  0012               	return	
  1704  0013EE                     l3736:
  1705  0013EE  0101               	movlb	1	; () banked
  1706  0013F0  0101               	movlb	1	; () banked
  1707  0013F2  51BE               	movf	uart_lthread@msgtype& (0+255),w,b
  1708  0013F4  0A21               	xorlw	33
  1709  0013F6  11BF               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1710  0013F8  A4D8               	btfss	status,2,c
  1711  0013FA  0012               	return	
  1712                           
  1713                           ; BSR set to: 1
  1714                           ;uart_thread.c: 21: ToMainHigh_sendmsg(length, 40, (void*) msgbuffer);
  1715  0013FC  0101               	movlb	1	; () banked
  1716  0013FE  6FC4               	movwf	??_uart_lthread& (0+255),b
  1717  001400  0E28               	movlw	40
  1718  001402  0101               	movlb	1	; () banked
  1719  001404  0101               	movlb	1	; () banked
  1720  001406  6FB8               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  1721  001408  0101               	movlb	1	; () banked
  1722  00140A  51C4               	movf	??_uart_lthread& (0+255),w,b
  1723  00140C  0101               	movlb	1	; () banked
  1724  00140E  0101               	movlb	1	; () banked
  1725  001410  C1C3  F1BA         	movff	uart_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  1726  001414  0101               	movlb	1	; () banked
  1727  001416  0101               	movlb	1	; () banked
  1728  001418  C1C2  F1B9         	movff	uart_lthread@msgbuffer,ToMainHigh_sendmsg@data
  1729  00141C  0101               	movlb	1	; () banked
  1730  00141E  0101               	movlb	1	; () banked
  1731  001420  51C0               	movf	uart_lthread@length& (0+255),w,b
  1732  001422  ECBC  F00C         	call	_ToMainHigh_sendmsg
  1733  001426  0012               	return	
  1734  001428                     __end_of_uart_lthread:
  1735                           	opt stack 0
  1736                           tblptru	equ	0xFF8
  1737                           tblptrh	equ	0xFF7
  1738                           tblptrl	equ	0xFF6
  1739                           tablat	equ	0xFF5
  1740                           postinc0	equ	0xFEE
  1741                           wreg	equ	0xFE8
  1742                           status	equ	0xFD8
  1743                           
  1744 ;; *************** function _uart_retrieve_buffer *****************
  1745 ;; Defined at:
  1746 ;;		line 88 in file "../src/my_uart.c"
  1747 ;; Parameters:    Size  Location     Type
  1748 ;;  length          2    0[BANK1 ] int 
  1749 ;;  msgbuffer       2    2[BANK1 ] PTR unsigned char 
  1750 ;;		 -> main@msgbuffer(11), 
  1751 ;; Auto vars:     Size  Location     Type
  1752 ;;  i               2    7[BANK1 ] int 
  1753 ;; Return value:  Size  Location     Type
  1754 ;;		None               void
  1755 ;; Registers used:
  1756 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  1757 ;; Tracked objects:
  1758 ;;		On entry : 0/0
  1759 ;;		On exit  : 0/0
  1760 ;;		Unchanged: 0/0
  1761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1762 ;;      Params:         0       0       4       0       0
  1763 ;;      Locals:         0       0       2       0       0
  1764 ;;      Temps:          0       0       3       0       0
  1765 ;;      Totals:         0       0       9       0       0
  1766 ;;Total ram usage:        9 bytes
  1767 ;; Hardware stack levels used:    1
  1768 ;; Hardware stack levels required when called:   10
  1769 ;; This function calls:
  1770 ;;		Nothing
  1771 ;; This function is called by:
  1772 ;;		_uart_lthread
  1773 ;; This function uses a non-reentrant model
  1774 ;;
  1775                           
  1776                           	psect	text2
  1777  000F60                     __ptext2:
  1778                           	opt stack 0
  1779  000F60                     _uart_retrieve_buffer:
  1780                           	opt stack 19
  1781                           
  1782                           ;my_uart.c: 90: int i = 0;
  1783                           
  1784                           ;incstack = 0
  1785  000F60  0E00               	movlw	0
  1786  000F62  0101               	movlb	1	; () banked
  1787  000F64  0101               	movlb	1	; () banked
  1788  000F66  6FAA               	movwf	(uart_retrieve_buffer@i+1)& (0+255),b
  1789  000F68  0E00               	movlw	0
  1790  000F6A  0101               	movlb	1	; () banked
  1791  000F6C  6FA9               	movwf	uart_retrieve_buffer@i& (0+255),b
  1792                           
  1793                           ;my_uart.c: 91: for (; i < length + 1; i++) {
  1794  000F6E  D02D               	goto	l4020
  1795  000F70                     l4014:
  1796                           
  1797                           ; BSR set to: 1
  1798                           ;my_uart.c: 92: uc_ptr->Tx_buffer[uc_ptr->Tx_buflen++] = msgbuffer[i];
  1799  000F70  0101               	movlb	1	; () banked
  1800  000F72  0101               	movlb	1	; () banked
  1801  000F74  51A9               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1802  000F76  0101               	movlb	1	; () banked
  1803  000F78  0101               	movlb	1	; () banked
  1804  000F7A  25A4               	addwf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1805  000F7C  6ED9               	movwf	fsr2l,c
  1806  000F7E  0101               	movlb	1	; () banked
  1807  000F80  0101               	movlb	1	; () banked
  1808  000F82  51AA               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1809  000F84  0101               	movlb	1	; () banked
  1810  000F86  0101               	movlb	1	; () banked
  1811  000F88  21A5               	addwfc	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1812  000F8A  6EDA               	movwf	fsr2h,c
  1813  000F8C  EE10 F00C          	lfsr	1,12
  1814  000F90  505C               	movf	_uc_ptr,w,c
  1815  000F92  26E1               	addwf	fsr1l,f,c
  1816  000F94  505D               	movf	_uc_ptr+1,w,c
  1817  000F96  22E2               	addwfc	fsr1h,f,c
  1818  000F98  50E7               	movf	indf1,w,c
  1819  000F9A  0101               	movlb	1	; () banked
  1820  000F9C  6FA6               	movwf	??_uart_retrieve_buffer& (0+255),b
  1821  000F9E  0101               	movlb	1	; () banked
  1822  000FA0  51A6               	movf	??_uart_retrieve_buffer& (0+255),w,b
  1823  000FA2  0D01               	mullw	1
  1824  000FA4  50F3               	movf	prodl,w,c
  1825  000FA6  245C               	addwf	_uc_ptr,w,c
  1826  000FA8  6EE1               	movwf	fsr1l,c
  1827  000FAA  50F4               	movf	prodh,w,c
  1828  000FAC  205D               	addwfc	_uc_ptr+1,w,c
  1829  000FAE  6EE2               	movwf	fsr1h,c
  1830  000FB0  CFDF FFE7          	movff	indf2,indf1
  1831                           
  1832                           ; BSR set to: 1
  1833  000FB4  EE20 F00C          	lfsr	2,12
  1834  000FB8  505C               	movf	_uc_ptr,w,c
  1835  000FBA  26D9               	addwf	fsr2l,f,c
  1836  000FBC  505D               	movf	_uc_ptr+1,w,c
  1837  000FBE  22DA               	addwfc	fsr2h,f,c
  1838  000FC0  2ADF               	incf	indf2,f,c
  1839                           
  1840                           ; BSR set to: 1
  1841  000FC2  0101               	movlb	1	; () banked
  1842  000FC4  0101               	movlb	1	; () banked
  1843  000FC6  4BA9               	infsnz	uart_retrieve_buffer@i& (0+255),f,b
  1844  000FC8  2BAA               	incf	(uart_retrieve_buffer@i+1)& (0+255),f,b
  1845  000FCA                     l4020:
  1846                           
  1847                           ; BSR set to: 1
  1848  000FCA  0E01               	movlw	1
  1849  000FCC  0101               	movlb	1	; () banked
  1850  000FCE  0101               	movlb	1	; () banked
  1851  000FD0  25A2               	addwf	uart_retrieve_buffer@length& (0+255),w,b
  1852  000FD2  0101               	movlb	1	; () banked
  1853  000FD4  6FA6               	movwf	??_uart_retrieve_buffer& (0+255),b
  1854  000FD6  0E00               	movlw	0
  1855  000FD8  0101               	movlb	1	; () banked
  1856  000FDA  0101               	movlb	1	; () banked
  1857  000FDC  21A3               	addwfc	(uart_retrieve_buffer@length+1)& (0+255),w,b
  1858  000FDE  0101               	movlb	1	; () banked
  1859  000FE0  6FA7               	movwf	(??_uart_retrieve_buffer+1)& (0+255),b
  1860  000FE2  0101               	movlb	1	; () banked
  1861  000FE4  0101               	movlb	1	; () banked
  1862  000FE6  51AA               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1863  000FE8  0A80               	xorlw	128
  1864  000FEA  0101               	movlb	1	; () banked
  1865  000FEC  6FA8               	movwf	(??_uart_retrieve_buffer+2)& (0+255),b
  1866  000FEE  51A6               	movf	??_uart_retrieve_buffer& (0+255),w,b
  1867  000FF0  0101               	movlb	1	; () banked
  1868  000FF2  0101               	movlb	1	; () banked
  1869  000FF4  5DA9               	subwf	uart_retrieve_buffer@i& (0+255),w,b
  1870  000FF6  0101               	movlb	1	; () banked
  1871  000FF8  51A7               	movf	(??_uart_retrieve_buffer+1)& (0+255),w,b
  1872  000FFA  0A80               	xorlw	128
  1873  000FFC  0101               	movlb	1	; () banked
  1874  000FFE  59A8               	subwfb	(??_uart_retrieve_buffer+2)& (0+255),w,b
  1875  001000  B0D8               	btfsc	status,0,c
  1876                           
  1877                           ; BSR set to: 1
  1878                           
  1879                           ; BSR set to: 1
  1880  001002  0012               	return	
  1881  001004  D7B5               	goto	l4014
  1882  001006                     __end_of_uart_retrieve_buffer:
  1883                           	opt stack 0
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           prodh	equ	0xFF4
  1889                           prodl	equ	0xFF3
  1890                           postinc0	equ	0xFEE
  1891                           wreg	equ	0xFE8
  1892                           indf1	equ	0xFE7
  1893                           fsr1h	equ	0xFE2
  1894                           fsr1l	equ	0xFE1
  1895                           indf2	equ	0xFDF
  1896                           fsr2h	equ	0xFDA
  1897                           fsr2l	equ	0xFD9
  1898                           status	equ	0xFD8
  1899                           
  1900 ;; *************** function _ToMainHigh_sendmsg *****************
  1901 ;; Defined at:
  1902 ;;		line 126 in file "../src/messages.c"
  1903 ;; Parameters:    Size  Location     Type
  1904 ;;  length          1    wreg     unsigned char 
  1905 ;;  msgtype         1   22[BANK1 ] unsigned char 
  1906 ;;  data            2   23[BANK1 ] PTR void 
  1907 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  length          1   25[BANK1 ] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  1    wreg      char 
  1912 ;; Registers used:
  1913 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1919 ;;      Params:         0       0       3       0       0
  1920 ;;      Locals:         0       0       1       0       0
  1921 ;;      Temps:          0       0       0       0       0
  1922 ;;      Totals:         0       0       4       0       0
  1923 ;;Total ram usage:        4 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:   12
  1926 ;; This function calls:
  1927 ;;		_send_msg
  1928 ;; This function is called by:
  1929 ;;		_uart_lthread
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text3
  1934  001978                     __ptext3:
  1935                           	opt stack 0
  1936  001978                     _ToMainHigh_sendmsg:
  1937                           	opt stack 17
  1938                           
  1939                           ; BSR set to: 1
  1940                           ;incstack = 0
  1941                           ;ToMainHigh_sendmsg@length stored from wreg
  1942  001978  CFE8 F1BB          	movff	wreg,ToMainHigh_sendmsg@length
  1943                           
  1944                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  1945                           ;	Return value of _ToMainHigh_sendmsg is never used
  1946  00197C  0101               	movlb	1	; () banked
  1947  00197E  0E01               	movlw	high _ToMainHigh_MQ
  1948  001980  0101               	movlb	1	; () banked
  1949  001982  0101               	movlb	1	; () banked
  1950  001984  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  1951  001986  0101               	movlb	1	; () banked
  1952  001988  0E36               	movlw	low _ToMainHigh_MQ
  1953  00198A  0101               	movlb	1	; () banked
  1954  00198C  0101               	movlb	1	; () banked
  1955  00198E  6FAC               	movwf	send_msg@qptr& (0+255),b
  1956  001990  C1BB  F1AE         	movff	ToMainHigh_sendmsg@length,send_msg@length
  1957  001994  C1B8  F1AF         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  1958  001998  0101               	movlb	1	; () banked
  1959  00199A  0101               	movlb	1	; () banked
  1960  00199C  C1BA  F1B1         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  1961  0019A0  0101               	movlb	1	; () banked
  1962  0019A2  0101               	movlb	1	; () banked
  1963  0019A4  C1B9  F1B0         	movff	ToMainHigh_sendmsg@data,send_msg@data
  1964  0019A8  EC03  F006         	call	_send_msg	;wreg free
  1965  0019AC  0012               	return	
  1966  0019AE                     __end_of_ToMainHigh_sendmsg:
  1967                           	opt stack 0
  1968                           tblptru	equ	0xFF8
  1969                           tblptrh	equ	0xFF7
  1970                           tblptrl	equ	0xFF6
  1971                           tablat	equ	0xFF5
  1972                           prodh	equ	0xFF4
  1973                           prodl	equ	0xFF3
  1974                           postinc0	equ	0xFEE
  1975                           wreg	equ	0xFE8
  1976                           indf1	equ	0xFE7
  1977                           fsr1h	equ	0xFE2
  1978                           fsr1l	equ	0xFE1
  1979                           indf2	equ	0xFDF
  1980                           fsr2h	equ	0xFDA
  1981                           fsr2l	equ	0xFD9
  1982                           status	equ	0xFD8
  1983                           
  1984 ;; *************** function _timer1_lthread *****************
  1985 ;; Defined at:
  1986 ;;		line 14 in file "../src/timer1_thread.c"
  1987 ;; Parameters:    Size  Location     Type
  1988 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1989 ;;		 -> main@t1thread_data(2), 
  1990 ;;  msgtype         2   28[BANK1 ] int 
  1991 ;;  length          2   30[BANK1 ] int 
  1992 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1993 ;;		 -> main@msgbuffer(11), 
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;  retval          1   35[BANK1 ] char 
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  2   26[BANK1 ] int 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2005 ;;      Params:         0       0       8       0       0
  2006 ;;      Locals:         0       0       1       0       0
  2007 ;;      Temps:          0       0       1       0       0
  2008 ;;      Totals:         0       0      10       0       0
  2009 ;;Total ram usage:       10 bytes
  2010 ;; Hardware stack levels used:    1
  2011 ;; Hardware stack levels required when called:   13
  2012 ;; This function calls:
  2013 ;;		_FromMainHigh_sendmsg
  2014 ;;		___lwmod
  2015 ;; This function is called by:
  2016 ;;		_main
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020                           	psect	text4
  2021  001428                     __ptext4:
  2022                           	opt stack 0
  2023  001428                     _timer1_lthread:
  2024                           	opt stack 17
  2025                           
  2026                           ;timer1_thread.c: 15: signed char retval;
  2027                           ;timer1_thread.c: 17: tptr->msgcount++;
  2028                           
  2029                           ;incstack = 0
  2030  001428  C1BC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2031  00142C  C1BD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2032  001430  2ADE               	incf	postinc2,f,c
  2033  001432  0E00               	movlw	0
  2034  001434  22DD               	addwfc	postdec2,f,c
  2035                           
  2036                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  2037  001436  C1BC  FFD9         	movff	timer1_lthread@tptr,fsr2l
  2038  00143A  C1BD  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  2039  00143E  0101               	movlb	1	; () banked
  2040  001440  CFDE F1A2          	movff	postinc2,___lwmod@dividend
  2041  001444  0101               	movlb	1	; () banked
  2042  001446  CFDD F1A3          	movff	postdec2,___lwmod@dividend+1
  2043  00144A  0E00               	movlw	0
  2044  00144C  0101               	movlb	1	; () banked
  2045  00144E  0101               	movlb	1	; () banked
  2046  001450  6FA5               	movwf	(___lwmod@divisor+1)& (0+255),b
  2047  001452  0E0A               	movlw	10
  2048  001454  0101               	movlb	1	; () banked
  2049  001456  6FA4               	movwf	___lwmod@divisor& (0+255),b
  2050  001458  EC4C  F008         	call	___lwmod	;wreg free
  2051  00145C  0101               	movlb	1	; () banked
  2052  00145E  0101               	movlb	1	; () banked
  2053  001460  51A2               	movf	?___lwmod& (0+255),w,b
  2054  001462  0A09               	xorlw	9
  2055  001464  0101               	movlb	1	; () banked
  2056  001466  11A3               	iorwf	(?___lwmod+1)& (0+255),w,b
  2057  001468  A4D8               	btfss	status,2,c
  2058  00146A  0012               	return	
  2059                           
  2060                           ; BSR set to: 1
  2061                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  2062  00146C  0101               	movlb	1	; () banked
  2063  00146E  6FC4               	movwf	??_timer1_lthread& (0+255),b
  2064  001470  0E14               	movlw	20
  2065  001472  0101               	movlb	1	; () banked
  2066  001474  0101               	movlb	1	; () banked
  2067  001476  6FB8               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  2068  001478  0101               	movlb	1	; () banked
  2069  00147A  51C4               	movf	??_timer1_lthread& (0+255),w,b
  2070  00147C  0101               	movlb	1	; () banked
  2071  00147E  0101               	movlb	1	; () banked
  2072  001480  C1BD  F1BA         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  2073  001484  0101               	movlb	1	; () banked
  2074  001486  0101               	movlb	1	; () banked
  2075  001488  C1BC  F1B9         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  2076  00148C  0E02               	movlw	2
  2077  00148E  ECD7  F00C         	call	_FromMainHigh_sendmsg
  2078  001492  0101               	movlb	1	; () banked
  2079  001494  0101               	movlb	1	; () banked
  2080  001496  6FC5               	movwf	timer1_lthread@retval& (0+255),b
  2081  001498  0012               	return	
  2082  00149A                     __end_of_timer1_lthread:
  2083                           	opt stack 0
  2084                           tblptru	equ	0xFF8
  2085                           tblptrh	equ	0xFF7
  2086                           tblptrl	equ	0xFF6
  2087                           tablat	equ	0xFF5
  2088                           prodh	equ	0xFF4
  2089                           prodl	equ	0xFF3
  2090                           postinc0	equ	0xFEE
  2091                           wreg	equ	0xFE8
  2092                           indf1	equ	0xFE7
  2093                           fsr1h	equ	0xFE2
  2094                           fsr1l	equ	0xFE1
  2095                           indf2	equ	0xFDF
  2096                           postinc2	equ	0xFDE
  2097                           postdec2	equ	0xFDD
  2098                           fsr2h	equ	0xFDA
  2099                           fsr2l	equ	0xFD9
  2100                           status	equ	0xFD8
  2101                           
  2102 ;; *************** function ___lwmod *****************
  2103 ;; Defined at:
  2104 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  dividend        2    0[BANK1 ] unsigned int 
  2107 ;;  divisor         2    2[BANK1 ] unsigned int 
  2108 ;; Auto vars:     Size  Location     Type
  2109 ;;  counter         1    5[BANK1 ] unsigned char 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  2    0[BANK1 ] unsigned int 
  2112 ;; Registers used:
  2113 ;;		wreg, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2119 ;;      Params:         0       0       4       0       0
  2120 ;;      Locals:         0       0       1       0       0
  2121 ;;      Temps:          0       0       1       0       0
  2122 ;;      Totals:         0       0       6       0       0
  2123 ;;Total ram usage:        6 bytes
  2124 ;; Hardware stack levels used:    1
  2125 ;; Hardware stack levels required when called:   10
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_timer1_lthread
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           	psect	text5
  2134  001098                     __ptext5:
  2135                           	opt stack 0
  2136  001098                     ___lwmod:
  2137                           	opt stack 19
  2138                           
  2139                           ; BSR set to: 1
  2140                           ;incstack = 0
  2141  001098  0101               	movlb	1	; () banked
  2142  00109A  0101               	movlb	1	; () banked
  2143  00109C  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2144  00109E  11A4               	iorwf	___lwmod@divisor& (0+255),w,b
  2145  0010A0  B4D8               	btfsc	status,2,c
  2146  0010A2  D03A               	goto	l1212
  2147                           
  2148                           ; BSR set to: 1
  2149  0010A4  0101               	movlb	1	; () banked
  2150  0010A6  6FA6               	movwf	??___lwmod& (0+255),b
  2151  0010A8  0E01               	movlw	1
  2152  0010AA  0101               	movlb	1	; () banked
  2153  0010AC  0101               	movlb	1	; () banked
  2154  0010AE  6FA7               	movwf	___lwmod@counter& (0+255),b
  2155  0010B0  0101               	movlb	1	; () banked
  2156  0010B2  51A6               	movf	??___lwmod& (0+255),w,b
  2157  0010B4  D009               	goto	l4034
  2158  0010B6                     l4032:
  2159                           
  2160                           ; BSR set to: 1
  2161  0010B6  0101               	movlb	1	; () banked
  2162  0010B8  0101               	movlb	1	; () banked
  2163  0010BA  0101               	movlb	1	; () banked
  2164  0010BC  90D8               	bcf	status,0,c
  2165  0010BE  37A4               	rlcf	___lwmod@divisor& (0+255),f,b
  2166  0010C0  37A5               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  2167  0010C2  0101               	movlb	1	; () banked
  2168  0010C4  0101               	movlb	1	; () banked
  2169  0010C6  2BA7               	incf	___lwmod@counter& (0+255),f,b
  2170  0010C8                     l4034:
  2171                           
  2172                           ; BSR set to: 1
  2173  0010C8  0101               	movlb	1	; () banked
  2174  0010CA  0101               	movlb	1	; () banked
  2175  0010CC  AFA5               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  2176  0010CE  D7F3               	goto	l4032
  2177  0010D0                     l4036:
  2178                           
  2179                           ; BSR set to: 1
  2180  0010D0  0101               	movlb	1	; () banked
  2181  0010D2  0101               	movlb	1	; () banked
  2182  0010D4  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2183  0010D6  0101               	movlb	1	; () banked
  2184  0010D8  0101               	movlb	1	; () banked
  2185  0010DA  5DA2               	subwf	___lwmod@dividend& (0+255),w,b
  2186  0010DC  0101               	movlb	1	; () banked
  2187  0010DE  0101               	movlb	1	; () banked
  2188  0010E0  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2189  0010E2  0101               	movlb	1	; () banked
  2190  0010E4  0101               	movlb	1	; () banked
  2191  0010E6  59A3               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  2192  0010E8  A0D8               	btfss	status,0,c
  2193  0010EA  D00C               	goto	l4040
  2194                           
  2195                           ; BSR set to: 1
  2196  0010EC  0101               	movlb	1	; () banked
  2197  0010EE  0101               	movlb	1	; () banked
  2198  0010F0  51A4               	movf	___lwmod@divisor& (0+255),w,b
  2199  0010F2  0101               	movlb	1	; () banked
  2200  0010F4  0101               	movlb	1	; () banked
  2201  0010F6  5FA2               	subwf	___lwmod@dividend& (0+255),f,b
  2202  0010F8  0101               	movlb	1	; () banked
  2203  0010FA  0101               	movlb	1	; () banked
  2204  0010FC  51A5               	movf	(___lwmod@divisor+1)& (0+255),w,b
  2205  0010FE  0101               	movlb	1	; () banked
  2206  001100  0101               	movlb	1	; () banked
  2207  001102  5BA3               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  2208  001104                     l4040:
  2209                           
  2210                           ; BSR set to: 1
  2211  001104  0101               	movlb	1	; () banked
  2212  001106  0101               	movlb	1	; () banked
  2213  001108  0101               	movlb	1	; () banked
  2214  00110A  90D8               	bcf	status,0,c
  2215  00110C  33A5               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  2216  00110E  33A4               	rrcf	___lwmod@divisor& (0+255),f,b
  2217                           
  2218                           ; BSR set to: 1
  2219  001110  0101               	movlb	1	; () banked
  2220  001112  0101               	movlb	1	; () banked
  2221  001114  2FA7               	decfsz	___lwmod@counter& (0+255),f,b
  2222  001116  D7DC               	goto	l4036
  2223  001118                     l1212:
  2224                           
  2225                           ; BSR set to: 1
  2226  001118  C1A2  F1A2         	movff	___lwmod@dividend,?___lwmod
  2227  00111C  C1A3  F1A3         	movff	___lwmod@dividend+1,?___lwmod+1
  2228                           
  2229                           ; BSR set to: 1
  2230  001120  0012               	return	
  2231  001122                     __end_of___lwmod:
  2232                           	opt stack 0
  2233                           tblptru	equ	0xFF8
  2234                           tblptrh	equ	0xFF7
  2235                           tblptrl	equ	0xFF6
  2236                           tablat	equ	0xFF5
  2237                           prodh	equ	0xFF4
  2238                           prodl	equ	0xFF3
  2239                           postinc0	equ	0xFEE
  2240                           wreg	equ	0xFE8
  2241                           indf1	equ	0xFE7
  2242                           fsr1h	equ	0xFE2
  2243                           fsr1l	equ	0xFE1
  2244                           indf2	equ	0xFDF
  2245                           postinc2	equ	0xFDE
  2246                           postdec2	equ	0xFDD
  2247                           fsr2h	equ	0xFDA
  2248                           fsr2l	equ	0xFD9
  2249                           status	equ	0xFD8
  2250                           
  2251 ;; *************** function _FromMainHigh_sendmsg *****************
  2252 ;; Defined at:
  2253 ;;		line 174 in file "../src/messages.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;  length          1    wreg     unsigned char 
  2256 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2257 ;;  data            2   23[BANK1 ] PTR void 
  2258 ;;		 -> main@t1thread_data(2), 
  2259 ;; Auto vars:     Size  Location     Type
  2260 ;;  length          1   25[BANK1 ] unsigned char 
  2261 ;; Return value:  Size  Location     Type
  2262 ;;                  1    wreg      char 
  2263 ;; Registers used:
  2264 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2265 ;; Tracked objects:
  2266 ;;		On entry : 0/0
  2267 ;;		On exit  : 0/0
  2268 ;;		Unchanged: 0/0
  2269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2270 ;;      Params:         0       0       3       0       0
  2271 ;;      Locals:         0       0       1       0       0
  2272 ;;      Temps:          0       0       0       0       0
  2273 ;;      Totals:         0       0       4       0       0
  2274 ;;Total ram usage:        4 bytes
  2275 ;; Hardware stack levels used:    1
  2276 ;; Hardware stack levels required when called:   12
  2277 ;; This function calls:
  2278 ;;		_send_msg
  2279 ;; This function is called by:
  2280 ;;		_timer1_lthread
  2281 ;; This function uses a non-reentrant model
  2282 ;;
  2283                           
  2284                           	psect	text6
  2285  0019AE                     __ptext6:
  2286                           	opt stack 0
  2287  0019AE                     _FromMainHigh_sendmsg:
  2288                           	opt stack 17
  2289                           
  2290                           ; BSR set to: 1
  2291                           ;incstack = 0
  2292                           ;FromMainHigh_sendmsg@length stored from wreg
  2293  0019AE  CFE8 F1BB          	movff	wreg,FromMainHigh_sendmsg@length
  2294                           
  2295                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2296  0019B2  0102               	movlb	2	; () banked
  2297  0019B4  0E02               	movlw	high _FromMainHigh_MQ
  2298  0019B6  0101               	movlb	1	; () banked
  2299  0019B8  0101               	movlb	1	; () banked
  2300  0019BA  6FAD               	movwf	(send_msg@qptr+1)& (0+255),b
  2301  0019BC  0102               	movlb	2	; () banked
  2302  0019BE  0E45               	movlw	low _FromMainHigh_MQ
  2303  0019C0  0101               	movlb	1	; () banked
  2304  0019C2  0101               	movlb	1	; () banked
  2305  0019C4  6FAC               	movwf	send_msg@qptr& (0+255),b
  2306  0019C6  C1BB  F1AE         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2307  0019CA  C1B8  F1AF         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2308  0019CE  0101               	movlb	1	; () banked
  2309  0019D0  0101               	movlb	1	; () banked
  2310  0019D2  C1BA  F1B1         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2311  0019D6  0101               	movlb	1	; () banked
  2312  0019D8  0101               	movlb	1	; () banked
  2313  0019DA  C1B9  F1B0         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2314  0019DE  EC03  F006         	call	_send_msg	;wreg free
  2315  0019E2  0012               	return	
  2316  0019E4                     __end_of_FromMainHigh_sendmsg:
  2317                           	opt stack 0
  2318                           tblptru	equ	0xFF8
  2319                           tblptrh	equ	0xFF7
  2320                           tblptrl	equ	0xFF6
  2321                           tablat	equ	0xFF5
  2322                           prodh	equ	0xFF4
  2323                           prodl	equ	0xFF3
  2324                           postinc0	equ	0xFEE
  2325                           wreg	equ	0xFE8
  2326                           indf1	equ	0xFE7
  2327                           fsr1h	equ	0xFE2
  2328                           fsr1l	equ	0xFE1
  2329                           indf2	equ	0xFDF
  2330                           postinc2	equ	0xFDE
  2331                           postdec2	equ	0xFDD
  2332                           fsr2h	equ	0xFDA
  2333                           fsr2l	equ	0xFD9
  2334                           status	equ	0xFD8
  2335                           
  2336 ;; *************** function _send_msg *****************
  2337 ;; Defined at:
  2338 ;;		line 24 in file "../src/messages.c"
  2339 ;; Parameters:    Size  Location     Type
  2340 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  2341 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2342 ;;  length          1   12[BANK1 ] unsigned char 
  2343 ;;  msgtype         1   13[BANK1 ] unsigned char 
  2344 ;;  data            2   14[BANK1 ] PTR void 
  2345 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  2346 ;;		 -> main@uc(14), 
  2347 ;; Auto vars:     Size  Location     Type
  2348 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  2349 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  2350 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2351 ;;  tlength         2   17[BANK1 ] unsigned int 
  2352 ;;  slot            1   19[BANK1 ] unsigned char 
  2353 ;; Return value:  Size  Location     Type
  2354 ;;                  1    wreg      char 
  2355 ;; Registers used:
  2356 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2357 ;; Tracked objects:
  2358 ;;		On entry : 0/0
  2359 ;;		On exit  : 0/0
  2360 ;;		Unchanged: 0/0
  2361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2362 ;;      Params:         0       0       6       0       0
  2363 ;;      Locals:         0       0       5       0       0
  2364 ;;      Temps:          0       0       1       0       0
  2365 ;;      Totals:         0       0      12       0       0
  2366 ;;Total ram usage:       12 bytes
  2367 ;; Hardware stack levels used:    1
  2368 ;; Hardware stack levels required when called:   11
  2369 ;; This function calls:
  2370 ;;		_memcpy
  2371 ;; This function is called by:
  2372 ;;		_ToMainHigh_sendmsg
  2373 ;;		_FromMainHigh_sendmsg
  2374 ;;		_FromMainLow_sendmsg
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           	psect	text7
  2379  000C06                     __ptext7:
  2380                           	opt stack 0
  2381  000C06                     _send_msg:
  2382                           	opt stack 17
  2383                           
  2384                           ;messages.c: 25: unsigned char slot;
  2385                           ;messages.c: 27: msg *qmsg;
  2386                           ;messages.c: 28: size_t tlength = length;
  2387                           
  2388                           ;incstack = 0
  2389  000C06  0101               	movlb	1	; () banked
  2390  000C08  0101               	movlb	1	; () banked
  2391  000C0A  C1AE  F1B3         	movff	send_msg@length,send_msg@tlength
  2392  000C0E  0101               	movlb	1	; () banked
  2393  000C10  0101               	movlb	1	; () banked
  2394  000C12  6BB4               	clrf	(send_msg@tlength+1)& (0+255),b
  2395                           
  2396                           ; BSR set to: 1
  2397                           ;messages.c: 38: slot = qptr->cur_write_ind;
  2398  000C14  0101               	movlb	1	; () banked
  2399  000C16  EE20 F034          	lfsr	2,52
  2400  000C1A  0101               	movlb	1	; () banked
  2401  000C1C  51AC               	movf	send_msg@qptr& (0+255),w,b
  2402  000C1E  26D9               	addwf	fsr2l,f,c
  2403  000C20  0101               	movlb	1	; () banked
  2404  000C22  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2405  000C24  22DA               	addwfc	fsr2h,f,c
  2406  000C26  50DF               	movf	indf2,w,c
  2407  000C28  0101               	movlb	1	; () banked
  2408  000C2A  0101               	movlb	1	; () banked
  2409  000C2C  6FB5               	movwf	send_msg@slot& (0+255),b
  2410                           
  2411                           ; BSR set to: 1
  2412                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  2413  000C2E  0101               	movlb	1	; () banked
  2414  000C30  0101               	movlb	1	; () banked
  2415  000C32  51B5               	movf	send_msg@slot& (0+255),w,b
  2416  000C34  0D0D               	mullw	13
  2417  000C36  50F3               	movf	prodl,w,c
  2418  000C38  0101               	movlb	1	; () banked
  2419  000C3A  0101               	movlb	1	; () banked
  2420  000C3C  25AC               	addwf	send_msg@qptr& (0+255),w,b
  2421  000C3E  0101               	movlb	1	; () banked
  2422  000C40  0101               	movlb	1	; () banked
  2423  000C42  6FB6               	movwf	send_msg@qmsg& (0+255),b
  2424  000C44  50F4               	movf	prodh,w,c
  2425  000C46  0101               	movlb	1	; () banked
  2426  000C48  0101               	movlb	1	; () banked
  2427  000C4A  21AD               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  2428  000C4C  0101               	movlb	1	; () banked
  2429  000C4E  6FB7               	movwf	(send_msg@qmsg+1)& (0+255),b
  2430                           
  2431                           ; BSR set to: 1
  2432                           ;messages.c: 41: if (qmsg->full != 0) {
  2433  000C50  C1B6  FFD9         	movff	send_msg@qmsg,fsr2l
  2434  000C54  C1B7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2435  000C58  50DF               	movf	indf2,w,c
  2436  000C5A  B4D8               	btfsc	status,2,c
  2437  000C5C  D002               	goto	l3766
  2438                           
  2439                           ; BSR set to: 1
  2440                           ;messages.c: 42: return (-1);
  2441  000C5E  0EFF               	movlw	255
  2442  000C60  0012               	return	
  2443  000C62                     l3766:
  2444                           
  2445                           ; BSR set to: 1
  2446                           ;messages.c: 43: }
  2447                           ;messages.c: 46: qmsg->length = length;
  2448  000C62  0101               	movlb	1	; () banked
  2449  000C64  EE20 F001          	lfsr	2,1
  2450  000C68  0101               	movlb	1	; () banked
  2451  000C6A  51B6               	movf	send_msg@qmsg& (0+255),w,b
  2452  000C6C  26D9               	addwf	fsr2l,f,c
  2453  000C6E  0101               	movlb	1	; () banked
  2454  000C70  51B7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2455  000C72  22DA               	addwfc	fsr2h,f,c
  2456  000C74  0101               	movlb	1	; () banked
  2457  000C76  C1AE  FFDF         	movff	send_msg@length,indf2
  2458                           
  2459                           ;messages.c: 47: qmsg->msgtype = msgtype;
  2460  000C7A  0101               	movlb	1	; () banked
  2461  000C7C  EE20 F002          	lfsr	2,2
  2462  000C80  0101               	movlb	1	; () banked
  2463  000C82  51B6               	movf	send_msg@qmsg& (0+255),w,b
  2464  000C84  26D9               	addwf	fsr2l,f,c
  2465  000C86  0101               	movlb	1	; () banked
  2466  000C88  51B7               	movf	(send_msg@qmsg+1)& (0+255),w,b
  2467  000C8A  22DA               	addwfc	fsr2h,f,c
  2468  000C8C  0101               	movlb	1	; () banked
  2469  000C8E  C1AF  FFDF         	movff	send_msg@msgtype,indf2
  2470                           
  2471                           ; BSR set to: 1
  2472                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  2473  000C92  0E03               	movlw	3
  2474  000C94  0101               	movlb	1	; () banked
  2475  000C96  0101               	movlb	1	; () banked
  2476  000C98  25B6               	addwf	send_msg@qmsg& (0+255),w,b
  2477  000C9A  0101               	movlb	1	; () banked
  2478  000C9C  0101               	movlb	1	; () banked
  2479  000C9E  6FA2               	movwf	memcpy@d1& (0+255),b
  2480  000CA0  0E00               	movlw	0
  2481  000CA2  0101               	movlb	1	; () banked
  2482  000CA4  0101               	movlb	1	; () banked
  2483  000CA6  21B7               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  2484  000CA8  0101               	movlb	1	; () banked
  2485  000CAA  6FA3               	movwf	(memcpy@d1+1)& (0+255),b
  2486  000CAC  0101               	movlb	1	; () banked
  2487  000CAE  0101               	movlb	1	; () banked
  2488  000CB0  C1B1  F1A5         	movff	send_msg@data+1,memcpy@s1+1
  2489  000CB4  0101               	movlb	1	; () banked
  2490  000CB6  0101               	movlb	1	; () banked
  2491  000CB8  C1B0  F1A4         	movff	send_msg@data,memcpy@s1
  2492  000CBC  C1B3  F1A6         	movff	send_msg@tlength,memcpy@n
  2493  000CC0  C1B4  F1A7         	movff	send_msg@tlength+1,memcpy@n+1
  2494  000CC4  ECEE  F00A         	call	_memcpy	;wreg free
  2495                           
  2496                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  2497  000CC8  0101               	movlb	1	; () banked
  2498  000CCA  EE20 F034          	lfsr	2,52
  2499  000CCE  0101               	movlb	1	; () banked
  2500  000CD0  51AC               	movf	send_msg@qptr& (0+255),w,b
  2501  000CD2  26D9               	addwf	fsr2l,f,c
  2502  000CD4  0101               	movlb	1	; () banked
  2503  000CD6  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2504  000CD8  22DA               	addwfc	fsr2h,f,c
  2505  000CDA  0101               	movlb	1	; () banked
  2506  000CDC  EE10 F034          	lfsr	1,52
  2507  000CE0  0101               	movlb	1	; () banked
  2508  000CE2  51AC               	movf	send_msg@qptr& (0+255),w,b
  2509  000CE4  26E1               	addwf	fsr1l,f,c
  2510  000CE6  0101               	movlb	1	; () banked
  2511  000CE8  51AD               	movf	(send_msg@qptr+1)& (0+255),w,b
  2512  000CEA  22E2               	addwfc	fsr1h,f,c
  2513  000CEC  50E7               	movf	indf1,w,c
  2514  000CEE  0101               	movlb	1	; () banked
  2515  000CF0  6FB2               	movwf	??_send_msg& (0+255),b
  2516  000CF2  0101               	movlb	1	; () banked
  2517  000CF4  29B2               	incf	??_send_msg& (0+255),w,b
  2518  000CF6  0B03               	andlw	3
  2519  000CF8  6EDF               	movwf	indf2,c
  2520                           
  2521                           ; BSR set to: 1
  2522                           ;messages.c: 59: qmsg->full = 1;
  2523  000CFA  C1B6  FFD9         	movff	send_msg@qmsg,fsr2l
  2524  000CFE  C1B7  FFDA         	movff	send_msg@qmsg+1,fsr2h
  2525  000D02  0E01               	movlw	1
  2526  000D04  6EDF               	movwf	indf2,c
  2527                           
  2528                           ; BSR set to: 1
  2529                           ;messages.c: 60: return (1);
  2530  000D06  0E01               	movlw	1
  2531  000D08  0012               	return	
  2532  000D0A                     __end_of_send_msg:
  2533                           	opt stack 0
  2534                           tblptru	equ	0xFF8
  2535                           tblptrh	equ	0xFF7
  2536                           tblptrl	equ	0xFF6
  2537                           tablat	equ	0xFF5
  2538                           prodh	equ	0xFF4
  2539                           prodl	equ	0xFF3
  2540                           postinc0	equ	0xFEE
  2541                           wreg	equ	0xFE8
  2542                           indf1	equ	0xFE7
  2543                           fsr1h	equ	0xFE2
  2544                           fsr1l	equ	0xFE1
  2545                           indf2	equ	0xFDF
  2546                           postinc2	equ	0xFDE
  2547                           postdec2	equ	0xFDD
  2548                           fsr2h	equ	0xFDA
  2549                           fsr2l	equ	0xFD9
  2550                           status	equ	0xFD8
  2551                           
  2552 ;; *************** function _timer0_lthread *****************
  2553 ;; Defined at:
  2554 ;;		line 9 in file "../src/timer0_thread.c"
  2555 ;; Parameters:    Size  Location     Type
  2556 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2557 ;;		 -> main@t0thread_data(2), 
  2558 ;;  msgtype         2    2[BANK1 ] int 
  2559 ;;  length          2    4[BANK1 ] int 
  2560 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2561 ;;		 -> main@msgbuffer(11), 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2564 ;;		 -> main@msgbuffer(11), 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  2    0[BANK1 ] int 
  2567 ;; Registers used:
  2568 ;;		wreg, status,2, status,0
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2574 ;;      Params:         0       0       8       0       0
  2575 ;;      Locals:         0       0       2       0       0
  2576 ;;      Temps:          0       0       0       0       0
  2577 ;;      Totals:         0       0      10       0       0
  2578 ;;Total ram usage:       10 bytes
  2579 ;; Hardware stack levels used:    1
  2580 ;; Hardware stack levels required when called:   10
  2581 ;; This function calls:
  2582 ;;		Nothing
  2583 ;; This function is called by:
  2584 ;;		_main
  2585 ;; This function uses a non-reentrant model
  2586 ;;
  2587                           
  2588                           	psect	text8
  2589  001BC4                     __ptext8:
  2590                           	opt stack 0
  2591  001BC4                     _timer0_lthread:
  2592                           	opt stack 20
  2593                           
  2594                           ;timer0_thread.c: 10: unsigned int *msgval;
  2595                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;incstack = 0
  2599  001BC4  0101               	movlb	1	; () banked
  2600  001BC6  0101               	movlb	1	; () banked
  2601  001BC8  C1A9  F1AB         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2602  001BCC  0101               	movlb	1	; () banked
  2603  001BCE  0101               	movlb	1	; () banked
  2604  001BD0  C1A8  F1AA         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2605                           
  2606                           ; BSR set to: 1
  2607  001BD4  0012               	return	
  2608  001BD6                     __end_of_timer0_lthread:
  2609                           	opt stack 0
  2610                           tblptru	equ	0xFF8
  2611                           tblptrh	equ	0xFF7
  2612                           tblptrl	equ	0xFF6
  2613                           tablat	equ	0xFF5
  2614                           prodh	equ	0xFF4
  2615                           prodl	equ	0xFF3
  2616                           postinc0	equ	0xFEE
  2617                           wreg	equ	0xFE8
  2618                           indf1	equ	0xFE7
  2619                           fsr1h	equ	0xFE2
  2620                           fsr1l	equ	0xFE1
  2621                           indf2	equ	0xFDF
  2622                           postinc2	equ	0xFDE
  2623                           postdec2	equ	0xFDD
  2624                           fsr2h	equ	0xFDA
  2625                           fsr2l	equ	0xFD9
  2626                           status	equ	0xFD8
  2627                           
  2628 ;; *************** function _init_uart_recv *****************
  2629 ;; Defined at:
  2630 ;;		line 74 in file "../src/my_uart.c"
  2631 ;; Parameters:    Size  Location     Type
  2632 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2633 ;;		 -> main@uc(14), 
  2634 ;; Auto vars:     Size  Location     Type
  2635 ;;		None
  2636 ;; Return value:  Size  Location     Type
  2637 ;;		None               void
  2638 ;; Registers used:
  2639 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2645 ;;      Params:         0       0       2       0       0
  2646 ;;      Locals:         0       0       0       0       0
  2647 ;;      Temps:          0       0       0       0       0
  2648 ;;      Totals:         0       0       2       0       0
  2649 ;;Total ram usage:        2 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:   10
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_main
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           	psect	text9
  2660  001AB6                     __ptext9:
  2661                           	opt stack 0
  2662  001AB6                     _init_uart_recv:
  2663                           	opt stack 20
  2664                           
  2665                           ;my_uart.c: 75: uc_ptr = uc;
  2666                           
  2667                           ; BSR set to: 1
  2668                           ;incstack = 0
  2669  001AB6  0101               	movlb	1	; () banked
  2670  001AB8  C1A3  F05D         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2671  001ABC  0101               	movlb	1	; () banked
  2672  001ABE  C1A2  F05C         	movff	init_uart_recv@uc,_uc_ptr
  2673                           
  2674                           ; BSR set to: 1
  2675                           ;my_uart.c: 76: uc_ptr->Tx_buflen = 0;
  2676  001AC2  EE20 F00C          	lfsr	2,12
  2677  001AC6  505C               	movf	_uc_ptr,w,c
  2678  001AC8  26D9               	addwf	fsr2l,f,c
  2679  001ACA  505D               	movf	_uc_ptr+1,w,c
  2680  001ACC  22DA               	addwfc	fsr2h,f,c
  2681  001ACE  0E00               	movlw	0
  2682  001AD0  6EDF               	movwf	indf2,c
  2683                           
  2684                           ; BSR set to: 1
  2685                           ;my_uart.c: 77: uc_ptr->Rx_buflen = 0;
  2686  001AD2  EE20 F00D          	lfsr	2,13
  2687  001AD6  505C               	movf	_uc_ptr,w,c
  2688  001AD8  26D9               	addwf	fsr2l,f,c
  2689  001ADA  505D               	movf	_uc_ptr+1,w,c
  2690  001ADC  22DA               	addwfc	fsr2h,f,c
  2691  001ADE  0E00               	movlw	0
  2692  001AE0  6EDF               	movwf	indf2,c
  2693                           
  2694                           ; BSR set to: 1
  2695  001AE2  0012               	return	
  2696  001AE4                     __end_of_init_uart_recv:
  2697                           	opt stack 0
  2698                           tblptru	equ	0xFF8
  2699                           tblptrh	equ	0xFF7
  2700                           tblptrl	equ	0xFF6
  2701                           tablat	equ	0xFF5
  2702                           prodh	equ	0xFF4
  2703                           prodl	equ	0xFF3
  2704                           postinc0	equ	0xFEE
  2705                           wreg	equ	0xFE8
  2706                           indf1	equ	0xFE7
  2707                           fsr1h	equ	0xFE2
  2708                           fsr1l	equ	0xFE1
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           postdec2	equ	0xFDD
  2712                           fsr2h	equ	0xFDA
  2713                           fsr2l	equ	0xFD9
  2714                           status	equ	0xFD8
  2715                           
  2716 ;; *************** function _init_timer1_lthread *****************
  2717 ;; Defined at:
  2718 ;;		line 6 in file "../src/timer1_thread.c"
  2719 ;; Parameters:    Size  Location     Type
  2720 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2721 ;;		 -> main@t1thread_data(2), 
  2722 ;; Auto vars:     Size  Location     Type
  2723 ;;		None
  2724 ;; Return value:  Size  Location     Type
  2725 ;;		None               void
  2726 ;; Registers used:
  2727 ;;		wreg, fsr2l, fsr2h
  2728 ;; Tracked objects:
  2729 ;;		On entry : 0/0
  2730 ;;		On exit  : 0/0
  2731 ;;		Unchanged: 0/0
  2732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2733 ;;      Params:         0       0       2       0       0
  2734 ;;      Locals:         0       0       0       0       0
  2735 ;;      Temps:          0       0       0       0       0
  2736 ;;      Totals:         0       0       2       0       0
  2737 ;;Total ram usage:        2 bytes
  2738 ;; Hardware stack levels used:    1
  2739 ;; Hardware stack levels required when called:   10
  2740 ;; This function calls:
  2741 ;;		Nothing
  2742 ;; This function is called by:
  2743 ;;		_main
  2744 ;; This function uses a non-reentrant model
  2745 ;;
  2746                           
  2747                           	psect	text10
  2748  001BD6                     __ptext10:
  2749                           	opt stack 0
  2750  001BD6                     _init_timer1_lthread:
  2751                           	opt stack 20
  2752                           
  2753                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2754                           
  2755                           ; BSR set to: 1
  2756                           ;incstack = 0
  2757  001BD6  C1A2  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2758  001BDA  C1A3  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2759  001BDE  0E00               	movlw	0
  2760  001BE0  6EDE               	movwf	postinc2,c
  2761  001BE2  0E00               	movlw	0
  2762  001BE4  6EDD               	movwf	postdec2,c
  2763  001BE6  0012               	return	
  2764  001BE8                     __end_of_init_timer1_lthread:
  2765                           	opt stack 0
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           postinc0	equ	0xFEE
  2773                           wreg	equ	0xFE8
  2774                           indf1	equ	0xFE7
  2775                           fsr1h	equ	0xFE2
  2776                           fsr1l	equ	0xFE1
  2777                           indf2	equ	0xFDF
  2778                           postinc2	equ	0xFDE
  2779                           postdec2	equ	0xFDD
  2780                           fsr2h	equ	0xFDA
  2781                           fsr2l	equ	0xFD9
  2782                           status	equ	0xFD8
  2783                           
  2784 ;; *************** function _init_queues *****************
  2785 ;; Defined at:
  2786 ;;		line 194 in file "../src/messages.c"
  2787 ;; Parameters:    Size  Location     Type
  2788 ;;		None
  2789 ;; Auto vars:     Size  Location     Type
  2790 ;;		None
  2791 ;; Return value:  Size  Location     Type
  2792 ;;		None               void
  2793 ;; Registers used:
  2794 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2795 ;; Tracked objects:
  2796 ;;		On entry : 0/0
  2797 ;;		On exit  : 0/0
  2798 ;;		Unchanged: 0/0
  2799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2800 ;;      Params:         0       0       0       0       0
  2801 ;;      Locals:         0       0       0       0       0
  2802 ;;      Temps:          0       0       1       0       0
  2803 ;;      Totals:         0       0       1       0       0
  2804 ;;Total ram usage:        1 bytes
  2805 ;; Hardware stack levels used:    1
  2806 ;; Hardware stack levels required when called:   11
  2807 ;; This function calls:
  2808 ;;		_init_queue
  2809 ;; This function is called by:
  2810 ;;		_main
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text11
  2815  00149A                     __ptext11:
  2816                           	opt stack 0
  2817  00149A                     _init_queues:
  2818                           	opt stack 19
  2819                           
  2820                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2821                           
  2822                           ;incstack = 0
  2823  00149A  0101               	movlb	1	; () banked
  2824  00149C  6FA6               	movwf	??_init_queues& (0+255),b
  2825  00149E  0E00               	movlw	0
  2826  0014A0  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  2827  0014A2  0101               	movlb	1	; () banked
  2828  0014A4  51A6               	movf	??_init_queues& (0+255),w,b
  2829                           
  2830                           ; BSR set to: 1
  2831                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2832  0014A6  0101               	movlb	1	; () banked
  2833  0014A8  0E01               	movlw	high _ToMainLow_MQ
  2834  0014AA  0101               	movlb	1	; () banked
  2835  0014AC  0101               	movlb	1	; () banked
  2836  0014AE  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2837  0014B0  0101               	movlb	1	; () banked
  2838  0014B2  0E6C               	movlw	low _ToMainLow_MQ
  2839  0014B4  0101               	movlb	1	; () banked
  2840  0014B6  0101               	movlb	1	; () banked
  2841  0014B8  6FA2               	movwf	init_queue@qptr& (0+255),b
  2842  0014BA  EC9C  F009         	call	_init_queue	;wreg free
  2843                           
  2844                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2845  0014BE  0101               	movlb	1	; () banked
  2846  0014C0  0E01               	movlw	high _ToMainHigh_MQ
  2847  0014C2  0101               	movlb	1	; () banked
  2848  0014C4  0101               	movlb	1	; () banked
  2849  0014C6  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2850  0014C8  0101               	movlb	1	; () banked
  2851  0014CA  0E36               	movlw	low _ToMainHigh_MQ
  2852  0014CC  0101               	movlb	1	; () banked
  2853  0014CE  0101               	movlb	1	; () banked
  2854  0014D0  6FA2               	movwf	init_queue@qptr& (0+255),b
  2855  0014D2  EC9C  F009         	call	_init_queue	;wreg free
  2856                           
  2857                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2858  0014D6  0101               	movlb	1	; () banked
  2859  0014D8  0E01               	movlw	high _FromMainLow_MQ
  2860  0014DA  0101               	movlb	1	; () banked
  2861  0014DC  0101               	movlb	1	; () banked
  2862  0014DE  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2863  0014E0  0101               	movlb	1	; () banked
  2864  0014E2  0E00               	movlw	low _FromMainLow_MQ
  2865  0014E4  0101               	movlb	1	; () banked
  2866  0014E6  0101               	movlb	1	; () banked
  2867  0014E8  6FA2               	movwf	init_queue@qptr& (0+255),b
  2868  0014EA  EC9C  F009         	call	_init_queue	;wreg free
  2869                           
  2870                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2871  0014EE  0102               	movlb	2	; () banked
  2872  0014F0  0E02               	movlw	high _FromMainHigh_MQ
  2873  0014F2  0101               	movlb	1	; () banked
  2874  0014F4  0101               	movlb	1	; () banked
  2875  0014F6  6FA3               	movwf	(init_queue@qptr+1)& (0+255),b
  2876  0014F8  0102               	movlb	2	; () banked
  2877  0014FA  0E45               	movlw	low _FromMainHigh_MQ
  2878  0014FC  0101               	movlb	1	; () banked
  2879  0014FE  0101               	movlb	1	; () banked
  2880  001500  6FA2               	movwf	init_queue@qptr& (0+255),b
  2881  001502  EC9C  F009         	call	_init_queue	;wreg free
  2882  001506  0012               	return	
  2883  001508                     __end_of_init_queues:
  2884                           	opt stack 0
  2885                           tblptru	equ	0xFF8
  2886                           tblptrh	equ	0xFF7
  2887                           tblptrl	equ	0xFF6
  2888                           tablat	equ	0xFF5
  2889                           prodh	equ	0xFF4
  2890                           prodl	equ	0xFF3
  2891                           postinc0	equ	0xFEE
  2892                           wreg	equ	0xFE8
  2893                           indf1	equ	0xFE7
  2894                           fsr1h	equ	0xFE2
  2895                           fsr1l	equ	0xFE1
  2896                           indf2	equ	0xFDF
  2897                           postinc2	equ	0xFDE
  2898                           postdec2	equ	0xFDD
  2899                           fsr2h	equ	0xFDA
  2900                           fsr2l	equ	0xFD9
  2901                           status	equ	0xFD8
  2902                           
  2903 ;; *************** function _init_queue *****************
  2904 ;; Defined at:
  2905 ;;		line 14 in file "../src/messages.c"
  2906 ;; Parameters:    Size  Location     Type
  2907 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2908 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  i               1    3[BANK1 ] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;		None               void
  2913 ;; Registers used:
  2914 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2920 ;;      Params:         0       0       2       0       0
  2921 ;;      Locals:         0       0       1       0       0
  2922 ;;      Temps:          0       0       1       0       0
  2923 ;;      Totals:         0       0       4       0       0
  2924 ;;Total ram usage:        4 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:   10
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_init_queues
  2931 ;; This function uses a non-reentrant model
  2932 ;;
  2933                           
  2934                           	psect	text12
  2935  001338                     __ptext12:
  2936                           	opt stack 0
  2937  001338                     _init_queue:
  2938                           	opt stack 19
  2939                           
  2940                           ;messages.c: 15: unsigned char i;
  2941                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2942                           
  2943                           ;incstack = 0
  2944  001338  0101               	movlb	1	; () banked
  2945  00133A  EE20 F034          	lfsr	2,52
  2946  00133E  0101               	movlb	1	; () banked
  2947  001340  51A2               	movf	init_queue@qptr& (0+255),w,b
  2948  001342  26D9               	addwf	fsr2l,f,c
  2949  001344  0101               	movlb	1	; () banked
  2950  001346  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  2951  001348  22DA               	addwfc	fsr2h,f,c
  2952  00134A  0E00               	movlw	0
  2953  00134C  6EDF               	movwf	indf2,c
  2954                           
  2955                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2956  00134E  0101               	movlb	1	; () banked
  2957  001350  EE20 F035          	lfsr	2,53
  2958  001354  0101               	movlb	1	; () banked
  2959  001356  51A2               	movf	init_queue@qptr& (0+255),w,b
  2960  001358  26D9               	addwf	fsr2l,f,c
  2961  00135A  0101               	movlb	1	; () banked
  2962  00135C  51A3               	movf	(init_queue@qptr+1)& (0+255),w,b
  2963  00135E  22DA               	addwfc	fsr2h,f,c
  2964  001360  0E00               	movlw	0
  2965  001362  6EDF               	movwf	indf2,c
  2966                           
  2967                           ; BSR set to: 1
  2968                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2969  001364  0101               	movlb	1	; () banked
  2970  001366  6FA4               	movwf	??_init_queue& (0+255),b
  2971  001368  0E00               	movlw	0
  2972  00136A  0101               	movlb	1	; () banked
  2973  00136C  0101               	movlb	1	; () banked
  2974  00136E  6FA5               	movwf	init_queue@i& (0+255),b
  2975  001370  0101               	movlb	1	; () banked
  2976  001372  51A4               	movf	??_init_queue& (0+255),w,b
  2977                           
  2978                           ; BSR set to: 1
  2979  001374  0E03               	movlw	3
  2980  001376  0101               	movlb	1	; () banked
  2981  001378  0101               	movlb	1	; () banked
  2982  00137A  65A5               	cpfsgt	init_queue@i& (0+255),b
  2983  00137C  D001               	goto	l3748
  2984  00137E  0012               	return	
  2985  001380                     l3748:
  2986                           
  2987                           ; BSR set to: 1
  2988                           ;messages.c: 20: qptr->queue[i].full = 0;
  2989  001380  0101               	movlb	1	; () banked
  2990  001382  0101               	movlb	1	; () banked
  2991  001384  51A5               	movf	init_queue@i& (0+255),w,b
  2992  001386  0D0D               	mullw	13
  2993  001388  50F3               	movf	prodl,w,c
  2994  00138A  0101               	movlb	1	; () banked
  2995  00138C  0101               	movlb	1	; () banked
  2996  00138E  25A2               	addwf	init_queue@qptr& (0+255),w,b
  2997  001390  6ED9               	movwf	fsr2l,c
  2998  001392  50F4               	movf	prodh,w,c
  2999  001394  0101               	movlb	1	; () banked
  3000  001396  0101               	movlb	1	; () banked
  3001  001398  21A3               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  3002  00139A  6EDA               	movwf	fsr2h,c
  3003  00139C  0E00               	movlw	0
  3004  00139E  6EDF               	movwf	indf2,c
  3005                           
  3006                           ; BSR set to: 1
  3007  0013A0  0101               	movlb	1	; () banked
  3008  0013A2  0101               	movlb	1	; () banked
  3009  0013A4  2BA5               	incf	init_queue@i& (0+255),f,b
  3010                           
  3011                           ; BSR set to: 1
  3012  0013A6  0E03               	movlw	3
  3013  0013A8  0101               	movlb	1	; () banked
  3014  0013AA  0101               	movlb	1	; () banked
  3015  0013AC  65A5               	cpfsgt	init_queue@i& (0+255),b
  3016  0013AE  D7E8               	goto	l3748
  3017  0013B0  0012               	return	
  3018  0013B2                     __end_of_init_queue:
  3019                           	opt stack 0
  3020                           tblptru	equ	0xFF8
  3021                           tblptrh	equ	0xFF7
  3022                           tblptrl	equ	0xFF6
  3023                           tablat	equ	0xFF5
  3024                           prodh	equ	0xFF4
  3025                           prodl	equ	0xFF3
  3026                           postinc0	equ	0xFEE
  3027                           wreg	equ	0xFE8
  3028                           indf1	equ	0xFE7
  3029                           fsr1h	equ	0xFE2
  3030                           fsr1l	equ	0xFE1
  3031                           indf2	equ	0xFDF
  3032                           postinc2	equ	0xFDE
  3033                           postdec2	equ	0xFDD
  3034                           fsr2h	equ	0xFDA
  3035                           fsr2l	equ	0xFD9
  3036                           status	equ	0xFD8
  3037                           
  3038 ;; *************** function _init_i2c *****************
  3039 ;; Defined at:
  3040 ;;		line 271 in file "../src/my_i2c.c"
  3041 ;; Parameters:    Size  Location     Type
  3042 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  3043 ;;		 -> main@ic(32), 
  3044 ;; Auto vars:     Size  Location     Type
  3045 ;;		None
  3046 ;; Return value:  Size  Location     Type
  3047 ;;		None               void
  3048 ;; Registers used:
  3049 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3050 ;; Tracked objects:
  3051 ;;		On entry : 0/0
  3052 ;;		On exit  : 0/0
  3053 ;;		Unchanged: 0/0
  3054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3055 ;;      Params:         0       0       2       0       0
  3056 ;;      Locals:         0       0       0       0       0
  3057 ;;      Temps:          0       0       0       0       0
  3058 ;;      Totals:         0       0       2       0       0
  3059 ;;Total ram usage:        2 bytes
  3060 ;; Hardware stack levels used:    1
  3061 ;; Hardware stack levels required when called:   10
  3062 ;; This function calls:
  3063 ;;		Nothing
  3064 ;; This function is called by:
  3065 ;;		_main
  3066 ;; This function uses a non-reentrant model
  3067 ;;
  3068                           
  3069                           	psect	text13
  3070  001508                     __ptext13:
  3071                           	opt stack 0
  3072  001508                     _init_i2c:
  3073                           	opt stack 20
  3074                           
  3075                           ;my_i2c.c: 272: ic_ptr = ic;
  3076                           
  3077                           ; BSR set to: 1
  3078                           ;incstack = 0
  3079  001508  0101               	movlb	1	; () banked
  3080  00150A  0100               	movlb	0	; () banked
  3081  00150C  C1A3  F0CD         	movff	init_i2c@ic+1,_ic_ptr+1
  3082  001510  0101               	movlb	1	; () banked
  3083  001512  0100               	movlb	0	; () banked
  3084  001514  C1A2  F0CC         	movff	init_i2c@ic,_ic_ptr
  3085                           
  3086                           ; BSR set to: 0
  3087                           ;my_i2c.c: 273: ic_ptr->buflen = 0;
  3088  001518  0100               	movlb	0	; () banked
  3089  00151A  EE20 F00A          	lfsr	2,10
  3090  00151E  0100               	movlb	0	; () banked
  3091  001520  51CC               	movf	_ic_ptr& (0+255),w,b
  3092  001522  26D9               	addwf	fsr2l,f,c
  3093  001524  0100               	movlb	0	; () banked
  3094  001526  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3095  001528  22DA               	addwfc	fsr2h,f,c
  3096  00152A  0E00               	movlw	0
  3097  00152C  6EDF               	movwf	indf2,c
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;my_i2c.c: 274: ic_ptr->event_count = 0;
  3101  00152E  0100               	movlb	0	; () banked
  3102  001530  EE20 F00B          	lfsr	2,11
  3103  001534  0100               	movlb	0	; () banked
  3104  001536  51CC               	movf	_ic_ptr& (0+255),w,b
  3105  001538  26D9               	addwf	fsr2l,f,c
  3106  00153A  0100               	movlb	0	; () banked
  3107  00153C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3108  00153E  22DA               	addwfc	fsr2h,f,c
  3109  001540  0E00               	movlw	0
  3110  001542  6EDF               	movwf	indf2,c
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;my_i2c.c: 275: ic_ptr->status = 0x3;
  3114  001544  0100               	movlb	0	; () banked
  3115  001546  EE20 F00C          	lfsr	2,12
  3116  00154A  0100               	movlb	0	; () banked
  3117  00154C  51CC               	movf	_ic_ptr& (0+255),w,b
  3118  00154E  26D9               	addwf	fsr2l,f,c
  3119  001550  0100               	movlb	0	; () banked
  3120  001552  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3121  001554  22DA               	addwfc	fsr2h,f,c
  3122  001556  0E03               	movlw	3
  3123  001558  6EDF               	movwf	indf2,c
  3124                           
  3125                           ; BSR set to: 0
  3126                           ;my_i2c.c: 276: ic_ptr->error_count = 0;
  3127  00155A  0100               	movlb	0	; () banked
  3128  00155C  EE20 F00E          	lfsr	2,14
  3129  001560  0100               	movlb	0	; () banked
  3130  001562  51CC               	movf	_ic_ptr& (0+255),w,b
  3131  001564  26D9               	addwf	fsr2l,f,c
  3132  001566  0100               	movlb	0	; () banked
  3133  001568  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3134  00156A  22DA               	addwfc	fsr2h,f,c
  3135  00156C  0E00               	movlw	0
  3136  00156E  6EDF               	movwf	indf2,c
  3137                           
  3138                           ; BSR set to: 0
  3139  001570  0012               	return	
  3140  001572                     __end_of_init_i2c:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           postinc0	equ	0xFEE
  3149                           wreg	equ	0xFE8
  3150                           indf1	equ	0xFE7
  3151                           fsr1h	equ	0xFE2
  3152                           fsr1l	equ	0xFE1
  3153                           indf2	equ	0xFDF
  3154                           postinc2	equ	0xFDE
  3155                           postdec2	equ	0xFDD
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _i2c_master_send *****************
  3161 ;; Defined at:
  3162 ;;		line 77 in file "../src/my_i2c.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;  length          1    wreg     unsigned char 
  3165 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  3166 ;;		 -> main@msgbuffer(11), 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  length          1    8[BANK1 ] unsigned char 
  3169 ;;  i               2    9[BANK1 ] int 
  3170 ;; Return value:  Size  Location     Type
  3171 ;;                  1    wreg      unsigned char 
  3172 ;; Registers used:
  3173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3174 ;; Tracked objects:
  3175 ;;		On entry : 0/0
  3176 ;;		On exit  : 0/0
  3177 ;;		Unchanged: 0/0
  3178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3179 ;;      Params:         0       0       2       0       0
  3180 ;;      Locals:         0       0       3       0       0
  3181 ;;      Temps:          0       0       6       0       0
  3182 ;;      Totals:         0       0      11       0       0
  3183 ;;Total ram usage:       11 bytes
  3184 ;; Hardware stack levels used:    1
  3185 ;; Hardware stack levels required when called:   10
  3186 ;; This function calls:
  3187 ;;		Nothing
  3188 ;; This function is called by:
  3189 ;;		_main
  3190 ;; This function uses a non-reentrant model
  3191 ;;
  3192                           
  3193                           	psect	text14
  3194  000688                     __ptext14:
  3195                           	opt stack 0
  3196  000688                     _i2c_master_send:
  3197                           	opt stack 20
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;incstack = 0
  3201                           ;i2c_master_send@length stored from wreg
  3202  000688  CFE8 F1AA          	movff	wreg,i2c_master_send@length
  3203                           
  3204                           ;my_i2c.c: 80: if (ic_ptr->status != 0x3) {
  3205  00068C  0100               	movlb	0	; () banked
  3206  00068E  EE20 F00C          	lfsr	2,12
  3207  000692  0100               	movlb	0	; () banked
  3208  000694  51CC               	movf	_ic_ptr& (0+255),w,b
  3209  000696  26D9               	addwf	fsr2l,f,c
  3210  000698  0100               	movlb	0	; () banked
  3211  00069A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3212  00069C  22DA               	addwfc	fsr2h,f,c
  3213  00069E  50DF               	movf	indf2,w,c
  3214  0006A0  0A03               	xorlw	3
  3215  0006A2  A4D8               	btfss	status,2,c
  3216  0006A4  0012               	return	
  3217                           
  3218                           ; BSR set to: 0
  3219                           
  3220                           ; BSR set to: 0
  3221                           
  3222                           ; BSR set to: 0
  3223                           ;my_i2c.c: 82: } else if (ic_ptr->status == 0x3) {
  3224                           
  3225                           ; BSR set to: 0
  3226                           ;my_i2c.c: 81: return (-1);
  3227                           ;	Return value of _i2c_master_send is never used
  3228  0006A6  0100               	movlb	0	; () banked
  3229  0006A8  EE20 F00C          	lfsr	2,12
  3230  0006AC  0100               	movlb	0	; () banked
  3231  0006AE  51CC               	movf	_ic_ptr& (0+255),w,b
  3232  0006B0  26D9               	addwf	fsr2l,f,c
  3233  0006B2  0100               	movlb	0	; () banked
  3234  0006B4  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3235  0006B6  22DA               	addwfc	fsr2h,f,c
  3236  0006B8  0E03               	movlw	3
  3237  0006BA  62DF               	cpfseq	indf2,c
  3238  0006BC  0012               	return	
  3239                           
  3240                           ; BSR set to: 0
  3241                           ;my_i2c.c: 87: ic_ptr->bufferCounterSend = 1;
  3242  0006BE  0100               	movlb	0	; () banked
  3243  0006C0  EE20 F01C          	lfsr	2,28
  3244  0006C4  0100               	movlb	0	; () banked
  3245  0006C6  51CC               	movf	_ic_ptr& (0+255),w,b
  3246  0006C8  26D9               	addwf	fsr2l,f,c
  3247  0006CA  0100               	movlb	0	; () banked
  3248  0006CC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3249  0006CE  22DA               	addwfc	fsr2h,f,c
  3250  0006D0  0E01               	movlw	1
  3251  0006D2  6EDE               	movwf	postinc2,c
  3252  0006D4  0E00               	movlw	0
  3253  0006D6  6EDD               	movwf	postdec2,c
  3254                           
  3255                           ; BSR set to: 0
  3256                           ;my_i2c.c: 88: ic_ptr->outbuffer[0] = ic_ptr->slave_addr;
  3257  0006D8  0100               	movlb	0	; () banked
  3258  0006DA  EE20 F01B          	lfsr	2,27
  3259  0006DE  0100               	movlb	0	; () banked
  3260  0006E0  51CC               	movf	_ic_ptr& (0+255),w,b
  3261  0006E2  26D9               	addwf	fsr2l,f,c
  3262  0006E4  0100               	movlb	0	; () banked
  3263  0006E6  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3264  0006E8  22DA               	addwfc	fsr2h,f,c
  3265  0006EA  0100               	movlb	0	; () banked
  3266  0006EC  EE10 F00F          	lfsr	1,15
  3267  0006F0  0100               	movlb	0	; () banked
  3268  0006F2  51CC               	movf	_ic_ptr& (0+255),w,b
  3269  0006F4  26E1               	addwf	fsr1l,f,c
  3270  0006F6  0100               	movlb	0	; () banked
  3271  0006F8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3272  0006FA  22E2               	addwfc	fsr1h,f,c
  3273  0006FC  CFDF FFE7          	movff	indf2,indf1
  3274                           
  3275                           ; BSR set to: 0
  3276                           ;my_i2c.c: 90: ic_ptr->outbuflen = length + 1;
  3277  000700  0100               	movlb	0	; () banked
  3278  000702  EE20 F019          	lfsr	2,25
  3279  000706  0100               	movlb	0	; () banked
  3280  000708  51CC               	movf	_ic_ptr& (0+255),w,b
  3281  00070A  26D9               	addwf	fsr2l,f,c
  3282  00070C  0100               	movlb	0	; () banked
  3283  00070E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3284  000710  22DA               	addwfc	fsr2h,f,c
  3285  000712  0101               	movlb	1	; () banked
  3286  000714  0101               	movlb	1	; () banked
  3287  000716  29AA               	incf	i2c_master_send@length& (0+255),w,b
  3288  000718  6EDF               	movwf	indf2,c
  3289                           
  3290                           ; BSR set to: 1
  3291                           ;my_i2c.c: 92: int i;
  3292                           ;my_i2c.c: 93: for (i = 1; i < length + 1; i++) {
  3293  00071A  0E00               	movlw	0
  3294  00071C  0101               	movlb	1	; () banked
  3295  00071E  0101               	movlb	1	; () banked
  3296  000720  6FAC               	movwf	(i2c_master_send@i+1)& (0+255),b
  3297  000722  0E01               	movlw	1
  3298  000724  0101               	movlb	1	; () banked
  3299  000726  6FAB               	movwf	i2c_master_send@i& (0+255),b
  3300  000728  D03D               	goto	l3708
  3301  00072A                     l3704:
  3302                           
  3303                           ; BSR set to: 1
  3304                           ;my_i2c.c: 94: ic_ptr->outbuffer[i] = msg[i - 1];
  3305  00072A  0EFF               	movlw	255
  3306  00072C  0101               	movlb	1	; () banked
  3307  00072E  6FA4               	movwf	??_i2c_master_send& (0+255),b
  3308  000730  0EFF               	movlw	255
  3309  000732  6FA5               	movwf	(??_i2c_master_send+1)& (0+255),b
  3310  000734  0101               	movlb	1	; () banked
  3311  000736  C1AB  F1A6         	movff	i2c_master_send@i,??_i2c_master_send+2
  3312  00073A  0101               	movlb	1	; () banked
  3313  00073C  C1AC  F1A7         	movff	i2c_master_send@i+1,??_i2c_master_send+3
  3314  000740  0101               	movlb	1	; () banked
  3315  000742  51A4               	movf	??_i2c_master_send& (0+255),w,b
  3316  000744  0101               	movlb	1	; () banked
  3317  000746  27A6               	addwf	(??_i2c_master_send+2)& (0+255),f,b
  3318  000748  0101               	movlb	1	; () banked
  3319  00074A  51A5               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3320  00074C  0101               	movlb	1	; () banked
  3321  00074E  23A7               	addwfc	(??_i2c_master_send+3)& (0+255),f,b
  3322  000750  0101               	movlb	1	; () banked
  3323  000752  51A6               	movf	(??_i2c_master_send+2)& (0+255),w,b
  3324  000754  0101               	movlb	1	; () banked
  3325  000756  0101               	movlb	1	; () banked
  3326  000758  25A2               	addwf	i2c_master_send@msg& (0+255),w,b
  3327  00075A  6ED9               	movwf	fsr2l,c
  3328  00075C  0101               	movlb	1	; () banked
  3329  00075E  51A7               	movf	(??_i2c_master_send+3)& (0+255),w,b
  3330  000760  0101               	movlb	1	; () banked
  3331  000762  0101               	movlb	1	; () banked
  3332  000764  21A3               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3333  000766  6EDA               	movwf	fsr2h,c
  3334  000768  0E0F               	movlw	15
  3335  00076A  0101               	movlb	1	; () banked
  3336  00076C  0101               	movlb	1	; () banked
  3337  00076E  25AB               	addwf	i2c_master_send@i& (0+255),w,b
  3338  000770  0101               	movlb	1	; () banked
  3339  000772  6FA8               	movwf	(??_i2c_master_send+4)& (0+255),b
  3340  000774  0E00               	movlw	0
  3341  000776  0101               	movlb	1	; () banked
  3342  000778  0101               	movlb	1	; () banked
  3343  00077A  21AC               	addwfc	(i2c_master_send@i+1)& (0+255),w,b
  3344  00077C  0101               	movlb	1	; () banked
  3345  00077E  6FA9               	movwf	(??_i2c_master_send+5)& (0+255),b
  3346  000780  0101               	movlb	1	; () banked
  3347  000782  51A8               	movf	(??_i2c_master_send+4)& (0+255),w,b
  3348  000784  0100               	movlb	0	; () banked
  3349  000786  0100               	movlb	0	; () banked
  3350  000788  25CC               	addwf	_ic_ptr& (0+255),w,b
  3351  00078A  6EE1               	movwf	fsr1l,c
  3352  00078C  0101               	movlb	1	; () banked
  3353  00078E  51A9               	movf	(??_i2c_master_send+5)& (0+255),w,b
  3354  000790  0100               	movlb	0	; () banked
  3355  000792  0100               	movlb	0	; () banked
  3356  000794  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3357  000796  6EE2               	movwf	fsr1h,c
  3358  000798  CFDF FFE7          	movff	indf2,indf1
  3359                           
  3360                           ; BSR set to: 0
  3361  00079C  0101               	movlb	1	; () banked
  3362  00079E  0101               	movlb	1	; () banked
  3363  0007A0  4BAB               	infsnz	i2c_master_send@i& (0+255),f,b
  3364  0007A2  2BAC               	incf	(i2c_master_send@i+1)& (0+255),f,b
  3365  0007A4                     l3708:
  3366                           
  3367                           ; BSR set to: 1
  3368  0007A4  0101               	movlb	1	; () banked
  3369  0007A6  0101               	movlb	1	; () banked
  3370  0007A8  51AA               	movf	i2c_master_send@length& (0+255),w,b
  3371  0007AA  0101               	movlb	1	; () banked
  3372  0007AC  6FA4               	movwf	??_i2c_master_send& (0+255),b
  3373  0007AE  6BA5               	clrf	(??_i2c_master_send+1)& (0+255),b
  3374  0007B0  0E01               	movlw	1
  3375  0007B2  0101               	movlb	1	; () banked
  3376  0007B4  27A4               	addwf	??_i2c_master_send& (0+255),f,b
  3377  0007B6  0E00               	movlw	0
  3378  0007B8  23A5               	addwfc	(??_i2c_master_send+1)& (0+255),f,b
  3379  0007BA  0101               	movlb	1	; () banked
  3380  0007BC  0101               	movlb	1	; () banked
  3381  0007BE  51AC               	movf	(i2c_master_send@i+1)& (0+255),w,b
  3382  0007C0  0A80               	xorlw	128
  3383  0007C2  0101               	movlb	1	; () banked
  3384  0007C4  6FA6               	movwf	(??_i2c_master_send+2)& (0+255),b
  3385  0007C6  51A4               	movf	??_i2c_master_send& (0+255),w,b
  3386  0007C8  0101               	movlb	1	; () banked
  3387  0007CA  0101               	movlb	1	; () banked
  3388  0007CC  5DAB               	subwf	i2c_master_send@i& (0+255),w,b
  3389  0007CE  0101               	movlb	1	; () banked
  3390  0007D0  51A5               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3391  0007D2  0A80               	xorlw	128
  3392  0007D4  0101               	movlb	1	; () banked
  3393  0007D6  59A6               	subwfb	(??_i2c_master_send+2)& (0+255),w,b
  3394  0007D8  A0D8               	btfss	status,0,c
  3395  0007DA  D7A7               	goto	l3704
  3396                           
  3397                           ; BSR set to: 1
  3398                           ;my_i2c.c: 95: }
  3399                           ;my_i2c.c: 97: ic_ptr->tx_i2c = 0x1;
  3400                           
  3401                           ; BSR set to: 1
  3402  0007DC  0100               	movlb	0	; () banked
  3403  0007DE  EE20 F01E          	lfsr	2,30
  3404  0007E2  0100               	movlb	0	; () banked
  3405  0007E4  51CC               	movf	_ic_ptr& (0+255),w,b
  3406  0007E6  26D9               	addwf	fsr2l,f,c
  3407  0007E8  0100               	movlb	0	; () banked
  3408  0007EA  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3409  0007EC  22DA               	addwfc	fsr2h,f,c
  3410  0007EE  0E01               	movlw	1
  3411  0007F0  6EDF               	movwf	indf2,c
  3412                           
  3413                           ;my_i2c.c: 98: ic_ptr->rx_i2c = 0x0;
  3414  0007F2  0100               	movlb	0	; () banked
  3415  0007F4  EE20 F01F          	lfsr	2,31
  3416  0007F8  0100               	movlb	0	; () banked
  3417  0007FA  51CC               	movf	_ic_ptr& (0+255),w,b
  3418  0007FC  26D9               	addwf	fsr2l,f,c
  3419  0007FE  0100               	movlb	0	; () banked
  3420  000800  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3421  000802  22DA               	addwfc	fsr2h,f,c
  3422  000804  0E00               	movlw	0
  3423  000806  6EDF               	movwf	indf2,c
  3424                           
  3425                           ;my_i2c.c: 100: ic_ptr->status = 0x5;
  3426  000808  0100               	movlb	0	; () banked
  3427  00080A  EE20 F00C          	lfsr	2,12
  3428  00080E  0100               	movlb	0	; () banked
  3429  000810  51CC               	movf	_ic_ptr& (0+255),w,b
  3430  000812  26D9               	addwf	fsr2l,f,c
  3431  000814  0100               	movlb	0	; () banked
  3432  000816  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  3433  000818  22DA               	addwfc	fsr2h,f,c
  3434  00081A  0E05               	movlw	5
  3435  00081C  6EDF               	movwf	indf2,c
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;my_i2c.c: 103: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3439  00081E  80C5               	bsf	4037,0,c	;volatile
  3440  000820                     l318:
  3441  000820  A0C5               	btfss	4037,0,c	;volatile
  3442                           
  3443                           ;my_i2c.c: 107: }
  3444                           ;my_i2c.c: 108: return;
  3445                           
  3446                           ;my_i2c.c: 106: return (0);
  3447                           ;	Return value of _i2c_master_send is never used
  3448  000822  0012               	return	
  3449  000824  D7FD               	goto	l318
  3450  000826                     __end_of_i2c_master_send:
  3451                           	opt stack 0
  3452                           tblptru	equ	0xFF8
  3453                           tblptrh	equ	0xFF7
  3454                           tblptrl	equ	0xFF6
  3455                           tablat	equ	0xFF5
  3456                           prodh	equ	0xFF4
  3457                           prodl	equ	0xFF3
  3458                           postinc0	equ	0xFEE
  3459                           wreg	equ	0xFE8
  3460                           indf1	equ	0xFE7
  3461                           fsr1h	equ	0xFE2
  3462                           fsr1l	equ	0xFE1
  3463                           indf2	equ	0xFDF
  3464                           postinc2	equ	0xFDE
  3465                           postdec2	equ	0xFDD
  3466                           fsr2h	equ	0xFDA
  3467                           fsr2l	equ	0xFD9
  3468                           status	equ	0xFD8
  3469                           
  3470 ;; *************** function _i2c_configure_slave *****************
  3471 ;; Defined at:
  3472 ;;		line 282 in file "../src/my_i2c.c"
  3473 ;; Parameters:    Size  Location     Type
  3474 ;;  addr            1    wreg     unsigned char 
  3475 ;; Auto vars:     Size  Location     Type
  3476 ;;  addr            1    0[BANK1 ] unsigned char 
  3477 ;; Return value:  Size  Location     Type
  3478 ;;		None               void
  3479 ;; Registers used:
  3480 ;;		wreg, status,2, status,0
  3481 ;; Tracked objects:
  3482 ;;		On entry : 0/0
  3483 ;;		On exit  : 0/0
  3484 ;;		Unchanged: 0/0
  3485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3486 ;;      Params:         0       0       0       0       0
  3487 ;;      Locals:         0       0       1       0       0
  3488 ;;      Temps:          0       0       0       0       0
  3489 ;;      Totals:         0       0       1       0       0
  3490 ;;Total ram usage:        1 bytes
  3491 ;; Hardware stack levels used:    1
  3492 ;; Hardware stack levels required when called:   10
  3493 ;; This function calls:
  3494 ;;		Nothing
  3495 ;; This function is called by:
  3496 ;;		_main
  3497 ;; This function uses a non-reentrant model
  3498 ;;
  3499                           
  3500                           	psect	text15
  3501  001B0E                     __ptext15:
  3502                           	opt stack 0
  3503  001B0E                     _i2c_configure_slave:
  3504                           	opt stack 20
  3505                           
  3506                           ;incstack = 0
  3507                           ;i2c_configure_slave@addr stored from wreg
  3508  001B0E  CFE8 F1A2          	movff	wreg,i2c_configure_slave@addr
  3509                           
  3510                           ;my_i2c.c: 294: TRISCbits.TRISC3 = 1;
  3511  001B12  8694               	bsf	3988,3,c	;volatile
  3512                           
  3513                           ;my_i2c.c: 295: TRISCbits.TRISC4 = 1;
  3514  001B14  8894               	bsf	3988,4,c	;volatile
  3515                           
  3516                           ;my_i2c.c: 300: SSPADD = addr;
  3517  001B16  C1A2  FFC8         	movff	i2c_configure_slave@addr,4040	;volatile
  3518                           
  3519                           ;my_i2c.c: 302: SSPSTAT = 0x0;
  3520  001B1A  0E00               	movlw	0
  3521  001B1C  6EC7               	movwf	4039,c	;volatile
  3522                           
  3523                           ;my_i2c.c: 303: SSPCON1 = 0x0;
  3524  001B1E  0E00               	movlw	0
  3525  001B20  6EC6               	movwf	4038,c	;volatile
  3526                           
  3527                           ;my_i2c.c: 304: SSPCON2 = 0x0;
  3528  001B22  0E00               	movlw	0
  3529  001B24  6EC5               	movwf	4037,c	;volatile
  3530                           
  3531                           ;my_i2c.c: 305: SSPCON1 |= 0x0E;
  3532  001B26  0E0E               	movlw	14
  3533  001B28  12C6               	iorwf	4038,f,c	;volatile
  3534                           
  3535                           ;my_i2c.c: 306: SSPSTAT |= 0b10000000;
  3536  001B2A  8EC7               	bsf	4039,7,c	;volatile
  3537                           
  3538                           ;my_i2c.c: 309: TRISCbits.TRISC3 = 1;
  3539  001B2C  8694               	bsf	3988,3,c	;volatile
  3540                           
  3541                           ;my_i2c.c: 310: TRISCbits.TRISC4 = 1;
  3542  001B2E  8894               	bsf	3988,4,c	;volatile
  3543                           
  3544                           ;my_i2c.c: 331: SSPCON2bits.SEN = 1;
  3545  001B30  80C5               	bsf	4037,0,c	;volatile
  3546                           
  3547                           ;my_i2c.c: 332: SSPCON1 |= 0b00100000;
  3548  001B32  8AC6               	bsf	4038,5,c	;volatile
  3549  001B34  0012               	return	
  3550  001B36                     __end_of_i2c_configure_slave:
  3551                           	opt stack 0
  3552                           tblptru	equ	0xFF8
  3553                           tblptrh	equ	0xFF7
  3554                           tblptrl	equ	0xFF6
  3555                           tablat	equ	0xFF5
  3556                           prodh	equ	0xFF4
  3557                           prodl	equ	0xFF3
  3558                           postinc0	equ	0xFEE
  3559                           wreg	equ	0xFE8
  3560                           indf1	equ	0xFE7
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           postinc2	equ	0xFDE
  3565                           postdec2	equ	0xFDD
  3566                           fsr2h	equ	0xFDA
  3567                           fsr2l	equ	0xFD9
  3568                           status	equ	0xFD8
  3569                           
  3570 ;; *************** function _enable_interrupts *****************
  3571 ;; Defined at:
  3572 ;;		line 16 in file "../src/interrupts.c"
  3573 ;; Parameters:    Size  Location     Type
  3574 ;;		None
  3575 ;; Auto vars:     Size  Location     Type
  3576 ;;		None
  3577 ;; Return value:  Size  Location     Type
  3578 ;;		None               void
  3579 ;; Registers used:
  3580 ;;		None
  3581 ;; Tracked objects:
  3582 ;;		On entry : 0/0
  3583 ;;		On exit  : 0/0
  3584 ;;		Unchanged: 0/0
  3585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3586 ;;      Params:         0       0       0       0       0
  3587 ;;      Locals:         0       0       0       0       0
  3588 ;;      Temps:          0       0       0       0       0
  3589 ;;      Totals:         0       0       0       0       0
  3590 ;;Total ram usage:        0 bytes
  3591 ;; Hardware stack levels used:    1
  3592 ;; Hardware stack levels required when called:   10
  3593 ;; This function calls:
  3594 ;;		Nothing
  3595 ;; This function is called by:
  3596 ;;		_main
  3597 ;; This function uses a non-reentrant model
  3598 ;;
  3599                           
  3600                           	psect	text16
  3601  001C52                     __ptext16:
  3602                           	opt stack 0
  3603  001C52                     _enable_interrupts:
  3604                           	opt stack 20
  3605                           
  3606                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  3607                           
  3608                           ;incstack = 0
  3609  001C52  8ED0               	bsf	4048,7,c	;volatile
  3610                           
  3611                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  3612  001C54  8EF2               	bsf	intcon,7,c	;volatile
  3613                           
  3614                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  3615  001C56  8CF2               	bsf	intcon,6,c	;volatile
  3616  001C58  0012               	return	
  3617  001C5A                     __end_of_enable_interrupts:
  3618                           	opt stack 0
  3619                           tblptru	equ	0xFF8
  3620                           tblptrh	equ	0xFF7
  3621                           tblptrl	equ	0xFF6
  3622                           tablat	equ	0xFF5
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           intcon	equ	0xFF2
  3626                           postinc0	equ	0xFEE
  3627                           wreg	equ	0xFE8
  3628                           indf1	equ	0xFE7
  3629                           fsr1h	equ	0xFE2
  3630                           fsr1l	equ	0xFE1
  3631                           indf2	equ	0xFDF
  3632                           postinc2	equ	0xFDE
  3633                           postdec2	equ	0xFDD
  3634                           fsr2h	equ	0xFDA
  3635                           fsr2l	equ	0xFD9
  3636                           status	equ	0xFD8
  3637                           
  3638 ;; *************** function _block_on_To_msgqueues *****************
  3639 ;; Defined at:
  3640 ;;		line 258 in file "../src/messages.c"
  3641 ;; Parameters:    Size  Location     Type
  3642 ;;		None
  3643 ;; Auto vars:     Size  Location     Type
  3644 ;;		None
  3645 ;; Return value:  Size  Location     Type
  3646 ;;		None               void
  3647 ;; Registers used:
  3648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3649 ;; Tracked objects:
  3650 ;;		On entry : 0/0
  3651 ;;		On exit  : 0/0
  3652 ;;		Unchanged: 0/0
  3653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3654 ;;      Params:         0       0       0       0       0
  3655 ;;      Locals:         0       0       0       0       0
  3656 ;;      Temps:          0       0       1       0       0
  3657 ;;      Totals:         0       0       1       0       0
  3658 ;;Total ram usage:        1 bytes
  3659 ;; Hardware stack levels used:    1
  3660 ;; Hardware stack levels required when called:   13
  3661 ;; This function calls:
  3662 ;;		_Delay1KTCYx
  3663 ;;		_check_msg
  3664 ;;		_in_main
  3665 ;; This function is called by:
  3666 ;;		_main
  3667 ;; This function uses a non-reentrant model
  3668 ;;
  3669                           
  3670                           	psect	text17
  3671  0012BA                     __ptext17:
  3672                           	opt stack 0
  3673  0012BA                     _block_on_To_msgqueues:
  3674                           	opt stack 17
  3675                           
  3676                           ;messages.c: 259: if (!in_main()) {
  3677                           
  3678                           ;incstack = 0
  3679  0012BA  ECDD  F00B         	call	_in_main	;wreg free
  3680  0012BE  0101               	movlb	1	; () banked
  3681  0012C0  0101               	movlb	1	; () banked
  3682  0012C2  51A7               	movf	(?_in_main+1)& (0+255),w,b
  3683  0012C4  0101               	movlb	1	; () banked
  3684  0012C6  11A6               	iorwf	?_in_main& (0+255),w,b
  3685  0012C8  B4D8               	btfsc	status,2,c
  3686  0012CA  0012               	return	
  3687                           
  3688                           ; BSR set to: 1
  3689                           ;messages.c: 261: }
  3690                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3691                           
  3692                           ; BSR set to: 1
  3693                           
  3694                           ; BSR set to: 1
  3695                           ;messages.c: 260: return;
  3696  0012CC  0101               	movlb	1	; () banked
  3697  0012CE  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3698  0012D0  0E01               	movlw	1
  3699  0012D2  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  3700  0012D4  0101               	movlb	1	; () banked
  3701  0012D6  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3702  0012D8                     l3668:
  3703                           
  3704                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3705  0012D8  0101               	movlb	1	; () banked
  3706  0012DA  0E01               	movlw	high _ToMainHigh_MQ
  3707  0012DC  0101               	movlb	1	; () banked
  3708  0012DE  0101               	movlb	1	; () banked
  3709  0012E0  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  3710  0012E2  0101               	movlb	1	; () banked
  3711  0012E4  0E36               	movlw	low _ToMainHigh_MQ
  3712  0012E6  0101               	movlb	1	; () banked
  3713  0012E8  0101               	movlb	1	; () banked
  3714  0012EA  6FA2               	movwf	check_msg@qptr& (0+255),b
  3715  0012EC  ECF2  F00C         	call	_check_msg	;wreg free
  3716  0012F0  0900               	iorlw	0
  3717  0012F2  B4D8               	btfsc	status,2,c
  3718  0012F4  D007               	goto	l3674
  3719                           
  3720                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3721  0012F6  0101               	movlb	1	; () banked
  3722  0012F8  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3723  0012FA  0E00               	movlw	0
  3724  0012FC  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  3725  0012FE  0101               	movlb	1	; () banked
  3726  001300  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3727  001302  0012               	return	
  3728  001304                     l3674:
  3729                           
  3730                           ;messages.c: 271: }
  3731                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3732  001304  0101               	movlb	1	; () banked
  3733  001306  0E01               	movlw	high _ToMainLow_MQ
  3734  001308  0101               	movlb	1	; () banked
  3735  00130A  0101               	movlb	1	; () banked
  3736  00130C  6FA3               	movwf	(check_msg@qptr+1)& (0+255),b
  3737  00130E  0101               	movlb	1	; () banked
  3738  001310  0E6C               	movlw	low _ToMainLow_MQ
  3739  001312  0101               	movlb	1	; () banked
  3740  001314  0101               	movlb	1	; () banked
  3741  001316  6FA2               	movwf	check_msg@qptr& (0+255),b
  3742  001318  ECF2  F00C         	call	_check_msg	;wreg free
  3743  00131C  0900               	iorlw	0
  3744  00131E  B4D8               	btfsc	status,2,c
  3745  001320  D007               	goto	l3680
  3746                           
  3747                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3748  001322  0101               	movlb	1	; () banked
  3749  001324  6FA8               	movwf	??_block_on_To_msgqueues& (0+255),b
  3750  001326  0E00               	movlw	0
  3751  001328  6E4C               	movwf	_MQ_Main_Willing_to_block,c
  3752  00132A  0101               	movlb	1	; () banked
  3753  00132C  51A8               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3754  00132E  0012               	return	
  3755  001330                     l3680:
  3756                           
  3757                           ;messages.c: 278: }
  3758                           ;messages.c: 279: Delay1KTCYx(10);
  3759  001330  0E0A               	movlw	10
  3760  001332  ECCD  F00D         	call	_Delay1KTCYx
  3761  001336  D7D0               	goto	l3668
  3762  001338                     __end_of_block_on_To_msgqueues:
  3763                           	opt stack 0
  3764                           tblptru	equ	0xFF8
  3765                           tblptrh	equ	0xFF7
  3766                           tblptrl	equ	0xFF6
  3767                           tablat	equ	0xFF5
  3768                           prodh	equ	0xFF4
  3769                           prodl	equ	0xFF3
  3770                           intcon	equ	0xFF2
  3771                           postinc0	equ	0xFEE
  3772                           wreg	equ	0xFE8
  3773                           indf1	equ	0xFE7
  3774                           fsr1h	equ	0xFE2
  3775                           fsr1l	equ	0xFE1
  3776                           indf2	equ	0xFDF
  3777                           postinc2	equ	0xFDE
  3778                           postdec2	equ	0xFDD
  3779                           fsr2h	equ	0xFDA
  3780                           fsr2l	equ	0xFD9
  3781                           status	equ	0xFD8
  3782                           
  3783 ;; *************** function _in_main *****************
  3784 ;; Defined at:
  3785 ;;		line 44 in file "../src/interrupts.c"
  3786 ;; Parameters:    Size  Location     Type
  3787 ;;		None
  3788 ;; Auto vars:     Size  Location     Type
  3789 ;;		None
  3790 ;; Return value:  Size  Location     Type
  3791 ;;                  2    4[BANK1 ] int 
  3792 ;; Registers used:
  3793 ;;		wreg, status,2, status,0, cstack
  3794 ;; Tracked objects:
  3795 ;;		On entry : 0/0
  3796 ;;		On exit  : 0/0
  3797 ;;		Unchanged: 0/0
  3798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3799 ;;      Params:         0       0       2       0       0
  3800 ;;      Locals:         0       0       0       0       0
  3801 ;;      Temps:          0       0       0       0       0
  3802 ;;      Totals:         0       0       2       0       0
  3803 ;;Total ram usage:        2 bytes
  3804 ;; Hardware stack levels used:    1
  3805 ;; Hardware stack levels required when called:   12
  3806 ;; This function calls:
  3807 ;;		_in_high_int
  3808 ;;		_in_low_int
  3809 ;; This function is called by:
  3810 ;;		_block_on_To_msgqueues
  3811 ;; This function uses a non-reentrant model
  3812 ;;
  3813                           
  3814                           	psect	text18
  3815  0017BA                     __ptext18:
  3816                           	opt stack 0
  3817  0017BA                     _in_main:
  3818                           	opt stack 17
  3819                           
  3820                           ;interrupts.c: 45: if ((!in_low_int()) && (!in_high_int())) {
  3821                           
  3822                           ;incstack = 0
  3823  0017BA  EC97  F00B         	call	_in_low_int	;wreg free
  3824  0017BE  0101               	movlb	1	; () banked
  3825  0017C0  0101               	movlb	1	; () banked
  3826  0017C2  51A5               	movf	(?_in_low_int+1)& (0+255),w,b
  3827  0017C4  0101               	movlb	1	; () banked
  3828  0017C6  11A4               	iorwf	?_in_low_int& (0+255),w,b
  3829  0017C8  A4D8               	btfss	status,2,c
  3830  0017CA  D011               	goto	l3316
  3831                           
  3832                           ; BSR set to: 1
  3833  0017CC  ECF4  F00D         	call	_in_high_int	;wreg free
  3834  0017D0  0101               	movlb	1	; () banked
  3835  0017D2  0101               	movlb	1	; () banked
  3836  0017D4  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  3837  0017D6  0101               	movlb	1	; () banked
  3838  0017D8  11A2               	iorwf	?_in_high_int& (0+255),w,b
  3839  0017DA  A4D8               	btfss	status,2,c
  3840  0017DC  D008               	goto	l3316
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;interrupts.c: 46: return (1);
  3844  0017DE  0E00               	movlw	0
  3845  0017E0  0101               	movlb	1	; () banked
  3846  0017E2  0101               	movlb	1	; () banked
  3847  0017E4  6FA7               	movwf	(?_in_main+1)& (0+255),b
  3848  0017E6  0E01               	movlw	1
  3849  0017E8  0101               	movlb	1	; () banked
  3850  0017EA  6FA6               	movwf	?_in_main& (0+255),b
  3851  0017EC  0012               	return	
  3852  0017EE                     l3316:
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;interrupts.c: 48: return (0);
  3856  0017EE  0E00               	movlw	0
  3857  0017F0  0101               	movlb	1	; () banked
  3858  0017F2  0101               	movlb	1	; () banked
  3859  0017F4  6FA7               	movwf	(?_in_main+1)& (0+255),b
  3860  0017F6  0E00               	movlw	0
  3861  0017F8  0101               	movlb	1	; () banked
  3862  0017FA  6FA6               	movwf	?_in_main& (0+255),b
  3863  0017FC  0012               	return	
  3864  0017FE                     __end_of_in_main:
  3865                           	opt stack 0
  3866                           tblptru	equ	0xFF8
  3867                           tblptrh	equ	0xFF7
  3868                           tblptrl	equ	0xFF6
  3869                           tablat	equ	0xFF5
  3870                           prodh	equ	0xFF4
  3871                           prodl	equ	0xFF3
  3872                           intcon	equ	0xFF2
  3873                           postinc0	equ	0xFEE
  3874                           wreg	equ	0xFE8
  3875                           indf1	equ	0xFE7
  3876                           fsr1h	equ	0xFE2
  3877                           fsr1l	equ	0xFE1
  3878                           indf2	equ	0xFDF
  3879                           postinc2	equ	0xFDE
  3880                           postdec2	equ	0xFDD
  3881                           fsr2h	equ	0xFDA
  3882                           fsr2l	equ	0xFD9
  3883                           status	equ	0xFD8
  3884                           
  3885 ;; *************** function _in_low_int *****************
  3886 ;; Defined at:
  3887 ;;		line 33 in file "../src/interrupts.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;		None
  3890 ;; Auto vars:     Size  Location     Type
  3891 ;;		None
  3892 ;; Return value:  Size  Location     Type
  3893 ;;                  2    2[BANK1 ] int 
  3894 ;; Registers used:
  3895 ;;		wreg, status,2, status,0, cstack
  3896 ;; Tracked objects:
  3897 ;;		On entry : 0/0
  3898 ;;		On exit  : 0/0
  3899 ;;		Unchanged: 0/0
  3900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3901 ;;      Params:         0       0       2       0       0
  3902 ;;      Locals:         0       0       0       0       0
  3903 ;;      Temps:          0       0       0       0       0
  3904 ;;      Totals:         0       0       2       0       0
  3905 ;;Total ram usage:        2 bytes
  3906 ;; Hardware stack levels used:    1
  3907 ;; Hardware stack levels required when called:   11
  3908 ;; This function calls:
  3909 ;;		_in_high_int
  3910 ;; This function is called by:
  3911 ;;		_in_main
  3912 ;; This function uses a non-reentrant model
  3913 ;;
  3914                           
  3915                           	psect	text19
  3916  00172E                     __ptext19:
  3917                           	opt stack 0
  3918  00172E                     _in_low_int:
  3919                           	opt stack 17
  3920                           
  3921                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  3922                           
  3923                           ; BSR set to: 1
  3924                           ;incstack = 0
  3925  00172E  ACF2               	btfss	intcon,6,c	;volatile
  3926  001730  D008               	goto	l3294
  3927                           
  3928                           ;interrupts.c: 36: return (0);
  3929  001732  0E00               	movlw	0
  3930  001734  0101               	movlb	1	; () banked
  3931  001736  0101               	movlb	1	; () banked
  3932  001738  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  3933  00173A  0E00               	movlw	0
  3934  00173C  0101               	movlb	1	; () banked
  3935  00173E  6FA4               	movwf	?_in_low_int& (0+255),b
  3936  001740  0012               	return	
  3937  001742                     l3294:
  3938  001742  ECF4  F00D         	call	_in_high_int	;wreg free
  3939  001746  0101               	movlb	1	; () banked
  3940  001748  0101               	movlb	1	; () banked
  3941  00174A  51A3               	movf	(?_in_high_int+1)& (0+255),w,b
  3942  00174C  0101               	movlb	1	; () banked
  3943  00174E  11A2               	iorwf	?_in_high_int& (0+255),w,b
  3944  001750  B4D8               	btfsc	status,2,c
  3945  001752  D008               	goto	l3302
  3946                           
  3947                           ; BSR set to: 1
  3948                           ;interrupts.c: 38: return (0);
  3949  001754  0E00               	movlw	0
  3950  001756  0101               	movlb	1	; () banked
  3951  001758  0101               	movlb	1	; () banked
  3952  00175A  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  3953  00175C  0E00               	movlw	0
  3954  00175E  0101               	movlb	1	; () banked
  3955  001760  6FA4               	movwf	?_in_low_int& (0+255),b
  3956  001762  0012               	return	
  3957  001764                     l3302:
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;interrupts.c: 40: return (1);
  3961  001764  0E00               	movlw	0
  3962  001766  0101               	movlb	1	; () banked
  3963  001768  0101               	movlb	1	; () banked
  3964  00176A  6FA5               	movwf	(?_in_low_int+1)& (0+255),b
  3965  00176C  0E01               	movlw	1
  3966  00176E  0101               	movlb	1	; () banked
  3967  001770  6FA4               	movwf	?_in_low_int& (0+255),b
  3968  001772  0012               	return	
  3969  001774                     __end_of_in_low_int:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           postinc0	equ	0xFEE
  3979                           wreg	equ	0xFE8
  3980                           indf1	equ	0xFE7
  3981                           fsr1h	equ	0xFE2
  3982                           fsr1l	equ	0xFE1
  3983                           indf2	equ	0xFDF
  3984                           postinc2	equ	0xFDE
  3985                           postdec2	equ	0xFDD
  3986                           fsr2h	equ	0xFDA
  3987                           fsr2l	equ	0xFD9
  3988                           status	equ	0xFD8
  3989                           
  3990 ;; *************** function _in_high_int *****************
  3991 ;; Defined at:
  3992 ;;		line 24 in file "../src/interrupts.c"
  3993 ;; Parameters:    Size  Location     Type
  3994 ;;		None
  3995 ;; Auto vars:     Size  Location     Type
  3996 ;;		None
  3997 ;; Return value:  Size  Location     Type
  3998 ;;                  2    0[BANK1 ] int 
  3999 ;; Registers used:
  4000 ;;		wreg, status,2
  4001 ;; Tracked objects:
  4002 ;;		On entry : 0/0
  4003 ;;		On exit  : 0/0
  4004 ;;		Unchanged: 0/0
  4005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4006 ;;      Params:         0       0       2       0       0
  4007 ;;      Locals:         0       0       0       0       0
  4008 ;;      Temps:          0       0       0       0       0
  4009 ;;      Totals:         0       0       2       0       0
  4010 ;;Total ram usage:        2 bytes
  4011 ;; Hardware stack levels used:    1
  4012 ;; Hardware stack levels required when called:   10
  4013 ;; This function calls:
  4014 ;;		Nothing
  4015 ;; This function is called by:
  4016 ;;		_in_low_int
  4017 ;;		_in_main
  4018 ;; This function uses a non-reentrant model
  4019 ;;
  4020                           
  4021                           	psect	text20
  4022  001BE8                     __ptext20:
  4023                           	opt stack 0
  4024  001BE8                     _in_high_int:
  4025                           	opt stack 17
  4026                           
  4027                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  4028                           
  4029                           ; BSR set to: 1
  4030                           ;incstack = 0
  4031  001BE8  0E00               	movlw	0
  4032  001BEA  AEF2               	btfss	intcon,7,c	;volatile
  4033  001BEC  0E01               	movlw	1
  4034  001BEE  0101               	movlb	1	; () banked
  4035  001BF0  0101               	movlb	1	; () banked
  4036  001BF2  6FA2               	movwf	?_in_high_int& (0+255),b
  4037  001BF4  0101               	movlb	1	; () banked
  4038  001BF6  6BA3               	clrf	(?_in_high_int+1)& (0+255),b
  4039  001BF8  0012               	return	
  4040  001BFA                     __end_of_in_high_int:
  4041                           	opt stack 0
  4042                           tblptru	equ	0xFF8
  4043                           tblptrh	equ	0xFF7
  4044                           tblptrl	equ	0xFF6
  4045                           tablat	equ	0xFF5
  4046                           prodh	equ	0xFF4
  4047                           prodl	equ	0xFF3
  4048                           intcon	equ	0xFF2
  4049                           postinc0	equ	0xFEE
  4050                           wreg	equ	0xFE8
  4051                           indf1	equ	0xFE7
  4052                           fsr1h	equ	0xFE2
  4053                           fsr1l	equ	0xFE1
  4054                           indf2	equ	0xFDF
  4055                           postinc2	equ	0xFDE
  4056                           postdec2	equ	0xFDD
  4057                           fsr2h	equ	0xFDA
  4058                           fsr2l	equ	0xFD9
  4059                           status	equ	0xFD8
  4060                           
  4061 ;; *************** function _check_msg *****************
  4062 ;; Defined at:
  4063 ;;		line 222 in file "../src/messages.c"
  4064 ;; Parameters:    Size  Location     Type
  4065 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4066 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      unsigned char 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4078 ;;      Params:         0       0       2       0       0
  4079 ;;      Locals:         0       0       0       0       0
  4080 ;;      Temps:          0       0       1       0       0
  4081 ;;      Totals:         0       0       3       0       0
  4082 ;;Total ram usage:        3 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:   10
  4085 ;; This function calls:
  4086 ;;		Nothing
  4087 ;; This function is called by:
  4088 ;;		_block_on_To_msgqueues
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           
  4092                           	psect	text21
  4093  0019E4                     __ptext21:
  4094                           	opt stack 0
  4095  0019E4                     _check_msg:
  4096                           	opt stack 19
  4097                           
  4098                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4099                           
  4100                           ; BSR set to: 1
  4101                           ;incstack = 0
  4102  0019E4  0101               	movlb	1	; () banked
  4103  0019E6  EE20 F035          	lfsr	2,53
  4104  0019EA  0101               	movlb	1	; () banked
  4105  0019EC  51A2               	movf	check_msg@qptr& (0+255),w,b
  4106  0019EE  26D9               	addwf	fsr2l,f,c
  4107  0019F0  0101               	movlb	1	; () banked
  4108  0019F2  51A3               	movf	(check_msg@qptr+1)& (0+255),w,b
  4109  0019F4  22DA               	addwfc	fsr2h,f,c
  4110  0019F6  50DF               	movf	indf2,w,c
  4111  0019F8  0101               	movlb	1	; () banked
  4112  0019FA  6FA4               	movwf	??_check_msg& (0+255),b
  4113  0019FC  0101               	movlb	1	; () banked
  4114  0019FE  51A4               	movf	??_check_msg& (0+255),w,b
  4115  001A00  0D0D               	mullw	13
  4116  001A02  50F3               	movf	prodl,w,c
  4117  001A04  0101               	movlb	1	; () banked
  4118  001A06  0101               	movlb	1	; () banked
  4119  001A08  25A2               	addwf	check_msg@qptr& (0+255),w,b
  4120  001A0A  6ED9               	movwf	fsr2l,c
  4121  001A0C  50F4               	movf	prodh,w,c
  4122  001A0E  0101               	movlb	1	; () banked
  4123  001A10  0101               	movlb	1	; () banked
  4124  001A12  21A3               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4125  001A14  6EDA               	movwf	fsr2h,c
  4126  001A16  50DF               	movf	indf2,w,c
  4127  001A18  0012               	return	
  4128  001A1A                     __end_of_check_msg:
  4129                           	opt stack 0
  4130                           tblptru	equ	0xFF8
  4131                           tblptrh	equ	0xFF7
  4132                           tblptrl	equ	0xFF6
  4133                           tablat	equ	0xFF5
  4134                           prodh	equ	0xFF4
  4135                           prodl	equ	0xFF3
  4136                           intcon	equ	0xFF2
  4137                           postinc0	equ	0xFEE
  4138                           wreg	equ	0xFE8
  4139                           indf1	equ	0xFE7
  4140                           fsr1h	equ	0xFE2
  4141                           fsr1l	equ	0xFE1
  4142                           indf2	equ	0xFDF
  4143                           postinc2	equ	0xFDE
  4144                           postdec2	equ	0xFDD
  4145                           fsr2h	equ	0xFDA
  4146                           fsr2l	equ	0xFD9
  4147                           status	equ	0xFD8
  4148                           
  4149 ;; *************** function _Delay1KTCYx *****************
  4150 ;; Defined at:
  4151 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4152 ;; Parameters:    Size  Location     Type
  4153 ;;  unit            1    wreg     unsigned char 
  4154 ;; Auto vars:     Size  Location     Type
  4155 ;;  unit            1    0[BANK1 ] unsigned char 
  4156 ;; Return value:  Size  Location     Type
  4157 ;;		None               void
  4158 ;; Registers used:
  4159 ;;		wreg
  4160 ;; Tracked objects:
  4161 ;;		On entry : 0/0
  4162 ;;		On exit  : 0/0
  4163 ;;		Unchanged: 0/0
  4164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4165 ;;      Params:         0       0       0       0       0
  4166 ;;      Locals:         0       0       1       0       0
  4167 ;;      Temps:          0       0       0       0       0
  4168 ;;      Totals:         0       0       1       0       0
  4169 ;;Total ram usage:        1 bytes
  4170 ;; Hardware stack levels used:    1
  4171 ;; Hardware stack levels required when called:   10
  4172 ;; This function calls:
  4173 ;;		Nothing
  4174 ;; This function is called by:
  4175 ;;		_block_on_To_msgqueues
  4176 ;; This function uses a non-reentrant model
  4177 ;;
  4178                           
  4179                           	psect	text22
  4180  001B9A                     __ptext22:
  4181                           	opt stack 0
  4182  001B9A                     _Delay1KTCYx:
  4183                           	opt stack 19
  4184                           
  4185                           ; BSR set to: 1
  4186                           ;incstack = 0
  4187                           ;Delay1KTCYx@unit stored from wreg
  4188  001B9A  CFE8 F1A2          	movff	wreg,Delay1KTCYx@unit
  4189  001B9E                     l900:
  4190  001B9E  0EFA               	movlw	250
  4191  001BA0                     u2857:
  4192  001BA0  F000               	nop	
  4193  001BA2  2EE8               	decfsz	wreg,f,c
  4194  001BA4  D7FD               	goto	u2857
  4195  001BA6  0101               	movlb	1	; () banked
  4196  001BA8  0101               	movlb	1	; () banked
  4197  001BAA  2FA2               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4198  001BAC  D7F8               	goto	l900
  4199  001BAE  0012               	return	
  4200  001BB0                     __end_of_Delay1KTCYx:
  4201                           	opt stack 0
  4202                           tblptru	equ	0xFF8
  4203                           tblptrh	equ	0xFF7
  4204                           tblptrl	equ	0xFF6
  4205                           tablat	equ	0xFF5
  4206                           prodh	equ	0xFF4
  4207                           prodl	equ	0xFF3
  4208                           intcon	equ	0xFF2
  4209                           postinc0	equ	0xFEE
  4210                           wreg	equ	0xFE8
  4211                           indf1	equ	0xFE7
  4212                           fsr1h	equ	0xFE2
  4213                           fsr1l	equ	0xFE1
  4214                           indf2	equ	0xFDF
  4215                           postinc2	equ	0xFDE
  4216                           postdec2	equ	0xFDD
  4217                           fsr2h	equ	0xFDA
  4218                           fsr2l	equ	0xFD9
  4219                           status	equ	0xFD8
  4220                           
  4221 ;; *************** function _ToMainLow_recvmsg *****************
  4222 ;; Defined at:
  4223 ;;		line 112 in file "../src/messages.c"
  4224 ;; Parameters:    Size  Location     Type
  4225 ;;  maxlength       1    wreg     unsigned char 
  4226 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4227 ;;		 -> main@msgtype(1), 
  4228 ;;  data            2   26[BANK1 ] PTR void 
  4229 ;;		 -> main@msgbuffer(11), 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4232 ;; Return value:  Size  Location     Type
  4233 ;;                  1    wreg      char 
  4234 ;; Registers used:
  4235 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4236 ;; Tracked objects:
  4237 ;;		On entry : 0/0
  4238 ;;		On exit  : 0/0
  4239 ;;		Unchanged: 0/0
  4240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4241 ;;      Params:         0       0       4       0       0
  4242 ;;      Locals:         0       0       1       0       0
  4243 ;;      Temps:          0       0       0       0       0
  4244 ;;      Totals:         0       0       5       0       0
  4245 ;;Total ram usage:        5 bytes
  4246 ;; Hardware stack levels used:    1
  4247 ;; Hardware stack levels required when called:   12
  4248 ;; This function calls:
  4249 ;;		_recv_msg
  4250 ;; This function is called by:
  4251 ;;		_main
  4252 ;; This function uses a non-reentrant model
  4253 ;;
  4254                           
  4255                           	psect	text23
  4256  0017FE                     __ptext23:
  4257                           	opt stack 0
  4258  0017FE                     _ToMainLow_recvmsg:
  4259                           	opt stack 18
  4260                           
  4261                           ; BSR set to: 1
  4262                           ;incstack = 0
  4263                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4264  0017FE  CFE8 F1BE          	movff	wreg,ToMainLow_recvmsg@maxlength
  4265                           
  4266                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4267  001802  0101               	movlb	1	; () banked
  4268  001804  0E01               	movlw	high _ToMainLow_MQ
  4269  001806  0101               	movlb	1	; () banked
  4270  001808  0101               	movlb	1	; () banked
  4271  00180A  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  4272  00180C  0101               	movlb	1	; () banked
  4273  00180E  0E6C               	movlw	low _ToMainLow_MQ
  4274  001810  0101               	movlb	1	; () banked
  4275  001812  0101               	movlb	1	; () banked
  4276  001814  6FAC               	movwf	recv_msg@qptr& (0+255),b
  4277  001816  C1BE  F1AE         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4278  00181A  0101               	movlb	1	; () banked
  4279  00181C  0101               	movlb	1	; () banked
  4280  00181E  C1BB  F1B0         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4281  001822  0101               	movlb	1	; () banked
  4282  001824  0101               	movlb	1	; () banked
  4283  001826  C1BA  F1AF         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4284  00182A  0101               	movlb	1	; () banked
  4285  00182C  0101               	movlb	1	; () banked
  4286  00182E  C1BD  F1B2         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4287  001832  0101               	movlb	1	; () banked
  4288  001834  0101               	movlb	1	; () banked
  4289  001836  C1BC  F1B1         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4290  00183A  ECCD  F004         	call	_recv_msg	;wreg free
  4291  00183E  0012               	return	
  4292  001840                     __end_of_ToMainLow_recvmsg:
  4293                           	opt stack 0
  4294                           tblptru	equ	0xFF8
  4295                           tblptrh	equ	0xFF7
  4296                           tblptrl	equ	0xFF6
  4297                           tablat	equ	0xFF5
  4298                           prodh	equ	0xFF4
  4299                           prodl	equ	0xFF3
  4300                           intcon	equ	0xFF2
  4301                           postinc0	equ	0xFEE
  4302                           wreg	equ	0xFE8
  4303                           indf1	equ	0xFE7
  4304                           fsr1h	equ	0xFE2
  4305                           fsr1l	equ	0xFE1
  4306                           indf2	equ	0xFDF
  4307                           postinc2	equ	0xFDE
  4308                           postdec2	equ	0xFDD
  4309                           fsr2h	equ	0xFDA
  4310                           fsr2l	equ	0xFD9
  4311                           status	equ	0xFD8
  4312                           
  4313 ;; *************** function _ToMainHigh_recvmsg *****************
  4314 ;; Defined at:
  4315 ;;		line 135 in file "../src/messages.c"
  4316 ;; Parameters:    Size  Location     Type
  4317 ;;  maxlength       1    wreg     unsigned char 
  4318 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4319 ;;		 -> main@msgtype(1), 
  4320 ;;  data            2   26[BANK1 ] PTR void 
  4321 ;;		 -> main@msgbuffer(11), 
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      char 
  4326 ;; Registers used:
  4327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4333 ;;      Params:         0       0       4       0       0
  4334 ;;      Locals:         0       0       1       0       0
  4335 ;;      Temps:          0       0       0       0       0
  4336 ;;      Totals:         0       0       5       0       0
  4337 ;;Total ram usage:        5 bytes
  4338 ;; Hardware stack levels used:    1
  4339 ;; Hardware stack levels required when called:   12
  4340 ;; This function calls:
  4341 ;;		_recv_msg
  4342 ;; This function is called by:
  4343 ;;		_main
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347                           	psect	text24
  4348  001840                     __ptext24:
  4349                           	opt stack 0
  4350  001840                     _ToMainHigh_recvmsg:
  4351                           	opt stack 18
  4352                           
  4353                           ;incstack = 0
  4354                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4355  001840  CFE8 F1BE          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4356                           
  4357                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4358  001844  0101               	movlb	1	; () banked
  4359  001846  0E01               	movlw	high _ToMainHigh_MQ
  4360  001848  0101               	movlb	1	; () banked
  4361  00184A  0101               	movlb	1	; () banked
  4362  00184C  6FAD               	movwf	(recv_msg@qptr+1)& (0+255),b
  4363  00184E  0101               	movlb	1	; () banked
  4364  001850  0E36               	movlw	low _ToMainHigh_MQ
  4365  001852  0101               	movlb	1	; () banked
  4366  001854  0101               	movlb	1	; () banked
  4367  001856  6FAC               	movwf	recv_msg@qptr& (0+255),b
  4368  001858  C1BE  F1AE         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4369  00185C  0101               	movlb	1	; () banked
  4370  00185E  0101               	movlb	1	; () banked
  4371  001860  C1BB  F1B0         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4372  001864  0101               	movlb	1	; () banked
  4373  001866  0101               	movlb	1	; () banked
  4374  001868  C1BA  F1AF         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4375  00186C  0101               	movlb	1	; () banked
  4376  00186E  0101               	movlb	1	; () banked
  4377  001870  C1BD  F1B2         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4378  001874  0101               	movlb	1	; () banked
  4379  001876  0101               	movlb	1	; () banked
  4380  001878  C1BC  F1B1         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4381  00187C  ECCD  F004         	call	_recv_msg	;wreg free
  4382  001880  0012               	return	
  4383  001882                     __end_of_ToMainHigh_recvmsg:
  4384                           	opt stack 0
  4385                           tblptru	equ	0xFF8
  4386                           tblptrh	equ	0xFF7
  4387                           tblptrl	equ	0xFF6
  4388                           tablat	equ	0xFF5
  4389                           prodh	equ	0xFF4
  4390                           prodl	equ	0xFF3
  4391                           intcon	equ	0xFF2
  4392                           postinc0	equ	0xFEE
  4393                           wreg	equ	0xFE8
  4394                           indf1	equ	0xFE7
  4395                           fsr1h	equ	0xFE2
  4396                           fsr1l	equ	0xFE1
  4397                           indf2	equ	0xFDF
  4398                           postinc2	equ	0xFDE
  4399                           postdec2	equ	0xFDD
  4400                           fsr2h	equ	0xFDA
  4401                           fsr2l	equ	0xFD9
  4402                           status	equ	0xFD8
  4403                           
  4404 ;; *************** function _recv_msg *****************
  4405 ;; Defined at:
  4406 ;;		line 63 in file "../src/messages.c"
  4407 ;; Parameters:    Size  Location     Type
  4408 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4409 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4410 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4411 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4412 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4413 ;;  data            2   15[BANK1 ] PTR void 
  4414 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4417 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4418 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4419 ;;  tlength         2   20[BANK1 ] unsigned int 
  4420 ;;  slot            1   19[BANK1 ] unsigned char 
  4421 ;; Return value:  Size  Location     Type
  4422 ;;                  1    wreg      char 
  4423 ;; Registers used:
  4424 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4425 ;; Tracked objects:
  4426 ;;		On entry : 0/0
  4427 ;;		On exit  : 0/0
  4428 ;;		Unchanged: 0/0
  4429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4430 ;;      Params:         0       0       7       0       0
  4431 ;;      Locals:         0       0       5       0       0
  4432 ;;      Temps:          0       0       2       0       0
  4433 ;;      Totals:         0       0      14       0       0
  4434 ;;Total ram usage:       14 bytes
  4435 ;; Hardware stack levels used:    1
  4436 ;; Hardware stack levels required when called:   11
  4437 ;; This function calls:
  4438 ;;		_memcpy
  4439 ;; This function is called by:
  4440 ;;		_ToMainLow_recvmsg
  4441 ;;		_ToMainHigh_recvmsg
  4442 ;;		_FromMainLow_recvmsg
  4443 ;; This function uses a non-reentrant model
  4444 ;;
  4445                           
  4446                           	psect	text25
  4447  00099A                     __ptext25:
  4448                           	opt stack 0
  4449  00099A                     _recv_msg:
  4450                           	opt stack 18
  4451                           
  4452                           ;messages.c: 64: unsigned char slot;
  4453                           ;messages.c: 68: msg *qmsg;
  4454                           ;messages.c: 69: size_t tlength;
  4455                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4456                           
  4457                           ;incstack = 0
  4458  00099A  0101               	movlb	1	; () banked
  4459  00099C  EE20 F035          	lfsr	2,53
  4460  0009A0  0101               	movlb	1	; () banked
  4461  0009A2  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4462  0009A4  26D9               	addwf	fsr2l,f,c
  4463  0009A6  0101               	movlb	1	; () banked
  4464  0009A8  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4465  0009AA  22DA               	addwfc	fsr2h,f,c
  4466  0009AC  50DF               	movf	indf2,w,c
  4467  0009AE  0101               	movlb	1	; () banked
  4468  0009B0  0101               	movlb	1	; () banked
  4469  0009B2  6FB5               	movwf	recv_msg@slot& (0+255),b
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4473  0009B4  0101               	movlb	1	; () banked
  4474  0009B6  0101               	movlb	1	; () banked
  4475  0009B8  51B5               	movf	recv_msg@slot& (0+255),w,b
  4476  0009BA  0D0D               	mullw	13
  4477  0009BC  50F3               	movf	prodl,w,c
  4478  0009BE  0101               	movlb	1	; () banked
  4479  0009C0  0101               	movlb	1	; () banked
  4480  0009C2  25AC               	addwf	recv_msg@qptr& (0+255),w,b
  4481  0009C4  0101               	movlb	1	; () banked
  4482  0009C6  0101               	movlb	1	; () banked
  4483  0009C8  6FB8               	movwf	recv_msg@qmsg& (0+255),b
  4484  0009CA  50F4               	movf	prodh,w,c
  4485  0009CC  0101               	movlb	1	; () banked
  4486  0009CE  0101               	movlb	1	; () banked
  4487  0009D0  21AD               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4488  0009D2  0101               	movlb	1	; () banked
  4489  0009D4  6FB9               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4490                           
  4491                           ; BSR set to: 1
  4492                           ;messages.c: 74: if (qmsg->full == 1) {
  4493  0009D6  0E01               	movlw	1
  4494  0009D8  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  4495  0009DC  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4496  0009E0  62DF               	cpfseq	indf2,c
  4497  0009E2  D074               	goto	l3816
  4498                           
  4499                           ; BSR set to: 1
  4500                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4501  0009E4  0101               	movlb	1	; () banked
  4502  0009E6  EE20 F001          	lfsr	2,1
  4503  0009EA  0101               	movlb	1	; () banked
  4504  0009EC  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4505  0009EE  26D9               	addwf	fsr2l,f,c
  4506  0009F0  0101               	movlb	1	; () banked
  4507  0009F2  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4508  0009F4  22DA               	addwfc	fsr2h,f,c
  4509  0009F6  50DF               	movf	indf2,w,c
  4510  0009F8  0101               	movlb	1	; () banked
  4511  0009FA  0101               	movlb	1	; () banked
  4512  0009FC  5DAE               	subwf	recv_msg@maxlength& (0+255),w,b
  4513  0009FE  B0D8               	btfsc	status,0,c
  4514  000A00  D002               	goto	l3800
  4515                           
  4516                           ; BSR set to: 1
  4517                           ;messages.c: 77: return (-3);
  4518  000A02  0EFD               	movlw	253
  4519  000A04  0012               	return	
  4520  000A06                     l3800:
  4521                           
  4522                           ; BSR set to: 1
  4523                           ;messages.c: 78: }
  4524                           ;messages.c: 80: tlength = qmsg->length;
  4525  000A06  0101               	movlb	1	; () banked
  4526  000A08  EE20 F001          	lfsr	2,1
  4527  000A0C  0101               	movlb	1	; () banked
  4528  000A0E  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4529  000A10  26D9               	addwf	fsr2l,f,c
  4530  000A12  0101               	movlb	1	; () banked
  4531  000A14  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4532  000A16  22DA               	addwfc	fsr2h,f,c
  4533  000A18  50DF               	movf	indf2,w,c
  4534  000A1A  0101               	movlb	1	; () banked
  4535  000A1C  6FB3               	movwf	??_recv_msg& (0+255),b
  4536  000A1E  0101               	movlb	1	; () banked
  4537  000A20  51B3               	movf	??_recv_msg& (0+255),w,b
  4538  000A22  0101               	movlb	1	; () banked
  4539  000A24  0101               	movlb	1	; () banked
  4540  000A26  6FB6               	movwf	recv_msg@tlength& (0+255),b
  4541  000A28  0101               	movlb	1	; () banked
  4542  000A2A  6BB7               	clrf	(recv_msg@tlength+1)& (0+255),b
  4543                           
  4544                           ; BSR set to: 1
  4545                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4546  000A2C  0101               	movlb	1	; () banked
  4547  000A2E  0101               	movlb	1	; () banked
  4548  000A30  C1B2  F1A3         	movff	recv_msg@data+1,memcpy@d1+1
  4549  000A34  0101               	movlb	1	; () banked
  4550  000A36  0101               	movlb	1	; () banked
  4551  000A38  C1B1  F1A2         	movff	recv_msg@data,memcpy@d1
  4552  000A3C  0E03               	movlw	3
  4553  000A3E  0101               	movlb	1	; () banked
  4554  000A40  0101               	movlb	1	; () banked
  4555  000A42  25B8               	addwf	recv_msg@qmsg& (0+255),w,b
  4556  000A44  0101               	movlb	1	; () banked
  4557  000A46  6FB3               	movwf	??_recv_msg& (0+255),b
  4558  000A48  0E00               	movlw	0
  4559  000A4A  0101               	movlb	1	; () banked
  4560  000A4C  0101               	movlb	1	; () banked
  4561  000A4E  21B9               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4562  000A50  0101               	movlb	1	; () banked
  4563  000A52  6FB4               	movwf	(??_recv_msg+1)& (0+255),b
  4564  000A54  C1B3  F1A4         	movff	??_recv_msg,memcpy@s1
  4565  000A58  C1B4  F1A5         	movff	??_recv_msg+1,memcpy@s1+1
  4566  000A5C  C1B6  F1A6         	movff	recv_msg@tlength,memcpy@n
  4567  000A60  C1B7  F1A7         	movff	recv_msg@tlength+1,memcpy@n+1
  4568  000A64  ECEE  F00A         	call	_memcpy	;wreg free
  4569                           
  4570                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4571  000A68  0101               	movlb	1	; () banked
  4572  000A6A  EE20 F035          	lfsr	2,53
  4573  000A6E  0101               	movlb	1	; () banked
  4574  000A70  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4575  000A72  26D9               	addwf	fsr2l,f,c
  4576  000A74  0101               	movlb	1	; () banked
  4577  000A76  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4578  000A78  22DA               	addwfc	fsr2h,f,c
  4579  000A7A  0101               	movlb	1	; () banked
  4580  000A7C  EE10 F035          	lfsr	1,53
  4581  000A80  0101               	movlb	1	; () banked
  4582  000A82  51AC               	movf	recv_msg@qptr& (0+255),w,b
  4583  000A84  26E1               	addwf	fsr1l,f,c
  4584  000A86  0101               	movlb	1	; () banked
  4585  000A88  51AD               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4586  000A8A  22E2               	addwfc	fsr1h,f,c
  4587  000A8C  50E7               	movf	indf1,w,c
  4588  000A8E  0101               	movlb	1	; () banked
  4589  000A90  6FB3               	movwf	??_recv_msg& (0+255),b
  4590  000A92  0101               	movlb	1	; () banked
  4591  000A94  29B3               	incf	??_recv_msg& (0+255),w,b
  4592  000A96  0B03               	andlw	3
  4593  000A98  6EDF               	movwf	indf2,c
  4594                           
  4595                           ; BSR set to: 1
  4596                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4597  000A9A  0101               	movlb	1	; () banked
  4598  000A9C  EE20 F002          	lfsr	2,2
  4599  000AA0  0101               	movlb	1	; () banked
  4600  000AA2  51B8               	movf	recv_msg@qmsg& (0+255),w,b
  4601  000AA4  26D9               	addwf	fsr2l,f,c
  4602  000AA6  0101               	movlb	1	; () banked
  4603  000AA8  51B9               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4604  000AAA  22DA               	addwfc	fsr2h,f,c
  4605  000AAC  C1AF  FFE1         	movff	recv_msg@msgtype,fsr1l
  4606  000AB0  C1B0  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4607  000AB4  CFDF FFE7          	movff	indf2,indf1
  4608                           
  4609                           ; BSR set to: 1
  4610                           ;messages.c: 91: qmsg->full = 0;
  4611  000AB8  C1B8  FFD9         	movff	recv_msg@qmsg,fsr2l
  4612  000ABC  C1B9  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4613  000AC0  0E00               	movlw	0
  4614  000AC2  6EDF               	movwf	indf2,c
  4615                           
  4616                           ; BSR set to: 1
  4617                           ;messages.c: 92: return (tlength);
  4618  000AC4  0101               	movlb	1	; () banked
  4619  000AC6  0101               	movlb	1	; () banked
  4620  000AC8  51B6               	movf	recv_msg@tlength& (0+255),w,b
  4621  000ACA  0012               	return	
  4622  000ACC                     l3816:
  4623                           
  4624                           ; BSR set to: 1
  4625                           ;messages.c: 94: return (-4);
  4626  000ACC  0EFC               	movlw	252
  4627  000ACE  0012               	return	
  4628  000AD0                     __end_of_recv_msg:
  4629                           	opt stack 0
  4630                           tblptru	equ	0xFF8
  4631                           tblptrh	equ	0xFF7
  4632                           tblptrl	equ	0xFF6
  4633                           tablat	equ	0xFF5
  4634                           prodh	equ	0xFF4
  4635                           prodl	equ	0xFF3
  4636                           intcon	equ	0xFF2
  4637                           postinc0	equ	0xFEE
  4638                           wreg	equ	0xFE8
  4639                           indf1	equ	0xFE7
  4640                           fsr1h	equ	0xFE2
  4641                           fsr1l	equ	0xFE1
  4642                           indf2	equ	0xFDF
  4643                           postinc2	equ	0xFDE
  4644                           postdec2	equ	0xFDD
  4645                           fsr2h	equ	0xFDA
  4646                           fsr2l	equ	0xFD9
  4647                           status	equ	0xFD8
  4648                           
  4649 ;; *************** function _memcpy *****************
  4650 ;; Defined at:
  4651 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4652 ;; Parameters:    Size  Location     Type
  4653 ;;  d1              2    0[BANK1 ] PTR void 
  4654 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4655 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4656 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4657 ;;  s1              2    2[BANK1 ] PTR const void 
  4658 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4659 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4660 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4661 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4662 ;;		 -> main@uc(14), 
  4663 ;;  n               2    4[BANK1 ] unsigned int 
  4664 ;; Auto vars:     Size  Location     Type
  4665 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4666 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4667 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4668 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4669 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4670 ;;		 -> main@uc(14), 
  4671 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4672 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4673 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4674 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4675 ;; Return value:  Size  Location     Type
  4676 ;;                  2    0[BANK1 ] PTR void 
  4677 ;; Registers used:
  4678 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4679 ;; Tracked objects:
  4680 ;;		On entry : 0/0
  4681 ;;		On exit  : 0/0
  4682 ;;		Unchanged: 0/0
  4683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4684 ;;      Params:         0       0       6       0       0
  4685 ;;      Locals:         0       0       4       0       0
  4686 ;;      Temps:          0       0       0       0       0
  4687 ;;      Totals:         0       0      10       0       0
  4688 ;;Total ram usage:       10 bytes
  4689 ;; Hardware stack levels used:    1
  4690 ;; Hardware stack levels required when called:   10
  4691 ;; This function calls:
  4692 ;;		Nothing
  4693 ;; This function is called by:
  4694 ;;		_send_msg
  4695 ;;		_recv_msg
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text26
  4700  0015DC                     __ptext26:
  4701                           	opt stack 0
  4702  0015DC                     _memcpy:
  4703                           	opt stack 17
  4704                           
  4705                           ; BSR set to: 1
  4706                           ;incstack = 0
  4707  0015DC  0101               	movlb	1	; () banked
  4708  0015DE  0101               	movlb	1	; () banked
  4709  0015E0  C1A5  F1AB         	movff	memcpy@s1+1,memcpy@s+1
  4710  0015E4  0101               	movlb	1	; () banked
  4711  0015E6  0101               	movlb	1	; () banked
  4712  0015E8  C1A4  F1AA         	movff	memcpy@s1,memcpy@s
  4713  0015EC  0101               	movlb	1	; () banked
  4714  0015EE  0101               	movlb	1	; () banked
  4715  0015F0  C1A3  F1A9         	movff	memcpy@d1+1,memcpy@d+1
  4716  0015F4  0101               	movlb	1	; () banked
  4717  0015F6  0101               	movlb	1	; () banked
  4718  0015F8  C1A2  F1A8         	movff	memcpy@d1,memcpy@d
  4719  0015FC  D012               	goto	l3786
  4720  0015FE                     l3780:
  4721                           
  4722                           ; BSR set to: 1
  4723  0015FE  C1AA  FFD9         	movff	memcpy@s,fsr2l
  4724  001602  C1AB  FFDA         	movff	memcpy@s+1,fsr2h
  4725  001606  C1A8  FFE1         	movff	memcpy@d,fsr1l
  4726  00160A  C1A9  FFE2         	movff	memcpy@d+1,fsr1h
  4727  00160E  CFDF FFE7          	movff	indf2,indf1
  4728                           
  4729                           ; BSR set to: 1
  4730  001612  0101               	movlb	1	; () banked
  4731  001614  0101               	movlb	1	; () banked
  4732  001616  4BAA               	infsnz	memcpy@s& (0+255),f,b
  4733  001618  2BAB               	incf	(memcpy@s+1)& (0+255),f,b
  4734                           
  4735                           ; BSR set to: 1
  4736  00161A  0101               	movlb	1	; () banked
  4737  00161C  0101               	movlb	1	; () banked
  4738  00161E  4BA8               	infsnz	memcpy@d& (0+255),f,b
  4739  001620  2BA9               	incf	(memcpy@d+1)& (0+255),f,b
  4740  001622                     l3786:
  4741                           
  4742                           ; BSR set to: 1
  4743  001622  0101               	movlb	1	; () banked
  4744  001624  0101               	movlb	1	; () banked
  4745  001626  07A6               	decf	memcpy@n& (0+255),f,b
  4746  001628  A0D8               	btfss	status,0,c
  4747  00162A  07A7               	decf	(memcpy@n+1)& (0+255),f,b
  4748  00162C  0101               	movlb	1	; () banked
  4749  00162E  29A6               	incf	memcpy@n& (0+255),w,b
  4750  001630  B4D8               	btfsc	status,2,c
  4751  001632  29A7               	incf	(memcpy@n+1)& (0+255),w,b
  4752  001634  B4D8               	btfsc	status,2,c
  4753                           
  4754                           ; BSR set to: 1
  4755                           
  4756                           ; BSR set to: 1
  4757                           ;	Return value of _memcpy is never used
  4758  001636  0012               	return	
  4759  001638  D7E2               	goto	l3780
  4760  00163A                     __end_of_memcpy:
  4761                           	opt stack 0
  4762                           tblptru	equ	0xFF8
  4763                           tblptrh	equ	0xFF7
  4764                           tblptrl	equ	0xFF6
  4765                           tablat	equ	0xFF5
  4766                           prodh	equ	0xFF4
  4767                           prodl	equ	0xFF3
  4768                           intcon	equ	0xFF2
  4769                           postinc0	equ	0xFEE
  4770                           wreg	equ	0xFE8
  4771                           indf1	equ	0xFE7
  4772                           fsr1h	equ	0xFE2
  4773                           fsr1l	equ	0xFE1
  4774                           indf2	equ	0xFDF
  4775                           postinc2	equ	0xFDE
  4776                           postdec2	equ	0xFDD
  4777                           fsr2h	equ	0xFDA
  4778                           fsr2l	equ	0xFD9
  4779                           status	equ	0xFD8
  4780                           
  4781 ;; *************** function _SetChanADC *****************
  4782 ;; Defined at:
  4783 ;;		line 30 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcsetch.c"
  4784 ;; Parameters:    Size  Location     Type
  4785 ;;  channel         1    wreg     unsigned char 
  4786 ;; Auto vars:     Size  Location     Type
  4787 ;;  channel         1    1[BANK1 ] unsigned char 
  4788 ;; Return value:  Size  Location     Type
  4789 ;;		None               void
  4790 ;; Registers used:
  4791 ;;		wreg, status,2, status,0
  4792 ;; Tracked objects:
  4793 ;;		On entry : 0/0
  4794 ;;		On exit  : 0/0
  4795 ;;		Unchanged: 0/0
  4796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4797 ;;      Params:         0       0       0       0       0
  4798 ;;      Locals:         0       0       1       0       0
  4799 ;;      Temps:          0       0       1       0       0
  4800 ;;      Totals:         0       0       2       0       0
  4801 ;;Total ram usage:        2 bytes
  4802 ;; Hardware stack levels used:    1
  4803 ;; Hardware stack levels required when called:   10
  4804 ;; This function calls:
  4805 ;;		Nothing
  4806 ;; This function is called by:
  4807 ;;		_main
  4808 ;; This function uses a non-reentrant model
  4809 ;;
  4810                           
  4811                           	psect	text27
  4812  001B5C                     __ptext27:
  4813                           	opt stack 0
  4814  001B5C                     _SetChanADC:
  4815                           	opt stack 20
  4816                           
  4817                           ; BSR set to: 1
  4818                           ;incstack = 0
  4819                           ;SetChanADC@channel stored from wreg
  4820  001B5C  CFE8 F1A3          	movff	wreg,SetChanADC@channel
  4821  001B60  CFC2 F1A2          	movff	4034,??_SetChanADC	;volatile
  4822  001B64  0EC3               	movlw	195
  4823  001B66  0101               	movlb	1	; () banked
  4824  001B68  17A2               	andwf	??_SetChanADC& (0+255),f,b
  4825  001B6A  0101               	movlb	1	; () banked
  4826  001B6C  0101               	movlb	1	; () banked
  4827  001B6E  90D8               	bcf	status,0,c
  4828  001B70  31A3               	rrcf	SetChanADC@channel& (0+255),w,b
  4829  001B72  0B3C               	andlw	60
  4830  001B74  0101               	movlb	1	; () banked
  4831  001B76  11A2               	iorwf	??_SetChanADC& (0+255),w,b
  4832  001B78  6EC2               	movwf	4034,c	;volatile
  4833                           
  4834                           ; BSR set to: 1
  4835  001B7A  0012               	return	
  4836  001B7C                     __end_of_SetChanADC:
  4837                           	opt stack 0
  4838                           tblptru	equ	0xFF8
  4839                           tblptrh	equ	0xFF7
  4840                           tblptrl	equ	0xFF6
  4841                           tablat	equ	0xFF5
  4842                           prodh	equ	0xFF4
  4843                           prodl	equ	0xFF3
  4844                           intcon	equ	0xFF2
  4845                           postinc0	equ	0xFEE
  4846                           wreg	equ	0xFE8
  4847                           indf1	equ	0xFE7
  4848                           fsr1h	equ	0xFE2
  4849                           fsr1l	equ	0xFE1
  4850                           indf2	equ	0xFDF
  4851                           postinc2	equ	0xFDE
  4852                           postdec2	equ	0xFDD
  4853                           fsr2h	equ	0xFDA
  4854                           fsr2l	equ	0xFD9
  4855                           status	equ	0xFD8
  4856                           
  4857 ;; *************** function _OpenUSART *****************
  4858 ;; Defined at:
  4859 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  config          1    wreg     unsigned char 
  4862 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  config          1    5[BANK1 ] unsigned char 
  4865 ;; Return value:  Size  Location     Type
  4866 ;;		None               void
  4867 ;; Registers used:
  4868 ;;		wreg, status,2
  4869 ;; Tracked objects:
  4870 ;;		On entry : 0/0
  4871 ;;		On exit  : 0/0
  4872 ;;		Unchanged: 0/0
  4873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4874 ;;      Params:         0       0       2       0       0
  4875 ;;      Locals:         0       0       1       0       0
  4876 ;;      Temps:          0       0       3       0       0
  4877 ;;      Totals:         0       0       6       0       0
  4878 ;;Total ram usage:        6 bytes
  4879 ;; Hardware stack levels used:    1
  4880 ;; Hardware stack levels required when called:   10
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_main
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           	psect	text28
  4889  001006                     __ptext28:
  4890                           	opt stack 0
  4891  001006                     _OpenUSART:
  4892                           	opt stack 20
  4893                           
  4894                           ; BSR set to: 1
  4895                           ;incstack = 0
  4896                           ;OpenUSART@config stored from wreg
  4897  001006  CFE8 F1A7          	movff	wreg,OpenUSART@config
  4898  00100A  0E00               	movlw	0
  4899  00100C  6EAC               	movwf	4012,c	;volatile
  4900  00100E  0E00               	movlw	0
  4901  001010  6EAB               	movwf	4011,c	;volatile
  4902  001012  0101               	movlb	1	; () banked
  4903  001014  0101               	movlb	1	; () banked
  4904  001016  B1A7               	btfsc	OpenUSART@config& (0+255),0,b
  4905                           
  4906                           ; BSR set to: 1
  4907  001018  88AC               	bsf	4012,4,c	;volatile
  4908                           
  4909                           ; BSR set to: 1
  4910                           
  4911                           ; BSR set to: 1
  4912  00101A  0101               	movlb	1	; () banked
  4913  00101C  0101               	movlb	1	; () banked
  4914  00101E  A3A7               	btfss	OpenUSART@config& (0+255),1,b
  4915  001020  D002               	goto	l3622
  4916                           
  4917                           ; BSR set to: 1
  4918  001022  8CAC               	bsf	4012,6,c	;volatile
  4919  001024  8CAB               	bsf	4011,6,c	;volatile
  4920  001026                     l3622:
  4921                           
  4922                           ; BSR set to: 1
  4923  001026  0101               	movlb	1	; () banked
  4924  001028  0101               	movlb	1	; () banked
  4925  00102A  B5A7               	btfsc	OpenUSART@config& (0+255),2,b
  4926                           
  4927                           ; BSR set to: 1
  4928  00102C  8EAC               	bsf	4012,7,c	;volatile
  4929                           
  4930                           ; BSR set to: 1
  4931                           
  4932                           ; BSR set to: 1
  4933  00102E  0101               	movlb	1	; () banked
  4934  001030  0101               	movlb	1	; () banked
  4935  001032  A7A7               	btfss	OpenUSART@config& (0+255),3,b
  4936  001034  D002               	goto	l656
  4937                           
  4938                           ; BSR set to: 1
  4939  001036  88AB               	bsf	4011,4,c	;volatile
  4940  001038  D001               	goto	l3630
  4941  00103A                     l656:
  4942                           
  4943                           ; BSR set to: 1
  4944  00103A  8AAB               	bsf	4011,5,c	;volatile
  4945  00103C                     l3630:
  4946                           
  4947                           ; BSR set to: 1
  4948  00103C  0101               	movlb	1	; () banked
  4949  00103E  0101               	movlb	1	; () banked
  4950  001040  B9A7               	btfsc	OpenUSART@config& (0+255),4,b
  4951                           
  4952                           ; BSR set to: 1
  4953  001042  84AC               	bsf	4012,2,c	;volatile
  4954                           
  4955                           ; BSR set to: 1
  4956  001044  989E               	bcf	3998,4,c	;volatile
  4957                           
  4958                           ; BSR set to: 1
  4959  001046  0101               	movlb	1	; () banked
  4960  001048  0101               	movlb	1	; () banked
  4961  00104A  BBA7               	btfsc	OpenUSART@config& (0+255),5,b
  4962                           
  4963                           ; BSR set to: 1
  4964  00104C  86AB               	bsf	4011,3,c	;volatile
  4965                           
  4966                           ; BSR set to: 1
  4967                           
  4968                           ; BSR set to: 1
  4969  00104E  0101               	movlb	1	; () banked
  4970  001050  0101               	movlb	1	; () banked
  4971  001052  ADA7               	btfss	OpenUSART@config& (0+255),6,b
  4972  001054  D002               	goto	l660
  4973                           
  4974                           ; BSR set to: 1
  4975  001056  8A9D               	bsf	3997,5,c	;volatile
  4976  001058  D001               	goto	l661
  4977  00105A                     l660:
  4978                           
  4979                           ; BSR set to: 1
  4980  00105A  9A9D               	bcf	3997,5,c	;volatile
  4981  00105C                     l661:
  4982                           
  4983                           ; BSR set to: 1
  4984  00105C  9A9E               	bcf	3998,5,c	;volatile
  4985                           
  4986                           ; BSR set to: 1
  4987  00105E  0101               	movlb	1	; () banked
  4988  001060  0101               	movlb	1	; () banked
  4989  001062  AFA7               	btfss	OpenUSART@config& (0+255),7,b
  4990  001064  D002               	goto	l662
  4991                           
  4992                           ; BSR set to: 1
  4993  001066  889D               	bsf	3997,4,c	;volatile
  4994  001068  D001               	goto	l663
  4995  00106A                     l662:
  4996                           
  4997                           ; BSR set to: 1
  4998  00106A  989D               	bcf	3997,4,c	;volatile
  4999  00106C                     l663:
  5000                           
  5001                           ; BSR set to: 1
  5002  00106C  C1A2  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5003                           
  5004                           ; BSR set to: 1
  5005  001070  0101               	movlb	1	; () banked
  5006  001072  C1A3  F1A4         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5007  001076  C1A4  F1A5         	movff	??_OpenUSART,??_OpenUSART+1
  5008  00107A  0101               	movlb	1	; () banked
  5009  00107C  6BA6               	clrf	(??_OpenUSART+2)& (0+255),b
  5010  00107E  0101               	movlb	1	; () banked
  5011  001080  51A5               	movf	(??_OpenUSART+1)& (0+255),w,b
  5012  001082  6EB0               	movwf	4016,c	;volatile
  5013                           
  5014                           ; BSR set to: 1
  5015  001084  8AAC               	bsf	4012,5,c	;volatile
  5016                           
  5017                           ; BSR set to: 1
  5018  001086  8EAB               	bsf	4011,7,c	;volatile
  5019                           
  5020                           ; BSR set to: 1
  5021  001088  9C94               	bcf	3988,6,c	;volatile
  5022                           
  5023                           ; BSR set to: 1
  5024  00108A  8E94               	bsf	3988,7,c	;volatile
  5025                           
  5026                           ; BSR set to: 1
  5027  00108C  A8AC               	btfss	4012,4,c	;volatile
  5028  00108E  0012               	return	
  5029                           
  5030                           ; BSR set to: 1
  5031  001090  BEAC               	btfsc	4012,7,c	;volatile
  5032  001092  0012               	return	
  5033                           
  5034                           ; BSR set to: 1
  5035  001094  8C94               	bsf	3988,6,c	;volatile
  5036  001096  0012               	return	
  5037  001098                     __end_of_OpenUSART:
  5038                           	opt stack 0
  5039                           tblptru	equ	0xFF8
  5040                           tblptrh	equ	0xFF7
  5041                           tblptrl	equ	0xFF6
  5042                           tablat	equ	0xFF5
  5043                           prodh	equ	0xFF4
  5044                           prodl	equ	0xFF3
  5045                           intcon	equ	0xFF2
  5046                           postinc0	equ	0xFEE
  5047                           wreg	equ	0xFE8
  5048                           indf1	equ	0xFE7
  5049                           fsr1h	equ	0xFE2
  5050                           fsr1l	equ	0xFE1
  5051                           indf2	equ	0xFDF
  5052                           postinc2	equ	0xFDE
  5053                           postdec2	equ	0xFDD
  5054                           fsr2h	equ	0xFDA
  5055                           fsr2l	equ	0xFD9
  5056                           status	equ	0xFD8
  5057                           
  5058 ;; *************** function _OpenTimer1 *****************
  5059 ;; Defined at:
  5060 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  config          1    wreg     unsigned char 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  config          1    0[BANK1 ] unsigned char 
  5065 ;; Return value:  Size  Location     Type
  5066 ;;		None               void
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5074 ;;      Params:         0       0       0       0       0
  5075 ;;      Locals:         0       0       1       0       0
  5076 ;;      Temps:          0       0       0       0       0
  5077 ;;      Totals:         0       0       1       0       0
  5078 ;;Total ram usage:        1 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:   10
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           
  5088                           	psect	text29
  5089  001940                     __ptext29:
  5090                           	opt stack 0
  5091  001940                     _OpenTimer1:
  5092                           	opt stack 20
  5093                           
  5094                           ; BSR set to: 1
  5095                           ;incstack = 0
  5096                           ;OpenTimer1@config stored from wreg
  5097  001940  CFE8 F1A2          	movff	wreg,OpenTimer1@config
  5098  001944  0101               	movlb	1	; () banked
  5099  001946  0101               	movlb	1	; () banked
  5100  001948  51A2               	movf	OpenTimer1@config& (0+255),w,b
  5101  00194A  0B7E               	andlw	126
  5102  00194C  6ECD               	movwf	4045,c	;volatile
  5103                           
  5104                           ; BSR set to: 1
  5105  00194E  0101               	movlb	1	; () banked
  5106  001950  0101               	movlb	1	; () banked
  5107  001952  ADA2               	btfss	OpenTimer1@config& (0+255),6,b
  5108  001954  D002               	goto	l612
  5109                           
  5110                           ; BSR set to: 1
  5111  001956  8ECD               	bsf	4045,7,c	;volatile
  5112  001958  D001               	goto	l3582
  5113  00195A                     l612:
  5114                           
  5115                           ; BSR set to: 1
  5116  00195A  9ECD               	bcf	4045,7,c	;volatile
  5117  00195C                     l3582:
  5118                           
  5119                           ; BSR set to: 1
  5120  00195C  0E00               	movlw	0
  5121  00195E  6ECF               	movwf	4047,c	;volatile
  5122  001960  0E00               	movlw	0
  5123  001962  6ECE               	movwf	4046,c	;volatile
  5124                           
  5125                           ; BSR set to: 1
  5126  001964  909E               	bcf	3998,0,c	;volatile
  5127                           
  5128                           ; BSR set to: 1
  5129  001966  0101               	movlb	1	; () banked
  5130  001968  0101               	movlb	1	; () banked
  5131  00196A  AFA2               	btfss	OpenTimer1@config& (0+255),7,b
  5132  00196C  D002               	goto	l614
  5133                           
  5134                           ; BSR set to: 1
  5135  00196E  809D               	bsf	3997,0,c	;volatile
  5136  001970  D001               	goto	l615
  5137  001972                     l614:
  5138                           
  5139                           ; BSR set to: 1
  5140  001972  909D               	bcf	3997,0,c	;volatile
  5141  001974                     l615:
  5142                           
  5143                           ; BSR set to: 1
  5144  001974  80CD               	bsf	4045,0,c	;volatile
  5145                           
  5146                           ; BSR set to: 1
  5147  001976  0012               	return	
  5148  001978                     __end_of_OpenTimer1:
  5149                           	opt stack 0
  5150                           tblptru	equ	0xFF8
  5151                           tblptrh	equ	0xFF7
  5152                           tblptrl	equ	0xFF6
  5153                           tablat	equ	0xFF5
  5154                           prodh	equ	0xFF4
  5155                           prodl	equ	0xFF3
  5156                           intcon	equ	0xFF2
  5157                           postinc0	equ	0xFEE
  5158                           wreg	equ	0xFE8
  5159                           indf1	equ	0xFE7
  5160                           fsr1h	equ	0xFE2
  5161                           fsr1l	equ	0xFE1
  5162                           indf2	equ	0xFDF
  5163                           postinc2	equ	0xFDE
  5164                           postdec2	equ	0xFDD
  5165                           fsr2h	equ	0xFDA
  5166                           fsr2l	equ	0xFD9
  5167                           status	equ	0xFD8
  5168                           
  5169 ;; *************** function _OpenTimer0 *****************
  5170 ;; Defined at:
  5171 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5172 ;; Parameters:    Size  Location     Type
  5173 ;;  config          1    wreg     unsigned char 
  5174 ;; Auto vars:     Size  Location     Type
  5175 ;;  config          1    0[BANK1 ] unsigned char 
  5176 ;; Return value:  Size  Location     Type
  5177 ;;		None               void
  5178 ;; Registers used:
  5179 ;;		wreg, status,2, status,0
  5180 ;; Tracked objects:
  5181 ;;		On entry : 0/0
  5182 ;;		On exit  : 0/0
  5183 ;;		Unchanged: 0/0
  5184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5185 ;;      Params:         0       0       0       0       0
  5186 ;;      Locals:         0       0       1       0       0
  5187 ;;      Temps:          0       0       0       0       0
  5188 ;;      Totals:         0       0       1       0       0
  5189 ;;Total ram usage:        1 bytes
  5190 ;; Hardware stack levels used:    1
  5191 ;; Hardware stack levels required when called:   10
  5192 ;; This function calls:
  5193 ;;		Nothing
  5194 ;; This function is called by:
  5195 ;;		_main
  5196 ;; This function uses a non-reentrant model
  5197 ;;
  5198                           
  5199                           	psect	text30
  5200  001AE4                     __ptext30:
  5201                           	opt stack 0
  5202  001AE4                     _OpenTimer0:
  5203                           	opt stack 20
  5204                           
  5205                           ; BSR set to: 1
  5206                           ;incstack = 0
  5207                           ;OpenTimer0@config stored from wreg
  5208  001AE4  CFE8 F1A2          	movff	wreg,OpenTimer0@config
  5209  001AE8  0101               	movlb	1	; () banked
  5210  001AEA  0101               	movlb	1	; () banked
  5211  001AEC  51A2               	movf	OpenTimer0@config& (0+255),w,b
  5212  001AEE  0B7F               	andlw	127
  5213  001AF0  6ED5               	movwf	4053,c	;volatile
  5214                           
  5215                           ; BSR set to: 1
  5216  001AF2  0E00               	movlw	0
  5217  001AF4  6ED7               	movwf	4055,c	;volatile
  5218                           
  5219                           ; BSR set to: 1
  5220  001AF6  0E00               	movlw	0
  5221  001AF8  6ED6               	movwf	4054,c	;volatile
  5222                           
  5223                           ; BSR set to: 1
  5224  001AFA  94F2               	bcf	intcon,2,c	;volatile
  5225                           
  5226                           ; BSR set to: 1
  5227  001AFC  0101               	movlb	1	; () banked
  5228  001AFE  0101               	movlb	1	; () banked
  5229  001B00  AFA2               	btfss	OpenTimer0@config& (0+255),7,b
  5230  001B02  D002               	goto	l588
  5231                           
  5232                           ; BSR set to: 1
  5233  001B04  8AF2               	bsf	intcon,5,c	;volatile
  5234  001B06  D001               	goto	l589
  5235  001B08                     l588:
  5236                           
  5237                           ; BSR set to: 1
  5238  001B08  9AF2               	bcf	intcon,5,c	;volatile
  5239  001B0A                     l589:
  5240                           
  5241                           ; BSR set to: 1
  5242  001B0A  8ED5               	bsf	4053,7,c	;volatile
  5243                           
  5244                           ; BSR set to: 1
  5245  001B0C  0012               	return	
  5246  001B0E                     __end_of_OpenTimer0:
  5247                           	opt stack 0
  5248                           tblptru	equ	0xFF8
  5249                           tblptrh	equ	0xFF7
  5250                           tblptrl	equ	0xFF6
  5251                           tablat	equ	0xFF5
  5252                           prodh	equ	0xFF4
  5253                           prodl	equ	0xFF3
  5254                           intcon	equ	0xFF2
  5255                           postinc0	equ	0xFEE
  5256                           wreg	equ	0xFE8
  5257                           indf1	equ	0xFE7
  5258                           fsr1h	equ	0xFE2
  5259                           fsr1l	equ	0xFE1
  5260                           indf2	equ	0xFDF
  5261                           postinc2	equ	0xFDE
  5262                           postdec2	equ	0xFDD
  5263                           fsr2h	equ	0xFDA
  5264                           fsr2l	equ	0xFD9
  5265                           status	equ	0xFD8
  5266                           
  5267 ;; *************** function _OpenADC *****************
  5268 ;; Defined at:
  5269 ;;		line 68 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcopen.c"
  5270 ;; Parameters:    Size  Location     Type
  5271 ;;  config          1    wreg     unsigned char 
  5272 ;;  config2         1    0[BANK1 ] unsigned char 
  5273 ;;  portconfig      1    1[BANK1 ] unsigned char 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  config          1    4[BANK1 ] unsigned char 
  5276 ;; Return value:  Size  Location     Type
  5277 ;;		None               void
  5278 ;; Registers used:
  5279 ;;		wreg, status,2, status,0
  5280 ;; Tracked objects:
  5281 ;;		On entry : 0/0
  5282 ;;		On exit  : 0/0
  5283 ;;		Unchanged: 0/0
  5284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5285 ;;      Params:         0       0       2       0       0
  5286 ;;      Locals:         0       0       1       0       0
  5287 ;;      Temps:          0       0       2       0       0
  5288 ;;      Totals:         0       0       5       0       0
  5289 ;;Total ram usage:        5 bytes
  5290 ;; Hardware stack levels used:    1
  5291 ;; Hardware stack levels required when called:   10
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_main
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text31
  5300  001236                     __ptext31:
  5301                           	opt stack 0
  5302  001236                     _OpenADC:
  5303                           	opt stack 20
  5304                           
  5305                           ; BSR set to: 1
  5306                           ;incstack = 0
  5307                           ;OpenADC@config stored from wreg
  5308  001236  CFE8 F1A6          	movff	wreg,OpenADC@config
  5309  00123A  0E00               	movlw	0
  5310  00123C  6EC2               	movwf	4034,c	;volatile
  5311  00123E  0E00               	movlw	0
  5312  001240  6EC0               	movwf	4032,c	;volatile
  5313  001242  0101               	movlb	1	; () banked
  5314  001244  0101               	movlb	1	; () banked
  5315  001246  90D8               	bcf	status,0,c
  5316  001248  31A2               	rrcf	OpenADC@config2& (0+255),w,b
  5317  00124A  0B3C               	andlw	60
  5318  00124C  6EC2               	movwf	4034,c	;volatile
  5319                           
  5320                           ; BSR set to: 1
  5321  00124E  C1A2  F1A4         	movff	OpenADC@config2,??_OpenADC
  5322  001252  0101               	movlb	1	; () banked
  5323  001254  3BA4               	swapf	??_OpenADC& (0+255),f,b
  5324  001256  0EF0               	movlw	240
  5325  001258  17A4               	andwf	??_OpenADC& (0+255),f,b
  5326  00125A  0E30               	movlw	48
  5327  00125C  0101               	movlb	1	; () banked
  5328  00125E  17A4               	andwf	??_OpenADC& (0+255),f,b
  5329  001260  0101               	movlb	1	; () banked
  5330  001262  0101               	movlb	1	; () banked
  5331  001264  51A3               	movf	OpenADC@portconfig& (0+255),w,b
  5332  001266  0B0F               	andlw	15
  5333  001268  0101               	movlb	1	; () banked
  5334  00126A  11A4               	iorwf	??_OpenADC& (0+255),w,b
  5335  00126C  6EC1               	movwf	4033,c	;volatile
  5336                           
  5337                           ; BSR set to: 1
  5338  00126E  C1A6  F1A4         	movff	OpenADC@config,??_OpenADC
  5339  001272  0101               	movlb	1	; () banked
  5340  001274  90D8               	bcf	status,0,c
  5341  001276  37A4               	rlcf	??_OpenADC& (0+255),f,b
  5342  001278  0101               	movlb	1	; () banked
  5343  00127A  90D8               	bcf	status,0,c
  5344  00127C  37A4               	rlcf	??_OpenADC& (0+255),f,b
  5345  00127E  0E38               	movlw	56
  5346  001280  0101               	movlb	1	; () banked
  5347  001282  17A4               	andwf	??_OpenADC& (0+255),f,b
  5348  001284  C1A6  F1A5         	movff	OpenADC@config,??_OpenADC+1
  5349  001288  0101               	movlb	1	; () banked
  5350  00128A  3BA5               	swapf	(??_OpenADC+1)& (0+255),f,b
  5351  00128C  0E0F               	movlw	15
  5352  00128E  17A5               	andwf	(??_OpenADC+1)& (0+255),f,b
  5353  001290  0E07               	movlw	7
  5354  001292  0101               	movlb	1	; () banked
  5355  001294  17A5               	andwf	(??_OpenADC+1)& (0+255),f,b
  5356  001296  0101               	movlb	1	; () banked
  5357  001298  0101               	movlb	1	; () banked
  5358  00129A  51A6               	movf	OpenADC@config& (0+255),w,b
  5359  00129C  0B80               	andlw	128
  5360  00129E  0101               	movlb	1	; () banked
  5361  0012A0  11A5               	iorwf	(??_OpenADC+1)& (0+255),w,b
  5362  0012A2  0101               	movlb	1	; () banked
  5363  0012A4  11A4               	iorwf	??_OpenADC& (0+255),w,b
  5364  0012A6  6EC0               	movwf	4032,c	;volatile
  5365                           
  5366                           ; BSR set to: 1
  5367  0012A8  0101               	movlb	1	; () banked
  5368  0012AA  0101               	movlb	1	; () banked
  5369  0012AC  AFA2               	btfss	OpenADC@config2& (0+255),7,b
  5370  0012AE  D003               	goto	l562
  5371                           
  5372                           ; BSR set to: 1
  5373  0012B0  9C9E               	bcf	3998,6,c	;volatile
  5374  0012B2  8C9D               	bsf	3997,6,c	;volatile
  5375  0012B4  8CF2               	bsf	intcon,6,c	;volatile
  5376  0012B6                     l562:
  5377                           
  5378                           ; BSR set to: 1
  5379  0012B6  80C2               	bsf	4034,0,c	;volatile
  5380                           
  5381                           ; BSR set to: 1
  5382  0012B8  0012               	return	
  5383  0012BA                     __end_of_OpenADC:
  5384                           	opt stack 0
  5385                           tblptru	equ	0xFF8
  5386                           tblptrh	equ	0xFF7
  5387                           tblptrl	equ	0xFF6
  5388                           tablat	equ	0xFF5
  5389                           prodh	equ	0xFF4
  5390                           prodl	equ	0xFF3
  5391                           intcon	equ	0xFF2
  5392                           postinc0	equ	0xFEE
  5393                           wreg	equ	0xFE8
  5394                           indf1	equ	0xFE7
  5395                           fsr1h	equ	0xFE2
  5396                           fsr1l	equ	0xFE1
  5397                           indf2	equ	0xFDF
  5398                           postinc2	equ	0xFDE
  5399                           postdec2	equ	0xFDD
  5400                           fsr2h	equ	0xFDA
  5401                           fsr2l	equ	0xFD9
  5402                           status	equ	0xFD8
  5403                           
  5404 ;; *************** function _InterruptHandlerLow *****************
  5405 ;; Defined at:
  5406 ;;		line 136 in file "../src/interrupts.c"
  5407 ;; Parameters:    Size  Location     Type
  5408 ;;		None
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;		None               void
  5413 ;; Registers used:
  5414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5420 ;;      Params:         0       0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0
  5422 ;;      Temps:         17       0       0       0       0
  5423 ;;      Totals:        17       0       0       0       0
  5424 ;;Total ram usage:       17 bytes
  5425 ;; Hardware stack levels used:    1
  5426 ;; Hardware stack levels required when called:    9
  5427 ;; This function calls:
  5428 ;;		_timer1_int_handler
  5429 ;;		_uart_recv_int_handler
  5430 ;;		_uart_send_int_handler
  5431 ;; This function is called by:
  5432 ;;		Interrupt level 1
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	intcodelo
  5437  000018                     __pintcodelo:
  5438                           	opt stack 0
  5439  000018                     _InterruptHandlerLow:
  5440                           	opt stack 17
  5441                           
  5442                           ; BSR set to: 1
  5443                           ;incstack = 0
  5444  000018  CFD8 F01E          	movff	status,??_InterruptHandlerLow
  5445  00001C  CFE8 F01F          	movff	wreg,??_InterruptHandlerLow+1
  5446  000020  CFE0 F020          	movff	bsr,??_InterruptHandlerLow+2
  5447  000024  CFFA F021          	movff	pclath,??_InterruptHandlerLow+3
  5448  000028  CFFB F022          	movff	pclatu,??_InterruptHandlerLow+4
  5449  00002C  CFE9 F023          	movff	fsr0l,??_InterruptHandlerLow+5
  5450  000030  CFEA F024          	movff	fsr0h,??_InterruptHandlerLow+6
  5451  000034  CFE1 F025          	movff	fsr1l,??_InterruptHandlerLow+7
  5452  000038  CFE2 F026          	movff	fsr1h,??_InterruptHandlerLow+8
  5453  00003C  CFD9 F027          	movff	fsr2l,??_InterruptHandlerLow+9
  5454  000040  CFDA F028          	movff	fsr2h,??_InterruptHandlerLow+10
  5455  000044  CFF3 F029          	movff	prodl,??_InterruptHandlerLow+11
  5456  000048  CFF4 F02A          	movff	prodh,??_InterruptHandlerLow+12
  5457  00004C  CFF6 F02B          	movff	tblptrl,??_InterruptHandlerLow+13
  5458  000050  CFF7 F02C          	movff	tblptrh,??_InterruptHandlerLow+14
  5459  000054  CFF8 F02D          	movff	tblptru,??_InterruptHandlerLow+15
  5460  000058  CFF5 F02E          	movff	tablat,??_InterruptHandlerLow+16
  5461                           
  5462                           ;interrupts.c: 139: if (PIR1bits.TMR1IF) {
  5463  00005C  A09E               	btfss	3998,0,c	;volatile
  5464  00005E  D004               	goto	i1l4220
  5465                           
  5466                           ;interrupts.c: 140: PIR1bits.TMR1IF = 0;
  5467  000060  909E               	bcf	3998,0,c	;volatile
  5468                           
  5469                           ;interrupts.c: 141: timer1_int_handler();
  5470  000062  EC43  F00D         	call	_timer1_int_handler	;wreg free
  5471                           
  5472                           ;interrupts.c: 142: PIE1bits.TX1IE = 0x1;
  5473  000066  889D               	bsf	3997,4,c	;volatile
  5474  000068                     i1l4220:
  5475                           
  5476                           ;interrupts.c: 143: }
  5477                           ;interrupts.c: 146: if (PIR1bits.RCIF) {
  5478  000068  AA9E               	btfss	3998,5,c	;volatile
  5479  00006A  D003               	goto	i1l4226
  5480                           
  5481                           ;interrupts.c: 147: PIR1bits.RCIF = 0;
  5482  00006C  9A9E               	bcf	3998,5,c	;volatile
  5483                           
  5484                           ;interrupts.c: 148: uart_recv_int_handler();
  5485  00006E  EC5C  F007         	call	_uart_recv_int_handler	;wreg free
  5486  000072                     i1l4226:
  5487                           
  5488                           ;interrupts.c: 149: }
  5489                           ;interrupts.c: 152: if (PIR1bits.TX1IF) {
  5490  000072  B89E               	btfsc	3998,4,c	;volatile
  5491                           
  5492                           ;interrupts.c: 153: uart_send_int_handler();
  5493  000074  EC72  F00B         	call	_uart_send_int_handler	;wreg free
  5494  000078  C02E  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5495  00007C  C02D  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5496  000080  C02C  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5497  000084  C02B  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5498  000088  C02A  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5499  00008C  C029  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5500  000090  C028  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5501  000094  C027  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5502  000098  C026  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5503  00009C  C025  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5504  0000A0  C024  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5505  0000A4  C023  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5506  0000A8  C022  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5507  0000AC  C021  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5508  0000B0  C020  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5509  0000B4  C01F  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5510  0000B8  C01E  FFD8         	movff	??_InterruptHandlerLow,status
  5511  0000BC  0010               	retfie	
  5512  0000BE                     __end_of_InterruptHandlerLow:
  5513                           	opt stack 0
  5514                           pclatu	equ	0xFFB
  5515                           pclath	equ	0xFFA
  5516                           tblptru	equ	0xFF8
  5517                           tblptrh	equ	0xFF7
  5518                           tblptrl	equ	0xFF6
  5519                           tablat	equ	0xFF5
  5520                           prodh	equ	0xFF4
  5521                           prodl	equ	0xFF3
  5522                           intcon	equ	0xFF2
  5523                           postinc0	equ	0xFEE
  5524                           fsr0h	equ	0xFEA
  5525                           fsr0l	equ	0xFE9
  5526                           wreg	equ	0xFE8
  5527                           indf1	equ	0xFE7
  5528                           fsr1h	equ	0xFE2
  5529                           fsr1l	equ	0xFE1
  5530                           bsr	equ	0xFE0
  5531                           indf2	equ	0xFDF
  5532                           postinc2	equ	0xFDE
  5533                           postdec2	equ	0xFDD
  5534                           fsr2h	equ	0xFDA
  5535                           fsr2l	equ	0xFD9
  5536                           status	equ	0xFD8
  5537                           
  5538 ;; *************** function _uart_send_int_handler *****************
  5539 ;; Defined at:
  5540 ;;		line 60 in file "../src/my_uart.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;		None               void
  5547 ;; Registers used:
  5548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5554 ;;      Params:         0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0
  5556 ;;      Temps:          1       0       0       0       0
  5557 ;;      Totals:         1       0       0       0       0
  5558 ;;Total ram usage:        1 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    6
  5561 ;; This function calls:
  5562 ;;		_WriteUSART
  5563 ;; This function is called by:
  5564 ;;		_InterruptHandlerLow
  5565 ;; This function uses a non-reentrant model
  5566 ;;
  5567                           
  5568                           	psect	text33
  5569  0016E4                     __ptext33:
  5570                           	opt stack 0
  5571  0016E4                     _uart_send_int_handler:
  5572                           	opt stack 19
  5573                           
  5574                           ;my_uart.c: 63: if (uc_ptr->Tx_buflen == 6) {
  5575                           
  5576                           ;incstack = 0
  5577  0016E4  EE20 F00C          	lfsr	2,12
  5578  0016E8  505C               	movf	_uc_ptr,w,c
  5579  0016EA  26D9               	addwf	fsr2l,f,c
  5580  0016EC  505D               	movf	_uc_ptr+1,w,c
  5581  0016EE  22DA               	addwfc	fsr2h,f,c
  5582  0016F0  0E06               	movlw	6
  5583  0016F2  62DF               	cpfseq	indf2,c
  5584  0016F4  D006               	goto	i1l4158
  5585                           
  5586                           ;my_uart.c: 65: PIE1bits.TX1IE = 0;
  5587  0016F6  989D               	bcf	3997,4,c	;volatile
  5588                           
  5589                           ;my_uart.c: 66: buflen = 0;
  5590  0016F8  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  5591  0016FA  0E00               	movlw	0
  5592  0016FC  6E4E               	movwf	_buflen,c
  5593  0016FE  5002               	movf	??_uart_send_int_handler& (0+255),w,c
  5594                           
  5595                           ;my_uart.c: 67: } else {
  5596  001700  0012               	return	
  5597  001702                     i1l4158:
  5598                           
  5599                           ;my_uart.c: 68: WriteUSART(uc_ptr->Tx_buffer[uc_ptr->Tx_buflen++]);
  5600  001702  EE20 F00C          	lfsr	2,12
  5601  001706  505C               	movf	_uc_ptr,w,c
  5602  001708  26D9               	addwf	fsr2l,f,c
  5603  00170A  505D               	movf	_uc_ptr+1,w,c
  5604  00170C  22DA               	addwfc	fsr2h,f,c
  5605  00170E  CFDF F002          	movff	indf2,??_uart_send_int_handler
  5606  001712  0E01               	movlw	1
  5607  001714  26DF               	addwf	indf2,f,c
  5608  001716  5002               	movf	??_uart_send_int_handler,w,c
  5609  001718  0D01               	mullw	1
  5610  00171A  50F3               	movf	prodl,w,c
  5611  00171C  245C               	addwf	_uc_ptr,w,c
  5612  00171E  6ED9               	movwf	fsr2l,c
  5613  001720  50F4               	movf	prodh,w,c
  5614  001722  205D               	addwfc	_uc_ptr+1,w,c
  5615  001724  6EDA               	movwf	fsr2h,c
  5616  001726  50DF               	movf	indf2,w,c
  5617  001728  ECD8  F00D         	call	_WriteUSART
  5618  00172C  0012               	return	
  5619  00172E                     __end_of_uart_send_int_handler:
  5620                           	opt stack 0
  5621                           pclatu	equ	0xFFB
  5622                           pclath	equ	0xFFA
  5623                           tblptru	equ	0xFF8
  5624                           tblptrh	equ	0xFF7
  5625                           tblptrl	equ	0xFF6
  5626                           tablat	equ	0xFF5
  5627                           prodh	equ	0xFF4
  5628                           prodl	equ	0xFF3
  5629                           intcon	equ	0xFF2
  5630                           postinc0	equ	0xFEE
  5631                           fsr0h	equ	0xFEA
  5632                           fsr0l	equ	0xFE9
  5633                           wreg	equ	0xFE8
  5634                           indf1	equ	0xFE7
  5635                           fsr1h	equ	0xFE2
  5636                           fsr1l	equ	0xFE1
  5637                           bsr	equ	0xFE0
  5638                           indf2	equ	0xFDF
  5639                           postinc2	equ	0xFDE
  5640                           postdec2	equ	0xFDD
  5641                           fsr2h	equ	0xFDA
  5642                           fsr2l	equ	0xFD9
  5643                           status	equ	0xFD8
  5644                           
  5645 ;; *************** function _WriteUSART *****************
  5646 ;; Defined at:
  5647 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  5648 ;; Parameters:    Size  Location     Type
  5649 ;;  data            1    wreg     unsigned char 
  5650 ;; Auto vars:     Size  Location     Type
  5651 ;;  data            1    0[COMRAM] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;		None               void
  5654 ;; Registers used:
  5655 ;;		wreg
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5661 ;;      Params:         0       0       0       0       0
  5662 ;;      Locals:         1       0       0       0       0
  5663 ;;      Temps:          0       0       0       0       0
  5664 ;;      Totals:         1       0       0       0       0
  5665 ;;Total ram usage:        1 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    5
  5668 ;; This function calls:
  5669 ;;		Nothing
  5670 ;; This function is called by:
  5671 ;;		_uart_send_int_handler
  5672 ;; This function uses a non-reentrant model
  5673 ;;
  5674                           
  5675                           	psect	text34
  5676  001BB0                     __ptext34:
  5677                           	opt stack 0
  5678  001BB0                     _WriteUSART:
  5679                           	opt stack 19
  5680                           
  5681                           ;incstack = 0
  5682                           ;WriteUSART@data stored from wreg
  5683  001BB0  CFE8 F001          	movff	wreg,WriteUSART@data
  5684  001BB4  ACAC               	btfss	4012,6,c	;volatile
  5685  001BB6  D003               	goto	i1l4010
  5686  001BB8  90AC               	bcf	4012,0,c	;volatile
  5687  001BBA  B24D               	btfsc	_USART_Status,1,c
  5688  001BBC  80AC               	bsf	4012,0,c	;volatile
  5689  001BBE                     i1l4010:
  5690  001BBE  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  5691  001BC2  0012               	return	
  5692  001BC4                     __end_of_WriteUSART:
  5693                           	opt stack 0
  5694                           pclatu	equ	0xFFB
  5695                           pclath	equ	0xFFA
  5696                           tblptru	equ	0xFF8
  5697                           tblptrh	equ	0xFF7
  5698                           tblptrl	equ	0xFF6
  5699                           tablat	equ	0xFF5
  5700                           prodh	equ	0xFF4
  5701                           prodl	equ	0xFF3
  5702                           intcon	equ	0xFF2
  5703                           postinc0	equ	0xFEE
  5704                           fsr0h	equ	0xFEA
  5705                           fsr0l	equ	0xFE9
  5706                           wreg	equ	0xFE8
  5707                           indf1	equ	0xFE7
  5708                           fsr1h	equ	0xFE2
  5709                           fsr1l	equ	0xFE1
  5710                           bsr	equ	0xFE0
  5711                           indf2	equ	0xFDF
  5712                           postinc2	equ	0xFDE
  5713                           postdec2	equ	0xFDD
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _uart_recv_int_handler *****************
  5719 ;; Defined at:
  5720 ;;		line 16 in file "../src/my_uart.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;		None
  5725 ;; Return value:  Size  Location     Type
  5726 ;;		None               void
  5727 ;; Registers used:
  5728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5734 ;;      Params:         0       0       0       0       0
  5735 ;;      Locals:         0       0       0       0       0
  5736 ;;      Temps:          1       0       0       0       0
  5737 ;;      Totals:         1       0       0       0       0
  5738 ;;Total ram usage:        1 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    8
  5741 ;; This function calls:
  5742 ;;		_ReadUSART
  5743 ;;		_ToMainLow_sendmsg
  5744 ;; This function is called by:
  5745 ;;		_InterruptHandlerLow
  5746 ;; This function uses a non-reentrant model
  5747 ;;
  5748                           
  5749                           	psect	text35
  5750  000EB8                     __ptext35:
  5751                           	opt stack 0
  5752  000EB8                     _uart_recv_int_handler:
  5753                           	opt stack 17
  5754                           
  5755                           ;my_uart.c: 30: if ((PIR1bits.RCIF)) {
  5756                           
  5757                           ;incstack = 0
  5758  000EB8  AA9E               	btfss	3998,5,c	;volatile
  5759  000EBA  D042               	goto	i1l4206
  5760                           
  5761                           ;my_uart.c: 31: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = ReadUSART();
  5762  000EBC  EE20 F00D          	lfsr	2,13
  5763  000EC0  505C               	movf	_uc_ptr,w,c
  5764  000EC2  26D9               	addwf	fsr2l,f,c
  5765  000EC4  505D               	movf	_uc_ptr+1,w,c
  5766  000EC6  22DA               	addwfc	fsr2h,f,c
  5767  000EC8  50DF               	movf	indf2,w,c
  5768  000ECA  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5769  000ECC  501B               	movf	??_uart_recv_int_handler,w,c
  5770  000ECE  0D01               	mullw	1
  5771  000ED0  0E06               	movlw	6
  5772  000ED2  26F3               	addwf	prodl,f,c
  5773  000ED4  0E00               	movlw	0
  5774  000ED6  22F4               	addwfc	prodh,f,c
  5775  000ED8  50F3               	movf	prodl,w,c
  5776  000EDA  245C               	addwf	_uc_ptr,w,c
  5777  000EDC  6ED9               	movwf	fsr2l,c
  5778  000EDE  50F4               	movf	prodh,w,c
  5779  000EE0  205D               	addwfc	_uc_ptr+1,w,c
  5780  000EE2  6EDA               	movwf	fsr2h,c
  5781  000EE4  ECBE  F00D         	call	_ReadUSART	;wreg free
  5782  000EE8  6EDF               	movwf	indf2,c
  5783                           
  5784                           ;my_uart.c: 34: uc_ptr->Rx_buflen++;
  5785  000EEA  EE20 F00D          	lfsr	2,13
  5786  000EEE  505C               	movf	_uc_ptr,w,c
  5787  000EF0  26D9               	addwf	fsr2l,f,c
  5788  000EF2  505D               	movf	_uc_ptr+1,w,c
  5789  000EF4  22DA               	addwfc	fsr2h,f,c
  5790  000EF6  2ADF               	incf	indf2,f,c
  5791                           
  5792                           ;my_uart.c: 37: if (uc_ptr->Rx_buflen == 6) {
  5793  000EF8  EE20 F00D          	lfsr	2,13
  5794  000EFC  505C               	movf	_uc_ptr,w,c
  5795  000EFE  26D9               	addwf	fsr2l,f,c
  5796  000F00  505D               	movf	_uc_ptr+1,w,c
  5797  000F02  22DA               	addwfc	fsr2h,f,c
  5798  000F04  0E06               	movlw	6
  5799  000F06  62DF               	cpfseq	indf2,c
  5800  000F08  D01B               	goto	i1l4206
  5801                           
  5802                           ;my_uart.c: 38: ToMainLow_sendmsg(uc_ptr->Rx_buflen, 32, (void *) uc_ptr->Rx_buffer);
  5803  000F0A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5804  000F0C  0E20               	movlw	32
  5805  000F0E  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5806  000F10  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5807  000F12  0E06               	movlw	6
  5808  000F14  245C               	addwf	_uc_ptr,w,c
  5809  000F16  6E18               	movwf	ToMainLow_sendmsg@data,c
  5810  000F18  0E00               	movlw	0
  5811  000F1A  205D               	addwfc	_uc_ptr+1,w,c
  5812  000F1C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5813  000F1E  EE20 F00D          	lfsr	2,13
  5814  000F22  505C               	movf	_uc_ptr,w,c
  5815  000F24  26D9               	addwf	fsr2l,f,c
  5816  000F26  505D               	movf	_uc_ptr+1,w,c
  5817  000F28  22DA               	addwfc	fsr2h,f,c
  5818  000F2A  50DF               	movf	indf2,w,c
  5819  000F2C  EC9B  F00D         	call	_ToMainLow_sendmsg
  5820                           
  5821                           ;my_uart.c: 39: uc_ptr->Rx_buflen = 0;
  5822  000F30  EE20 F00D          	lfsr	2,13
  5823  000F34  505C               	movf	_uc_ptr,w,c
  5824  000F36  26D9               	addwf	fsr2l,f,c
  5825  000F38  505D               	movf	_uc_ptr+1,w,c
  5826  000F3A  22DA               	addwfc	fsr2h,f,c
  5827  000F3C  0E00               	movlw	0
  5828  000F3E  6EDF               	movwf	indf2,c
  5829  000F40                     i1l4206:
  5830                           
  5831                           ;my_uart.c: 40: }
  5832                           ;my_uart.c: 41: }
  5833                           ;my_uart.c: 49: if (USART_Status.OVERRUN_ERROR == 1) {
  5834  000F40  A64D               	btfss	_USART_Status,3,c
  5835  000F42  0012               	return	
  5836                           
  5837                           ;my_uart.c: 54: RCSTAbits.CREN = 0;
  5838  000F44  98AB               	bcf	4011,4,c	;volatile
  5839                           
  5840                           ;my_uart.c: 55: RCSTAbits.CREN = 1;
  5841  000F46  88AB               	bsf	4011,4,c	;volatile
  5842                           
  5843                           ;my_uart.c: 56: ToMainLow_sendmsg(0, 30, (void *) 0);
  5844  000F48  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5845  000F4A  0E1E               	movlw	30
  5846  000F4C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  5847  000F4E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5848  000F50  0E00               	movlw	0
  5849  000F52  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  5850  000F54  0E00               	movlw	0
  5851  000F56  6E18               	movwf	ToMainLow_sendmsg@data,c
  5852  000F58  0E00               	movlw	0
  5853  000F5A  EC9B  F00D         	call	_ToMainLow_sendmsg
  5854  000F5E  0012               	return	
  5855  000F60                     __end_of_uart_recv_int_handler:
  5856                           	opt stack 0
  5857                           pclatu	equ	0xFFB
  5858                           pclath	equ	0xFFA
  5859                           tblptru	equ	0xFF8
  5860                           tblptrh	equ	0xFF7
  5861                           tblptrl	equ	0xFF6
  5862                           tablat	equ	0xFF5
  5863                           prodh	equ	0xFF4
  5864                           prodl	equ	0xFF3
  5865                           intcon	equ	0xFF2
  5866                           postinc0	equ	0xFEE
  5867                           fsr0h	equ	0xFEA
  5868                           fsr0l	equ	0xFE9
  5869                           wreg	equ	0xFE8
  5870                           indf1	equ	0xFE7
  5871                           fsr1h	equ	0xFE2
  5872                           fsr1l	equ	0xFE1
  5873                           bsr	equ	0xFE0
  5874                           indf2	equ	0xFDF
  5875                           postinc2	equ	0xFDE
  5876                           postdec2	equ	0xFDD
  5877                           fsr2h	equ	0xFDA
  5878                           fsr2l	equ	0xFD9
  5879                           status	equ	0xFD8
  5880                           
  5881 ;; *************** function _ReadUSART *****************
  5882 ;; Defined at:
  5883 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  5884 ;; Parameters:    Size  Location     Type
  5885 ;;		None
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  data            1    0[COMRAM] unsigned char 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  1    wreg      unsigned char 
  5890 ;; Registers used:
  5891 ;;		wreg, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5897 ;;      Params:         0       0       0       0       0
  5898 ;;      Locals:         1       0       0       0       0
  5899 ;;      Temps:          0       0       0       0       0
  5900 ;;      Totals:         1       0       0       0       0
  5901 ;;Total ram usage:        1 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; Hardware stack levels required when called:    5
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		_uart_recv_int_handler
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text36
  5912  001B7C                     __ptext36:
  5913                           	opt stack 0
  5914  001B7C                     _ReadUSART:
  5915                           	opt stack 19
  5916                           
  5917                           ;incstack = 0
  5918  001B7C  0EF2               	movlw	242
  5919  001B7E  164D               	andwf	_USART_Status,f,c
  5920  001B80  ACAB               	btfss	4011,6,c	;volatile
  5921  001B82  D003               	goto	i1l674
  5922  001B84  904D               	bcf	_USART_Status,0,c
  5923  001B86  B0AB               	btfsc	4011,0,c	;volatile
  5924  001B88  804D               	bsf	_USART_Status,0,c
  5925  001B8A                     i1l674:
  5926  001B8A  B4AB               	btfsc	4011,2,c	;volatile
  5927  001B8C  844D               	bsf	_USART_Status,2,c
  5928  001B8E  B2AB               	btfsc	4011,1,c	;volatile
  5929  001B90  864D               	bsf	_USART_Status,3,c
  5930  001B92  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  5931  001B96  5001               	movf	ReadUSART@data,w,c
  5932  001B98  0012               	return	
  5933  001B9A                     __end_of_ReadUSART:
  5934                           	opt stack 0
  5935                           pclatu	equ	0xFFB
  5936                           pclath	equ	0xFFA
  5937                           tblptru	equ	0xFF8
  5938                           tblptrh	equ	0xFF7
  5939                           tblptrl	equ	0xFF6
  5940                           tablat	equ	0xFF5
  5941                           prodh	equ	0xFF4
  5942                           prodl	equ	0xFF3
  5943                           intcon	equ	0xFF2
  5944                           postinc0	equ	0xFEE
  5945                           fsr0h	equ	0xFEA
  5946                           fsr0l	equ	0xFE9
  5947                           wreg	equ	0xFE8
  5948                           indf1	equ	0xFE7
  5949                           fsr1h	equ	0xFE2
  5950                           fsr1l	equ	0xFE1
  5951                           bsr	equ	0xFE0
  5952                           indf2	equ	0xFDF
  5953                           postinc2	equ	0xFDE
  5954                           postdec2	equ	0xFDD
  5955                           fsr2h	equ	0xFDA
  5956                           fsr2l	equ	0xFD9
  5957                           status	equ	0xFD8
  5958                           
  5959 ;; *************** function _timer1_int_handler *****************
  5960 ;; Defined at:
  5961 ;;		line 43 in file "../src/user_interrupts.c"
  5962 ;; Parameters:    Size  Location     Type
  5963 ;;		None
  5964 ;; Auto vars:     Size  Location     Type
  5965 ;;  result          2   27[COMRAM] unsigned int 
  5966 ;; Return value:  Size  Location     Type
  5967 ;;		None               void
  5968 ;; Registers used:
  5969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5970 ;; Tracked objects:
  5971 ;;		On entry : 0/0
  5972 ;;		On exit  : 0/0
  5973 ;;		Unchanged: 0/0
  5974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5975 ;;      Params:         0       0       0       0       0
  5976 ;;      Locals:         2       0       0       0       0
  5977 ;;      Temps:          1       0       0       0       0
  5978 ;;      Totals:         3       0       0       0       0
  5979 ;;Total ram usage:        3 bytes
  5980 ;; Hardware stack levels used:    1
  5981 ;; Hardware stack levels required when called:    8
  5982 ;; This function calls:
  5983 ;;		_ReadTimer1
  5984 ;;		_ToMainLow_sendmsg
  5985 ;;		_WriteTimer1
  5986 ;; This function is called by:
  5987 ;;		_InterruptHandlerLow
  5988 ;; This function uses a non-reentrant model
  5989 ;;
  5990                           
  5991                           	psect	text37
  5992  001A86                     __ptext37:
  5993                           	opt stack 0
  5994  001A86                     _timer1_int_handler:
  5995                           	opt stack 17
  5996                           
  5997                           ;user_interrupts.c: 44: unsigned int result;
  5998                           ;user_interrupts.c: 51: result = ReadTimer1();
  5999                           
  6000                           ;incstack = 0
  6001  001A86  EC06  F00E         	call	_ReadTimer1	;wreg free
  6002  001A8A  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  6003  001A8E  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6004                           
  6005                           ;user_interrupts.c: 52: ToMainLow_sendmsg(0, 11, (void *) 0);
  6006  001A92  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6007  001A94  0E0B               	movlw	11
  6008  001A96  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6009  001A98  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6010  001A9A  0E00               	movlw	0
  6011  001A9C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6012  001A9E  0E00               	movlw	0
  6013  001AA0  6E18               	movwf	ToMainLow_sendmsg@data,c
  6014  001AA2  0E00               	movlw	0
  6015  001AA4  EC9B  F00D         	call	_ToMainLow_sendmsg
  6016                           
  6017                           ;user_interrupts.c: 55: WriteTimer1(0xC544);
  6018  001AA8  0EC5               	movlw	197
  6019  001AAA  6E02               	movwf	WriteTimer1@timer1+1,c
  6020  001AAC  0E44               	movlw	68
  6021  001AAE  6E01               	movwf	WriteTimer1@timer1,c
  6022  001AB0  ECFD  F00D         	call	_WriteTimer1	;wreg free
  6023  001AB4  0012               	return	
  6024  001AB6                     __end_of_timer1_int_handler:
  6025                           	opt stack 0
  6026                           pclatu	equ	0xFFB
  6027                           pclath	equ	0xFFA
  6028                           tblptru	equ	0xFF8
  6029                           tblptrh	equ	0xFF7
  6030                           tblptrl	equ	0xFF6
  6031                           tablat	equ	0xFF5
  6032                           prodh	equ	0xFF4
  6033                           prodl	equ	0xFF3
  6034                           intcon	equ	0xFF2
  6035                           postinc0	equ	0xFEE
  6036                           fsr0h	equ	0xFEA
  6037                           fsr0l	equ	0xFE9
  6038                           wreg	equ	0xFE8
  6039                           indf1	equ	0xFE7
  6040                           fsr1h	equ	0xFE2
  6041                           fsr1l	equ	0xFE1
  6042                           bsr	equ	0xFE0
  6043                           indf2	equ	0xFDF
  6044                           postinc2	equ	0xFDE
  6045                           postdec2	equ	0xFDD
  6046                           fsr2h	equ	0xFDA
  6047                           fsr2l	equ	0xFD9
  6048                           status	equ	0xFD8
  6049                           
  6050 ;; *************** function _WriteTimer1 *****************
  6051 ;; Defined at:
  6052 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6053 ;; Parameters:    Size  Location     Type
  6054 ;;  timer1          2    0[COMRAM] unsigned int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  timer           2    2[COMRAM] struct Timers
  6057 ;; Return value:  Size  Location     Type
  6058 ;;		None               void
  6059 ;; Registers used:
  6060 ;;		None
  6061 ;; Tracked objects:
  6062 ;;		On entry : 0/0
  6063 ;;		On exit  : 0/0
  6064 ;;		Unchanged: 0/0
  6065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6066 ;;      Params:         2       0       0       0       0
  6067 ;;      Locals:         2       0       0       0       0
  6068 ;;      Temps:          0       0       0       0       0
  6069 ;;      Totals:         4       0       0       0       0
  6070 ;;Total ram usage:        4 bytes
  6071 ;; Hardware stack levels used:    1
  6072 ;; Hardware stack levels required when called:    5
  6073 ;; This function calls:
  6074 ;;		Nothing
  6075 ;; This function is called by:
  6076 ;;		_timer1_int_handler
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           	psect	text38
  6081  001BFA                     __ptext38:
  6082                           	opt stack 0
  6083  001BFA                     _WriteTimer1:
  6084                           	opt stack 19
  6085                           
  6086                           ;incstack = 0
  6087  001BFA  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6088  001BFE  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6089  001C02  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6090  001C06  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6091  001C0A  0012               	return	
  6092  001C0C                     __end_of_WriteTimer1:
  6093                           	opt stack 0
  6094                           pclatu	equ	0xFFB
  6095                           pclath	equ	0xFFA
  6096                           tblptru	equ	0xFF8
  6097                           tblptrh	equ	0xFF7
  6098                           tblptrl	equ	0xFF6
  6099                           tablat	equ	0xFF5
  6100                           prodh	equ	0xFF4
  6101                           prodl	equ	0xFF3
  6102                           intcon	equ	0xFF2
  6103                           postinc0	equ	0xFEE
  6104                           fsr0h	equ	0xFEA
  6105                           fsr0l	equ	0xFE9
  6106                           wreg	equ	0xFE8
  6107                           indf1	equ	0xFE7
  6108                           fsr1h	equ	0xFE2
  6109                           fsr1l	equ	0xFE1
  6110                           bsr	equ	0xFE0
  6111                           indf2	equ	0xFDF
  6112                           postinc2	equ	0xFDE
  6113                           postdec2	equ	0xFDD
  6114                           fsr2h	equ	0xFDA
  6115                           fsr2l	equ	0xFD9
  6116                           status	equ	0xFD8
  6117                           
  6118 ;; *************** function _ToMainLow_sendmsg *****************
  6119 ;; Defined at:
  6120 ;;		line 103 in file "../src/messages.c"
  6121 ;; Parameters:    Size  Location     Type
  6122 ;;  length          1    wreg     unsigned char 
  6123 ;;  msgtype         1   22[COMRAM] unsigned char 
  6124 ;;  data            2   23[COMRAM] PTR void 
  6125 ;;		 -> NULL(0), main@uc(14), 
  6126 ;; Auto vars:     Size  Location     Type
  6127 ;;  length          1   25[COMRAM] unsigned char 
  6128 ;; Return value:  Size  Location     Type
  6129 ;;                  1    wreg      char 
  6130 ;; Registers used:
  6131 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6132 ;; Tracked objects:
  6133 ;;		On entry : 0/0
  6134 ;;		On exit  : 0/0
  6135 ;;		Unchanged: 0/0
  6136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6137 ;;      Params:         3       0       0       0       0
  6138 ;;      Locals:         1       0       0       0       0
  6139 ;;      Temps:          0       0       0       0       0
  6140 ;;      Totals:         4       0       0       0       0
  6141 ;;Total ram usage:        4 bytes
  6142 ;; Hardware stack levels used:    1
  6143 ;; Hardware stack levels required when called:    7
  6144 ;; This function calls:
  6145 ;;		i1_send_msg
  6146 ;; This function is called by:
  6147 ;;		_uart_recv_int_handler
  6148 ;;		_timer1_int_handler
  6149 ;; This function uses a non-reentrant model
  6150 ;;
  6151                           
  6152                           	psect	text39
  6153  001B36                     __ptext39:
  6154                           	opt stack 0
  6155  001B36                     _ToMainLow_sendmsg:
  6156                           	opt stack 17
  6157                           
  6158                           ;incstack = 0
  6159                           ;ToMainLow_sendmsg@length stored from wreg
  6160  001B36  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6161                           
  6162                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6163                           ;	Return value of _ToMainLow_sendmsg is never used
  6164  001B3A  0101               	movlb	1	; () banked
  6165  001B3C  0E01               	movlw	high _ToMainLow_MQ
  6166  001B3E  6E0C               	movwf	i1send_msg@qptr+1,c
  6167  001B40  0101               	movlb	1	; () banked
  6168  001B42  0E6C               	movlw	low _ToMainLow_MQ
  6169  001B44  6E0B               	movwf	i1send_msg@qptr,c
  6170  001B46  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6171  001B4A  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6172  001B4E  C019  F010         	movff	ToMainLow_sendmsg@data+1,i1send_msg@data+1
  6173  001B52  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6174  001B56  EC07  F007         	call	i1_send_msg	;wreg free
  6175  001B5A  0012               	return	
  6176  001B5C                     __end_of_ToMainLow_sendmsg:
  6177                           	opt stack 0
  6178                           pclatu	equ	0xFFB
  6179                           pclath	equ	0xFFA
  6180                           tblptru	equ	0xFF8
  6181                           tblptrh	equ	0xFF7
  6182                           tblptrl	equ	0xFF6
  6183                           tablat	equ	0xFF5
  6184                           prodh	equ	0xFF4
  6185                           prodl	equ	0xFF3
  6186                           intcon	equ	0xFF2
  6187                           postinc0	equ	0xFEE
  6188                           fsr0h	equ	0xFEA
  6189                           fsr0l	equ	0xFE9
  6190                           wreg	equ	0xFE8
  6191                           indf1	equ	0xFE7
  6192                           fsr1h	equ	0xFE2
  6193                           fsr1l	equ	0xFE1
  6194                           bsr	equ	0xFE0
  6195                           indf2	equ	0xFDF
  6196                           postinc2	equ	0xFDE
  6197                           postdec2	equ	0xFDD
  6198                           fsr2h	equ	0xFDA
  6199                           fsr2l	equ	0xFD9
  6200                           status	equ	0xFD8
  6201                           
  6202 ;; *************** function i1_send_msg *****************
  6203 ;; Defined at:
  6204 ;;		line 24 in file "../src/messages.c"
  6205 ;; Parameters:    Size  Location     Type
  6206 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6207 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6208 ;;  length          1   12[COMRAM] unsigned char 
  6209 ;;  msgtype         1   13[COMRAM] unsigned char 
  6210 ;;  data            2   14[COMRAM] PTR void 
  6211 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  6212 ;;		 -> main@uc(14), 
  6213 ;; Auto vars:     Size  Location     Type
  6214 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6215 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6216 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6217 ;;  send_msg        2   17[COMRAM] unsigned int 
  6218 ;;  send_msg        1   19[COMRAM] unsigned char 
  6219 ;; Return value:  Size  Location     Type
  6220 ;;                  1    wreg      char 
  6221 ;; Registers used:
  6222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6223 ;; Tracked objects:
  6224 ;;		On entry : 0/0
  6225 ;;		On exit  : 0/0
  6226 ;;		Unchanged: 0/0
  6227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6228 ;;      Params:         6       0       0       0       0
  6229 ;;      Locals:         5       0       0       0       0
  6230 ;;      Temps:          1       0       0       0       0
  6231 ;;      Totals:        12       0       0       0       0
  6232 ;;Total ram usage:       12 bytes
  6233 ;; Hardware stack levels used:    1
  6234 ;; Hardware stack levels required when called:    6
  6235 ;; This function calls:
  6236 ;;		i1_memcpy
  6237 ;; This function is called by:
  6238 ;;		_ToMainLow_sendmsg
  6239 ;; This function uses a non-reentrant model
  6240 ;;
  6241                           
  6242                           	psect	text40
  6243  000E0E                     __ptext40:
  6244                           	opt stack 0
  6245  000E0E                     i1_send_msg:
  6246                           	opt stack 17
  6247                           
  6248                           ;messages.c: 25: unsigned char slot;
  6249                           ;messages.c: 27: msg *qmsg;
  6250                           ;messages.c: 28: size_t tlength = length;
  6251                           
  6252                           ;incstack = 0
  6253  000E0E  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6254  000E12  6A13               	clrf	i1send_msg@tlength+1,c
  6255                           
  6256                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6257  000E14  EE20 F034          	lfsr	2,52
  6258  000E18  500B               	movf	i1send_msg@qptr,w,c
  6259  000E1A  26D9               	addwf	fsr2l,f,c
  6260  000E1C  500C               	movf	i1send_msg@qptr+1,w,c
  6261  000E1E  22DA               	addwfc	fsr2h,f,c
  6262  000E20  50DF               	movf	indf2,w,c
  6263  000E22  6E14               	movwf	i1send_msg@slot,c
  6264                           
  6265                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6266  000E24  5014               	movf	i1send_msg@slot,w,c
  6267  000E26  0D0D               	mullw	13
  6268  000E28  50F3               	movf	prodl,w,c
  6269  000E2A  240B               	addwf	i1send_msg@qptr,w,c
  6270  000E2C  6E15               	movwf	i1send_msg@qmsg,c
  6271  000E2E  50F4               	movf	prodh,w,c
  6272  000E30  200C               	addwfc	i1send_msg@qptr+1,w,c
  6273  000E32  6E16               	movwf	i1send_msg@qmsg+1,c
  6274                           
  6275                           ;messages.c: 41: if (qmsg->full != 0) {
  6276  000E34  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6277  000E38  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6278  000E3C  50DF               	movf	indf2,w,c
  6279  000E3E  B4D8               	btfsc	status,2,c
  6280  000E40  D002               	goto	i1l4172
  6281                           
  6282                           ;messages.c: 42: return (-1);
  6283  000E42  0EFF               	movlw	255
  6284  000E44  0012               	return	
  6285  000E46                     i1l4172:
  6286                           
  6287                           ;messages.c: 43: }
  6288                           ;messages.c: 46: qmsg->length = length;
  6289  000E46  EE20 F001          	lfsr	2,1
  6290  000E4A  5015               	movf	i1send_msg@qmsg,w,c
  6291  000E4C  26D9               	addwf	fsr2l,f,c
  6292  000E4E  5016               	movf	i1send_msg@qmsg+1,w,c
  6293  000E50  22DA               	addwfc	fsr2h,f,c
  6294  000E52  C00D  FFDF         	movff	i1send_msg@length,indf2
  6295                           
  6296                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6297  000E56  EE20 F002          	lfsr	2,2
  6298  000E5A  5015               	movf	i1send_msg@qmsg,w,c
  6299  000E5C  26D9               	addwf	fsr2l,f,c
  6300  000E5E  5016               	movf	i1send_msg@qmsg+1,w,c
  6301  000E60  22DA               	addwfc	fsr2h,f,c
  6302  000E62  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6303                           
  6304                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6305  000E66  0E03               	movlw	3
  6306  000E68  2415               	addwf	i1send_msg@qmsg,w,c
  6307  000E6A  6E01               	movwf	i1memcpy@d1,c
  6308  000E6C  0E00               	movlw	0
  6309  000E6E  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6310  000E70  6E02               	movwf	i1memcpy@d1+1,c
  6311  000E72  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6312  000E76  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6313  000E7A  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6314  000E7E  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6315  000E82  EC62  F00C         	call	i1_memcpy	;wreg free
  6316                           
  6317                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6318  000E86  EE20 F034          	lfsr	2,52
  6319  000E8A  500B               	movf	i1send_msg@qptr,w,c
  6320  000E8C  26D9               	addwf	fsr2l,f,c
  6321  000E8E  500C               	movf	i1send_msg@qptr+1,w,c
  6322  000E90  22DA               	addwfc	fsr2h,f,c
  6323  000E92  EE10 F034          	lfsr	1,52
  6324  000E96  500B               	movf	i1send_msg@qptr,w,c
  6325  000E98  26E1               	addwf	fsr1l,f,c
  6326  000E9A  500C               	movf	i1send_msg@qptr+1,w,c
  6327  000E9C  22E2               	addwfc	fsr1h,f,c
  6328  000E9E  50E7               	movf	indf1,w,c
  6329  000EA0  6E11               	movwf	??i1_send_msg& (0+255),c
  6330  000EA2  2811               	incf	??i1_send_msg,w,c
  6331  000EA4  0B03               	andlw	3
  6332  000EA6  6EDF               	movwf	indf2,c
  6333                           
  6334                           ;messages.c: 59: qmsg->full = 1;
  6335  000EA8  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6336  000EAC  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6337  000EB0  0E01               	movlw	1
  6338  000EB2  6EDF               	movwf	indf2,c
  6339                           
  6340                           ;messages.c: 60: return (1);
  6341  000EB4  0E01               	movlw	1
  6342  000EB6  0012               	return	
  6343  000EB8                     __end_ofi1_send_msg:
  6344                           	opt stack 0
  6345                           pclatu	equ	0xFFB
  6346                           pclath	equ	0xFFA
  6347                           tblptru	equ	0xFF8
  6348                           tblptrh	equ	0xFF7
  6349                           tblptrl	equ	0xFF6
  6350                           tablat	equ	0xFF5
  6351                           prodh	equ	0xFF4
  6352                           prodl	equ	0xFF3
  6353                           intcon	equ	0xFF2
  6354                           postinc0	equ	0xFEE
  6355                           fsr0h	equ	0xFEA
  6356                           fsr0l	equ	0xFE9
  6357                           wreg	equ	0xFE8
  6358                           indf1	equ	0xFE7
  6359                           fsr1h	equ	0xFE2
  6360                           fsr1l	equ	0xFE1
  6361                           bsr	equ	0xFE0
  6362                           indf2	equ	0xFDF
  6363                           postinc2	equ	0xFDE
  6364                           postdec2	equ	0xFDD
  6365                           fsr2h	equ	0xFDA
  6366                           fsr2l	equ	0xFD9
  6367                           status	equ	0xFD8
  6368                           
  6369 ;; *************** function i1_memcpy *****************
  6370 ;; Defined at:
  6371 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6372 ;; Parameters:    Size  Location     Type
  6373 ;;  d1              2    0[COMRAM] PTR void 
  6374 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6375 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6376 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6377 ;;  s1              2    2[COMRAM] PTR const void 
  6378 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6379 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6380 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6381 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6382 ;;		 -> main@uc(14), 
  6383 ;;  n               2    4[COMRAM] unsigned int 
  6384 ;; Auto vars:     Size  Location     Type
  6385 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6386 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6387 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6388 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6389 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6390 ;;		 -> main@uc(14), 
  6391 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6392 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6393 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6394 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6395 ;; Return value:  Size  Location     Type
  6396 ;;                  2    0[COMRAM] PTR void 
  6397 ;; Registers used:
  6398 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6399 ;; Tracked objects:
  6400 ;;		On entry : 0/0
  6401 ;;		On exit  : 0/0
  6402 ;;		Unchanged: 0/0
  6403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6404 ;;      Params:         6       0       0       0       0
  6405 ;;      Locals:         4       0       0       0       0
  6406 ;;      Temps:          0       0       0       0       0
  6407 ;;      Totals:        10       0       0       0       0
  6408 ;;Total ram usage:       10 bytes
  6409 ;; Hardware stack levels used:    1
  6410 ;; Hardware stack levels required when called:    5
  6411 ;; This function calls:
  6412 ;;		Nothing
  6413 ;; This function is called by:
  6414 ;;		i1_send_msg
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text41
  6419  0018C4                     __ptext41:
  6420                           	opt stack 0
  6421  0018C4                     i1_memcpy:
  6422                           	opt stack 17
  6423                           
  6424                           ;incstack = 0
  6425  0018C4  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6426  0018C8  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6427  0018CC  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6428  0018D0  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6429  0018D4  D00E               	goto	i1l4140
  6430  0018D6                     i1l4134:
  6431  0018D6  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6432  0018DA  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6433  0018DE  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6434  0018E2  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6435  0018E6  CFDF FFE7          	movff	indf2,indf1
  6436  0018EA  4A09               	infsnz	i1memcpy@s,f,c
  6437  0018EC  2A0A               	incf	i1memcpy@s+1,f,c
  6438  0018EE  4A07               	infsnz	i1memcpy@d,f,c
  6439  0018F0  2A08               	incf	i1memcpy@d+1,f,c
  6440  0018F2                     i1l4140:
  6441  0018F2  0605               	decf	i1memcpy@n,f,c
  6442  0018F4  A0D8               	btfss	status,0,c
  6443  0018F6  0606               	decf	i1memcpy@n+1,f,c
  6444  0018F8  2805               	incf	i1memcpy@n& (0+255),w,c
  6445  0018FA  B4D8               	btfsc	status,2,c
  6446  0018FC  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6447  0018FE  B4D8               	btfsc	status,2,c
  6448                           
  6449                           ;	Return value of i1_memcpy is never used
  6450  001900  0012               	return	
  6451  001902  D7E9               	goto	i1l4134
  6452  001904                     __end_ofi1_memcpy:
  6453                           	opt stack 0
  6454                           pclatu	equ	0xFFB
  6455                           pclath	equ	0xFFA
  6456                           tblptru	equ	0xFF8
  6457                           tblptrh	equ	0xFF7
  6458                           tblptrl	equ	0xFF6
  6459                           tablat	equ	0xFF5
  6460                           prodh	equ	0xFF4
  6461                           prodl	equ	0xFF3
  6462                           intcon	equ	0xFF2
  6463                           postinc0	equ	0xFEE
  6464                           fsr0h	equ	0xFEA
  6465                           fsr0l	equ	0xFE9
  6466                           wreg	equ	0xFE8
  6467                           indf1	equ	0xFE7
  6468                           fsr1h	equ	0xFE2
  6469                           fsr1l	equ	0xFE1
  6470                           bsr	equ	0xFE0
  6471                           indf2	equ	0xFDF
  6472                           postinc2	equ	0xFDE
  6473                           postdec2	equ	0xFDD
  6474                           fsr2h	equ	0xFDA
  6475                           fsr2l	equ	0xFD9
  6476                           status	equ	0xFD8
  6477                           
  6478 ;; *************** function _ReadTimer1 *****************
  6479 ;; Defined at:
  6480 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6481 ;; Parameters:    Size  Location     Type
  6482 ;;		None
  6483 ;; Auto vars:     Size  Location     Type
  6484 ;;  timer           2    2[COMRAM] struct Timers
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  2    0[COMRAM] unsigned int 
  6487 ;; Registers used:
  6488 ;;		None
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6494 ;;      Params:         2       0       0       0       0
  6495 ;;      Locals:         2       0       0       0       0
  6496 ;;      Temps:          0       0       0       0       0
  6497 ;;      Totals:         4       0       0       0       0
  6498 ;;Total ram usage:        4 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    5
  6501 ;; This function calls:
  6502 ;;		Nothing
  6503 ;; This function is called by:
  6504 ;;		_timer1_int_handler
  6505 ;; This function uses a non-reentrant model
  6506 ;;
  6507                           
  6508                           	psect	text42
  6509  001C0C                     __ptext42:
  6510                           	opt stack 0
  6511  001C0C                     _ReadTimer1:
  6512                           	opt stack 19
  6513                           
  6514                           ;incstack = 0
  6515  001C0C  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6516  001C10  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6517  001C14  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6518  001C18  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6519  001C1C  0012               	return	
  6520  001C1E                     __end_of_ReadTimer1:
  6521                           	opt stack 0
  6522                           pclatu	equ	0xFFB
  6523                           pclath	equ	0xFFA
  6524                           tblptru	equ	0xFF8
  6525                           tblptrh	equ	0xFF7
  6526                           tblptrl	equ	0xFF6
  6527                           tablat	equ	0xFF5
  6528                           prodh	equ	0xFF4
  6529                           prodl	equ	0xFF3
  6530                           intcon	equ	0xFF2
  6531                           postinc0	equ	0xFEE
  6532                           fsr0h	equ	0xFEA
  6533                           fsr0l	equ	0xFE9
  6534                           wreg	equ	0xFE8
  6535                           indf1	equ	0xFE7
  6536                           fsr1h	equ	0xFE2
  6537                           fsr1l	equ	0xFE1
  6538                           bsr	equ	0xFE0
  6539                           indf2	equ	0xFDF
  6540                           postinc2	equ	0xFDE
  6541                           postdec2	equ	0xFDD
  6542                           fsr2h	equ	0xFDA
  6543                           fsr2l	equ	0xFD9
  6544                           status	equ	0xFD8
  6545                           
  6546 ;; *************** function _InterruptHandlerHigh *****************
  6547 ;; Defined at:
  6548 ;;		line 88 in file "../src/interrupts.c"
  6549 ;; Parameters:    Size  Location     Type
  6550 ;;		None
  6551 ;; Auto vars:     Size  Location     Type
  6552 ;;		None
  6553 ;; Return value:  Size  Location     Type
  6554 ;;		None               void
  6555 ;; Registers used:
  6556 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
  6557 ;; Tracked objects:
  6558 ;;		On entry : 0/0
  6559 ;;		On exit  : 0/0
  6560 ;;		Unchanged: 0/0
  6561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6562 ;;      Params:         0       0       0       0       0
  6563 ;;      Locals:         0       0       0       0       0
  6564 ;;      Temps:          0      14       0       0       0
  6565 ;;      Totals:         0      14       0       0       0
  6566 ;;Total ram usage:       14 bytes
  6567 ;; Hardware stack levels used:    1
  6568 ;; Hardware stack levels required when called:    4
  6569 ;; This function calls:
  6570 ;;		_SleepIfOkay
  6571 ;;		_adc_int_hand
  6572 ;;		_i2c_int_handler
  6573 ;;		_timer0_int_handler
  6574 ;; This function is called by:
  6575 ;;		Interrupt level 2
  6576 ;; This function uses a non-reentrant model
  6577 ;;
  6578                           
  6579                           	psect	intcode
  6580  000008                     __pintcode:
  6581                           	opt stack 0
  6582  000008                     _InterruptHandlerHigh:
  6583                           	opt stack 17
  6584                           
  6585                           ;incstack = 0
  6586  000008  CFFA F0A4          	movff	pclath,??_InterruptHandlerHigh
  6587  00000C  CFFB F0A5          	movff	pclatu,??_InterruptHandlerHigh+1
  6588  000010  EF91  F008         	goto	int_func
  6589                           pclatu	equ	0xFFB
  6590                           pclath	equ	0xFFA
  6591                           tblptru	equ	0xFF8
  6592                           tblptrh	equ	0xFF7
  6593                           tblptrl	equ	0xFF6
  6594                           tablat	equ	0xFF5
  6595                           prodh	equ	0xFF4
  6596                           prodl	equ	0xFF3
  6597                           intcon	equ	0xFF2
  6598                           postinc0	equ	0xFEE
  6599                           fsr0h	equ	0xFEA
  6600                           fsr0l	equ	0xFE9
  6601                           wreg	equ	0xFE8
  6602                           indf1	equ	0xFE7
  6603                           fsr1h	equ	0xFE2
  6604                           fsr1l	equ	0xFE1
  6605                           bsr	equ	0xFE0
  6606                           indf2	equ	0xFDF
  6607                           postinc2	equ	0xFDE
  6608                           postdec2	equ	0xFDD
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613                           	psect	intcode_body
  6614  001122                     __pintcode_body:
  6615                           	opt stack 17
  6616  001122                     int_func:
  6617                           	opt stack 17
  6618  001122  CFE9 F0A6          	movff	fsr0l,??_InterruptHandlerHigh+2
  6619  001126  CFEA F0A7          	movff	fsr0h,??_InterruptHandlerHigh+3
  6620  00112A  CFE1 F0A8          	movff	fsr1l,??_InterruptHandlerHigh+4
  6621  00112E  CFE2 F0A9          	movff	fsr1h,??_InterruptHandlerHigh+5
  6622  001132  CFD9 F0AA          	movff	fsr2l,??_InterruptHandlerHigh+6
  6623  001136  CFDA F0AB          	movff	fsr2h,??_InterruptHandlerHigh+7
  6624  00113A  CFF3 F0AC          	movff	prodl,??_InterruptHandlerHigh+8
  6625  00113E  CFF4 F0AD          	movff	prodh,??_InterruptHandlerHigh+9
  6626  001142  CFF6 F0AE          	movff	tblptrl,??_InterruptHandlerHigh+10
  6627  001146  CFF7 F0AF          	movff	tblptrh,??_InterruptHandlerHigh+11
  6628  00114A  CFF8 F0B0          	movff	tblptru,??_InterruptHandlerHigh+12
  6629  00114E  CFF5 F0B1          	movff	tablat,??_InterruptHandlerHigh+13
  6630                           
  6631                           ;interrupts.c: 93: if (PIR1bits.ADIF);
  6632  001152  509E               	movf	3998,w,c	;volatile
  6633                           
  6634                           ;interrupts.c: 94: {
  6635                           ;interrupts.c: 95: PIR1bits.ADIF = 0;
  6636  001154  9C9E               	bcf	3998,6,c	;volatile
  6637                           
  6638                           ;interrupts.c: 96: adc_int_hand();
  6639  001156  EC13  F004         	call	_adc_int_hand	;wreg free
  6640                           
  6641                           ;interrupts.c: 97: }
  6642                           ;interrupts.c: 100: if (PIR1bits.SSPIF) {
  6643  00115A  A69E               	btfss	3998,3,c	;volatile
  6644  00115C  D003               	goto	i2l3330
  6645                           
  6646                           ;interrupts.c: 102: PIR1bits.SSPIF = 0;
  6647  00115E  969E               	bcf	3998,3,c	;volatile
  6648                           
  6649                           ;interrupts.c: 104: i2c_int_handler();
  6650  001160  EC82  F00C         	call	_i2c_int_handler	;wreg free
  6651  001164                     i2l3330:
  6652                           
  6653                           ;interrupts.c: 105: }
  6654                           ;interrupts.c: 108: if (INTCONbits.TMR0IF) {
  6655  001164  A4F2               	btfss	intcon,2,c	;volatile
  6656  001166  D003               	goto	i2l3336
  6657                           
  6658                           ;interrupts.c: 109: INTCONbits.TMR0IF = 0;
  6659  001168  94F2               	bcf	intcon,2,c	;volatile
  6660                           
  6661                           ;interrupts.c: 111: timer0_int_handler();
  6662  00116A  ECD6  F008         	call	_timer0_int_handler	;wreg free
  6663  00116E                     i2l3336:
  6664                           
  6665                           ;interrupts.c: 112: }
  6666                           ;interrupts.c: 122: SleepIfOkay();
  6667  00116E  ECB9  F00A         	call	_SleepIfOkay	;wreg free
  6668  001172  C0B1  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  6669  001176  C0B0  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  6670  00117A  C0AF  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  6671  00117E  C0AE  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  6672  001182  C0AD  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  6673  001186  C0AC  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  6674  00118A  C0AB  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  6675  00118E  C0AA  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  6676  001192  C0A9  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  6677  001196  C0A8  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  6678  00119A  C0A7  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  6679  00119E  C0A6  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  6680  0011A2  C0A5  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  6681  0011A6  C0A4  FFFA         	movff	??_InterruptHandlerHigh,pclath
  6682  0011AA  0011               	retfie		f
  6683  0011AC                     __end_of_InterruptHandlerHigh:
  6684                           	opt stack 0
  6685                           pclatu	equ	0xFFB
  6686                           pclath	equ	0xFFA
  6687                           tblptru	equ	0xFF8
  6688                           tblptrh	equ	0xFF7
  6689                           tblptrl	equ	0xFF6
  6690                           tablat	equ	0xFF5
  6691                           prodh	equ	0xFF4
  6692                           prodl	equ	0xFF3
  6693                           intcon	equ	0xFF2
  6694                           postinc0	equ	0xFEE
  6695                           fsr0h	equ	0xFEA
  6696                           fsr0l	equ	0xFE9
  6697                           wreg	equ	0xFE8
  6698                           indf1	equ	0xFE7
  6699                           fsr1h	equ	0xFE2
  6700                           fsr1l	equ	0xFE1
  6701                           bsr	equ	0xFE0
  6702                           indf2	equ	0xFDF
  6703                           postinc2	equ	0xFDE
  6704                           postdec2	equ	0xFDD
  6705                           fsr2h	equ	0xFDA
  6706                           fsr2l	equ	0xFD9
  6707                           status	equ	0xFD8
  6708                           
  6709 ;; *************** function _timer0_int_handler *****************
  6710 ;; Defined at:
  6711 ;;		line 18 in file "../src/user_interrupts.c"
  6712 ;; Parameters:    Size  Location     Type
  6713 ;;		None
  6714 ;; Auto vars:     Size  Location     Type
  6715 ;;  val             2   34[BANK0 ] unsigned int 
  6716 ;;  msgtype         2   32[BANK0 ] int 
  6717 ;;  length          2   30[BANK0 ] int 
  6718 ;; Return value:  Size  Location     Type
  6719 ;;		None               void
  6720 ;; Registers used:
  6721 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6722 ;; Tracked objects:
  6723 ;;		On entry : 0/0
  6724 ;;		On exit  : 0/0
  6725 ;;		Unchanged: 0/0
  6726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6727 ;;      Params:         0       0       0       0       0
  6728 ;;      Locals:         0       6       0       0       0
  6729 ;;      Temps:          0       1       0       0       0
  6730 ;;      Totals:         0       7       0       0       0
  6731 ;;Total ram usage:        7 bytes
  6732 ;; Hardware stack levels used:    1
  6733 ;; Hardware stack levels required when called:    3
  6734 ;; This function calls:
  6735 ;;		_FromMainHigh_recvmsg
  6736 ;;		_WriteTimer0
  6737 ;;		i2_ToMainHigh_sendmsg
  6738 ;; This function is called by:
  6739 ;;		_InterruptHandlerHigh
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text44
  6744  0011AC                     __ptext44:
  6745                           	opt stack 0
  6746  0011AC                     _timer0_int_handler:
  6747                           	opt stack 17
  6748                           
  6749                           ;user_interrupts.c: 19: unsigned int val;
  6750                           ;user_interrupts.c: 20: int length, msgtype;
  6751                           ;user_interrupts.c: 31: WriteTimer0(0);
  6752                           
  6753                           ;incstack = 0
  6754  0011AC  0E00               	movlw	0
  6755  0011AE  0100               	movlb	0	; () banked
  6756  0011B0  0100               	movlb	0	; () banked
  6757  0011B2  6F81               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  6758  0011B4  0E00               	movlw	0
  6759  0011B6  0100               	movlb	0	; () banked
  6760  0011B8  6F80               	movwf	WriteTimer0@timer0& (0+255),b
  6761  0011BA  EC0F  F00E         	call	_WriteTimer0	;wreg free
  6762                           
  6763                           ;user_interrupts.c: 34: length = FromMainHigh_recvmsg(sizeof (val), (unsigned char *) &m
      +                          sgtype, (void *) &val);
  6764  0011BE  0100               	movlb	0	; () banked
  6765  0011C0  0E00               	movlw	high timer0_int_handler@msgtype
  6766  0011C2  0100               	movlb	0	; () banked
  6767  0011C4  0100               	movlb	0	; () banked
  6768  0011C6  6F99               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  6769  0011C8  0100               	movlb	0	; () banked
  6770  0011CA  0EA0               	movlw	low timer0_int_handler@msgtype
  6771  0011CC  0100               	movlb	0	; () banked
  6772  0011CE  0100               	movlb	0	; () banked
  6773  0011D0  6F98               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  6774  0011D2  0100               	movlb	0	; () banked
  6775  0011D4  0E00               	movlw	high timer0_int_handler@val
  6776  0011D6  0100               	movlb	0	; () banked
  6777  0011D8  0100               	movlb	0	; () banked
  6778  0011DA  6F9B               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  6779  0011DC  0100               	movlb	0	; () banked
  6780  0011DE  0EA2               	movlw	low timer0_int_handler@val
  6781  0011E0  0100               	movlb	0	; () banked
  6782  0011E2  0100               	movlb	0	; () banked
  6783  0011E4  6F9A               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  6784  0011E6  0E02               	movlw	2
  6785  0011E8  EC41  F00C         	call	_FromMainHigh_recvmsg
  6786  0011EC  0100               	movlb	0	; () banked
  6787  0011EE  0100               	movlb	0	; () banked
  6788  0011F0  6F9E               	movwf	timer0_int_handler@length& (0+255),b
  6789  0011F2  0100               	movlb	0	; () banked
  6790  0011F4  6B9F               	clrf	(timer0_int_handler@length+1)& (0+255),b
  6791  0011F6  0100               	movlb	0	; () banked
  6792  0011F8  BF9E               	btfsc	timer0_int_handler@length& (0+255),7,b
  6793  0011FA  079F               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  6794                           
  6795                           ; BSR set to: 0
  6796                           ;user_interrupts.c: 35: if (length == sizeof (val)) {
  6797  0011FC  0100               	movlb	0	; () banked
  6798  0011FE  0100               	movlb	0	; () banked
  6799  001200  519E               	movf	timer0_int_handler@length& (0+255),w,b
  6800  001202  0A02               	xorlw	2
  6801  001204  119F               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  6802  001206  A4D8               	btfss	status,2,c
  6803  001208  0012               	return	
  6804                           
  6805                           ; BSR set to: 0
  6806                           ;user_interrupts.c: 36: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  6807  00120A  0100               	movlb	0	; () banked
  6808  00120C  6F9D               	movwf	??_timer0_int_handler& (0+255),b
  6809  00120E  0E0A               	movlw	10
  6810  001210  0100               	movlb	0	; () banked
  6811  001212  0100               	movlb	0	; () banked
  6812  001214  6F96               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  6813  001216  0100               	movlb	0	; () banked
  6814  001218  519D               	movf	??_timer0_int_handler& (0+255),w,b
  6815  00121A  0100               	movlb	0	; () banked
  6816  00121C  0E00               	movlw	high timer0_int_handler@val
  6817  00121E  0100               	movlb	0	; () banked
  6818  001220  0100               	movlb	0	; () banked
  6819  001222  6F98               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  6820  001224  0100               	movlb	0	; () banked
  6821  001226  0EA2               	movlw	low timer0_int_handler@val
  6822  001228  0100               	movlb	0	; () banked
  6823  00122A  0100               	movlb	0	; () banked
  6824  00122C  6F97               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  6825  00122E  0E02               	movlw	2
  6826  001230  EC0D  F00D         	call	i2_ToMainHigh_sendmsg
  6827  001234  0012               	return	
  6828  001236                     __end_of_timer0_int_handler:
  6829                           	opt stack 0
  6830                           pclatu	equ	0xFFB
  6831                           pclath	equ	0xFFA
  6832                           tblptru	equ	0xFF8
  6833                           tblptrh	equ	0xFF7
  6834                           tblptrl	equ	0xFF6
  6835                           tablat	equ	0xFF5
  6836                           prodh	equ	0xFF4
  6837                           prodl	equ	0xFF3
  6838                           intcon	equ	0xFF2
  6839                           postinc0	equ	0xFEE
  6840                           fsr0h	equ	0xFEA
  6841                           fsr0l	equ	0xFE9
  6842                           wreg	equ	0xFE8
  6843                           indf1	equ	0xFE7
  6844                           fsr1h	equ	0xFE2
  6845                           fsr1l	equ	0xFE1
  6846                           bsr	equ	0xFE0
  6847                           indf2	equ	0xFDF
  6848                           postinc2	equ	0xFDE
  6849                           postdec2	equ	0xFDD
  6850                           fsr2h	equ	0xFDA
  6851                           fsr2l	equ	0xFD9
  6852                           status	equ	0xFD8
  6853                           
  6854 ;; *************** function i2_ToMainHigh_sendmsg *****************
  6855 ;; Defined at:
  6856 ;;		line 126 in file "../src/messages.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  length          1    wreg     unsigned char 
  6859 ;;  msgtype         1   22[BANK0 ] unsigned char 
  6860 ;;  data            2   23[BANK0 ] PTR void 
  6861 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  6862 ;; Auto vars:     Size  Location     Type
  6863 ;;  length          1   25[BANK0 ] unsigned char 
  6864 ;; Return value:  Size  Location     Type
  6865 ;;                  1    wreg      char 
  6866 ;; Registers used:
  6867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6868 ;; Tracked objects:
  6869 ;;		On entry : 0/0
  6870 ;;		On exit  : 0/0
  6871 ;;		Unchanged: 0/0
  6872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6873 ;;      Params:         0       3       0       0       0
  6874 ;;      Locals:         0       1       0       0       0
  6875 ;;      Temps:          0       0       0       0       0
  6876 ;;      Totals:         0       4       0       0       0
  6877 ;;Total ram usage:        4 bytes
  6878 ;; Hardware stack levels used:    1
  6879 ;; Hardware stack levels required when called:    2
  6880 ;; This function calls:
  6881 ;;		i2_send_msg
  6882 ;; This function is called by:
  6883 ;;		_timer0_int_handler
  6884 ;; This function uses a non-reentrant model
  6885 ;;
  6886                           
  6887                           	psect	text45
  6888  001A1A                     __ptext45:
  6889                           	opt stack 0
  6890  001A1A                     i2_ToMainHigh_sendmsg:
  6891                           	opt stack 17
  6892                           
  6893                           ;incstack = 0
  6894                           ;i2ToMainHigh_sendmsg@length stored from wreg
  6895  001A1A  CFE8 F099          	movff	wreg,i2ToMainHigh_sendmsg@length
  6896                           
  6897                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6898                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  6899  001A1E  0101               	movlb	1	; () banked
  6900  001A20  0E01               	movlw	high _ToMainHigh_MQ
  6901  001A22  0100               	movlb	0	; () banked
  6902  001A24  0100               	movlb	0	; () banked
  6903  001A26  6F8B               	movwf	(i2send_msg@qptr+1)& (0+255),b
  6904  001A28  0101               	movlb	1	; () banked
  6905  001A2A  0E36               	movlw	low _ToMainHigh_MQ
  6906  001A2C  0100               	movlb	0	; () banked
  6907  001A2E  0100               	movlb	0	; () banked
  6908  001A30  6F8A               	movwf	i2send_msg@qptr& (0+255),b
  6909  001A32  C099  F08C         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  6910  001A36  C096  F08D         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  6911  001A3A  0100               	movlb	0	; () banked
  6912  001A3C  0100               	movlb	0	; () banked
  6913  001A3E  C098  F08F         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  6914  001A42  0100               	movlb	0	; () banked
  6915  001A44  0100               	movlb	0	; () banked
  6916  001A46  C097  F08E         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  6917  001A4A  EC85  F006         	call	i2_send_msg	;wreg free
  6918  001A4E  0012               	return	
  6919  001A50                     __end_ofi2_ToMainHigh_sendmsg:
  6920                           	opt stack 0
  6921                           pclatu	equ	0xFFB
  6922                           pclath	equ	0xFFA
  6923                           tblptru	equ	0xFF8
  6924                           tblptrh	equ	0xFF7
  6925                           tblptrl	equ	0xFF6
  6926                           tablat	equ	0xFF5
  6927                           prodh	equ	0xFF4
  6928                           prodl	equ	0xFF3
  6929                           intcon	equ	0xFF2
  6930                           postinc0	equ	0xFEE
  6931                           fsr0h	equ	0xFEA
  6932                           fsr0l	equ	0xFE9
  6933                           wreg	equ	0xFE8
  6934                           indf1	equ	0xFE7
  6935                           fsr1h	equ	0xFE2
  6936                           fsr1l	equ	0xFE1
  6937                           bsr	equ	0xFE0
  6938                           indf2	equ	0xFDF
  6939                           postinc2	equ	0xFDE
  6940                           postdec2	equ	0xFDD
  6941                           fsr2h	equ	0xFDA
  6942                           fsr2l	equ	0xFD9
  6943                           status	equ	0xFD8
  6944                           
  6945 ;; *************** function i2_send_msg *****************
  6946 ;; Defined at:
  6947 ;;		line 24 in file "../src/messages.c"
  6948 ;; Parameters:    Size  Location     Type
  6949 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  6950 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6951 ;;  length          1   12[BANK0 ] unsigned char 
  6952 ;;  msgtype         1   13[BANK0 ] unsigned char 
  6953 ;;  data            2   14[BANK0 ] PTR void 
  6954 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  6955 ;;		 -> main@uc(14), 
  6956 ;; Auto vars:     Size  Location     Type
  6957 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  6958 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6959 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6960 ;;  send_msg        2   17[BANK0 ] unsigned int 
  6961 ;;  send_msg        1   19[BANK0 ] unsigned char 
  6962 ;; Return value:  Size  Location     Type
  6963 ;;                  1    wreg      char 
  6964 ;; Registers used:
  6965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6966 ;; Tracked objects:
  6967 ;;		On entry : 0/0
  6968 ;;		On exit  : 0/0
  6969 ;;		Unchanged: 0/0
  6970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6971 ;;      Params:         0       6       0       0       0
  6972 ;;      Locals:         0       5       0       0       0
  6973 ;;      Temps:          0       1       0       0       0
  6974 ;;      Totals:         0      12       0       0       0
  6975 ;;Total ram usage:       12 bytes
  6976 ;; Hardware stack levels used:    1
  6977 ;; Hardware stack levels required when called:    1
  6978 ;; This function calls:
  6979 ;;		i2_memcpy
  6980 ;; This function is called by:
  6981 ;;		i2_ToMainHigh_sendmsg
  6982 ;; This function uses a non-reentrant model
  6983 ;;
  6984                           
  6985                           	psect	text46
  6986  000D0A                     __ptext46:
  6987                           	opt stack 0
  6988  000D0A                     i2_send_msg:
  6989                           	opt stack 17
  6990                           
  6991                           ;messages.c: 25: unsigned char slot;
  6992                           ;messages.c: 27: msg *qmsg;
  6993                           ;messages.c: 28: size_t tlength = length;
  6994                           
  6995                           ;incstack = 0
  6996  000D0A  0100               	movlb	0	; () banked
  6997  000D0C  0100               	movlb	0	; () banked
  6998  000D0E  C08C  F091         	movff	i2send_msg@length,i2send_msg@tlength
  6999  000D12  0100               	movlb	0	; () banked
  7000  000D14  0100               	movlb	0	; () banked
  7001  000D16  6B92               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7002                           
  7003                           ; BSR set to: 0
  7004                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7005  000D18  0100               	movlb	0	; () banked
  7006  000D1A  EE20 F034          	lfsr	2,52
  7007  000D1E  0100               	movlb	0	; () banked
  7008  000D20  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7009  000D22  26D9               	addwf	fsr2l,f,c
  7010  000D24  0100               	movlb	0	; () banked
  7011  000D26  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7012  000D28  22DA               	addwfc	fsr2h,f,c
  7013  000D2A  50DF               	movf	indf2,w,c
  7014  000D2C  0100               	movlb	0	; () banked
  7015  000D2E  0100               	movlb	0	; () banked
  7016  000D30  6F93               	movwf	i2send_msg@slot& (0+255),b
  7017                           
  7018                           ; BSR set to: 0
  7019                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7020  000D32  0100               	movlb	0	; () banked
  7021  000D34  0100               	movlb	0	; () banked
  7022  000D36  5193               	movf	i2send_msg@slot& (0+255),w,b
  7023  000D38  0D0D               	mullw	13
  7024  000D3A  50F3               	movf	prodl,w,c
  7025  000D3C  0100               	movlb	0	; () banked
  7026  000D3E  0100               	movlb	0	; () banked
  7027  000D40  258A               	addwf	i2send_msg@qptr& (0+255),w,b
  7028  000D42  0100               	movlb	0	; () banked
  7029  000D44  0100               	movlb	0	; () banked
  7030  000D46  6F94               	movwf	i2send_msg@qmsg& (0+255),b
  7031  000D48  50F4               	movf	prodh,w,c
  7032  000D4A  0100               	movlb	0	; () banked
  7033  000D4C  0100               	movlb	0	; () banked
  7034  000D4E  218B               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7035  000D50  0100               	movlb	0	; () banked
  7036  000D52  6F95               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7037                           
  7038                           ; BSR set to: 0
  7039                           ;messages.c: 41: if (qmsg->full != 0) {
  7040  000D54  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7041  000D58  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7042  000D5C  50DF               	movf	indf2,w,c
  7043  000D5E  B4D8               	btfsc	status,2,c
  7044  000D60  D002               	goto	i2l4080
  7045                           
  7046                           ; BSR set to: 0
  7047                           ;messages.c: 42: return (-1);
  7048  000D62  0EFF               	movlw	255
  7049  000D64  0012               	return	
  7050  000D66                     i2l4080:
  7051                           
  7052                           ; BSR set to: 0
  7053                           ;messages.c: 43: }
  7054                           ;messages.c: 46: qmsg->length = length;
  7055  000D66  0100               	movlb	0	; () banked
  7056  000D68  EE20 F001          	lfsr	2,1
  7057  000D6C  0100               	movlb	0	; () banked
  7058  000D6E  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  7059  000D70  26D9               	addwf	fsr2l,f,c
  7060  000D72  0100               	movlb	0	; () banked
  7061  000D74  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7062  000D76  22DA               	addwfc	fsr2h,f,c
  7063  000D78  0100               	movlb	0	; () banked
  7064  000D7A  C08C  FFDF         	movff	i2send_msg@length,indf2
  7065                           
  7066                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7067  000D7E  0100               	movlb	0	; () banked
  7068  000D80  EE20 F002          	lfsr	2,2
  7069  000D84  0100               	movlb	0	; () banked
  7070  000D86  5194               	movf	i2send_msg@qmsg& (0+255),w,b
  7071  000D88  26D9               	addwf	fsr2l,f,c
  7072  000D8A  0100               	movlb	0	; () banked
  7073  000D8C  5195               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7074  000D8E  22DA               	addwfc	fsr2h,f,c
  7075  000D90  0100               	movlb	0	; () banked
  7076  000D92  C08D  FFDF         	movff	i2send_msg@msgtype,indf2
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7080  000D96  0E03               	movlw	3
  7081  000D98  0100               	movlb	0	; () banked
  7082  000D9A  0100               	movlb	0	; () banked
  7083  000D9C  2594               	addwf	i2send_msg@qmsg& (0+255),w,b
  7084  000D9E  0100               	movlb	0	; () banked
  7085  000DA0  0100               	movlb	0	; () banked
  7086  000DA2  6F80               	movwf	i2memcpy@d1& (0+255),b
  7087  000DA4  0E00               	movlw	0
  7088  000DA6  0100               	movlb	0	; () banked
  7089  000DA8  0100               	movlb	0	; () banked
  7090  000DAA  2195               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7091  000DAC  0100               	movlb	0	; () banked
  7092  000DAE  6F81               	movwf	(i2memcpy@d1+1)& (0+255),b
  7093  000DB0  0100               	movlb	0	; () banked
  7094  000DB2  0100               	movlb	0	; () banked
  7095  000DB4  C08F  F083         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7096  000DB8  0100               	movlb	0	; () banked
  7097  000DBA  0100               	movlb	0	; () banked
  7098  000DBC  C08E  F082         	movff	i2send_msg@data,i2memcpy@s1
  7099  000DC0  C091  F084         	movff	i2send_msg@tlength,i2memcpy@n
  7100  000DC4  C092  F085         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7101  000DC8  EC1D  F00B         	call	i2_memcpy	;wreg free
  7102                           
  7103                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7104  000DCC  0100               	movlb	0	; () banked
  7105  000DCE  EE20 F034          	lfsr	2,52
  7106  000DD2  0100               	movlb	0	; () banked
  7107  000DD4  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7108  000DD6  26D9               	addwf	fsr2l,f,c
  7109  000DD8  0100               	movlb	0	; () banked
  7110  000DDA  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7111  000DDC  22DA               	addwfc	fsr2h,f,c
  7112  000DDE  0100               	movlb	0	; () banked
  7113  000DE0  EE10 F034          	lfsr	1,52
  7114  000DE4  0100               	movlb	0	; () banked
  7115  000DE6  518A               	movf	i2send_msg@qptr& (0+255),w,b
  7116  000DE8  26E1               	addwf	fsr1l,f,c
  7117  000DEA  0100               	movlb	0	; () banked
  7118  000DEC  518B               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7119  000DEE  22E2               	addwfc	fsr1h,f,c
  7120  000DF0  50E7               	movf	indf1,w,c
  7121  000DF2  0100               	movlb	0	; () banked
  7122  000DF4  6F90               	movwf	??i2_send_msg& (0+255),b
  7123  000DF6  0100               	movlb	0	; () banked
  7124  000DF8  2990               	incf	??i2_send_msg& (0+255),w,b
  7125  000DFA  0B03               	andlw	3
  7126  000DFC  6EDF               	movwf	indf2,c
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;messages.c: 59: qmsg->full = 1;
  7130  000DFE  C094  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7131  000E02  C095  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7132  000E06  0E01               	movlw	1
  7133  000E08  6EDF               	movwf	indf2,c
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;messages.c: 60: return (1);
  7137  000E0A  0E01               	movlw	1
  7138  000E0C  0012               	return	
  7139  000E0E                     __end_ofi2_send_msg:
  7140                           	opt stack 0
  7141                           pclatu	equ	0xFFB
  7142                           pclath	equ	0xFFA
  7143                           tblptru	equ	0xFF8
  7144                           tblptrh	equ	0xFF7
  7145                           tblptrl	equ	0xFF6
  7146                           tablat	equ	0xFF5
  7147                           prodh	equ	0xFF4
  7148                           prodl	equ	0xFF3
  7149                           intcon	equ	0xFF2
  7150                           postinc0	equ	0xFEE
  7151                           fsr0h	equ	0xFEA
  7152                           fsr0l	equ	0xFE9
  7153                           wreg	equ	0xFE8
  7154                           indf1	equ	0xFE7
  7155                           fsr1h	equ	0xFE2
  7156                           fsr1l	equ	0xFE1
  7157                           bsr	equ	0xFE0
  7158                           indf2	equ	0xFDF
  7159                           postinc2	equ	0xFDE
  7160                           postdec2	equ	0xFDD
  7161                           fsr2h	equ	0xFDA
  7162                           fsr2l	equ	0xFD9
  7163                           status	equ	0xFD8
  7164                           
  7165 ;; *************** function _WriteTimer0 *****************
  7166 ;; Defined at:
  7167 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  timer0          2    0[BANK0 ] unsigned int 
  7170 ;; Auto vars:     Size  Location     Type
  7171 ;;  timer           2    2[BANK0 ] struct Timers
  7172 ;; Return value:  Size  Location     Type
  7173 ;;		None               void
  7174 ;; Registers used:
  7175 ;;		None
  7176 ;; Tracked objects:
  7177 ;;		On entry : 0/0
  7178 ;;		On exit  : 0/0
  7179 ;;		Unchanged: 0/0
  7180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7181 ;;      Params:         0       2       0       0       0
  7182 ;;      Locals:         0       2       0       0       0
  7183 ;;      Temps:          0       0       0       0       0
  7184 ;;      Totals:         0       4       0       0       0
  7185 ;;Total ram usage:        4 bytes
  7186 ;; Hardware stack levels used:    1
  7187 ;; This function calls:
  7188 ;;		Nothing
  7189 ;; This function is called by:
  7190 ;;		_timer0_int_handler
  7191 ;; This function uses a non-reentrant model
  7192 ;;
  7193                           
  7194                           	psect	text47
  7195  001C1E                     __ptext47:
  7196                           	opt stack 0
  7197  001C1E                     _WriteTimer0:
  7198                           	opt stack 19
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;incstack = 0
  7202  001C1E  C080  F082         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7203  001C22  C081  F083         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7204  001C26  C083  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7205  001C2A  C082  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7206  001C2E  0012               	return	
  7207  001C30                     __end_of_WriteTimer0:
  7208                           	opt stack 0
  7209                           pclatu	equ	0xFFB
  7210                           pclath	equ	0xFFA
  7211                           tblptru	equ	0xFF8
  7212                           tblptrh	equ	0xFF7
  7213                           tblptrl	equ	0xFF6
  7214                           tablat	equ	0xFF5
  7215                           prodh	equ	0xFF4
  7216                           prodl	equ	0xFF3
  7217                           intcon	equ	0xFF2
  7218                           postinc0	equ	0xFEE
  7219                           fsr0h	equ	0xFEA
  7220                           fsr0l	equ	0xFE9
  7221                           wreg	equ	0xFE8
  7222                           indf1	equ	0xFE7
  7223                           fsr1h	equ	0xFE2
  7224                           fsr1l	equ	0xFE1
  7225                           bsr	equ	0xFE0
  7226                           indf2	equ	0xFDF
  7227                           postinc2	equ	0xFDE
  7228                           postdec2	equ	0xFDD
  7229                           fsr2h	equ	0xFDA
  7230                           fsr2l	equ	0xFD9
  7231                           status	equ	0xFD8
  7232                           
  7233 ;; *************** function _FromMainHigh_recvmsg *****************
  7234 ;; Defined at:
  7235 ;;		line 183 in file "../src/messages.c"
  7236 ;; Parameters:    Size  Location     Type
  7237 ;;  maxlength       1    wreg     unsigned char 
  7238 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  7239 ;;		 -> timer0_int_handler@msgtype(2), 
  7240 ;;  data            2   26[BANK0 ] PTR void 
  7241 ;;		 -> timer0_int_handler@val(2), 
  7242 ;; Auto vars:     Size  Location     Type
  7243 ;;  maxlength       1   28[BANK0 ] unsigned char 
  7244 ;; Return value:  Size  Location     Type
  7245 ;;                  1    wreg      char 
  7246 ;; Registers used:
  7247 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7248 ;; Tracked objects:
  7249 ;;		On entry : 0/0
  7250 ;;		On exit  : 0/0
  7251 ;;		Unchanged: 0/0
  7252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7253 ;;      Params:         0       4       0       0       0
  7254 ;;      Locals:         0       1       0       0       0
  7255 ;;      Temps:          0       0       0       0       0
  7256 ;;      Totals:         0       5       0       0       0
  7257 ;;Total ram usage:        5 bytes
  7258 ;; Hardware stack levels used:    1
  7259 ;; Hardware stack levels required when called:    2
  7260 ;; This function calls:
  7261 ;;		i2_recv_msg
  7262 ;; This function is called by:
  7263 ;;		_timer0_int_handler
  7264 ;; This function uses a non-reentrant model
  7265 ;;
  7266                           
  7267                           	psect	text48
  7268  001882                     __ptext48:
  7269                           	opt stack 0
  7270  001882                     _FromMainHigh_recvmsg:
  7271                           	opt stack 17
  7272                           
  7273                           ;incstack = 0
  7274                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  7275  001882  CFE8 F09C          	movff	wreg,FromMainHigh_recvmsg@maxlength
  7276                           
  7277                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  7278  001886  0102               	movlb	2	; () banked
  7279  001888  0E02               	movlw	high _FromMainHigh_MQ
  7280  00188A  0100               	movlb	0	; () banked
  7281  00188C  0100               	movlb	0	; () banked
  7282  00188E  6F8B               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  7283  001890  0102               	movlb	2	; () banked
  7284  001892  0E45               	movlw	low _FromMainHigh_MQ
  7285  001894  0100               	movlb	0	; () banked
  7286  001896  0100               	movlb	0	; () banked
  7287  001898  6F8A               	movwf	i2recv_msg@qptr& (0+255),b
  7288  00189A  C09C  F08C         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  7289  00189E  0100               	movlb	0	; () banked
  7290  0018A0  0100               	movlb	0	; () banked
  7291  0018A2  C099  F08E         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  7292  0018A6  0100               	movlb	0	; () banked
  7293  0018A8  0100               	movlb	0	; () banked
  7294  0018AA  C098  F08D         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  7295  0018AE  0100               	movlb	0	; () banked
  7296  0018B0  0100               	movlb	0	; () banked
  7297  0018B2  C09B  F090         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  7298  0018B6  0100               	movlb	0	; () banked
  7299  0018B8  0100               	movlb	0	; () banked
  7300  0018BA  C09A  F08F         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  7301  0018BE  EC68  F005         	call	i2_recv_msg	;wreg free
  7302  0018C2  0012               	return	
  7303  0018C4                     __end_of_FromMainHigh_recvmsg:
  7304                           	opt stack 0
  7305                           pclatu	equ	0xFFB
  7306                           pclath	equ	0xFFA
  7307                           tblptru	equ	0xFF8
  7308                           tblptrh	equ	0xFF7
  7309                           tblptrl	equ	0xFF6
  7310                           tablat	equ	0xFF5
  7311                           prodh	equ	0xFF4
  7312                           prodl	equ	0xFF3
  7313                           intcon	equ	0xFF2
  7314                           postinc0	equ	0xFEE
  7315                           fsr0h	equ	0xFEA
  7316                           fsr0l	equ	0xFE9
  7317                           wreg	equ	0xFE8
  7318                           indf1	equ	0xFE7
  7319                           fsr1h	equ	0xFE2
  7320                           fsr1l	equ	0xFE1
  7321                           bsr	equ	0xFE0
  7322                           indf2	equ	0xFDF
  7323                           postinc2	equ	0xFDE
  7324                           postdec2	equ	0xFDD
  7325                           fsr2h	equ	0xFDA
  7326                           fsr2l	equ	0xFD9
  7327                           status	equ	0xFD8
  7328                           
  7329 ;; *************** function i2_recv_msg *****************
  7330 ;; Defined at:
  7331 ;;		line 63 in file "../src/messages.c"
  7332 ;; Parameters:    Size  Location     Type
  7333 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7334 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7335 ;;  maxlength       1   12[BANK0 ] unsigned char 
  7336 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  7337 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  7338 ;;  data            2   15[BANK0 ] PTR void 
  7339 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  7340 ;; Auto vars:     Size  Location     Type
  7341 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  7342 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7343 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7344 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  7345 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  7346 ;; Return value:  Size  Location     Type
  7347 ;;                  1    wreg      char 
  7348 ;; Registers used:
  7349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7350 ;; Tracked objects:
  7351 ;;		On entry : 0/0
  7352 ;;		On exit  : 0/0
  7353 ;;		Unchanged: 0/0
  7354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7355 ;;      Params:         0       7       0       0       0
  7356 ;;      Locals:         0       5       0       0       0
  7357 ;;      Temps:          0       2       0       0       0
  7358 ;;      Totals:         0      14       0       0       0
  7359 ;;Total ram usage:       14 bytes
  7360 ;; Hardware stack levels used:    1
  7361 ;; Hardware stack levels required when called:    1
  7362 ;; This function calls:
  7363 ;;		i2_memcpy
  7364 ;; This function is called by:
  7365 ;;		_FromMainHigh_recvmsg
  7366 ;; This function uses a non-reentrant model
  7367 ;;
  7368                           
  7369                           	psect	text49
  7370  000AD0                     __ptext49:
  7371                           	opt stack 0
  7372  000AD0                     i2_recv_msg:
  7373                           	opt stack 17
  7374                           
  7375                           ;messages.c: 64: unsigned char slot;
  7376                           ;messages.c: 68: msg *qmsg;
  7377                           ;messages.c: 69: size_t tlength;
  7378                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7379                           
  7380                           ;incstack = 0
  7381  000AD0  0100               	movlb	0	; () banked
  7382  000AD2  EE20 F035          	lfsr	2,53
  7383  000AD6  0100               	movlb	0	; () banked
  7384  000AD8  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  7385  000ADA  26D9               	addwf	fsr2l,f,c
  7386  000ADC  0100               	movlb	0	; () banked
  7387  000ADE  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7388  000AE0  22DA               	addwfc	fsr2h,f,c
  7389  000AE2  50DF               	movf	indf2,w,c
  7390  000AE4  0100               	movlb	0	; () banked
  7391  000AE6  0100               	movlb	0	; () banked
  7392  000AE8  6F93               	movwf	i2recv_msg@slot& (0+255),b
  7393                           
  7394                           ; BSR set to: 0
  7395                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7396  000AEA  0100               	movlb	0	; () banked
  7397  000AEC  0100               	movlb	0	; () banked
  7398  000AEE  5193               	movf	i2recv_msg@slot& (0+255),w,b
  7399  000AF0  0D0D               	mullw	13
  7400  000AF2  50F3               	movf	prodl,w,c
  7401  000AF4  0100               	movlb	0	; () banked
  7402  000AF6  0100               	movlb	0	; () banked
  7403  000AF8  258A               	addwf	i2recv_msg@qptr& (0+255),w,b
  7404  000AFA  0100               	movlb	0	; () banked
  7405  000AFC  0100               	movlb	0	; () banked
  7406  000AFE  6F96               	movwf	i2recv_msg@qmsg& (0+255),b
  7407  000B00  50F4               	movf	prodh,w,c
  7408  000B02  0100               	movlb	0	; () banked
  7409  000B04  0100               	movlb	0	; () banked
  7410  000B06  218B               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  7411  000B08  0100               	movlb	0	; () banked
  7412  000B0A  6F97               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  7413                           
  7414                           ; BSR set to: 0
  7415                           ;messages.c: 74: if (qmsg->full == 1) {
  7416  000B0C  0E01               	movlw	1
  7417  000B0E  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7418  000B12  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7419  000B16  62DF               	cpfseq	indf2,c
  7420  000B18  D074               	goto	i2l4120
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7424  000B1A  0100               	movlb	0	; () banked
  7425  000B1C  EE20 F001          	lfsr	2,1
  7426  000B20  0100               	movlb	0	; () banked
  7427  000B22  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  7428  000B24  26D9               	addwf	fsr2l,f,c
  7429  000B26  0100               	movlb	0	; () banked
  7430  000B28  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7431  000B2A  22DA               	addwfc	fsr2h,f,c
  7432  000B2C  50DF               	movf	indf2,w,c
  7433  000B2E  0100               	movlb	0	; () banked
  7434  000B30  0100               	movlb	0	; () banked
  7435  000B32  5D8C               	subwf	i2recv_msg@maxlength& (0+255),w,b
  7436  000B34  B0D8               	btfsc	status,0,c
  7437  000B36  D002               	goto	i2l4104
  7438                           
  7439                           ; BSR set to: 0
  7440                           ;messages.c: 77: return (-3);
  7441  000B38  0EFD               	movlw	253
  7442  000B3A  0012               	return	
  7443  000B3C                     i2l4104:
  7444                           
  7445                           ; BSR set to: 0
  7446                           ;messages.c: 78: }
  7447                           ;messages.c: 80: tlength = qmsg->length;
  7448  000B3C  0100               	movlb	0	; () banked
  7449  000B3E  EE20 F001          	lfsr	2,1
  7450  000B42  0100               	movlb	0	; () banked
  7451  000B44  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  7452  000B46  26D9               	addwf	fsr2l,f,c
  7453  000B48  0100               	movlb	0	; () banked
  7454  000B4A  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7455  000B4C  22DA               	addwfc	fsr2h,f,c
  7456  000B4E  50DF               	movf	indf2,w,c
  7457  000B50  0100               	movlb	0	; () banked
  7458  000B52  6F91               	movwf	??i2_recv_msg& (0+255),b
  7459  000B54  0100               	movlb	0	; () banked
  7460  000B56  5191               	movf	??i2_recv_msg& (0+255),w,b
  7461  000B58  0100               	movlb	0	; () banked
  7462  000B5A  0100               	movlb	0	; () banked
  7463  000B5C  6F94               	movwf	i2recv_msg@tlength& (0+255),b
  7464  000B5E  0100               	movlb	0	; () banked
  7465  000B60  6B95               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7466                           
  7467                           ; BSR set to: 0
  7468                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7469  000B62  0100               	movlb	0	; () banked
  7470  000B64  0100               	movlb	0	; () banked
  7471  000B66  C090  F081         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7472  000B6A  0100               	movlb	0	; () banked
  7473  000B6C  0100               	movlb	0	; () banked
  7474  000B6E  C08F  F080         	movff	i2recv_msg@data,i2memcpy@d1
  7475  000B72  0E03               	movlw	3
  7476  000B74  0100               	movlb	0	; () banked
  7477  000B76  0100               	movlb	0	; () banked
  7478  000B78  2596               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7479  000B7A  0100               	movlb	0	; () banked
  7480  000B7C  6F91               	movwf	??i2_recv_msg& (0+255),b
  7481  000B7E  0E00               	movlw	0
  7482  000B80  0100               	movlb	0	; () banked
  7483  000B82  0100               	movlb	0	; () banked
  7484  000B84  2197               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7485  000B86  0100               	movlb	0	; () banked
  7486  000B88  6F92               	movwf	(??i2_recv_msg+1)& (0+255),b
  7487  000B8A  C091  F082         	movff	??i2_recv_msg,i2memcpy@s1
  7488  000B8E  C092  F083         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7489  000B92  C094  F084         	movff	i2recv_msg@tlength,i2memcpy@n
  7490  000B96  C095  F085         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7491  000B9A  EC1D  F00B         	call	i2_memcpy	;wreg free
  7492                           
  7493                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7494  000B9E  0100               	movlb	0	; () banked
  7495  000BA0  EE20 F035          	lfsr	2,53
  7496  000BA4  0100               	movlb	0	; () banked
  7497  000BA6  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  7498  000BA8  26D9               	addwf	fsr2l,f,c
  7499  000BAA  0100               	movlb	0	; () banked
  7500  000BAC  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7501  000BAE  22DA               	addwfc	fsr2h,f,c
  7502  000BB0  0100               	movlb	0	; () banked
  7503  000BB2  EE10 F035          	lfsr	1,53
  7504  000BB6  0100               	movlb	0	; () banked
  7505  000BB8  518A               	movf	i2recv_msg@qptr& (0+255),w,b
  7506  000BBA  26E1               	addwf	fsr1l,f,c
  7507  000BBC  0100               	movlb	0	; () banked
  7508  000BBE  518B               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7509  000BC0  22E2               	addwfc	fsr1h,f,c
  7510  000BC2  50E7               	movf	indf1,w,c
  7511  000BC4  0100               	movlb	0	; () banked
  7512  000BC6  6F91               	movwf	??i2_recv_msg& (0+255),b
  7513  000BC8  0100               	movlb	0	; () banked
  7514  000BCA  2991               	incf	??i2_recv_msg& (0+255),w,b
  7515  000BCC  0B03               	andlw	3
  7516  000BCE  6EDF               	movwf	indf2,c
  7517                           
  7518                           ; BSR set to: 0
  7519                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7520  000BD0  0100               	movlb	0	; () banked
  7521  000BD2  EE20 F002          	lfsr	2,2
  7522  000BD6  0100               	movlb	0	; () banked
  7523  000BD8  5196               	movf	i2recv_msg@qmsg& (0+255),w,b
  7524  000BDA  26D9               	addwf	fsr2l,f,c
  7525  000BDC  0100               	movlb	0	; () banked
  7526  000BDE  5197               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7527  000BE0  22DA               	addwfc	fsr2h,f,c
  7528  000BE2  C08D  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  7529  000BE6  C08E  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  7530  000BEA  CFDF FFE7          	movff	indf2,indf1
  7531                           
  7532                           ; BSR set to: 0
  7533                           ;messages.c: 91: qmsg->full = 0;
  7534  000BEE  C096  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7535  000BF2  C097  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7536  000BF6  0E00               	movlw	0
  7537  000BF8  6EDF               	movwf	indf2,c
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;messages.c: 92: return (tlength);
  7541  000BFA  0100               	movlb	0	; () banked
  7542  000BFC  0100               	movlb	0	; () banked
  7543  000BFE  5194               	movf	i2recv_msg@tlength& (0+255),w,b
  7544  000C00  0012               	return	
  7545  000C02                     i2l4120:
  7546                           
  7547                           ; BSR set to: 0
  7548                           ;messages.c: 94: return (-4);
  7549  000C02  0EFC               	movlw	252
  7550  000C04  0012               	return	
  7551  000C06                     __end_ofi2_recv_msg:
  7552                           	opt stack 0
  7553                           pclatu	equ	0xFFB
  7554                           pclath	equ	0xFFA
  7555                           tblptru	equ	0xFF8
  7556                           tblptrh	equ	0xFF7
  7557                           tblptrl	equ	0xFF6
  7558                           tablat	equ	0xFF5
  7559                           prodh	equ	0xFF4
  7560                           prodl	equ	0xFF3
  7561                           intcon	equ	0xFF2
  7562                           postinc0	equ	0xFEE
  7563                           fsr0h	equ	0xFEA
  7564                           fsr0l	equ	0xFE9
  7565                           wreg	equ	0xFE8
  7566                           indf1	equ	0xFE7
  7567                           fsr1h	equ	0xFE2
  7568                           fsr1l	equ	0xFE1
  7569                           bsr	equ	0xFE0
  7570                           indf2	equ	0xFDF
  7571                           postinc2	equ	0xFDE
  7572                           postdec2	equ	0xFDD
  7573                           fsr2h	equ	0xFDA
  7574                           fsr2l	equ	0xFD9
  7575                           status	equ	0xFD8
  7576                           
  7577 ;; *************** function i2_memcpy *****************
  7578 ;; Defined at:
  7579 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7580 ;; Parameters:    Size  Location     Type
  7581 ;;  d1              2    0[BANK0 ] PTR void 
  7582 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7583 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7584 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7585 ;;  s1              2    2[BANK0 ] PTR const void 
  7586 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7587 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7588 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7589 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  7590 ;;		 -> main@uc(14), 
  7591 ;;  n               2    4[BANK0 ] unsigned int 
  7592 ;; Auto vars:     Size  Location     Type
  7593 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  7594 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7595 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7596 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7597 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  7598 ;;		 -> main@uc(14), 
  7599 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  7600 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7601 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7602 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  2    0[BANK0 ] PTR void 
  7605 ;; Registers used:
  7606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7612 ;;      Params:         0       6       0       0       0
  7613 ;;      Locals:         0       4       0       0       0
  7614 ;;      Temps:          0       0       0       0       0
  7615 ;;      Totals:         0      10       0       0       0
  7616 ;;Total ram usage:       10 bytes
  7617 ;; Hardware stack levels used:    1
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		i2_send_msg
  7622 ;;		i2_recv_msg
  7623 ;; This function uses a non-reentrant model
  7624 ;;
  7625                           
  7626                           	psect	text50
  7627  00163A                     __ptext50:
  7628                           	opt stack 0
  7629  00163A                     i2_memcpy:
  7630                           	opt stack 17
  7631                           
  7632                           ; BSR set to: 0
  7633                           ;incstack = 0
  7634  00163A  0100               	movlb	0	; () banked
  7635  00163C  0100               	movlb	0	; () banked
  7636  00163E  C083  F089         	movff	i2memcpy@s1+1,i2memcpy@s+1
  7637  001642  0100               	movlb	0	; () banked
  7638  001644  0100               	movlb	0	; () banked
  7639  001646  C082  F088         	movff	i2memcpy@s1,i2memcpy@s
  7640  00164A  0100               	movlb	0	; () banked
  7641  00164C  0100               	movlb	0	; () banked
  7642  00164E  C081  F087         	movff	i2memcpy@d1+1,i2memcpy@d+1
  7643  001652  0100               	movlb	0	; () banked
  7644  001654  0100               	movlb	0	; () banked
  7645  001656  C080  F086         	movff	i2memcpy@d1,i2memcpy@d
  7646  00165A  D012               	goto	i2l4150
  7647  00165C                     i2l4144:
  7648                           
  7649                           ; BSR set to: 0
  7650  00165C  C088  FFD9         	movff	i2memcpy@s,fsr2l
  7651  001660  C089  FFDA         	movff	i2memcpy@s+1,fsr2h
  7652  001664  C086  FFE1         	movff	i2memcpy@d,fsr1l
  7653  001668  C087  FFE2         	movff	i2memcpy@d+1,fsr1h
  7654  00166C  CFDF FFE7          	movff	indf2,indf1
  7655                           
  7656                           ; BSR set to: 0
  7657  001670  0100               	movlb	0	; () banked
  7658  001672  0100               	movlb	0	; () banked
  7659  001674  4B88               	infsnz	i2memcpy@s& (0+255),f,b
  7660  001676  2B89               	incf	(i2memcpy@s+1)& (0+255),f,b
  7661                           
  7662                           ; BSR set to: 0
  7663  001678  0100               	movlb	0	; () banked
  7664  00167A  0100               	movlb	0	; () banked
  7665  00167C  4B86               	infsnz	i2memcpy@d& (0+255),f,b
  7666  00167E  2B87               	incf	(i2memcpy@d+1)& (0+255),f,b
  7667  001680                     i2l4150:
  7668                           
  7669                           ; BSR set to: 0
  7670  001680  0100               	movlb	0	; () banked
  7671  001682  0100               	movlb	0	; () banked
  7672  001684  0784               	decf	i2memcpy@n& (0+255),f,b
  7673  001686  A0D8               	btfss	status,0,c
  7674  001688  0785               	decf	(i2memcpy@n+1)& (0+255),f,b
  7675  00168A  0100               	movlb	0	; () banked
  7676  00168C  2984               	incf	i2memcpy@n& (0+255),w,b
  7677  00168E  B4D8               	btfsc	status,2,c
  7678  001690  2985               	incf	(i2memcpy@n+1)& (0+255),w,b
  7679  001692  B4D8               	btfsc	status,2,c
  7680                           
  7681                           ; BSR set to: 0
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;	Return value of i2_memcpy is never used
  7685  001694  0012               	return	
  7686  001696  D7E2               	goto	i2l4144
  7687  001698                     __end_ofi2_memcpy:
  7688                           	opt stack 0
  7689                           pclatu	equ	0xFFB
  7690                           pclath	equ	0xFFA
  7691                           tblptru	equ	0xFF8
  7692                           tblptrh	equ	0xFF7
  7693                           tblptrl	equ	0xFF6
  7694                           tablat	equ	0xFF5
  7695                           prodh	equ	0xFF4
  7696                           prodl	equ	0xFF3
  7697                           intcon	equ	0xFF2
  7698                           postinc0	equ	0xFEE
  7699                           fsr0h	equ	0xFEA
  7700                           fsr0l	equ	0xFE9
  7701                           wreg	equ	0xFE8
  7702                           indf1	equ	0xFE7
  7703                           fsr1h	equ	0xFE2
  7704                           fsr1l	equ	0xFE1
  7705                           bsr	equ	0xFE0
  7706                           indf2	equ	0xFDF
  7707                           postinc2	equ	0xFDE
  7708                           postdec2	equ	0xFDD
  7709                           fsr2h	equ	0xFDA
  7710                           fsr2l	equ	0xFD9
  7711                           status	equ	0xFD8
  7712                           
  7713 ;; *************** function _i2c_int_handler *****************
  7714 ;; Defined at:
  7715 ;;		line 190 in file "../src/my_i2c.c"
  7716 ;; Parameters:    Size  Location     Type
  7717 ;;		None
  7718 ;; Auto vars:     Size  Location     Type
  7719 ;;		None
  7720 ;; Return value:  Size  Location     Type
  7721 ;;		None               void
  7722 ;; Registers used:
  7723 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7724 ;; Tracked objects:
  7725 ;;		On entry : 0/0
  7726 ;;		On exit  : 0/0
  7727 ;;		Unchanged: 0/0
  7728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7729 ;;      Params:         0       0       0       0       0
  7730 ;;      Locals:         0       0       0       0       0
  7731 ;;      Temps:          0       0       0       0       0
  7732 ;;      Totals:         0       0       0       0       0
  7733 ;;Total ram usage:        0 bytes
  7734 ;; Hardware stack levels used:    1
  7735 ;; Hardware stack levels required when called:    1
  7736 ;; This function calls:
  7737 ;;		_i2c_int_handler_master_rx
  7738 ;;		_i2c_int_handler_master_tx
  7739 ;; This function is called by:
  7740 ;;		_InterruptHandlerHigh
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	text51
  7745  001904                     __ptext51:
  7746                           	opt stack 0
  7747  001904                     _i2c_int_handler:
  7748                           	opt stack 19
  7749                           
  7750                           ;my_i2c.c: 192: if (ic_ptr->rx_i2c == 1) {
  7751                           
  7752                           ; BSR set to: 0
  7753                           ;incstack = 0
  7754  001904  0100               	movlb	0	; () banked
  7755  001906  EE20 F01F          	lfsr	2,31
  7756  00190A  0100               	movlb	0	; () banked
  7757  00190C  51CC               	movf	_ic_ptr& (0+255),w,b
  7758  00190E  26D9               	addwf	fsr2l,f,c
  7759  001910  0100               	movlb	0	; () banked
  7760  001912  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7761  001914  22DA               	addwfc	fsr2h,f,c
  7762  001916  0E01               	movlw	1
  7763  001918  62DF               	cpfseq	indf2,c
  7764  00191A  D003               	goto	i2l3394
  7765                           
  7766                           ; BSR set to: 0
  7767                           ;my_i2c.c: 193: i2c_int_handler_master_rx();
  7768  00191C  EC30  F00E         	call	_i2c_int_handler_master_rx	;wreg free
  7769                           
  7770                           ;my_i2c.c: 194: } else if (ic_ptr->tx_i2c == 1) {
  7771  001920  0012               	return	
  7772  001922                     i2l3394:
  7773  001922  0100               	movlb	0	; () banked
  7774  001924  EE20 F01E          	lfsr	2,30
  7775  001928  0100               	movlb	0	; () banked
  7776  00192A  51CC               	movf	_ic_ptr& (0+255),w,b
  7777  00192C  26D9               	addwf	fsr2l,f,c
  7778  00192E  0100               	movlb	0	; () banked
  7779  001930  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7780  001932  22DA               	addwfc	fsr2h,f,c
  7781  001934  0E01               	movlw	1
  7782  001936  62DF               	cpfseq	indf2,c
  7783  001938  0012               	return	
  7784                           
  7785                           ; BSR set to: 0
  7786                           ;my_i2c.c: 195: i2c_int_handler_master_tx();
  7787  00193A  EC28  F002         	call	_i2c_int_handler_master_tx	;wreg free
  7788  00193E  0012               	return	
  7789  001940                     __end_of_i2c_int_handler:
  7790                           	opt stack 0
  7791                           pclatu	equ	0xFFB
  7792                           pclath	equ	0xFFA
  7793                           tblptru	equ	0xFF8
  7794                           tblptrh	equ	0xFF7
  7795                           tblptrl	equ	0xFF6
  7796                           tablat	equ	0xFF5
  7797                           prodh	equ	0xFF4
  7798                           prodl	equ	0xFF3
  7799                           intcon	equ	0xFF2
  7800                           postinc0	equ	0xFEE
  7801                           fsr0h	equ	0xFEA
  7802                           fsr0l	equ	0xFE9
  7803                           wreg	equ	0xFE8
  7804                           indf1	equ	0xFE7
  7805                           fsr1h	equ	0xFE2
  7806                           fsr1l	equ	0xFE1
  7807                           bsr	equ	0xFE0
  7808                           indf2	equ	0xFDF
  7809                           postinc2	equ	0xFDE
  7810                           postdec2	equ	0xFDD
  7811                           fsr2h	equ	0xFDA
  7812                           fsr2l	equ	0xFD9
  7813                           status	equ	0xFD8
  7814                           
  7815 ;; *************** function _i2c_int_handler_master_tx *****************
  7816 ;; Defined at:
  7817 ;;		line 202 in file "../src/my_i2c.c"
  7818 ;; Parameters:    Size  Location     Type
  7819 ;;		None
  7820 ;; Auto vars:     Size  Location     Type
  7821 ;;		None
  7822 ;; Return value:  Size  Location     Type
  7823 ;;		None               void
  7824 ;; Registers used:
  7825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  7826 ;; Tracked objects:
  7827 ;;		On entry : 0/0
  7828 ;;		On exit  : 0/0
  7829 ;;		Unchanged: 0/0
  7830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7831 ;;      Params:         0       0       0       0       0
  7832 ;;      Locals:         0       0       0       0       0
  7833 ;;      Temps:          0       6       0       0       0
  7834 ;;      Totals:         0       6       0       0       0
  7835 ;;Total ram usage:        6 bytes
  7836 ;; Hardware stack levels used:    1
  7837 ;; This function calls:
  7838 ;;		Nothing
  7839 ;; This function is called by:
  7840 ;;		_i2c_int_handler
  7841 ;; This function uses a non-reentrant model
  7842 ;;
  7843                           
  7844                           	psect	text52
  7845  000450                     __ptext52:
  7846                           	opt stack 0
  7847  000450                     _i2c_int_handler_master_tx:
  7848                           	opt stack 19
  7849                           
  7850                           ;my_i2c.c: 205: switch (ic_ptr->status) {
  7851                           
  7852                           ;incstack = 0
  7853  000450  D104               	goto	i2l3926
  7854  000452                     i2l3900:
  7855                           
  7856                           ;my_i2c.c: 211: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  7857  000452  0100               	movlb	0	; () banked
  7858  000454  EE20 F01A          	lfsr	2,26
  7859  000458  0100               	movlb	0	; () banked
  7860  00045A  51CC               	movf	_ic_ptr& (0+255),w,b
  7861  00045C  26D9               	addwf	fsr2l,f,c
  7862  00045E  0100               	movlb	0	; () banked
  7863  000460  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7864  000462  22DA               	addwfc	fsr2h,f,c
  7865  000464  50DF               	movf	indf2,w,c
  7866  000466  0100               	movlb	0	; () banked
  7867  000468  6F80               	movwf	??_i2c_int_handler_master_tx& (0+255),b
  7868  00046A  0100               	movlb	0	; () banked
  7869  00046C  5180               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  7870  00046E  0D01               	mullw	1
  7871  000470  0E0F               	movlw	15
  7872  000472  26F3               	addwf	prodl,f,c
  7873  000474  0E00               	movlw	0
  7874  000476  22F4               	addwfc	prodh,f,c
  7875  000478  50F3               	movf	prodl,w,c
  7876  00047A  0100               	movlb	0	; () banked
  7877  00047C  0100               	movlb	0	; () banked
  7878  00047E  25CC               	addwf	_ic_ptr& (0+255),w,b
  7879  000480  6ED9               	movwf	fsr2l,c
  7880  000482  50F4               	movf	prodh,w,c
  7881  000484  0100               	movlb	0	; () banked
  7882  000486  0100               	movlb	0	; () banked
  7883  000488  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7884  00048A  6EDA               	movwf	fsr2h,c
  7885  00048C  50DF               	movf	indf2,w,c
  7886  00048E  6EC9               	movwf	4041,c	;volatile
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;my_i2c.c: 214: ic_ptr->status = 0x6;
  7890  000490  0100               	movlb	0	; () banked
  7891  000492  EE20 F00C          	lfsr	2,12
  7892  000496  0100               	movlb	0	; () banked
  7893  000498  51CC               	movf	_ic_ptr& (0+255),w,b
  7894  00049A  26D9               	addwf	fsr2l,f,c
  7895  00049C  0100               	movlb	0	; () banked
  7896  00049E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7897  0004A0  22DA               	addwfc	fsr2h,f,c
  7898  0004A2  0E06               	movlw	6
  7899  0004A4  6EDF               	movwf	indf2,c
  7900                           
  7901                           ;my_i2c.c: 216: break;
  7902  0004A6  0012               	return	
  7903  0004A8                     i2l361:
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;my_i2c.c: 220: if (!SSPCON2bits.ACKSTAT) {
  7907  0004A8  BCC5               	btfsc	4037,6,c	;volatile
  7908  0004AA  D039               	goto	i2l3908
  7909                           
  7910                           ; BSR set to: 0
  7911                           ;my_i2c.c: 222: SSPCON2bits.ACKDT = 1;
  7912  0004AC  8AC5               	bsf	4037,5,c	;volatile
  7913                           
  7914                           ; BSR set to: 0
  7915                           ;my_i2c.c: 224: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  7916  0004AE  0100               	movlb	0	; () banked
  7917  0004B0  EE20 F01C          	lfsr	2,28
  7918  0004B4  0100               	movlb	0	; () banked
  7919  0004B6  51CC               	movf	_ic_ptr& (0+255),w,b
  7920  0004B8  26D9               	addwf	fsr2l,f,c
  7921  0004BA  0100               	movlb	0	; () banked
  7922  0004BC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7923  0004BE  22DA               	addwfc	fsr2h,f,c
  7924  0004C0  CFDE F080          	movff	postinc2,??_i2c_int_handler_master_tx
  7925  0004C4  CFDD F081          	movff	postdec2,??_i2c_int_handler_master_tx+1
  7926  0004C8  0E0F               	movlw	15
  7927  0004CA  0100               	movlb	0	; () banked
  7928  0004CC  2780               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  7929  0004CE  0E00               	movlw	0
  7930  0004D0  2381               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  7931  0004D2  0100               	movlb	0	; () banked
  7932  0004D4  5180               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  7933  0004D6  0100               	movlb	0	; () banked
  7934  0004D8  0100               	movlb	0	; () banked
  7935  0004DA  25CC               	addwf	_ic_ptr& (0+255),w,b
  7936  0004DC  6ED9               	movwf	fsr2l,c
  7937  0004DE  0100               	movlb	0	; () banked
  7938  0004E0  5181               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  7939  0004E2  0100               	movlb	0	; () banked
  7940  0004E4  0100               	movlb	0	; () banked
  7941  0004E6  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  7942  0004E8  6EDA               	movwf	fsr2h,c
  7943  0004EA  50DF               	movf	indf2,w,c
  7944  0004EC  6EC9               	movwf	4041,c	;volatile
  7945                           
  7946                           ;my_i2c.c: 228: ic_ptr->bufferCounterSend++;
  7947  0004EE  0100               	movlb	0	; () banked
  7948  0004F0  EE20 F01C          	lfsr	2,28
  7949  0004F4  0100               	movlb	0	; () banked
  7950  0004F6  51CC               	movf	_ic_ptr& (0+255),w,b
  7951  0004F8  26D9               	addwf	fsr2l,f,c
  7952  0004FA  0100               	movlb	0	; () banked
  7953  0004FC  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7954  0004FE  22DA               	addwfc	fsr2h,f,c
  7955  000500  2ADE               	incf	postinc2,f,c
  7956  000502  0E00               	movlw	0
  7957  000504  22DD               	addwfc	postdec2,f,c
  7958                           
  7959                           ;my_i2c.c: 229: ic_ptr->status = 0x7;
  7960  000506  0100               	movlb	0	; () banked
  7961  000508  EE20 F00C          	lfsr	2,12
  7962  00050C  0100               	movlb	0	; () banked
  7963  00050E  51CC               	movf	_ic_ptr& (0+255),w,b
  7964  000510  26D9               	addwf	fsr2l,f,c
  7965  000512  0100               	movlb	0	; () banked
  7966  000514  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7967  000516  22DA               	addwfc	fsr2h,f,c
  7968  000518  0E07               	movlw	7
  7969  00051A  6EDF               	movwf	indf2,c
  7970                           
  7971                           ;my_i2c.c: 232: } else {
  7972  00051C  0012               	return	
  7973  00051E                     i2l3908:
  7974                           
  7975                           ; BSR set to: 0
  7976                           ;my_i2c.c: 233: ic_ptr->status = 1;
  7977  00051E  0100               	movlb	0	; () banked
  7978  000520  EE20 F00C          	lfsr	2,12
  7979  000524  0100               	movlb	0	; () banked
  7980  000526  51CC               	movf	_ic_ptr& (0+255),w,b
  7981  000528  26D9               	addwf	fsr2l,f,c
  7982  00052A  0100               	movlb	0	; () banked
  7983  00052C  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  7984  00052E  22DA               	addwfc	fsr2h,f,c
  7985  000530  0E01               	movlw	1
  7986  000532  6EDF               	movwf	indf2,c
  7987  000534  0012               	return	
  7988  000536                     i2l364:
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;my_i2c.c: 239: if (!SSPCON2bits.ACKSTAT) {
  7992  000536  BCC5               	btfsc	4037,6,c	;volatile
  7993  000538  D078               	goto	i2l3920
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;my_i2c.c: 243: SSPCON2bits.ACKDT = 1;
  7997  00053A  8AC5               	bsf	4037,5,c	;volatile
  7998                           
  7999                           ; BSR set to: 0
  8000                           ;my_i2c.c: 245: if (ic_ptr->bufferCounterSend == (ic_ptr->outbuflen - 1)) {
  8001  00053C  0100               	movlb	0	; () banked
  8002  00053E  EE20 F01C          	lfsr	2,28
  8003  000542  0100               	movlb	0	; () banked
  8004  000544  51CC               	movf	_ic_ptr& (0+255),w,b
  8005  000546  26D9               	addwf	fsr2l,f,c
  8006  000548  0100               	movlb	0	; () banked
  8007  00054A  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8008  00054C  22DA               	addwfc	fsr2h,f,c
  8009  00054E  CFDE F080          	movff	postinc2,??_i2c_int_handler_master_tx
  8010  000552  CFDD F081          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8011  000556  0EFF               	movlw	255
  8012  000558  0100               	movlb	0	; () banked
  8013  00055A  6F82               	movwf	(??_i2c_int_handler_master_tx+2)& (0+255),b
  8014  00055C  0EFF               	movlw	255
  8015  00055E  6F83               	movwf	(??_i2c_int_handler_master_tx+3)& (0+255),b
  8016  000560  0100               	movlb	0	; () banked
  8017  000562  EE20 F019          	lfsr	2,25
  8018  000566  0100               	movlb	0	; () banked
  8019  000568  51CC               	movf	_ic_ptr& (0+255),w,b
  8020  00056A  26D9               	addwf	fsr2l,f,c
  8021  00056C  0100               	movlb	0	; () banked
  8022  00056E  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8023  000570  22DA               	addwfc	fsr2h,f,c
  8024  000572  50DF               	movf	indf2,w,c
  8025  000574  0100               	movlb	0	; () banked
  8026  000576  6F84               	movwf	(??_i2c_int_handler_master_tx+4)& (0+255),b
  8027  000578  6B85               	clrf	(??_i2c_int_handler_master_tx+5)& (0+255),b
  8028  00057A  0100               	movlb	0	; () banked
  8029  00057C  5182               	movf	(??_i2c_int_handler_master_tx+2)& (0+255),w,b
  8030  00057E  0100               	movlb	0	; () banked
  8031  000580  2784               	addwf	(??_i2c_int_handler_master_tx+4)& (0+255),f,b
  8032  000582  0100               	movlb	0	; () banked
  8033  000584  5183               	movf	(??_i2c_int_handler_master_tx+3)& (0+255),w,b
  8034  000586  0100               	movlb	0	; () banked
  8035  000588  2385               	addwfc	(??_i2c_int_handler_master_tx+5)& (0+255),f,b
  8036  00058A  0100               	movlb	0	; () banked
  8037  00058C  5181               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8038  00058E  0100               	movlb	0	; () banked
  8039  000590  1985               	xorwf	(??_i2c_int_handler_master_tx+5)& (0+255),w,b
  8040  000592  E104               	bnz	i2u256_45
  8041  000594  0100               	movlb	0	; () banked
  8042  000596  5180               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8043  000598  0100               	movlb	0	; () banked
  8044  00059A  1984               	xorwf	(??_i2c_int_handler_master_tx+4)& (0+255),w,b
  8045  00059C                     i2u256_45:
  8046  00059C  A4D8               	btfss	status,2,c
  8047  00059E  D00D               	goto	i2l3918
  8048                           
  8049                           ; BSR set to: 0
  8050                           ;my_i2c.c: 246: ic_ptr->status = 0xA;
  8051  0005A0  0100               	movlb	0	; () banked
  8052  0005A2  EE20 F00C          	lfsr	2,12
  8053  0005A6  0100               	movlb	0	; () banked
  8054  0005A8  51CC               	movf	_ic_ptr& (0+255),w,b
  8055  0005AA  26D9               	addwf	fsr2l,f,c
  8056  0005AC  0100               	movlb	0	; () banked
  8057  0005AE  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8058  0005B0  22DA               	addwfc	fsr2h,f,c
  8059  0005B2  0E0A               	movlw	10
  8060  0005B4  6EDF               	movwf	indf2,c
  8061                           
  8062                           ; BSR set to: 0
  8063                           ;my_i2c.c: 248: SSP1CON2bits.PEN = 1;
  8064  0005B6  84C5               	bsf	4037,2,c	;volatile
  8065                           
  8066                           ;my_i2c.c: 249: } else {
  8067  0005B8  0012               	return	
  8068  0005BA                     i2l3918:
  8069                           
  8070                           ; BSR set to: 0
  8071                           ;my_i2c.c: 251: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  8072  0005BA  0100               	movlb	0	; () banked
  8073  0005BC  EE20 F01C          	lfsr	2,28
  8074  0005C0  0100               	movlb	0	; () banked
  8075  0005C2  51CC               	movf	_ic_ptr& (0+255),w,b
  8076  0005C4  26D9               	addwf	fsr2l,f,c
  8077  0005C6  0100               	movlb	0	; () banked
  8078  0005C8  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8079  0005CA  22DA               	addwfc	fsr2h,f,c
  8080  0005CC  CFDE F080          	movff	postinc2,??_i2c_int_handler_master_tx
  8081  0005D0  CFDD F081          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8082  0005D4  0E0F               	movlw	15
  8083  0005D6  0100               	movlb	0	; () banked
  8084  0005D8  2780               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  8085  0005DA  0E00               	movlw	0
  8086  0005DC  2381               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  8087  0005DE  0100               	movlb	0	; () banked
  8088  0005E0  5180               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8089  0005E2  0100               	movlb	0	; () banked
  8090  0005E4  0100               	movlb	0	; () banked
  8091  0005E6  25CC               	addwf	_ic_ptr& (0+255),w,b
  8092  0005E8  6ED9               	movwf	fsr2l,c
  8093  0005EA  0100               	movlb	0	; () banked
  8094  0005EC  5181               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8095  0005EE  0100               	movlb	0	; () banked
  8096  0005F0  0100               	movlb	0	; () banked
  8097  0005F2  21CD               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8098  0005F4  6EDA               	movwf	fsr2h,c
  8099  0005F6  50DF               	movf	indf2,w,c
  8100  0005F8  6EC9               	movwf	4041,c	;volatile
  8101                           
  8102                           ;my_i2c.c: 253: ic_ptr->bufferCounterSend++;
  8103  0005FA  0100               	movlb	0	; () banked
  8104  0005FC  EE20 F01C          	lfsr	2,28
  8105  000600  0100               	movlb	0	; () banked
  8106  000602  51CC               	movf	_ic_ptr& (0+255),w,b
  8107  000604  26D9               	addwf	fsr2l,f,c
  8108  000606  0100               	movlb	0	; () banked
  8109  000608  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8110  00060A  22DA               	addwfc	fsr2h,f,c
  8111  00060C  2ADE               	incf	postinc2,f,c
  8112  00060E  0E00               	movlw	0
  8113  000610  22DD               	addwfc	postdec2,f,c
  8114                           
  8115                           ;my_i2c.c: 254: ic_ptr->status = 0x7;
  8116  000612  0100               	movlb	0	; () banked
  8117  000614  EE20 F00C          	lfsr	2,12
  8118  000618  0100               	movlb	0	; () banked
  8119  00061A  51CC               	movf	_ic_ptr& (0+255),w,b
  8120  00061C  26D9               	addwf	fsr2l,f,c
  8121  00061E  0100               	movlb	0	; () banked
  8122  000620  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8123  000622  22DA               	addwfc	fsr2h,f,c
  8124  000624  0E07               	movlw	7
  8125  000626  6EDF               	movwf	indf2,c
  8126  000628  0012               	return	
  8127  00062A                     i2l3920:
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;my_i2c.c: 258: ic_ptr->status = 0x9;
  8131  00062A  0100               	movlb	0	; () banked
  8132  00062C  EE20 F00C          	lfsr	2,12
  8133  000630  0100               	movlb	0	; () banked
  8134  000632  51CC               	movf	_ic_ptr& (0+255),w,b
  8135  000634  26D9               	addwf	fsr2l,f,c
  8136  000636  0100               	movlb	0	; () banked
  8137  000638  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8138  00063A  22DA               	addwfc	fsr2h,f,c
  8139  00063C  0E09               	movlw	9
  8140  00063E  6EDF               	movwf	indf2,c
  8141  000640  0012               	return	
  8142  000642                     i2l3922:
  8143                           
  8144                           ; BSR set to: 0
  8145                           ;my_i2c.c: 263: ic_ptr->status = 0x3;
  8146  000642  0100               	movlb	0	; () banked
  8147  000644  EE20 F00C          	lfsr	2,12
  8148  000648  0100               	movlb	0	; () banked
  8149  00064A  51CC               	movf	_ic_ptr& (0+255),w,b
  8150  00064C  26D9               	addwf	fsr2l,f,c
  8151  00064E  0100               	movlb	0	; () banked
  8152  000650  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8153  000652  22DA               	addwfc	fsr2h,f,c
  8154  000654  0E03               	movlw	3
  8155  000656  6EDF               	movwf	indf2,c
  8156                           
  8157                           ;my_i2c.c: 265: break;
  8158  000658  0012               	return	
  8159  00065A                     i2l3926:
  8160  00065A  0100               	movlb	0	; () banked
  8161  00065C  EE20 F00C          	lfsr	2,12
  8162  000660  0100               	movlb	0	; () banked
  8163  000662  51CC               	movf	_ic_ptr& (0+255),w,b
  8164  000664  26D9               	addwf	fsr2l,f,c
  8165  000666  0100               	movlb	0	; () banked
  8166  000668  51CD               	movf	(_ic_ptr+1)& (0+255),w,b
  8167  00066A  22DA               	addwfc	fsr2h,f,c
  8168  00066C  50DF               	movf	indf2,w,c
  8169                           
  8170                           ; Switch size 1, requested type "space"
  8171                           ; Number of cases is 4, Range of values is 5 to 10
  8172                           ; switch strategies available:
  8173                           ; Name         Instructions Cycles
  8174                           ; simple_byte           13     7 (average)
  8175                           ;	Chosen strategy is simple_byte
  8176  00066E  0A05               	xorlw	5	; case 5
  8177  000670  B4D8               	btfsc	status,2,c
  8178  000672  D6EF               	goto	i2l3900
  8179  000674  0A03               	xorlw	3	; case 6
  8180  000676  B4D8               	btfsc	status,2,c
  8181  000678  D717               	goto	i2l361
  8182  00067A  0A01               	xorlw	1	; case 7
  8183  00067C  B4D8               	btfsc	status,2,c
  8184  00067E  D75B               	goto	i2l364
  8185  000680  0A0D               	xorlw	13	; case 10
  8186  000682  A4D8               	btfss	status,2,c
  8187  000684  0012               	return	
  8188  000686  D7DD               	goto	i2l3922
  8189  000688                     __end_of_i2c_int_handler_master_tx:
  8190                           	opt stack 0
  8191                           pclatu	equ	0xFFB
  8192                           pclath	equ	0xFFA
  8193                           tblptru	equ	0xFF8
  8194                           tblptrh	equ	0xFF7
  8195                           tblptrl	equ	0xFF6
  8196                           tablat	equ	0xFF5
  8197                           prodh	equ	0xFF4
  8198                           prodl	equ	0xFF3
  8199                           intcon	equ	0xFF2
  8200                           postinc0	equ	0xFEE
  8201                           fsr0h	equ	0xFEA
  8202                           fsr0l	equ	0xFE9
  8203                           wreg	equ	0xFE8
  8204                           indf1	equ	0xFE7
  8205                           fsr1h	equ	0xFE2
  8206                           fsr1l	equ	0xFE1
  8207                           bsr	equ	0xFE0
  8208                           indf2	equ	0xFDF
  8209                           postinc2	equ	0xFDE
  8210                           postdec2	equ	0xFDD
  8211                           fsr2h	equ	0xFDA
  8212                           fsr2l	equ	0xFD9
  8213                           status	equ	0xFD8
  8214                           
  8215 ;; *************** function _i2c_int_handler_master_rx *****************
  8216 ;; Defined at:
  8217 ;;		line 199 in file "../src/my_i2c.c"
  8218 ;; Parameters:    Size  Location     Type
  8219 ;;		None
  8220 ;; Auto vars:     Size  Location     Type
  8221 ;;		None
  8222 ;; Return value:  Size  Location     Type
  8223 ;;		None               void
  8224 ;; Registers used:
  8225 ;;		None
  8226 ;; Tracked objects:
  8227 ;;		On entry : 0/0
  8228 ;;		On exit  : 0/0
  8229 ;;		Unchanged: 0/0
  8230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8231 ;;      Params:         0       0       0       0       0
  8232 ;;      Locals:         0       0       0       0       0
  8233 ;;      Temps:          0       0       0       0       0
  8234 ;;      Totals:         0       0       0       0       0
  8235 ;;Total ram usage:        0 bytes
  8236 ;; Hardware stack levels used:    1
  8237 ;; This function calls:
  8238 ;;		Nothing
  8239 ;; This function is called by:
  8240 ;;		_i2c_int_handler
  8241 ;; This function uses a non-reentrant model
  8242 ;;
  8243                           
  8244                           	psect	text53
  8245  001C60                     __ptext53:
  8246                           	opt stack 0
  8247  001C60                     _i2c_int_handler_master_rx:
  8248                           	opt stack 19
  8249                           
  8250                           ; BSR set to: 0
  8251                           ;incstack = 0
  8252  001C60  0012               	return	
  8253  001C62                     __end_of_i2c_int_handler_master_rx:
  8254                           	opt stack 0
  8255                           pclatu	equ	0xFFB
  8256                           pclath	equ	0xFFA
  8257                           tblptru	equ	0xFF8
  8258                           tblptrh	equ	0xFF7
  8259                           tblptrl	equ	0xFF6
  8260                           tablat	equ	0xFF5
  8261                           prodh	equ	0xFF4
  8262                           prodl	equ	0xFF3
  8263                           intcon	equ	0xFF2
  8264                           postinc0	equ	0xFEE
  8265                           fsr0h	equ	0xFEA
  8266                           fsr0l	equ	0xFE9
  8267                           wreg	equ	0xFE8
  8268                           indf1	equ	0xFE7
  8269                           fsr1h	equ	0xFE2
  8270                           fsr1l	equ	0xFE1
  8271                           bsr	equ	0xFE0
  8272                           indf2	equ	0xFDF
  8273                           postinc2	equ	0xFDE
  8274                           postdec2	equ	0xFDD
  8275                           fsr2h	equ	0xFDA
  8276                           fsr2l	equ	0xFD9
  8277                           status	equ	0xFD8
  8278                           
  8279 ;; *************** function _adc_int_hand *****************
  8280 ;; Defined at:
  8281 ;;		line 12 in file "../src/adc_int_handler.c"
  8282 ;; Parameters:    Size  Location     Type
  8283 ;;		None
  8284 ;; Auto vars:     Size  Location     Type
  8285 ;;  c               2    4[BANK0 ] int 
  8286 ;;  c               2    2[BANK0 ] int 
  8287 ;; Return value:  Size  Location     Type
  8288 ;;		None               void
  8289 ;; Registers used:
  8290 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  8291 ;; Tracked objects:
  8292 ;;		On entry : 0/0
  8293 ;;		On exit  : 0/0
  8294 ;;		Unchanged: 0/0
  8295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8296 ;;      Params:         0       0       0       0       0
  8297 ;;      Locals:         0       4       0       0       0
  8298 ;;      Temps:          0       0       0       0       0
  8299 ;;      Totals:         0       4       0       0       0
  8300 ;;Total ram usage:        4 bytes
  8301 ;; Hardware stack levels used:    1
  8302 ;; Hardware stack levels required when called:    1
  8303 ;; This function calls:
  8304 ;;		_ReadADC
  8305 ;; This function is called by:
  8306 ;;		_InterruptHandlerHigh
  8307 ;; This function uses a non-reentrant model
  8308 ;;
  8309                           
  8310                           	psect	text54
  8311  000826                     __ptext54:
  8312                           	opt stack 0
  8313  000826                     _adc_int_hand:
  8314                           	opt stack 19
  8315                           
  8316                           ;adc_int_handler.c: 18: ADCResult = 0;
  8317                           
  8318                           ;incstack = 0
  8319  000826  0E00               	movlw	0
  8320  000828  6E43               	movwf	_ADCResult+1,c
  8321  00082A  0E00               	movlw	0
  8322  00082C  6E42               	movwf	_ADCResult,c
  8323                           
  8324                           ;adc_int_handler.c: 19: ADCResult = (int) ReadADC() >> 2;
  8325  00082E  EC21  F00E         	call	_ReadADC	;wreg free
  8326  000832  0100               	movlb	0	; () banked
  8327  000834  0100               	movlb	0	; () banked
  8328  000836  0100               	movlb	0	; () banked
  8329  000838  0100               	movlb	0	; () banked
  8330  00083A  3581               	rlcf	(?_ReadADC+1)& (0+255),w,b
  8331  00083C  3381               	rrcf	(?_ReadADC+1)& (0+255),f,b
  8332  00083E  3380               	rrcf	?_ReadADC& (0+255),f,b
  8333  000840  0100               	movlb	0	; () banked
  8334  000842  0100               	movlb	0	; () banked
  8335  000844  0100               	movlb	0	; () banked
  8336  000846  0100               	movlb	0	; () banked
  8337  000848  3581               	rlcf	(?_ReadADC+1)& (0+255),w,b
  8338  00084A  3381               	rrcf	(?_ReadADC+1)& (0+255),f,b
  8339  00084C  3380               	rrcf	?_ReadADC& (0+255),f,b
  8340  00084E  0100               	movlb	0	; () banked
  8341  000850  C080  F042         	movff	?_ReadADC,_ADCResult
  8342  000854  0100               	movlb	0	; () banked
  8343  000856  C081  F043         	movff	?_ReadADC+1,_ADCResult+1
  8344                           
  8345                           ; BSR set to: 0
  8346                           ;adc_int_handler.c: 21: if (previousValue != (unsigned int) ADCResult) {
  8347  00085A  5043               	movf	_ADCResult+1,w,c
  8348  00085C  184B               	xorwf	_previousValue+1,w,c
  8349  00085E  E102               	bnz	i2u196_45
  8350  000860  5042               	movf	_ADCResult,w,c
  8351  000862  184A               	xorwf	_previousValue,w,c
  8352  000864                     i2u196_45:
  8353  000864  B4D8               	btfsc	status,2,c
  8354  000866  0012               	return	
  8355                           
  8356                           ; BSR set to: 0
  8357                           ;adc_int_handler.c: 23: if (bufferFlag == 0x0) {
  8358  000868  5045               	movf	_bufferFlag+1,w,c
  8359  00086A  1044               	iorwf	_bufferFlag,w,c
  8360  00086C  A4D8               	btfss	status,2,c
  8361  00086E  D046               	goto	i2l3366
  8362                           
  8363                           ; BSR set to: 0
  8364                           ;adc_int_handler.c: 24: ADCBuffer0[bufferLen++] = ADCResult;
  8365  000870  0E35               	movlw	low _ADCBuffer0
  8366  000872  2446               	addwf	_bufferLen,w,c
  8367  000874  6ED9               	movwf	fsr2l,c
  8368  000876  0E00               	movlw	high _ADCBuffer0
  8369  000878  2047               	addwfc	_bufferLen+1,w,c
  8370  00087A  6EDA               	movwf	fsr2h,c
  8371  00087C  C042  FFDF         	movff	_ADCResult,indf2
  8372                           
  8373                           ; BSR set to: 0
  8374  000880  4A46               	infsnz	_bufferLen,f,c
  8375  000882  2A47               	incf	_bufferLen+1,f,c
  8376                           
  8377                           ; BSR set to: 0
  8378                           ;adc_int_handler.c: 26: if (bufferLen > 5) {
  8379  000884  5047               	movf	_bufferLen+1,w,c
  8380  000886  0A80               	xorlw	128
  8381  000888  0F80               	addlw	-128
  8382  00088A  0E06               	movlw	6
  8383  00088C  B4D8               	btfsc	status,2,c
  8384  00088E  5C46               	subwf	_bufferLen,w,c
  8385  000890  A0D8               	btfss	status,0,c
  8386  000892  D07E               	goto	i2l3388
  8387                           
  8388                           ; BSR set to: 0
  8389                           ;adc_int_handler.c: 27: int c = 0;
  8390  000894  0E00               	movlw	0
  8391  000896  0100               	movlb	0	; () banked
  8392  000898  0100               	movlb	0	; () banked
  8393  00089A  6F83               	movwf	(adc_int_hand@c+1)& (0+255),b
  8394  00089C  0E00               	movlw	0
  8395  00089E  0100               	movlb	0	; () banked
  8396  0008A0  6F82               	movwf	adc_int_hand@c& (0+255),b
  8397  0008A2                     
  8398                           ; BSR set to: 0
  8399                           ;adc_int_handler.c: 28: for (; c < 5; c++) {
  8400  0008A2  0100               	movlb	0	; () banked
  8401  0008A4  0100               	movlb	0	; () banked
  8402  0008A6  5183               	movf	(adc_int_hand@c+1)& (0+255),w,b
  8403  0008A8  0A80               	xorlw	128
  8404  0008AA  0F80               	addlw	-128
  8405  0008AC  0E05               	movlw	5
  8406  0008AE  B4D8               	btfsc	status,2,c
  8407  0008B0  5D82               	subwf	adc_int_hand@c& (0+255),w,b
  8408  0008B2  B0D8               	btfsc	status,0,c
  8409  0008B4  D01B               	goto	i2l3364
  8410                           
  8411                           ; BSR set to: 0
  8412                           ;adc_int_handler.c: 29: buff[c] = ADCBuffer0[c];
  8413                           
  8414                           ; BSR set to: 0
  8415                           
  8416                           ; BSR set to: 0
  8417  0008B6  0E35               	movlw	low _ADCBuffer0
  8418  0008B8  0100               	movlb	0	; () banked
  8419  0008BA  0100               	movlb	0	; () banked
  8420  0008BC  2582               	addwf	adc_int_hand@c& (0+255),w,b
  8421  0008BE  6ED9               	movwf	fsr2l,c
  8422  0008C0  0E00               	movlw	high _ADCBuffer0
  8423  0008C2  0100               	movlb	0	; () banked
  8424  0008C4  0100               	movlb	0	; () banked
  8425  0008C6  2183               	addwfc	(adc_int_hand@c+1)& (0+255),w,b
  8426  0008C8  6EDA               	movwf	fsr2h,c
  8427  0008CA  0E52               	movlw	low _buff
  8428  0008CC  0100               	movlb	0	; () banked
  8429  0008CE  0100               	movlb	0	; () banked
  8430  0008D0  2582               	addwf	adc_int_hand@c& (0+255),w,b
  8431  0008D2  6EE1               	movwf	fsr1l,c
  8432  0008D4  0E00               	movlw	high _buff
  8433  0008D6  0100               	movlb	0	; () banked
  8434  0008D8  0100               	movlb	0	; () banked
  8435  0008DA  2183               	addwfc	(adc_int_hand@c+1)& (0+255),w,b
  8436  0008DC  6EE2               	movwf	fsr1h,c
  8437  0008DE  CFDF FFE7          	movff	indf2,indf1
  8438                           
  8439                           ; BSR set to: 0
  8440  0008E2  0100               	movlb	0	; () banked
  8441  0008E4  0100               	movlb	0	; () banked
  8442  0008E6  4B82               	infsnz	adc_int_hand@c& (0+255),f,b
  8443  0008E8  2B83               	incf	(adc_int_hand@c+1)& (0+255),f,b
  8444  0008EA  D7DB               	goto	L1
  8445  0008EC                     i2l3364:
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;adc_int_handler.c: 30: }
  8449                           ;adc_int_handler.c: 32: bufferLen = 0;
  8450  0008EC  0E00               	movlw	0
  8451  0008EE  6E47               	movwf	_bufferLen+1,c
  8452  0008F0  0E00               	movlw	0
  8453  0008F2  6E46               	movwf	_bufferLen,c
  8454                           
  8455                           ;adc_int_handler.c: 33: bufferFlag = 0x1;
  8456  0008F4  0E00               	movlw	0
  8457  0008F6  6E45               	movwf	_bufferFlag+1,c
  8458  0008F8  0E01               	movlw	1
  8459  0008FA  D049               	goto	L2
  8460  0008FC                     i2l3366:
  8461                           
  8462                           ; BSR set to: 0
  8463  0008FC  0444               	decf	_bufferFlag,w,c
  8464  0008FE  1045               	iorwf	_bufferFlag+1,w,c
  8465  000900  A4D8               	btfss	status,2,c
  8466  000902  D046               	goto	i2l3388
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;adc_int_handler.c: 36: ADCBuffer1[bufferLen++] = ADCResult;
  8470  000904  0E3A               	movlw	low _ADCBuffer1
  8471  000906  2446               	addwf	_bufferLen,w,c
  8472  000908  6ED9               	movwf	fsr2l,c
  8473  00090A  0E00               	movlw	high _ADCBuffer1
  8474  00090C  2047               	addwfc	_bufferLen+1,w,c
  8475  00090E  6EDA               	movwf	fsr2h,c
  8476  000910  C042  FFDF         	movff	_ADCResult,indf2
  8477                           
  8478                           ; BSR set to: 0
  8479  000914  4A46               	infsnz	_bufferLen,f,c
  8480  000916  2A47               	incf	_bufferLen+1,f,c
  8481                           
  8482                           ; BSR set to: 0
  8483                           ;adc_int_handler.c: 38: if (bufferLen > 5) {
  8484  000918  5047               	movf	_bufferLen+1,w,c
  8485  00091A  0A80               	xorlw	128
  8486  00091C  0F80               	addlw	-128
  8487  00091E  0E06               	movlw	6
  8488  000920  B4D8               	btfsc	status,2,c
  8489  000922  5C46               	subwf	_bufferLen,w,c
  8490  000924  A0D8               	btfss	status,0,c
  8491  000926  D034               	goto	i2l3388
  8492                           
  8493                           ; BSR set to: 0
  8494                           ;adc_int_handler.c: 39: int c = 0;
  8495  000928  0E00               	movlw	0
  8496  00092A  0100               	movlb	0	; () banked
  8497  00092C  0100               	movlb	0	; () banked
  8498  00092E  6F85               	movwf	(adc_int_hand@c_2250+1)& (0+255),b
  8499  000930  0E00               	movlw	0
  8500  000932  0100               	movlb	0	; () banked
  8501  000934  6F84               	movwf	adc_int_hand@c_2250& (0+255),b
  8502  000936                     
  8503                           ; BSR set to: 0
  8504                           ;adc_int_handler.c: 40: for (; c < 5; c++) {
  8505  000936  0100               	movlb	0	; () banked
  8506  000938  0100               	movlb	0	; () banked
  8507  00093A  5185               	movf	(adc_int_hand@c_2250+1)& (0+255),w,b
  8508  00093C  0A80               	xorlw	128
  8509  00093E  0F80               	addlw	-128
  8510  000940  0E05               	movlw	5
  8511  000942  B4D8               	btfsc	status,2,c
  8512  000944  5D84               	subwf	adc_int_hand@c_2250& (0+255),w,b
  8513  000946  B0D8               	btfsc	status,0,c
  8514  000948  D01B               	goto	i2l3386
  8515                           
  8516                           ; BSR set to: 0
  8517                           ;adc_int_handler.c: 41: buff[c] = ADCBuffer0[c];
  8518                           
  8519                           ; BSR set to: 0
  8520                           
  8521                           ; BSR set to: 0
  8522  00094A  0E35               	movlw	low _ADCBuffer0
  8523  00094C  0100               	movlb	0	; () banked
  8524  00094E  0100               	movlb	0	; () banked
  8525  000950  2584               	addwf	adc_int_hand@c_2250& (0+255),w,b
  8526  000952  6ED9               	movwf	fsr2l,c
  8527  000954  0E00               	movlw	high _ADCBuffer0
  8528  000956  0100               	movlb	0	; () banked
  8529  000958  0100               	movlb	0	; () banked
  8530  00095A  2185               	addwfc	(adc_int_hand@c_2250+1)& (0+255),w,b
  8531  00095C  6EDA               	movwf	fsr2h,c
  8532  00095E  0E52               	movlw	low _buff
  8533  000960  0100               	movlb	0	; () banked
  8534  000962  0100               	movlb	0	; () banked
  8535  000964  2584               	addwf	adc_int_hand@c_2250& (0+255),w,b
  8536  000966  6EE1               	movwf	fsr1l,c
  8537  000968  0E00               	movlw	high _buff
  8538  00096A  0100               	movlb	0	; () banked
  8539  00096C  0100               	movlb	0	; () banked
  8540  00096E  2185               	addwfc	(adc_int_hand@c_2250+1)& (0+255),w,b
  8541  000970  6EE2               	movwf	fsr1h,c
  8542  000972  CFDF FFE7          	movff	indf2,indf1
  8543                           
  8544                           ; BSR set to: 0
  8545  000976  0100               	movlb	0	; () banked
  8546  000978  0100               	movlb	0	; () banked
  8547  00097A  4B84               	infsnz	adc_int_hand@c_2250& (0+255),f,b
  8548  00097C  2B85               	incf	(adc_int_hand@c_2250+1)& (0+255),f,b
  8549  00097E  D7DB               	goto	L3
  8550  000980                     i2l3386:
  8551                           
  8552                           ; BSR set to: 0
  8553                           ;adc_int_handler.c: 42: }
  8554                           ;adc_int_handler.c: 44: bufferLen = 0;
  8555  000980  0E00               	movlw	0
  8556  000982  6E47               	movwf	_bufferLen+1,c
  8557  000984  0E00               	movlw	0
  8558  000986  6E46               	movwf	_bufferLen,c
  8559                           
  8560                           ;adc_int_handler.c: 45: bufferFlag = 0x0;
  8561  000988  0E00               	movlw	0
  8562  00098A  6E45               	movwf	_bufferFlag+1,c
  8563  00098C  0E00               	movlw	0
  8564  00098E                     L2:
  8565  00098E  6E44               	movwf	_bufferFlag,c
  8566  000990                     i2l3388:
  8567                           
  8568                           ; BSR set to: 0
  8569                           ;adc_int_handler.c: 46: }
  8570                           ;adc_int_handler.c: 47: }
  8571                           ;adc_int_handler.c: 49: previousValue = ADCResult;
  8572  000990  C042  F04A         	movff	_ADCResult,_previousValue
  8573  000994  C043  F04B         	movff	_ADCResult+1,_previousValue+1
  8574  000998  0012               	return	
  8575  00099A                     __end_of_adc_int_hand:
  8576                           	opt stack 0
  8577                           pclatu	equ	0xFFB
  8578                           pclath	equ	0xFFA
  8579                           tblptru	equ	0xFF8
  8580                           tblptrh	equ	0xFF7
  8581                           tblptrl	equ	0xFF6
  8582                           tablat	equ	0xFF5
  8583                           prodh	equ	0xFF4
  8584                           prodl	equ	0xFF3
  8585                           intcon	equ	0xFF2
  8586                           postinc0	equ	0xFEE
  8587                           fsr0h	equ	0xFEA
  8588                           fsr0l	equ	0xFE9
  8589                           wreg	equ	0xFE8
  8590                           indf1	equ	0xFE7
  8591                           fsr1h	equ	0xFE2
  8592                           fsr1l	equ	0xFE1
  8593                           bsr	equ	0xFE0
  8594                           indf2	equ	0xFDF
  8595                           postinc2	equ	0xFDE
  8596                           postdec2	equ	0xFDD
  8597                           fsr2h	equ	0xFDA
  8598                           fsr2l	equ	0xFD9
  8599                           status	equ	0xFD8
  8600                           
  8601 ;; *************** function _ReadADC *****************
  8602 ;; Defined at:
  8603 ;;		line 24 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\ADC\adcread.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;		None
  8606 ;; Auto vars:     Size  Location     Type
  8607 ;;		None
  8608 ;; Return value:  Size  Location     Type
  8609 ;;                  2    0[BANK0 ] int 
  8610 ;; Registers used:
  8611 ;;		wreg, status,2
  8612 ;; Tracked objects:
  8613 ;;		On entry : 0/0
  8614 ;;		On exit  : 0/0
  8615 ;;		Unchanged: 0/0
  8616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8617 ;;      Params:         0       2       0       0       0
  8618 ;;      Locals:         0       0       0       0       0
  8619 ;;      Temps:          0       0       0       0       0
  8620 ;;      Totals:         0       2       0       0       0
  8621 ;;Total ram usage:        2 bytes
  8622 ;; Hardware stack levels used:    1
  8623 ;; This function calls:
  8624 ;;		Nothing
  8625 ;; This function is called by:
  8626 ;;		_adc_int_hand
  8627 ;; This function uses a non-reentrant model
  8628 ;;
  8629                           
  8630                           	psect	text55
  8631  001C42                     __ptext55:
  8632                           	opt stack 0
  8633  001C42                     _ReadADC:
  8634                           	opt stack 19
  8635                           
  8636                           ; BSR set to: 0
  8637                           ;incstack = 0
  8638  001C42  50C4               	movf	4036,w,c	;volatile
  8639  001C44  0100               	movlb	0	; () banked
  8640  001C46  0100               	movlb	0	; () banked
  8641  001C48  6F81               	movwf	(?_ReadADC+1)& (0+255),b
  8642  001C4A  50C3               	movf	4035,w,c	;volatile
  8643  001C4C  0100               	movlb	0	; () banked
  8644  001C4E  6F80               	movwf	?_ReadADC& (0+255),b
  8645  001C50  0012               	return	
  8646  001C52                     __end_of_ReadADC:
  8647                           	opt stack 0
  8648                           pclatu	equ	0xFFB
  8649                           pclath	equ	0xFFA
  8650                           tblptru	equ	0xFF8
  8651                           tblptrh	equ	0xFF7
  8652                           tblptrl	equ	0xFF6
  8653                           tablat	equ	0xFF5
  8654                           prodh	equ	0xFF4
  8655                           prodl	equ	0xFF3
  8656                           intcon	equ	0xFF2
  8657                           postinc0	equ	0xFEE
  8658                           fsr0h	equ	0xFEA
  8659                           fsr0l	equ	0xFE9
  8660                           wreg	equ	0xFE8
  8661                           indf1	equ	0xFE7
  8662                           fsr1h	equ	0xFE2
  8663                           fsr1l	equ	0xFE1
  8664                           bsr	equ	0xFE0
  8665                           indf2	equ	0xFDF
  8666                           postinc2	equ	0xFDE
  8667                           postdec2	equ	0xFDD
  8668                           fsr2h	equ	0xFDA
  8669                           fsr2l	equ	0xFD9
  8670                           status	equ	0xFD8
  8671                           
  8672 ;; *************** function _SleepIfOkay *****************
  8673 ;; Defined at:
  8674 ;;		line 228 in file "../src/messages.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;		None
  8677 ;; Auto vars:     Size  Location     Type
  8678 ;;		None
  8679 ;; Return value:  Size  Location     Type
  8680 ;;		None               void
  8681 ;; Registers used:
  8682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8683 ;; Tracked objects:
  8684 ;;		On entry : 0/0
  8685 ;;		On exit  : 0/0
  8686 ;;		Unchanged: 0/0
  8687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8688 ;;      Params:         0       0       0       0       0
  8689 ;;      Locals:         0       0       0       0       0
  8690 ;;      Temps:          0       0       0       0       0
  8691 ;;      Totals:         0       0       0       0       0
  8692 ;;Total ram usage:        0 bytes
  8693 ;; Hardware stack levels used:    1
  8694 ;; Hardware stack levels required when called:    2
  8695 ;; This function calls:
  8696 ;;		_enter_sleep_mode
  8697 ;;		i2_check_msg
  8698 ;;		i2_in_high_int
  8699 ;;		i2_in_low_int
  8700 ;; This function is called by:
  8701 ;;		_InterruptHandlerHigh
  8702 ;; This function uses a non-reentrant model
  8703 ;;
  8704                           
  8705                           	psect	text56
  8706  001572                     __ptext56:
  8707                           	opt stack 0
  8708  001572                     _SleepIfOkay:
  8709                           	opt stack 18
  8710                           
  8711                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;incstack = 0
  8715  001572  664C               	tstfsz	_MQ_Main_Willing_to_block,c
  8716  001574  D001               	goto	i2l3410
  8717  001576  0012               	return	
  8718  001578                     i2l3410:
  8719                           
  8720                           ;messages.c: 232: }
  8721                           ;messages.c: 235: if (in_low_int()) {
  8722  001578  ECBA  F00B         	call	i2_in_low_int	;wreg free
  8723  00157C  0100               	movlb	0	; () banked
  8724  00157E  0100               	movlb	0	; () banked
  8725  001580  5183               	movf	(?i2_in_low_int+1)& (0+255),w,b
  8726  001582  0100               	movlb	0	; () banked
  8727  001584  1182               	iorwf	?i2_in_low_int& (0+255),w,b
  8728  001586  A4D8               	btfss	status,2,c
  8729  001588  0012               	return	
  8730                           
  8731                           ; BSR set to: 0
  8732                           ;messages.c: 237: }
  8733                           ;messages.c: 240: if (!in_high_int()) {
  8734                           
  8735                           ; BSR set to: 0
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;messages.c: 236: return;
  8739  00158A  EC18  F00E         	call	i2_in_high_int	;wreg free
  8740  00158E  0100               	movlb	0	; () banked
  8741  001590  0100               	movlb	0	; () banked
  8742  001592  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8743  001594  0100               	movlb	0	; () banked
  8744  001596  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  8745  001598  B4D8               	btfsc	status,2,c
  8746  00159A  0012               	return	
  8747                           
  8748                           ; BSR set to: 0
  8749                           ;messages.c: 242: }
  8750                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  8751                           
  8752                           ; BSR set to: 0
  8753                           
  8754                           ; BSR set to: 0
  8755                           ;messages.c: 241: return;
  8756  00159C  0101               	movlb	1	; () banked
  8757  00159E  0E01               	movlw	high _ToMainHigh_MQ
  8758  0015A0  0100               	movlb	0	; () banked
  8759  0015A2  0100               	movlb	0	; () banked
  8760  0015A4  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8761  0015A6  0101               	movlb	1	; () banked
  8762  0015A8  0E36               	movlw	low _ToMainHigh_MQ
  8763  0015AA  0100               	movlb	0	; () banked
  8764  0015AC  0100               	movlb	0	; () banked
  8765  0015AE  6F80               	movwf	i2check_msg@qptr& (0+255),b
  8766  0015B0  EC28  F00D         	call	i2_check_msg	;wreg free
  8767  0015B4  0900               	iorlw	0
  8768  0015B6  A4D8               	btfss	status,2,c
  8769  0015B8  0012               	return	
  8770                           
  8771                           ;messages.c: 249: }
  8772                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  8773                           
  8774                           ;messages.c: 248: return;
  8775  0015BA  0101               	movlb	1	; () banked
  8776  0015BC  0E01               	movlw	high _ToMainLow_MQ
  8777  0015BE  0100               	movlb	0	; () banked
  8778  0015C0  0100               	movlb	0	; () banked
  8779  0015C2  6F81               	movwf	(i2check_msg@qptr+1)& (0+255),b
  8780  0015C4  0101               	movlb	1	; () banked
  8781  0015C6  0E6C               	movlw	low _ToMainLow_MQ
  8782  0015C8  0100               	movlb	0	; () banked
  8783  0015CA  0100               	movlb	0	; () banked
  8784  0015CC  6F80               	movwf	i2check_msg@qptr& (0+255),b
  8785  0015CE  EC28  F00D         	call	i2_check_msg	;wreg free
  8786  0015D2  0900               	iorlw	0
  8787  0015D4  B4D8               	btfsc	status,2,c
  8788                           
  8789                           ;messages.c: 252: }
  8790                           ;messages.c: 253: enter_sleep_mode();
  8791                           
  8792                           ;messages.c: 251: return;
  8793  0015D6  EC2D  F00E         	call	_enter_sleep_mode	;wreg free
  8794  0015DA  0012               	return	
  8795  0015DC                     __end_of_SleepIfOkay:
  8796                           	opt stack 0
  8797                           pclatu	equ	0xFFB
  8798                           pclath	equ	0xFFA
  8799                           tblptru	equ	0xFF8
  8800                           tblptrh	equ	0xFF7
  8801                           tblptrl	equ	0xFF6
  8802                           tablat	equ	0xFF5
  8803                           prodh	equ	0xFF4
  8804                           prodl	equ	0xFF3
  8805                           intcon	equ	0xFF2
  8806                           postinc0	equ	0xFEE
  8807                           fsr0h	equ	0xFEA
  8808                           fsr0l	equ	0xFE9
  8809                           wreg	equ	0xFE8
  8810                           indf1	equ	0xFE7
  8811                           fsr1h	equ	0xFE2
  8812                           fsr1l	equ	0xFE1
  8813                           bsr	equ	0xFE0
  8814                           indf2	equ	0xFDF
  8815                           postinc2	equ	0xFDE
  8816                           postdec2	equ	0xFDD
  8817                           fsr2h	equ	0xFDA
  8818                           fsr2l	equ	0xFD9
  8819                           status	equ	0xFD8
  8820                           
  8821 ;; *************** function i2_in_low_int *****************
  8822 ;; Defined at:
  8823 ;;		line 33 in file "../src/interrupts.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;		None
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;		None
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  2    2[BANK0 ] int 
  8830 ;; Registers used:
  8831 ;;		wreg, status,2, status,0, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8837 ;;      Params:         0       2       0       0       0
  8838 ;;      Locals:         0       0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0
  8840 ;;      Totals:         0       2       0       0       0
  8841 ;;Total ram usage:        2 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    1
  8844 ;; This function calls:
  8845 ;;		i2_in_high_int
  8846 ;; This function is called by:
  8847 ;;		_SleepIfOkay
  8848 ;; This function uses a non-reentrant model
  8849 ;;
  8850                           
  8851                           	psect	text57
  8852  001774                     __ptext57:
  8853                           	opt stack 0
  8854  001774                     i2_in_low_int:
  8855                           	opt stack 18
  8856                           
  8857                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  8858                           
  8859                           ;incstack = 0
  8860  001774  ACF2               	btfss	intcon,6,c	;volatile
  8861  001776  D008               	goto	i2l4056
  8862                           
  8863                           ;interrupts.c: 36: return (0);
  8864  001778  0E00               	movlw	0
  8865  00177A  0100               	movlb	0	; () banked
  8866  00177C  0100               	movlb	0	; () banked
  8867  00177E  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  8868  001780  0E00               	movlw	0
  8869  001782  0100               	movlb	0	; () banked
  8870  001784  6F82               	movwf	?i2_in_low_int& (0+255),b
  8871  001786  0012               	return	
  8872  001788                     i2l4056:
  8873  001788  EC18  F00E         	call	i2_in_high_int	;wreg free
  8874  00178C  0100               	movlb	0	; () banked
  8875  00178E  0100               	movlb	0	; () banked
  8876  001790  5181               	movf	(?i2_in_high_int+1)& (0+255),w,b
  8877  001792  0100               	movlb	0	; () banked
  8878  001794  1180               	iorwf	?i2_in_high_int& (0+255),w,b
  8879  001796  B4D8               	btfsc	status,2,c
  8880  001798  D008               	goto	i2l4064
  8881                           
  8882                           ; BSR set to: 0
  8883                           ;interrupts.c: 38: return (0);
  8884  00179A  0E00               	movlw	0
  8885  00179C  0100               	movlb	0	; () banked
  8886  00179E  0100               	movlb	0	; () banked
  8887  0017A0  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  8888  0017A2  0E00               	movlw	0
  8889  0017A4  0100               	movlb	0	; () banked
  8890  0017A6  6F82               	movwf	?i2_in_low_int& (0+255),b
  8891  0017A8  0012               	return	
  8892  0017AA                     i2l4064:
  8893                           
  8894                           ; BSR set to: 0
  8895                           ;interrupts.c: 40: return (1);
  8896  0017AA  0E00               	movlw	0
  8897  0017AC  0100               	movlb	0	; () banked
  8898  0017AE  0100               	movlb	0	; () banked
  8899  0017B0  6F83               	movwf	(?i2_in_low_int+1)& (0+255),b
  8900  0017B2  0E01               	movlw	1
  8901  0017B4  0100               	movlb	0	; () banked
  8902  0017B6  6F82               	movwf	?i2_in_low_int& (0+255),b
  8903  0017B8  0012               	return	
  8904  0017BA                     __end_ofi2_in_low_int:
  8905                           	opt stack 0
  8906                           pclatu	equ	0xFFB
  8907                           pclath	equ	0xFFA
  8908                           tblptru	equ	0xFF8
  8909                           tblptrh	equ	0xFF7
  8910                           tblptrl	equ	0xFF6
  8911                           tablat	equ	0xFF5
  8912                           prodh	equ	0xFF4
  8913                           prodl	equ	0xFF3
  8914                           intcon	equ	0xFF2
  8915                           postinc0	equ	0xFEE
  8916                           fsr0h	equ	0xFEA
  8917                           fsr0l	equ	0xFE9
  8918                           wreg	equ	0xFE8
  8919                           indf1	equ	0xFE7
  8920                           fsr1h	equ	0xFE2
  8921                           fsr1l	equ	0xFE1
  8922                           bsr	equ	0xFE0
  8923                           indf2	equ	0xFDF
  8924                           postinc2	equ	0xFDE
  8925                           postdec2	equ	0xFDD
  8926                           fsr2h	equ	0xFDA
  8927                           fsr2l	equ	0xFD9
  8928                           status	equ	0xFD8
  8929                           
  8930 ;; *************** function i2_in_high_int *****************
  8931 ;; Defined at:
  8932 ;;		line 24 in file "../src/interrupts.c"
  8933 ;; Parameters:    Size  Location     Type
  8934 ;;		None
  8935 ;; Auto vars:     Size  Location     Type
  8936 ;;		None
  8937 ;; Return value:  Size  Location     Type
  8938 ;;                  2    0[BANK0 ] int 
  8939 ;; Registers used:
  8940 ;;		wreg, status,2
  8941 ;; Tracked objects:
  8942 ;;		On entry : 0/0
  8943 ;;		On exit  : 0/0
  8944 ;;		Unchanged: 0/0
  8945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8946 ;;      Params:         0       2       0       0       0
  8947 ;;      Locals:         0       0       0       0       0
  8948 ;;      Temps:          0       0       0       0       0
  8949 ;;      Totals:         0       2       0       0       0
  8950 ;;Total ram usage:        2 bytes
  8951 ;; Hardware stack levels used:    1
  8952 ;; This function calls:
  8953 ;;		Nothing
  8954 ;; This function is called by:
  8955 ;;		_SleepIfOkay
  8956 ;;		i2_in_low_int
  8957 ;; This function uses a non-reentrant model
  8958 ;;
  8959                           
  8960                           	psect	text58
  8961  001C30                     __ptext58:
  8962                           	opt stack 0
  8963  001C30                     i2_in_high_int:
  8964                           	opt stack 18
  8965                           
  8966                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  8967                           
  8968                           ; BSR set to: 0
  8969                           ;incstack = 0
  8970  001C30  0E00               	movlw	0
  8971  001C32  AEF2               	btfss	intcon,7,c	;volatile
  8972  001C34  0E01               	movlw	1
  8973  001C36  0100               	movlb	0	; () banked
  8974  001C38  0100               	movlb	0	; () banked
  8975  001C3A  6F80               	movwf	?i2_in_high_int& (0+255),b
  8976  001C3C  0100               	movlb	0	; () banked
  8977  001C3E  6B81               	clrf	(?i2_in_high_int+1)& (0+255),b
  8978  001C40  0012               	return	
  8979  001C42                     __end_ofi2_in_high_int:
  8980                           	opt stack 0
  8981                           pclatu	equ	0xFFB
  8982                           pclath	equ	0xFFA
  8983                           tblptru	equ	0xFF8
  8984                           tblptrh	equ	0xFF7
  8985                           tblptrl	equ	0xFF6
  8986                           tablat	equ	0xFF5
  8987                           prodh	equ	0xFF4
  8988                           prodl	equ	0xFF3
  8989                           intcon	equ	0xFF2
  8990                           postinc0	equ	0xFEE
  8991                           fsr0h	equ	0xFEA
  8992                           fsr0l	equ	0xFE9
  8993                           wreg	equ	0xFE8
  8994                           indf1	equ	0xFE7
  8995                           fsr1h	equ	0xFE2
  8996                           fsr1l	equ	0xFE1
  8997                           bsr	equ	0xFE0
  8998                           indf2	equ	0xFDF
  8999                           postinc2	equ	0xFDE
  9000                           postdec2	equ	0xFDD
  9001                           fsr2h	equ	0xFDA
  9002                           fsr2l	equ	0xFD9
  9003                           status	equ	0xFD8
  9004                           
  9005 ;; *************** function i2_check_msg *****************
  9006 ;; Defined at:
  9007 ;;		line 222 in file "../src/messages.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9010 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9011 ;; Auto vars:     Size  Location     Type
  9012 ;;		None
  9013 ;; Return value:  Size  Location     Type
  9014 ;;                  1    wreg      unsigned char 
  9015 ;; Registers used:
  9016 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9017 ;; Tracked objects:
  9018 ;;		On entry : 0/0
  9019 ;;		On exit  : 0/0
  9020 ;;		Unchanged: 0/0
  9021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9022 ;;      Params:         0       2       0       0       0
  9023 ;;      Locals:         0       0       0       0       0
  9024 ;;      Temps:          0       1       0       0       0
  9025 ;;      Totals:         0       3       0       0       0
  9026 ;;Total ram usage:        3 bytes
  9027 ;; Hardware stack levels used:    1
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_SleepIfOkay
  9032 ;; This function uses a non-reentrant model
  9033 ;;
  9034                           
  9035                           	psect	text59
  9036  001A50                     __ptext59:
  9037                           	opt stack 0
  9038  001A50                     i2_check_msg:
  9039                           	opt stack 19
  9040                           
  9041                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9042                           
  9043                           ; BSR set to: 0
  9044                           ;incstack = 0
  9045  001A50  0100               	movlb	0	; () banked
  9046  001A52  EE20 F035          	lfsr	2,53
  9047  001A56  0100               	movlb	0	; () banked
  9048  001A58  5180               	movf	i2check_msg@qptr& (0+255),w,b
  9049  001A5A  26D9               	addwf	fsr2l,f,c
  9050  001A5C  0100               	movlb	0	; () banked
  9051  001A5E  5181               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9052  001A60  22DA               	addwfc	fsr2h,f,c
  9053  001A62  50DF               	movf	indf2,w,c
  9054  001A64  0100               	movlb	0	; () banked
  9055  001A66  6F82               	movwf	??i2_check_msg& (0+255),b
  9056  001A68  0100               	movlb	0	; () banked
  9057  001A6A  5182               	movf	??i2_check_msg& (0+255),w,b
  9058  001A6C  0D0D               	mullw	13
  9059  001A6E  50F3               	movf	prodl,w,c
  9060  001A70  0100               	movlb	0	; () banked
  9061  001A72  0100               	movlb	0	; () banked
  9062  001A74  2580               	addwf	i2check_msg@qptr& (0+255),w,b
  9063  001A76  6ED9               	movwf	fsr2l,c
  9064  001A78  50F4               	movf	prodh,w,c
  9065  001A7A  0100               	movlb	0	; () banked
  9066  001A7C  0100               	movlb	0	; () banked
  9067  001A7E  2181               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9068  001A80  6EDA               	movwf	fsr2h,c
  9069  001A82  50DF               	movf	indf2,w,c
  9070  001A84  0012               	return	
  9071  001A86                     __end_ofi2_check_msg:
  9072                           	opt stack 0
  9073                           pclatu	equ	0xFFB
  9074                           pclath	equ	0xFFA
  9075                           tblptru	equ	0xFF8
  9076                           tblptrh	equ	0xFF7
  9077                           tblptrl	equ	0xFF6
  9078                           tablat	equ	0xFF5
  9079                           prodh	equ	0xFF4
  9080                           prodl	equ	0xFF3
  9081                           intcon	equ	0xFF2
  9082                           postinc0	equ	0xFEE
  9083                           fsr0h	equ	0xFEA
  9084                           fsr0l	equ	0xFE9
  9085                           wreg	equ	0xFE8
  9086                           indf1	equ	0xFE7
  9087                           fsr1h	equ	0xFE2
  9088                           fsr1l	equ	0xFE1
  9089                           bsr	equ	0xFE0
  9090                           indf2	equ	0xFDF
  9091                           postinc2	equ	0xFDE
  9092                           postdec2	equ	0xFDD
  9093                           fsr2h	equ	0xFDA
  9094                           fsr2l	equ	0xFD9
  9095                           status	equ	0xFD8
  9096                           
  9097 ;; *************** function _enter_sleep_mode *****************
  9098 ;; Defined at:
  9099 ;;		line 202 in file "../src/messages.c"
  9100 ;; Parameters:    Size  Location     Type
  9101 ;;		None
  9102 ;; Auto vars:     Size  Location     Type
  9103 ;;		None
  9104 ;; Return value:  Size  Location     Type
  9105 ;;		None               void
  9106 ;; Registers used:
  9107 ;;		None
  9108 ;; Tracked objects:
  9109 ;;		On entry : 0/0
  9110 ;;		On exit  : 0/0
  9111 ;;		Unchanged: 0/0
  9112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9113 ;;      Params:         0       0       0       0       0
  9114 ;;      Locals:         0       0       0       0       0
  9115 ;;      Temps:          0       0       0       0       0
  9116 ;;      Totals:         0       0       0       0       0
  9117 ;;Total ram usage:        0 bytes
  9118 ;; Hardware stack levels used:    1
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		_SleepIfOkay
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           
  9126                           	psect	text60
  9127  001C5A                     __ptext60:
  9128                           	opt stack 0
  9129  001C5A                     _enter_sleep_mode:
  9130                           	opt stack 19
  9131                           
  9132                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9133                           
  9134                           ; BSR set to: 0
  9135                           ;incstack = 0
  9136  001C5A  8ED3               	bsf	4051,7,c	;volatile
  9137  001C5C  0003               	sleep		;# 
  9138  001C5E  0012               	return	
  9139  001C60                     __end_of_enter_sleep_mode:
  9140                           	opt stack 0
  9141  0000                     pclatu	equ	0xFFB
  9142                           pclath	equ	0xFFA
  9143                           tblptru	equ	0xFF8
  9144                           tblptrh	equ	0xFF7
  9145                           tblptrl	equ	0xFF6
  9146                           tablat	equ	0xFF5
  9147                           prodh	equ	0xFF4
  9148                           prodl	equ	0xFF3
  9149                           intcon	equ	0xFF2
  9150                           postinc0	equ	0xFEE
  9151                           fsr0h	equ	0xFEA
  9152                           fsr0l	equ	0xFE9
  9153                           wreg	equ	0xFE8
  9154                           indf1	equ	0xFE7
  9155                           fsr1h	equ	0xFE2
  9156                           fsr1l	equ	0xFE1
  9157                           bsr	equ	0xFE0
  9158                           indf2	equ	0xFDF
  9159                           postinc2	equ	0xFDE
  9160                           postdec2	equ	0xFDD
  9161                           fsr2h	equ	0xFDA
  9162                           fsr2l	equ	0xFD9
  9163                           status	equ	0xFD8
  9164                           pclatu	equ	0xFFB
  9165                           pclath	equ	0xFFA
  9166                           tblptru	equ	0xFF8
  9167                           tblptrh	equ	0xFF7
  9168                           tblptrl	equ	0xFF6
  9169                           tablat	equ	0xFF5
  9170                           prodh	equ	0xFF4
  9171                           prodl	equ	0xFF3
  9172                           intcon	equ	0xFF2
  9173                           postinc0	equ	0xFEE
  9174                           fsr0h	equ	0xFEA
  9175                           fsr0l	equ	0xFE9
  9176                           wreg	equ	0xFE8
  9177                           indf1	equ	0xFE7
  9178                           fsr1h	equ	0xFE2
  9179                           fsr1l	equ	0xFE1
  9180                           bsr	equ	0xFE0
  9181                           indf2	equ	0xFDF
  9182                           postinc2	equ	0xFDE
  9183                           postdec2	equ	0xFDD
  9184                           fsr2h	equ	0xFDA
  9185                           fsr2l	equ	0xFD9
  9186                           status	equ	0xFD8
  9187                           
  9188                           	psect	param0
  9189  0000                     pclatu	equ	0xFFB
  9190                           pclath	equ	0xFFA
  9191                           tblptru	equ	0xFF8
  9192                           tblptrh	equ	0xFF7
  9193                           tblptrl	equ	0xFF6
  9194                           tablat	equ	0xFF5
  9195                           prodh	equ	0xFF4
  9196                           prodl	equ	0xFF3
  9197                           intcon	equ	0xFF2
  9198                           postinc0	equ	0xFEE
  9199                           fsr0h	equ	0xFEA
  9200                           fsr0l	equ	0xFE9
  9201                           wreg	equ	0xFE8
  9202                           indf1	equ	0xFE7
  9203                           fsr1h	equ	0xFE2
  9204                           fsr1l	equ	0xFE1
  9205                           bsr	equ	0xFE0
  9206                           indf2	equ	0xFDF
  9207                           postinc2	equ	0xFDE
  9208                           postdec2	equ	0xFDD
  9209                           fsr2h	equ	0xFDA
  9210                           fsr2l	equ	0xFD9
  9211                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         287
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     46      94
    BANK0           128     50      78
    BANK1           256     38     200
    BANK2           256     69     123
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK2[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK2[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), main@t1thread_data(BANK2[2]), 
		 -> main@uc(BANK2[14]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK1[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK1[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), main@t1thread_data(BANK2[2]), 
		 -> main@uc(BANK2[14]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    uart_retrieve_buffer@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 14
		 -> main@uc(BANK2[14]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 14
		 -> NULL(NULL[0]), main@uc(BANK2[14]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 32
		 -> main@ic(BANK2[32]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 32
		 -> NULL(NULL[0]), main@ic(BANK2[32]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK2[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK2[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK2[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 14
		 -> NULL(NULL[0]), main@uc(BANK2[14]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK2[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK2[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK2[11]), 

    send_msg@data	PTR void  size(2) Largest target is 14
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK2[11]), main@t1thread_data(BANK2[2]), 
		 -> main@uc(BANK2[14]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK1[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK1[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_timer1_int_handler
    _uart_send_int_handler->_WriteUSART
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_int_handler_master_tx
    _adc_int_hand->_ReadADC
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _init_queues->_init_queue
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                73    73      0   14836
                                             36 BANK1      2     2      0
                                              0 BANK2     69    69      0
                            _OpenADC
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                         _SetChanADC
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
                _i2c_configure_slave
                    _i2c_master_send
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         9     1      8    3478
                                             26 BANK1      9     1      8
                 _ToMainHigh_sendmsg
               _uart_retrieve_buffer
 ---------------------------------------------------------------------------------
 (2) _uart_retrieve_buffer                                 9     5      4     260
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2221
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2850
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2161
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_master_send                                     11     9      2     257
                                              0 BANK1     11     9      2
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_slave                                  1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _SetChanADC                                           2     2      0      31
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenADC                                              5     3      2     347
                                              0 BANK1      5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    5846
                                             29 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      31
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      31
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                1     1      0    2864
                                             26 COMRAM     1     1      0
                          _ReadUSART
                  _ToMainLow_sendmsg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      34
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2951
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2830
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2347
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     796
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    7011
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                       _adc_int_hand
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6547
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    3231
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2859
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0       0
          _i2c_int_handler_master_rx
          _i2c_int_handler_master_tx
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_tx                           6     6      0       0
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_rx                           0     0      0       0
 ---------------------------------------------------------------------------------
 (11) _adc_int_hand                                        4     4      0     180
                                              2 BANK0      4     4      0
                            _ReadADC
 ---------------------------------------------------------------------------------
 (12) _ReadADC                                             2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenADC
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _SetChanADC
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_slave
   _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
     _uart_retrieve_buffer

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _adc_int_hand
     _ReadADC
   _i2c_int_handler
     _i2c_int_handler_master_rx
     _i2c_int_handler_master_tx
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      12        0.0%
BITBANK3           100      0       0       9        0.0%
BANK3              100      0       0      10        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100     45      7B       8       48.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     26      C8       6       78.1%
BITBANK0            80      0       0       3        0.0%
BANK0               80     32      4E       4       60.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     2E      5E       1       74.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1EF      11        0.0%
DATA                 0      0     1EF      13        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Mar 01 14:18:42 2014

                  main@uthread_data 0211            _MQ_Main_Willing_to_block 004C  
             ?i2_ToMainHigh_sendmsg 0096                         _SSPSTATbits 000FC7  
         __end_of_ToMainLow_recvmsg 1840                                  bsr 000FE0  
         __end_of_ToMainLow_sendmsg 1B5C                        __CFG_CP0$OFF 000000  
                 i2recv_msg@msgtype 008D                   i2recv_msg@tlength 0094  
                               l318 0820                                 l158 0284  
                               l612 195A                                 l614 1972  
                               l615 1974                                 l562 12B6  
                               l660 105A                                 l900 1B9E  
                               l661 105C                                 l662 106A  
                               l663 106C                                 l656 103A  
                               l588 1B08                                 l589 1B0A  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                    _FromMainLow_MQ 0100                                 wreg 000FE8  
                      __CFG_IESO$ON 000000                        ?_in_high_int 01A2  
                  ??_init_uart_recv 00B2                     ReadTimer1@timer 0003  
                       main@config1 0201                         main@config2 0202  
 __end_of_i2c_int_handler_master_rx 1C62   __end_of_i2c_int_handler_master_tx 0688  
               i2recv_msg@maxlength 008C                                l1212 1118  
                              l4020 0FCA                                l3302 1764  
                              l4014 0F70                                l4040 1104  
                              l4032 10B6                                l4034 10C8  
                              l3316 17EE                                l4036 10D0  
                              l3510 02E8                                l3502 028A  
                              l3512 033A                                l3520 0430  
                              l3504 02AA                                l3514 038C  
                              l3516 03DE                                l3630 103C  
                              l3622 1026                                l3294 1742  
                              l3800 0A06                                l3704 072A  
                              l3708 07A4                                l3582 195C  
                              l3816 0ACC                                l3680 1330  
                              l3736 13EE                                l3496 0212  
                              l3488 01D0                                l3674 1304  
                              l3498 0264                                l3780 15FE  
                              l3668 12D8                                l3748 1380  
                              l3766 0C62                                l3786 1622  
                              _LATB 000F8A                                u2857 1BA0  
                   _FromMainHigh_MQ 0245                       __CFG_FCMEN$ON 000000  
              _uart_retrieve_buffer 0F60               __size_of_adc_int_hand 0174  
                              _buff 0052              ?_block_on_To_msgqueues 0001  
                              _main 00C2                                fsr0h 000FEA  
                              fsr1h 000FE2                                fsr0l 000FE9  
                              fsr2h 000FDA                                indf1 000FE7  
                              fsr1l 000FE1                                indf2 000FDF  
                              fsr2l 000FD9                         main@msgtype 0223  
                        i1_send_msg 0E0E                                pclat 000FFA  
                       i2_check_msg 1A50                                prodh 000FF4  
                              prodl 000FF3                                start 00BE  
                        i2_recv_msg 0AD0                       __CFG_FOSC2$ON 000000  
                        i2_send_msg 0D0A           ToMainHigh_recvmsg@msgtype 01BA  
                   __end_of_ReadADC 1C52                      send_msg@length 01AE  
                   __end_of_OpenADC 12BA         __size_of_timer0_int_handler 008A  
                       _Delay1KTCYx 1B9A                               ?_main 0001  
                             _T0CON 000FD5                               _T1CON 000FCD  
                   __end_of___lwmod 1122                          i1memcpy@d1 0001  
                             i2l361 04A8                               i1l674 1B8A  
                             i2l364 0536                          i1memcpy@s1 0003  
       FromMainHigh_recvmsg@msgtype 0098                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR0H 000FD7  
                             _TMR1H 000FCF                               _TMR0L 000FD6  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
                             _TRISB 000F93                               _TXREG 000FAD  
                             _TXSTA 000FAC                          i2memcpy@d1 0080  
                        i2memcpy@s1 0082                        ?_init_queues 0001  
                      _adc_int_hand 0826           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 17FE          ToMainLow_recvmsg@maxlength 01BE  
           timer0_lthread@msgbuffer 01A8             i2c_configure_slave@addr 01A2  
                             tablat 000FF5               ?_uart_retrieve_buffer 01A2  
                             status 000FD8            i2ToMainHigh_sendmsg@data 0097  
                  __end_ofi1_memcpy 1904                    __end_ofi2_memcpy 1698  
                    WriteUSART@data 0001                     __initialization 1698  
            ??i2_ToMainHigh_sendmsg 0099                        __end_of_main 0450  
                        _ReadTimer1 1C0C         __size_of_timer1_int_handler 0030  
        __size_of_ToMainLow_recvmsg 0042          __size_of_ToMainLow_sendmsg 0026  
     __size_of_FromMainHigh_recvmsg 0042               __size_ofi2_in_low_int 0046  
     __size_of_FromMainHigh_sendmsg 0036                              ??_main 01C6  
                   send_msg@msgtype 01AF                       __activetblptr 000002  
                   send_msg@tlength 01B3                          _SetChanADC 1B5C  
                            _ADCON0 000FC2                              _ADCON1 000FC1  
                            _ADCON2 000FC0                              _ADRESH 000FC4  
                            _ADRESL 000FC3             ??_uart_recv_int_handler 001B  
                            i1l4010 1BBE                              i1l4140 18F2  
                            i1l4220 0068                              i1l4134 18D6  
                            i1l4206 0F40                              i1l4226 0072  
                            i1l4172 0E46                              i1l4158 1702  
                            i2l4104 0B3C                              i2l4120 0C02  
                        _OpenTimer0 1AE4                              i2l3410 1578  
                            i2l3330 1164                          _OpenTimer1 1940  
                            i2l4150 1680                      __CFG_WDTEN$OFF 000000  
                            i2l4064 17AA                              i2l4056 1788  
                            i2l4144 165C                              i2l4080 0D66  
                            i2l3336 116E                              i2l3364 08EC  
                            i2l3366 08FC                              i2l3386 0980  
                            i2l3394 1922                              i2l3388 0990  
                            i2l3900 0452                              i2l3920 062A  
                            i2l3922 0642                              i2l3908 051E  
                            i2l3918 05BA                              i2l3926 065A  
       __end_of_i2c_configure_slave 1B36                       ??_SleepIfOkay 0084  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9                         ?i1_send_msg 000B  
                         ??_ReadADC 0082                  timer0_lthread@tptr 01A2  
                       ?i2_recv_msg 008A                           ??_OpenADC 01A4  
                      i2_in_low_int 1774                         ?i2_send_msg 008A  
                    __CFG_XINST$OFF 000000                  __size_of_OpenUSART 0092  
                   _i2c_int_handler 1904                     _i2c_master_send 0688  
                  OpenTimer0@config 01A2                              _ic_ptr 00CC  
                         ??___lwmod 01A6                              _buffer 00C6  
                     main@msgbuffer 0204                              _buflen 004E  
                  __end_of_init_i2c 1572                    OpenTimer1@config 01A2  
                            _length 0048                              _memcpy 15DC  
                            clear_0 169E                              clear_1 16AA  
                            clear_2 16B6                              clear_3 16C2  
                            _uc_ptr 005C                              main@ic 0225  
                            main@uc 0215                    __end_of_recv_msg 0AD0  
                         ??_in_main 00B2                    __end_of_send_msg 0D0A  
                      __pdataCOMRAM 005E               timer0_int_handler@val 00A2  
                            tblptrh 000FF7                              tblptrl 000FF6  
                            tblptru 000FF8                         init_queue@i 01A5  
          ToMainLow_recvmsg@msgtype 01BA         ??_i2c_int_handler_master_rx 0080  
       ??_i2c_int_handler_master_tx 0080                __size_of_in_high_int 0012  
            ??_uart_retrieve_buffer 01A6                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 16DA  
        __end_of_ToMainHigh_recvmsg 1882          __end_of_ToMainHigh_sendmsg 19AE  
    __size_of_uart_send_int_handler 004A       __end_of_uart_send_int_handler 172E  
       __end_of_init_timer1_lthread 1BE8                 __end_of_SleepIfOkay 15DC  
                        _WriteUSART 1BB0                      __pcstackCOMRAM 0001  
            __size_ofi2_in_high_int 0012                         ?_ReadTimer1 0001  
                __size_of_check_msg 0036                   __end_of_ReadUSART 1B9A  
         timer0_int_handler@msgtype 00A0                         ?_SetChanADC 0001  
               __size_ofi1_send_msg 00AA                           ?i1_memcpy 0001  
     __size_of_InterruptHandlerHigh 11A4         __end_of_InterruptHandlerLow 00BE  
                         ?i2_memcpy 0080                       _ToMainHigh_MQ 0136  
               __size_ofi2_recv_msg 0136                    _enter_sleep_mode 1C5A  
               __size_ofi2_send_msg 0104                timer1_lthread@length 01C0  
                     ReadUSART@data 0001                   __end_of_OpenUSART 1098  
                     check_msg@qptr 01A2                timer1_lthread@retval 01C5  
           ??_block_on_To_msgqueues 01A8                __size_of_init_queues 006E  
                        __pbssBANK0 00B2                          __pbssBANK1 0100  
                        __pbssBANK2 0245                         ?_OpenTimer0 0001  
                       ?_OpenTimer1 0001                          __pnvCOMRAM 005C  
           __end_of_i2c_int_handler 1940                        ?i2_check_msg 0080  
           __end_of_i2c_master_send 0826                  timer1_lthread@tptr 01BC  
         _i2c_int_handler_master_rx 1C60           _i2c_int_handler_master_tx 0450  
             uart_retrieve_buffer@i 01A9                   recv_msg@maxlength 01AE  
                   recv_msg@msgtype 01AF                     recv_msg@tlength 01B6  
                      ?_Delay1KTCYx 0001                    WriteTimer0@timer 0082  
                           ?_memcpy 01A2                    WriteTimer1@timer 0003  
                     ??_WriteTimer0 0082                       ??_WriteTimer1 0003  
           __size_of_timer0_lthread 0012             __size_of_timer1_lthread 0072  
                        ??i1_memcpy 0007                          _bufferFlag 0044  
                        ??i2_memcpy 0086                    i1send_msg@length 000D  
                     i2_in_high_int 1C30                             _SSPCON1 000FC6  
                           _SSPCON2 000FC5                             _SSPSTAT 000FC7  
               __size_of_ReadTimer1 0012                   __end_of_check_msg 1A1A  
                         ?_init_i2c 01A2                         _SleepIfOkay 1572  
                           _ReadADC 1C42                           ?_recv_msg 01AC  
                         _ADCResult 0042                             _OpenADC 1236  
                        _in_low_int 172E                             __Hparam 0000  
               __size_of_SetChanADC 0020                           ?_send_msg 01AC  
                           __Lparam 0000          __end_of_timer0_int_handler 1236  
                       ?_WriteUSART 0001                    init_uart_recv@uc 01A2  
                           ___lwmod 1098                     __CFG_STVREN$OFF 000000  
                           __pcinit 1698                     __size_of_memcpy 005E  
                        _init_queue 1338                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 00C2                             __ptext1 13B2  
                           __ptext2 0F60                             __ptext3 1978  
                           __ptext4 1428                             __ptext5 1098  
                           __ptext6 19AE                             __ptext7 0C06  
                           __ptext8 1BC4                             __ptext9 1AB6  
                         _T0CONbits 000FD5                             _in_main 17BA  
                         _T1CONbits 000FCD                 __end_of_WriteTimer0 1C30  
               __end_of_WriteTimer1 1C0C                      ?i2_in_high_int 0080  
                           _msgtype 0050       uart_retrieve_buffer@msgbuffer 01A4  
                    OpenADC@config2 01A2                             _voltage 003F  
                    __pintcode_body 1122        __end_of_FromMainHigh_recvmsg 18C4  
              end_of_initialization 16DA             timer1_lthread@msgbuffer 01C2  
      __end_of_FromMainHigh_sendmsg 19E4      __size_of_uart_recv_int_handler 00A8  
        FromMainHigh_sendmsg@length 01BB                             memcpy@d 01A8  
                           memcpy@n 01A6                             memcpy@s 01AA  
     __end_of_uart_recv_int_handler 0F60                          ??_init_i2c 00B2  
                     __Lmediumconst 0000                             int_func 1122  
                      ??i1_send_msg 0011                       ?_uart_lthread 01BC  
           __size_of_init_uart_recv 002E                    ?_i2c_int_handler 0001  
                      ??i2_recv_msg 0091                    ?_i2c_master_send 01A2  
                        ??_recv_msg 01B3                        ??i2_send_msg 0090  
                        ??_send_msg 01B2                      main@portconfig 0203  
        __end_of_timer1_int_handler 1AB6                           _RCSTAbits 000FAB  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 01B8  
     __size_ofi2_ToMainHigh_sendmsg 0036                      _last_reg_recvd 004F  
                __end_ofi1_send_msg 0EB8         FromMainHigh_sendmsg@msgtype 01B8  
                         _TRISCbits 000F94                  __end_ofi2_recv_msg 0C06  
                __end_ofi2_send_msg 0E0E                 __size_of_WriteUSART 0014  
     FromMainHigh_recvmsg@maxlength 009C            timer1_int_handler@result 001C  
                    ??_uart_lthread 01C4                           _TXSTAbits 000FAC  
                        main@length 0224                         ?_in_low_int 01A4  
             timer0_lthread@msgtype 01A4        __size_of_i2c_configure_slave 0028  
              __size_ofi2_check_msg 0036            __end_of_enter_sleep_mode 1C60  
                      ??_ReadTimer1 0003                  _ToMainHigh_recvmsg 1840  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1978  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                       _BAUDCONbits 000FB8                       __pidataCOMRAM 1C62  
                    _timer0_lthread 1BC4                         ?_init_queue 01A2  
                         i2memcpy@d 0086                         _WriteTimer0 1C1E  
                       _WriteTimer1 1BFA                           i2memcpy@n 0084  
                         i2memcpy@s 0088                      _timer1_lthread 1428  
                    __end_of_memcpy 163A                   _enable_interrupts 1C52  
                adc_int_hand@c_2250 0084                __size_of_Delay1KTCYx 0016  
                      ??_SetChanADC 01A2  __size_of_i2c_int_handler_master_rx 0002  
__size_of_i2c_int_handler_master_tx 0238                 ?_ToMainHigh_recvmsg 01BA  
                   ??i2_in_high_int 0082                 ?_ToMainHigh_sendmsg 01B8  
                ?_enable_interrupts 0001                 start_initialization 1698  
                     ??_in_high_int 00B2                           _ReadUSART 1B7C  
                 __size_ofi1_memcpy 0040                   __size_ofi2_memcpy 005E  
               ??_enable_interrupts 00B2                        ??_OpenTimer0 00B2  
                      ??_OpenTimer1 00B2      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 1C1E       __end_of_block_on_To_msgqueues 1338  
     __size_of_uart_retrieve_buffer 00A6                           _OpenUSART 1006  
      __end_of_InterruptHandlerHigh 11AC                          init_i2c@ic 01A2  
              ??_ToMainHigh_recvmsg 00B2                ??_ToMainHigh_sendmsg 00B2  
                __end_of_SetChanADC 1B7C               _uart_send_int_handler 16E4  
            __end_of_timer0_lthread 1BD6              __end_of_timer1_lthread 149A  
         __end_of_enable_interrupts 1C5A                            ??_memcpy 00B2  
             timer1_lthread@msgtype 01BE                _FromMainHigh_recvmsg 1882  
              _FromMainHigh_sendmsg 19AE        __size_of_init_timer1_lthread 0012  
                __end_of_OpenTimer0 1B0E                  __end_of_OpenTimer1 1978  
                       __pbssCOMRAM 002F                          ?_ReadUSART 0001  
                     ??_init_queues 01A6                       __pcstackBANK0 0080  
                     __pcstackBANK1 01A2                       __pcstackBANK2 0200  
               __size_of_in_low_int 0046                       ?_adc_int_hand 0001  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 01A2  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00A6  
               __end_of_in_high_int 1BFA                          ?_OpenUSART 01A2  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 01BC  
                      _ToMainLow_MQ 016C                 __size_of_init_queue 007A  
                    _init_uart_recv 1AB6                            ?_ReadADC 0080  
                         _check_msg 19E4                           __pnvBANK0 00CC  
                 __size_of_init_i2c 006A                   OpenADC@portconfig 01A3  
                          ?_OpenADC 01A2                        recv_msg@data 01B1  
                      ??_WriteUSART 0001                        recv_msg@qmsg 01B8  
                      recv_msg@slot 01B5                        recv_msg@qptr 01AC  
        i2ToMainHigh_sendmsg@length 0099                   __size_of_recv_msg 0136  
                         __pintcode 0008                   __size_of_send_msg 0104  
                     adc_int_hand@c 0082                     ?_timer0_lthread 01A2  
                          ?___lwmod 01A2               ?_FromMainHigh_recvmsg 0098  
                   ?_timer1_lthread 01BC               ?_FromMainHigh_sendmsg 01B8  
                       __pintcodelo 0018                           _bufferLen 0046  
            ToMainHigh_recvmsg@data 01BC                __end_of_uart_lthread 1428  
                          ?_in_main 01A6                   WriteTimer0@timer0 0080  
                _timer0_int_handler 11AC                   WriteTimer1@timer1 0001  
                    ??_adc_int_hand 0082                 uart_lthread@msgtype 01BE  
             ToMainLow_sendmsg@data 0018          uart_retrieve_buffer@length 01A2  
               ?_timer0_int_handler 0001                  __end_of_WriteUSART 1BC4  
                  uart_lthread@uptr 01BC              __end_of_init_uart_recv 1AE4  
               __end_of_init_queues 1508                       OpenADC@config 01A6  
                   i2check_msg@qptr 0080                          ?_check_msg 01A2  
                          _IPR1bits 000F9F                            _PIE1bits 000F9D  
                         _msgbuffer 00B2                       ?i2_in_low_int 0082  
                          i2u256_45 059C                            _PIR1bits 000F9E  
                          i2u196_45 0864              ?_uart_send_int_handler 0001  
            ToMainHigh_sendmsg@data 01B9                           _motorBuff 002F  
                          _RCONbits 000FD0                    __CFG_WDTPS$32768 000000  
                          _SSP1CON2 000FC5                ??_timer0_int_handler 009D  
             i2c_master_send@length 01AA          __size_of_enable_interrupts 0008  
                 i1send_msg@msgtype 000E                   i1send_msg@tlength 0012  
                        _ADCON0bits 000FC2                timer0_lthread@length 01A6  
                _timer1_int_handler 1A86                            i1_memcpy 18C4  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 163A                timer0_lthread@msgval 01AA  
          FromMainHigh_recvmsg@data 009A                         _in_high_int 1BE8  
                      send_msg@data 01B0                 _i2c_configure_slave 1B0E  
                      send_msg@qmsg 01B6                        send_msg@slot 01B5  
                      send_msg@qptr 01AC                          _ADCBuffer0 0035  
                        _ADCBuffer1 003A        __end_ofi2_ToMainHigh_sendmsg 1A50  
             uart_lthread@msgbuffer 01C2                 ?_timer1_int_handler 0001  
                   ?_init_uart_recv 01A2                         ??_OpenUSART 01A4  
                   OpenUSART@config 01A7                      ??i2_in_low_int 0084  
                          __Hparam0 0000               _uart_recv_int_handler 0EB8  
                      ??_in_low_int 00B2                    __size_of_ReadADC 0010  
                          __Lparam0 0000                    __size_of_OpenADC 0084  
              ?_i2c_configure_slave 0001                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 009C              ??_FromMainHigh_sendmsg 00B2  
              ??_timer1_int_handler 001B            __size_of_i2c_int_handler 003C  
                ??_enter_sleep_mode 0080            __size_of_i2c_master_send 019E  
                  __size_of___lwmod 008A                        ??_init_queue 01A4  
                      ?_WriteTimer0 0080                        ?_WriteTimer1 0001  
          FromMainHigh_sendmsg@data 01B9             ToMainLow_sendmsg@length 001A  
                 readMessages@F5196 005E                   main@t0thread_data 020F  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 008D         ToMainHigh_recvmsg@maxlength 01BE  
                 i2send_msg@tlength 0091             init_timer1_lthread@tptr 01A2  
                       _init_queues 149A                  __end_of_in_low_int 1774  
                          __ptext10 1BD6                            __ptext11 149A  
                          __ptext20 1BE8                            __ptext12 1338  
                          __ptext21 19E4                            __ptext13 1508  
                          __ptext30 1AE4                            __ptext22 1B9A  
                          __ptext14 0688                            __ptext31 1236  
                          __ptext23 17FE                            __ptext15 1B0E  
                          __ptext40 0E0E                            __ptext24 1840  
                          __ptext16 1C52                            __ptext41 18C4  
                          __ptext33 16E4                            __ptext25 099A  
                          __ptext17 12BA                            __ptext50 163A  
                          __ptext42 1C0C                            __ptext34 1BB0  
                          __ptext26 15DC                            __ptext18 17BA  
                          __ptext51 1904                            __ptext35 0EB8  
                          __ptext27 1B5C                            __ptext19 172E  
                          __ptext60 1C5A                            __ptext52 0450  
                          __ptext44 11AC                            __ptext36 1B7C  
                          __ptext28 1006                            __ptext53 1C60  
                          __ptext45 1A1A                            __ptext37 1A86  
                          __ptext29 1940                            __ptext54 0826  
                          __ptext46 0D0A                            __ptext38 1BFA  
                          __ptext55 1C42                            __ptext47 1C1E  
                          __ptext39 1B36                            __ptext56 1572  
                          __ptext48 1882                            __ptext57 1774  
                          __ptext49 0AD0                            __ptext58 1C30  
                          __ptext59 1A50                        _SSP1CON2bits 000FC5  
                    i1send_msg@data 000F                      i1send_msg@qmsg 0015  
                    i1send_msg@slot 0014                      i1send_msg@qptr 000B  
                uart_lthread@length 01C0            timer0_int_handler@length 009E  
                          _init_i2c 1508                 _init_timer1_lthread 1BD6  
                     __size_of_main 038E                       ??i2_check_msg 0082  
                 main@t1thread_data 0213                         ??_check_msg 01A4  
                __end_of_init_queue 13B2                __size_of_SleepIfOkay 006A  
                          _recv_msg 099A               ??_i2c_configure_slave 00B2  
                          _send_msg 0C06                            _uartData 0051  
              __end_of_adc_int_hand 099A                      init_queue@qptr 01A2  
             __size_of_uart_lthread 0076                      i2recv_msg@data 008F  
                    i2recv_msg@qmsg 0096                       ??_Delay1KTCYx 00B2  
                    i2recv_msg@slot 0093                      i2recv_msg@qptr 008A  
      __end_of_uart_retrieve_buffer 1006                        _SSP1STATbits 000FC7  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 01A2  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                    OpenUSART@spbrg 01A2                            memcpy@d1 01A2  
                          memcpy@s1 01A4               __end_ofi2_in_high_int 1C42  
                  i2send_msg@length 008C                            intlevel1 0000  
                          intlevel2 0000                ?_InterruptHandlerLow 0001  
                  ___lwmod@dividend 01A2              ?_uart_recv_int_handler 0001  
                      _uart_lthread 13B2                   SetChanADC@channel 01A3  
             _block_on_To_msgqueues 12BA                    ??_timer0_lthread 00B2  
       __size_of_ToMainHigh_recvmsg 0042         __size_of_ToMainHigh_sendmsg 0036  
                     _previousValue 004A                          _OSCCONbits 000FD3  
                  ??_timer1_lthread 01C4         i2ToMainHigh_sendmsg@msgtype 0096  
          ToMainHigh_sendmsg@length 01BB                 __end_ofi2_check_msg 1A86  
              i2_ToMainHigh_sendmsg 1A1A               ??_init_timer1_lthread 00B2  
            ??_InterruptHandlerHigh 00A4                   _ToMainLow_recvmsg 17FE  
                 _ToMainLow_sendmsg 1B36                  main@last_reg_recvd 0200  
                   ___lwmod@divisor 01A4                __end_ofi2_in_low_int 17BA  
                ?_ToMainLow_recvmsg 01BA                 __end_of_Delay1KTCYx 1BB0  
                 ??_i2c_int_handler 0086                     ___lwmod@counter 01A7  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_send 01A4  
                i2c_master_send@msg 01A2                         _SSPCON1bits 000FC6  
                       _SSPCON2bits 000FC5          ?_i2c_int_handler_master_rx 0001  
        ?_i2c_int_handler_master_tx 0001                      i2send_msg@data 008E  
             ??_InterruptHandlerLow 001E                 ??_ToMainLow_recvmsg 00B2  
                    i2send_msg@qmsg 0094                      i2send_msg@slot 0093  
                    i2send_msg@qptr 008A                 ??_ToMainLow_sendmsg 001A  
           ??_uart_send_int_handler 0002                    i2c_master_send@i 01AB  
                      _USART_Status 004D  
