

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Mar 15 22:31:54 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	param0,global,class=BANK0,space=1,delta=1
    78  0000                     _BAUDCONbits	set	4024
    79  0000                     _INTCONbits	set	4082
    80  0000                     _IPR1bits	set	3999
    81  0000                     _LATB	set	3978
    82  0000                     _LATBbits	set	3978
    83  0000                     _OSCCON	set	4051
    84  0000                     _OSCCONbits	set	4051
    85  0000                     _OSCTUNEbits	set	3995
    86  0000                     _PIE1bits	set	3997
    87  0000                     _PIR1bits	set	3998
    88  0000                     _RCONbits	set	4048
    89  0000                     _RCREG	set	4014
    90  0000                     _RCSTA	set	4011
    91  0000                     _RCSTAbits	set	4011
    92  0000                     _SPBRG	set	4015
    93  0000                     _SPBRGH	set	4016
    94  0000                     _SSP1CON2bits	set	4037
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1	set	4038
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _T0CON	set	4053
   100  0000                     _T0CONbits	set	4053
   101  0000                     _T1CON	set	4045
   102  0000                     _T1CONbits	set	4045
   103  0000                     _TMR0H	set	4055
   104  0000                     _TMR0L	set	4054
   105  0000                     _TMR1H	set	4047
   106  0000                     _TMR1L	set	4046
   107  0000                     _TRISB	set	3987
   108  0000                     _TRISCbits	set	3988
   109  0000                     _TXREG	set	4013
   110  0000                     _TXSTA	set	4012
   111  0000                     _TXSTAbits	set	4012
   112                           
   113                           	psect	nvCOMRAM
   114  000065                     __pnvCOMRAM:
   115                           	opt stack 0
   116  000065                     _uc_ptr:
   117                           	opt stack 0
   118  000065                     	ds	2
   119                           
   120                           	psect	nvBANK0
   121  0000E8                     __pnvBANK0:
   122                           	opt stack 0
   123  0000E8                     _ic_ptr:
   124                           	opt stack 0
   125  0000E8                     	ds	2
   126                           
   127                           ; #config settings
   128  0000                     
   129                           	psect	cinit
   130  001CB6                     __pcinit:
   131                           	opt stack 0
   132  001CB6                     start_initialization:
   133                           	opt stack 0
   134  001CB6                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Clear objects allocated to BANK2 (54 bytes)
   138  001CB6  EE02  F000         	lfsr	0,__pbssBANK2
   139  001CBA  0E36               	movlw	54
   140  001CBC                     clear_0:
   141  001CBC  6AEE               	clrf	postinc0,c
   142  001CBE  06E8               	decf	wreg,f,c
   143  001CC0  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to BANK1 (130 bytes)
   146  001CC2  EE01  F000         	lfsr	0,__pbssBANK1
   147  001CC6  0E82               	movlw	130
   148  001CC8                     clear_1:
   149  001CC8  6AEE               	clrf	postinc0,c
   150  001CCA  06E8               	decf	wreg,f,c
   151  001CCC  E1FD               	bnz	clear_1
   152                           
   153                           ; Clear objects allocated to BANK0 (54 bytes)
   154  001CCE  EE00  F080         	lfsr	0,__pbssBANK0
   155  001CD2  0E36               	movlw	54
   156  001CD4                     clear_2:
   157  001CD4  6AEE               	clrf	postinc0,c
   158  001CD6  06E8               	decf	wreg,f,c
   159  001CD8  E1FD               	bnz	clear_2
   160                           
   161                           ; Clear objects allocated to COMRAM (49 bytes)
   162  001CDA  EE00  F034         	lfsr	0,__pbssCOMRAM
   163  001CDE  0E31               	movlw	49
   164  001CE0                     clear_3:
   165  001CE0  6AEE               	clrf	postinc0,c
   166  001CE2  06E8               	decf	wreg,f,c
   167  001CE4  E1FD               	bnz	clear_3
   168  001CE6                     end_of_initialization:
   169                           	opt stack 0
   170  001CE6                     __end_of__initialization:
   171                           	opt stack 0
   172  001CE6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  001CE8  6EF8               	movwf	tblptru,c
   174  001CEA  0100               	movlb	0
   175  001CEC  EF62  F000         	goto	_main	;jump to C main() function
   176                           tblptru	equ	0xFF8
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssCOMRAM
   181  000034                     __pbssCOMRAM:
   182                           	opt stack 0
   183  000034                     _buf:
   184                           	opt stack 0
   185  000034                     	ds	10
   186  00003E                     _ADCBuffer0:
   187                           	opt stack 0
   188  00003E                     	ds	5
   189  000043                     _ADCBuffer1:
   190                           	opt stack 0
   191  000043                     	ds	5
   192  000048                     _buff:
   193                           	opt stack 0
   194  000048                     	ds	5
   195  00004D                     _voltage:
   196                           	opt stack 0
   197  00004D                     	ds	3
   198  000050                     _ADCResult:
   199                           	opt stack 0
   200  000050                     	ds	2
   201  000052                     _bufferLen:
   202                           	opt stack 0
   203  000052                     	ds	2
   204  000054                     _length:
   205                           	opt stack 0
   206  000054                     	ds	2
   207  000056                     _previousValue:
   208                           	opt stack 0
   209  000056                     	ds	2
   210  000058                     _MQ_Main_Willing_to_block:
   211                           	opt stack 0
   212  000058                     	ds	1
   213  000059                     _USART_Status:
   214                           	opt stack 0
   215  000059                     	ds	1
   216  00005A                     _checksum_flag:
   217                           	opt stack 0
   218  00005A                     	ds	1
   219  00005B                     _count:
   220                           	opt stack 0
   221  00005B                     	ds	1
   222  00005C                     _last_reg_recvd:
   223                           	opt stack 0
   224  00005C                     	ds	1
   225  00005D                     _length_flag:
   226                           	opt stack 0
   227  00005D                     	ds	1
   228  00005E                     _msg_flag:
   229                           	opt stack 0
   230  00005E                     	ds	1
   231  00005F                     _msgtype:
   232                           	opt stack 0
   233  00005F                     	ds	1
   234  000060                     _msgtype_flag:
   235                           	opt stack 0
   236  000060                     	ds	1
   237  000061                     _sendToMotorPIC_flag:
   238                           	opt stack 0
   239  000061                     	ds	1
   240  000062                     _sendToSensorPIC_flag:
   241                           	opt stack 0
   242  000062                     	ds	1
   243  000063                     _sent_i2c_msg:
   244                           	opt stack 0
   245  000063                     	ds	1
   246  000064                     _uartData:
   247                           	opt stack 0
   248  000064                     	ds	1
   249                           tblptru	equ	0xFF8
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	bssBANK0
   254  000080                     __pbssBANK0:
   255                           	opt stack 0
   256  000080                     _ToMainHigh_MQ:
   257                           	opt stack 0
   258  000080                     	ds	54
   259                           tblptru	equ	0xFF8
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           
   263                           	psect	bssBANK1
   264  000100                     __pbssBANK1:
   265                           	opt stack 0
   266  000100                     _msgbuffer:
   267                           	opt stack 0
   268  000100                     	ds	20
   269  000114                     _bufferFlag:
   270                           	opt stack 0
   271  000114                     	ds	2
   272  000116                     _FromMainLow_MQ:
   273                           	opt stack 0
   274  000116                     	ds	54
   275  00014C                     _ToMainLow_MQ:
   276                           	opt stack 0
   277  00014C                     	ds	54
   278                           tblptru	equ	0xFF8
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	bssBANK2
   283  000200                     __pbssBANK2:
   284                           	opt stack 0
   285  000200                     _FromMainHigh_MQ:
   286                           	opt stack 0
   287  000200                     	ds	54
   288                           tblptru	equ	0xFF8
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           
   292                           	psect	cstackBANK1
   293  000182                     __pcstackBANK1:
   294                           	opt stack 0
   295  000182                     ?_in_high_int:
   296                           	opt stack 0
   297  000182                     ?___lwmod:
   298                           	opt stack 0
   299  000182                     i2c_configure_master@slave_addr:
   300                           	opt stack 0
   301  000182                     i2c_master_recv@length:
   302                           	opt stack 0
   303  000182                     OpenTimer0@config:
   304                           	opt stack 0
   305  000182                     OpenTimer1@config:
   306                           	opt stack 0
   307  000182                     Delay1KTCYx@unit:
   308                           	opt stack 0
   309  000182                     init_queue@qptr:
   310                           	opt stack 0
   311  000182                     check_msg@qptr:
   312                           	opt stack 0
   313  000182                     i2c_master_send@msg:
   314                           	opt stack 0
   315  000182                     init_i2c@ic:
   316                           	opt stack 0
   317  000182                     init_uart_recv@uc:
   318                           	opt stack 0
   319  000182                     uart_retrieve_buffer@length:
   320                           	opt stack 0
   321  000182                     timer0_lthread@tptr:
   322                           	opt stack 0
   323  000182                     init_timer1_lthread@tptr:
   324                           	opt stack 0
   325  000182                     OpenUSART@spbrg:
   326                           	opt stack 0
   327  000182                     ___lwmod@dividend:
   328                           	opt stack 0
   329  000182                     memcpy@d1:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x0
   333  000182                     	ds	2
   334  000184                     ??_OpenUSART:
   335  000184                     ??_init_queue:
   336  000184                     ??_check_msg:
   337  000184                     ??_i2c_master_send:
   338  000184                     ?_in_low_int:
   339                           	opt stack 0
   340  000184                     uart_retrieve_buffer@msgbuffer:
   341                           	opt stack 0
   342  000184                     timer0_lthread@msgtype:
   343                           	opt stack 0
   344  000184                     ___lwmod@divisor:
   345                           	opt stack 0
   346  000184                     memcpy@s1:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x2
   350  000184                     	ds	1
   351  000185                     init_queue@i:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x3
   355  000185                     	ds	1
   356  000186                     ??_init_queues:
   357  000186                     ??_uart_retrieve_buffer:
   358  000186                     ??___lwmod:
   359  000186                     ?_in_main:
   360                           	opt stack 0
   361  000186                     timer0_lthread@length:
   362                           	opt stack 0
   363  000186                     memcpy@n:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x4
   367  000186                     	ds	1
   368  000187                     OpenUSART@config:
   369                           	opt stack 0
   370  000187                     ___lwmod@counter:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x5
   374  000187                     	ds	1
   375  000188                     ??_block_on_To_msgqueues:
   376  000188                     timer0_lthread@msgbuffer:
   377                           	opt stack 0
   378  000188                     memcpy@d:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x6
   382  000188                     	ds	1
   383  000189                     uart_retrieve_buffer@i:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x7
   387  000189                     	ds	1
   388  00018A                     i2c_master_send@length:
   389                           	opt stack 0
   390  00018A                     timer0_lthread@msgval:
   391                           	opt stack 0
   392  00018A                     memcpy@s:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x8
   396  00018A                     	ds	1
   397  00018B                     i2c_master_send@i:
   398                           	opt stack 0
   399  00018B                     uart_lthread@uptr:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x9
   403  00018B                     	ds	1
   404  00018C                     send_msg@qptr:
   405                           	opt stack 0
   406  00018C                     recv_msg@qptr:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xA
   410  00018C                     	ds	1
   411  00018D                     uart_lthread@msgtype:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xB
   415  00018D                     	ds	1
   416  00018E                     send_msg@length:
   417                           	opt stack 0
   418  00018E                     recv_msg@maxlength:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0xC
   422  00018E                     	ds	1
   423  00018F                     send_msg@msgtype:
   424                           	opt stack 0
   425  00018F                     recv_msg@msgtype:
   426                           	opt stack 0
   427  00018F                     uart_lthread@length:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0xD
   431  00018F                     	ds	1
   432  000190                     send_msg@data:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0xE
   436  000190                     	ds	1
   437  000191                     recv_msg@data:
   438                           	opt stack 0
   439  000191                     uart_lthread@msgbuffer:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0xF
   443  000191                     	ds	1
   444  000192                     ??_send_msg:
   445                           
   446                           ; 0 bytes @ 0x10
   447  000192                     	ds	1
   448  000193                     ??_recv_msg:
   449  000193                     send_msg@tlength:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x11
   453  000193                     	ds	2
   454  000195                     send_msg@slot:
   455                           	opt stack 0
   456  000195                     recv_msg@slot:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x13
   460  000195                     	ds	1
   461  000196                     send_msg@qmsg:
   462                           	opt stack 0
   463  000196                     recv_msg@tlength:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x14
   467  000196                     	ds	2
   468  000198                     ToMainHigh_sendmsg@msgtype:
   469                           	opt stack 0
   470  000198                     FromMainHigh_sendmsg@msgtype:
   471                           	opt stack 0
   472  000198                     recv_msg@qmsg:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x16
   476  000198                     	ds	1
   477  000199                     ToMainHigh_sendmsg@data:
   478                           	opt stack 0
   479  000199                     FromMainHigh_sendmsg@data:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x17
   483  000199                     	ds	1
   484  00019A                     ToMainLow_recvmsg@msgtype:
   485                           	opt stack 0
   486  00019A                     ToMainHigh_recvmsg@msgtype:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x18
   490  00019A                     	ds	1
   491  00019B                     ToMainHigh_sendmsg@length:
   492                           	opt stack 0
   493  00019B                     FromMainHigh_sendmsg@length:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x19
   497  00019B                     	ds	1
   498  00019C                     ToMainLow_recvmsg@data:
   499                           	opt stack 0
   500  00019C                     ToMainHigh_recvmsg@data:
   501                           	opt stack 0
   502  00019C                     timer1_lthread@tptr:
   503                           	opt stack 0
   504  00019C                     i2c_lthread@i2cptr:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1A
   508  00019C                     	ds	2
   509  00019E                     ToMainLow_recvmsg@maxlength:
   510                           	opt stack 0
   511  00019E                     ToMainHigh_recvmsg@maxlength:
   512                           	opt stack 0
   513  00019E                     timer1_lthread@msgtype:
   514                           	opt stack 0
   515  00019E                     i2c_lthread@msgtype:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x1C
   519  00019E                     	ds	2
   520  0001A0                     timer1_lthread@length:
   521                           	opt stack 0
   522  0001A0                     i2c_lthread@length:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x1E
   526  0001A0                     	ds	2
   527  0001A2                     timer1_lthread@msgbuffer:
   528                           	opt stack 0
   529  0001A2                     i2c_lthread@msgbuffer:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x20
   533  0001A2                     	ds	2
   534  0001A4                     ??_i2c_lthread:
   535  0001A4                     ??_timer1_lthread:
   536                           
   537                           ; 0 bytes @ 0x22
   538  0001A4                     	ds	1
   539  0001A5                     timer1_lthread@retval:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x23
   543  0001A5                     	ds	1
   544  0001A6                     ??_main:
   545                           
   546                           ; 0 bytes @ 0x24
   547  0001A6                     	ds	1
   548  0001A7                     main@msgbuffer:
   549                           	opt stack 0
   550                           
   551                           ; 11 bytes @ 0x25
   552  0001A7                     	ds	11
   553  0001B2                     main@t0thread_data:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x30
   557  0001B2                     	ds	2
   558  0001B4                     main@slave_address:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x32
   562  0001B4                     	ds	1
   563  0001B5                     main@uthread_data:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x33
   567  0001B5                     	ds	2
   568  0001B7                     main@i2cthread_data:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x35
   572  0001B7                     	ds	2
   573  0001B9                     main@t1thread_data:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x37
   577  0001B9                     	ds	2
   578  0001BB                     main@length:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x39
   582  0001BB                     	ds	1
   583  0001BC                     main@uc:
   584                           	opt stack 0
   585                           
   586                           ; 23 bytes @ 0x3A
   587  0001BC                     	ds	23
   588  0001D3                     main@msgtype:
   589                           	opt stack 0
   590                           
   591                           ; 1 bytes @ 0x51
   592  0001D3                     	ds	1
   593  0001D4                     main@ic:
   594                           	opt stack 0
   595                           
   596                           ; 35 bytes @ 0x52
   597  0001D4                     	ds	35
   598                           tblptru	equ	0xFF8
   599                           postinc0	equ	0xFEE
   600                           wreg	equ	0xFE8
   601                           
   602                           	psect	cstackBANK0
   603  0000B6                     __pcstackBANK0:
   604                           	opt stack 0
   605  0000B6                     ??_i2c_int_handler_master_rx:
   606  0000B6                     ??_i2c_int_handler_master_tx:
   607  0000B6                     ?i2_in_high_int:
   608                           	opt stack 0
   609  0000B6                     WriteTimer0@timer0:
   610                           	opt stack 0
   611  0000B6                     i2check_msg@qptr:
   612                           	opt stack 0
   613  0000B6                     i2memcpy@d1:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x0
   617  0000B6                     	ds	2
   618  0000B8                     ??i2_check_msg:
   619  0000B8                     ?i2_in_low_int:
   620                           	opt stack 0
   621  0000B8                     WriteTimer0@timer:
   622                           	opt stack 0
   623  0000B8                     i2memcpy@s1:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x2
   627  0000B8                     	ds	2
   628  0000BA                     i2memcpy@n:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x4
   632  0000BA                     	ds	2
   633  0000BC                     i2memcpy@d:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x6
   637  0000BC                     	ds	2
   638  0000BE                     i2memcpy@s:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x8
   642  0000BE                     	ds	2
   643  0000C0                     i2send_msg@qptr:
   644                           	opt stack 0
   645  0000C0                     i2recv_msg@qptr:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xA
   649  0000C0                     	ds	2
   650  0000C2                     i2send_msg@length:
   651                           	opt stack 0
   652  0000C2                     i2recv_msg@maxlength:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0xC
   656  0000C2                     	ds	1
   657  0000C3                     i2send_msg@msgtype:
   658                           	opt stack 0
   659  0000C3                     i2recv_msg@msgtype:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xD
   663  0000C3                     	ds	1
   664  0000C4                     i2send_msg@data:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0xE
   668  0000C4                     	ds	1
   669  0000C5                     i2recv_msg@data:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xF
   673  0000C5                     	ds	1
   674  0000C6                     ??i2_send_msg:
   675                           
   676                           ; 0 bytes @ 0x10
   677  0000C6                     	ds	1
   678  0000C7                     ??i2_recv_msg:
   679  0000C7                     i2send_msg@tlength:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x11
   683  0000C7                     	ds	2
   684  0000C9                     i2send_msg@slot:
   685                           	opt stack 0
   686  0000C9                     i2recv_msg@slot:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x13
   690  0000C9                     	ds	1
   691  0000CA                     i2send_msg@qmsg:
   692                           	opt stack 0
   693  0000CA                     i2recv_msg@tlength:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x14
   697  0000CA                     	ds	2
   698  0000CC                     i2ToMainHigh_sendmsg@msgtype:
   699                           	opt stack 0
   700  0000CC                     i2recv_msg@qmsg:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x16
   704  0000CC                     	ds	1
   705  0000CD                     i2ToMainHigh_sendmsg@data:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x17
   709  0000CD                     	ds	1
   710  0000CE                     FromMainHigh_recvmsg@msgtype:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x18
   714  0000CE                     	ds	1
   715  0000CF                     i2ToMainHigh_sendmsg@length:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x19
   719  0000CF                     	ds	1
   720  0000D0                     FromMainHigh_recvmsg@data:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x1A
   724  0000D0                     	ds	2
   725  0000D2                     FromMainHigh_recvmsg@maxlength:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x1C
   729  0000D2                     	ds	1
   730  0000D3                     ??_timer0_int_handler:
   731                           
   732                           ; 0 bytes @ 0x1D
   733  0000D3                     	ds	1
   734  0000D4                     timer0_int_handler@length:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1E
   738  0000D4                     	ds	2
   739  0000D6                     timer0_int_handler@msgtype:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x20
   743  0000D6                     	ds	2
   744  0000D8                     timer0_int_handler@val:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x22
   748  0000D8                     	ds	2
   749  0000DA                     ??_InterruptHandlerHigh:
   750                           
   751                           ; 0 bytes @ 0x24
   752  0000DA                     	ds	14
   753                           tblptru	equ	0xFF8
   754                           postinc0	equ	0xFEE
   755                           wreg	equ	0xFE8
   756                           
   757                           	psect	cstackCOMRAM
   758  000001                     __pcstackCOMRAM:
   759                           	opt stack 0
   760  000001                     ?_ReadTimer1:
   761                           	opt stack 0
   762  000001                     ReadUSART@data:
   763                           	opt stack 0
   764  000001                     WriteUSART@data:
   765                           	opt stack 0
   766  000001                     WriteTimer1@timer1:
   767                           	opt stack 0
   768  000001                     i1memcpy@d1:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x0
   772  000001                     	ds	1
   773  000002                     ??_uart_send_int_handler:
   774                           
   775                           ; 0 bytes @ 0x1
   776  000002                     	ds	1
   777  000003                     ReadTimer1@timer:
   778                           	opt stack 0
   779  000003                     WriteTimer1@timer:
   780                           	opt stack 0
   781  000003                     i1memcpy@s1:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x2
   785  000003                     	ds	2
   786  000005                     i1memcpy@n:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x4
   790  000005                     	ds	2
   791  000007                     i1memcpy@d:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x6
   795  000007                     	ds	2
   796  000009                     i1memcpy@s:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x8
   800  000009                     	ds	2
   801  00000B                     i1send_msg@qptr:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0xA
   805  00000B                     	ds	2
   806  00000D                     i1send_msg@length:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0xC
   810  00000D                     	ds	1
   811  00000E                     i1send_msg@msgtype:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0xD
   815  00000E                     	ds	1
   816  00000F                     i1send_msg@data:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0xE
   820  00000F                     	ds	2
   821  000011                     ??i1_send_msg:
   822                           
   823                           ; 0 bytes @ 0x10
   824  000011                     	ds	1
   825  000012                     i1send_msg@tlength:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x11
   829  000012                     	ds	2
   830  000014                     i1send_msg@slot:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x13
   834  000014                     	ds	1
   835  000015                     i1send_msg@qmsg:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x14
   839  000015                     	ds	2
   840  000017                     ToMainLow_sendmsg@msgtype:
   841                           	opt stack 0
   842  000017                     i1ToMainHigh_sendmsg@msgtype:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x16
   846  000017                     	ds	1
   847  000018                     ToMainLow_sendmsg@data:
   848                           	opt stack 0
   849  000018                     i1ToMainHigh_sendmsg@data:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x17
   853  000018                     	ds	2
   854  00001A                     ToMainLow_sendmsg@length:
   855                           	opt stack 0
   856  00001A                     i1ToMainHigh_sendmsg@length:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x19
   860  00001A                     	ds	1
   861  00001B                     ??_timer1_int_handler:
   862  00001B                     ??_uart_recv_int_handler:
   863                           
   864                           ; 0 bytes @ 0x1A
   865  00001B                     	ds	1
   866  00001C                     timer1_int_handler@result:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x1B
   870  00001C                     	ds	2
   871  00001E                     uart_recv_int_handler@bufLength:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x1D
   875  00001E                     	ds	1
   876  00001F                     uart_recv_int_handler@checkSum:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x1E
   880  00001F                     	ds	1
   881  000020                     uart_recv_int_handler@i:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x1F
   885  000020                     	ds	2
   886  000022                     uart_recv_int_handler@data:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x21
   890  000022                     	ds	1
   891  000023                     ??_InterruptHandlerLow:
   892                           
   893                           ; 0 bytes @ 0x22
   894  000023                     	ds	17
   895                           tblptru	equ	0xFF8
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           
   899 ;;
   900 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   901 ;;
   902 ;; *************** function _main *****************
   903 ;; Defined at:
   904 ;;		line 189 in file "../src/main.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  ic             35   82[BANK1 ] struct __i2c_comm
   909 ;;  uc             23   58[BANK1 ] struct __uart_comm
   910 ;;  msgbuffer      11   37[BANK1 ] unsigned char [11]
   911 ;;  t1thread_dat    2   55[BANK1 ] struct __timer1_thread_s
   912 ;;  i2cthread_da    2   53[BANK1 ] struct __i2c_thread_stru
   913 ;;  uthread_data    2   51[BANK1 ] struct __uart_thread_str
   914 ;;  t0thread_dat    2   48[BANK1 ] struct __timer0_thread_s
   915 ;;  msgtype         1   81[BANK1 ] unsigned char 
   916 ;;  length          1   57[BANK1 ] char 
   917 ;;  slave_addres    1   50[BANK1 ] unsigned char 
   918 ;;  i               1    0        unsigned char 
   919 ;;  last_reg_rec    1    0        unsigned char 
   920 ;;  c               1    0        unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0      80       0       0
   932 ;;      Temps:          0       0       1       0       0
   933 ;;      Totals:         0       0      81       0       0
   934 ;;Total ram usage:       81 bytes
   935 ;; Hardware stack levels required when called:   14
   936 ;; This function calls:
   937 ;;		_OpenTimer0
   938 ;;		_OpenTimer1
   939 ;;		_OpenUSART
   940 ;;		_ToMainHigh_recvmsg
   941 ;;		_ToMainLow_recvmsg
   942 ;;		_block_on_To_msgqueues
   943 ;;		_enable_interrupts
   944 ;;		_i2c_configure_master
   945 ;;		_i2c_lthread
   946 ;;		_init_i2c
   947 ;;		_init_queues
   948 ;;		_init_timer1_lthread
   949 ;;		_init_uart_recv
   950 ;;		_timer0_lthread
   951 ;;		_timer1_lthread
   952 ;;		_uart_lthread
   953 ;; This function is called by:
   954 ;;		Startup code after reset
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text0
   959  0000C4                     __ptext0:
   960                           	opt stack 0
   961  0000C4                     _main:
   962                           	opt stack 16
   963                           
   964                           ;main.c: 190: char c;
   965                           ;main.c: 191: signed char length;
   966                           ;main.c: 192: unsigned char msgtype;
   967                           ;main.c: 193: unsigned char last_reg_recvd;
   968                           ;main.c: 194: uart_comm uc;
   969                           ;main.c: 195: i2c_comm ic;
   970                           ;main.c: 196: unsigned char msgbuffer[10 + 1];
   971                           ;main.c: 197: unsigned char i;
   972                           ;main.c: 198: uart_thread_struct uthread_data;
   973                           ;main.c: 199: timer1_thread_struct t1thread_data;
   974                           ;main.c: 200: timer0_thread_struct t0thread_data;
   975                           ;main.c: 201: i2c_thread_struct i2cthread_data;
   976                           ;main.c: 209: OSCCON = 0x82;
   977                           
   978                           ;incstack = 0
   979  0000C4  0E82               	movlw	130
   980  0000C6  6ED3               	movwf	4051,c	;volatile
   981                           
   982                           ;main.c: 210: OSCTUNEbits.PLLEN = 1;
   983  0000C8  8C9B               	bsf	3995,6,c	;volatile
   984                           
   985                           ;main.c: 229: init_uart_recv(&uc);
   986  0000CA  0101               	movlb	1	; () banked
   987  0000CC  0E01               	movlw	high main@uc
   988  0000CE  0101               	movlb	1	; () banked
   989  0000D0  0101               	movlb	1	; () banked
   990  0000D2  6F83               	movwf	(init_uart_recv@uc+1)& (0+255),b
   991  0000D4  0101               	movlb	1	; () banked
   992  0000D6  0EBC               	movlw	low main@uc
   993  0000D8  0101               	movlb	1	; () banked
   994  0000DA  0101               	movlb	1	; () banked
   995  0000DC  6F82               	movwf	init_uart_recv@uc& (0+255),b
   996  0000DE  EC33  F00F         	call	_init_uart_recv	;wreg free
   997                           
   998                           ;main.c: 232: init_i2c(&ic);
   999  0000E2  0101               	movlb	1	; () banked
  1000  0000E4  0E01               	movlw	high main@ic
  1001  0000E6  0101               	movlb	1	; () banked
  1002  0000E8  0101               	movlb	1	; () banked
  1003  0000EA  6F83               	movwf	(init_i2c@ic+1)& (0+255),b
  1004  0000EC  0101               	movlb	1	; () banked
  1005  0000EE  0ED4               	movlw	low main@ic
  1006  0000F0  0101               	movlb	1	; () banked
  1007  0000F2  0101               	movlb	1	; () banked
  1008  0000F4  6F82               	movwf	init_i2c@ic& (0+255),b
  1009  0000F6  ECFC  F00A         	call	_init_i2c	;wreg free
  1010                           
  1011                           ;main.c: 235: init_timer1_lthread(&t1thread_data);
  1012  0000FA  0101               	movlb	1	; () banked
  1013  0000FC  0E01               	movlw	high main@t1thread_data
  1014  0000FE  0101               	movlb	1	; () banked
  1015  000100  0101               	movlb	1	; () banked
  1016  000102  6F83               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1017  000104  0101               	movlb	1	; () banked
  1018  000106  0EB9               	movlw	low main@t1thread_data
  1019  000108  0101               	movlb	1	; () banked
  1020  00010A  0101               	movlb	1	; () banked
  1021  00010C  6F82               	movwf	init_timer1_lthread@tptr& (0+255),b
  1022  00010E  ECB1  F00F         	call	_init_timer1_lthread	;wreg free
  1023                           
  1024                           ;main.c: 238: init_queues();
  1025  000112  EC31  F00C         	call	_init_queues	;wreg free
  1026                           
  1027                           ;main.c: 242: TRISB = 0x0;
  1028  000116  0E00               	movlw	0
  1029  000118  6E93               	movwf	3987,c	;volatile
  1030                           
  1031                           ;main.c: 243: LATB = 0x0;
  1032  00011A  0E00               	movlw	0
  1033  00011C  6E8A               	movwf	3978,c	;volatile
  1034                           
  1035                           ;main.c: 256: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110011);
  1036  00011E  0ED3               	movlw	211
  1037  000120  EC4A  F00F         	call	_OpenTimer0
  1038                           
  1039                           ;main.c: 268: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1040  000124  0EF5               	movlw	245
  1041  000126  EC78  F00E         	call	_OpenTimer1
  1042                           
  1043                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1044  00012A  909F               	bcf	3999,0,c	;volatile
  1045                           
  1046                           ;main.c: 277: IPR1bits.RCIP = 0;
  1047  00012C  9A9F               	bcf	3999,5,c	;volatile
  1048                           
  1049                           ;main.c: 279: IPR1bits.TXIP = 0;
  1050  00012E  989F               	bcf	3999,4,c	;volatile
  1051                           
  1052                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1053  000130  869F               	bsf	3999,3,c	;volatile
  1054                           
  1055                           ;main.c: 286: unsigned char slave_address = 0x9E;
  1056  000132  0101               	movlb	1	; () banked
  1057  000134  6FA6               	movwf	??_main& (0+255),b
  1058  000136  0E9E               	movlw	158
  1059  000138  0101               	movlb	1	; () banked
  1060  00013A  0101               	movlb	1	; () banked
  1061  00013C  6FB4               	movwf	main@slave_address& (0+255),b
  1062  00013E  0101               	movlb	1	; () banked
  1063  000140  51A6               	movf	??_main& (0+255),w,b
  1064                           
  1065                           ; BSR set to: 1
  1066                           ;main.c: 287: i2c_configure_master(slave_address);
  1067  000142  0101               	movlb	1	; () banked
  1068  000144  0101               	movlb	1	; () banked
  1069  000146  51B4               	movf	main@slave_address& (0+255),w,b
  1070  000148  EC99  F00D         	call	_i2c_configure_master
  1071                           
  1072                           ;main.c: 302: PIE1bits.SSPIE = 1;
  1073  00014C  869D               	bsf	3997,3,c	;volatile
  1074                           
  1075                           ;main.c: 318: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1076                           ;main.c: 319: 0b11111111 & 0b11111111, 155);
  1077  00014E  0E00               	movlw	0
  1078  000150  0101               	movlb	1	; () banked
  1079  000152  0101               	movlb	1	; () banked
  1080  000154  6F83               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1081  000156  0E9B               	movlw	155
  1082  000158  0101               	movlb	1	; () banked
  1083  00015A  6F82               	movwf	OpenUSART@spbrg& (0+255),b
  1084  00015C  0E7C               	movlw	124
  1085  00015E  ECE8  F009         	call	_OpenUSART
  1086                           
  1087                           ;main.c: 320: BAUDCONbits.BRG16 = 0;
  1088  000162  96B8               	bcf	4024,3,c	;volatile
  1089                           
  1090                           ;main.c: 321: RCSTAbits.SPEN = 1;
  1091  000164  8EAB               	bsf	4011,7,c	;volatile
  1092                           
  1093                           ;main.c: 322: RCSTAbits.CREN = 1;
  1094  000166  88AB               	bsf	4011,4,c	;volatile
  1095                           
  1096                           ;main.c: 327: bufferFlag = 0x0;
  1097  000168  0E00               	movlw	0
  1098  00016A  0101               	movlb	1	; () banked
  1099  00016C  0101               	movlb	1	; () banked
  1100  00016E  6F15               	movwf	(_bufferFlag+1)& (0+255),b
  1101  000170  0E00               	movlw	0
  1102  000172  0101               	movlb	1	; () banked
  1103  000174  6F14               	movwf	_bufferFlag& (0+255),b
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;main.c: 330: enable_interrupts();
  1107  000176  ECE7  F00F         	call	_enable_interrupts	;wreg free
  1108  00017A                     l3370:
  1109                           
  1110                           ;main.c: 341: block_on_To_msgqueues();
  1111  00017A  EC7C  F00B         	call	_block_on_To_msgqueues	;wreg free
  1112                           
  1113                           ;main.c: 349: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1114  00017E  0101               	movlb	1	; () banked
  1115  000180  0E01               	movlw	high main@msgtype
  1116  000182  0101               	movlb	1	; () banked
  1117  000184  0101               	movlb	1	; () banked
  1118  000186  6F9B               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1119  000188  0101               	movlb	1	; () banked
  1120  00018A  0ED3               	movlw	low main@msgtype
  1121  00018C  0101               	movlb	1	; () banked
  1122  00018E  0101               	movlb	1	; () banked
  1123  000190  6F9A               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1124  000192  0101               	movlb	1	; () banked
  1125  000194  0E01               	movlw	high main@msgbuffer
  1126  000196  0101               	movlb	1	; () banked
  1127  000198  0101               	movlb	1	; () banked
  1128  00019A  6F9D               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1129  00019C  0101               	movlb	1	; () banked
  1130  00019E  0EA7               	movlw	low main@msgbuffer
  1131  0001A0  0101               	movlb	1	; () banked
  1132  0001A2  0101               	movlb	1	; () banked
  1133  0001A4  6F9C               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1134  0001A6  0E0A               	movlw	10
  1135  0001A8  ECDB  F00D         	call	_ToMainHigh_recvmsg
  1136  0001AC  0101               	movlb	1	; () banked
  1137  0001AE  0101               	movlb	1	; () banked
  1138  0001B0  6FBB               	movwf	main@length& (0+255),b
  1139                           
  1140                           ; BSR set to: 1
  1141                           ;main.c: 351: if (length < 0) {
  1142  0001B2  0101               	movlb	1	; () banked
  1143  0001B4  0101               	movlb	1	; () banked
  1144  0001B6  BFBB               	btfsc	main@length& (0+255),7,b
  1145  0001B8  D088               	goto	l3388
  1146  0001BA  D07B               	goto	l3386
  1147  0001BC                     l3378:
  1148                           
  1149                           ; BSR set to: 1
  1150                           ;main.c: 359: {
  1151                           ;main.c: 360: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1152  0001BC  0101               	movlb	1	; () banked
  1153  0001BE  0E01               	movlw	high main@t0thread_data
  1154  0001C0  0101               	movlb	1	; () banked
  1155  0001C2  0101               	movlb	1	; () banked
  1156  0001C4  6F83               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1157  0001C6  0101               	movlb	1	; () banked
  1158  0001C8  0EB2               	movlw	low main@t0thread_data
  1159  0001CA  0101               	movlb	1	; () banked
  1160  0001CC  0101               	movlb	1	; () banked
  1161  0001CE  6F82               	movwf	timer0_lthread@tptr& (0+255),b
  1162  0001D0  0101               	movlb	1	; () banked
  1163  0001D2  0101               	movlb	1	; () banked
  1164  0001D4  C1D3  F184         	movff	main@msgtype,timer0_lthread@msgtype
  1165  0001D8  0101               	movlb	1	; () banked
  1166  0001DA  0101               	movlb	1	; () banked
  1167  0001DC  6B85               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1168  0001DE  0101               	movlb	1	; () banked
  1169  0001E0  0101               	movlb	1	; () banked
  1170  0001E2  51BB               	movf	main@length& (0+255),w,b
  1171  0001E4  0101               	movlb	1	; () banked
  1172  0001E6  0101               	movlb	1	; () banked
  1173  0001E8  6F86               	movwf	timer0_lthread@length& (0+255),b
  1174  0001EA  0101               	movlb	1	; () banked
  1175  0001EC  6B87               	clrf	(timer0_lthread@length+1)& (0+255),b
  1176  0001EE  0101               	movlb	1	; () banked
  1177  0001F0  BF86               	btfsc	timer0_lthread@length& (0+255),7,b
  1178  0001F2  0787               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1179  0001F4  0101               	movlb	1	; () banked
  1180  0001F6  0E01               	movlw	high main@msgbuffer
  1181  0001F8  0101               	movlb	1	; () banked
  1182  0001FA  0101               	movlb	1	; () banked
  1183  0001FC  6F89               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1184  0001FE  0101               	movlb	1	; () banked
  1185  000200  0EA7               	movlw	low main@msgbuffer
  1186  000202  0101               	movlb	1	; () banked
  1187  000204  0101               	movlb	1	; () banked
  1188  000206  6F88               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1189  000208  ECA8  F00F         	call	_timer0_lthread	;wreg free
  1190                           
  1191                           ;main.c: 361: break;
  1192  00020C  D05E               	goto	l3388
  1193  00020E                     l3380:
  1194                           
  1195                           ;main.c: 364: {
  1196                           ;main.c: 365: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1197  00020E  0101               	movlb	1	; () banked
  1198  000210  0E01               	movlw	high main@i2cthread_data
  1199  000212  0101               	movlb	1	; () banked
  1200  000214  0101               	movlb	1	; () banked
  1201  000216  6F9D               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1202  000218  0101               	movlb	1	; () banked
  1203  00021A  0EB7               	movlw	low main@i2cthread_data
  1204  00021C  0101               	movlb	1	; () banked
  1205  00021E  0101               	movlb	1	; () banked
  1206  000220  6F9C               	movwf	i2c_lthread@i2cptr& (0+255),b
  1207  000222  0101               	movlb	1	; () banked
  1208  000224  0101               	movlb	1	; () banked
  1209  000226  C1D3  F19E         	movff	main@msgtype,i2c_lthread@msgtype
  1210  00022A  0101               	movlb	1	; () banked
  1211  00022C  0101               	movlb	1	; () banked
  1212  00022E  6B9F               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1213  000230  0101               	movlb	1	; () banked
  1214  000232  0101               	movlb	1	; () banked
  1215  000234  51BB               	movf	main@length& (0+255),w,b
  1216  000236  0101               	movlb	1	; () banked
  1217  000238  0101               	movlb	1	; () banked
  1218  00023A  6FA0               	movwf	i2c_lthread@length& (0+255),b
  1219  00023C  0101               	movlb	1	; () banked
  1220  00023E  6BA1               	clrf	(i2c_lthread@length+1)& (0+255),b
  1221  000240  0101               	movlb	1	; () banked
  1222  000242  BFA0               	btfsc	i2c_lthread@length& (0+255),7,b
  1223  000244  07A1               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1224  000246  0101               	movlb	1	; () banked
  1225  000248  0E01               	movlw	high main@msgbuffer
  1226  00024A  0101               	movlb	1	; () banked
  1227  00024C  0101               	movlb	1	; () banked
  1228  00024E  6FA3               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1229  000250  0101               	movlb	1	; () banked
  1230  000252  0EA7               	movlw	low main@msgbuffer
  1231  000254  0101               	movlb	1	; () banked
  1232  000256  0101               	movlb	1	; () banked
  1233  000258  6FA2               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1234  00025A  ECDA  F008         	call	_i2c_lthread	;wreg free
  1235                           
  1236                           ;main.c: 366: break;
  1237  00025E  D035               	goto	l3388
  1238  000260                     l3382:
  1239                           
  1240                           ;main.c: 369: {
  1241                           ;main.c: 370: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1242  000260  0101               	movlb	1	; () banked
  1243  000262  0E01               	movlw	high main@i2cthread_data
  1244  000264  0101               	movlb	1	; () banked
  1245  000266  0101               	movlb	1	; () banked
  1246  000268  6F9D               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1247  00026A  0101               	movlb	1	; () banked
  1248  00026C  0EB7               	movlw	low main@i2cthread_data
  1249  00026E  0101               	movlb	1	; () banked
  1250  000270  0101               	movlb	1	; () banked
  1251  000272  6F9C               	movwf	i2c_lthread@i2cptr& (0+255),b
  1252  000274  0101               	movlb	1	; () banked
  1253  000276  0101               	movlb	1	; () banked
  1254  000278  C1D3  F19E         	movff	main@msgtype,i2c_lthread@msgtype
  1255  00027C  0101               	movlb	1	; () banked
  1256  00027E  0101               	movlb	1	; () banked
  1257  000280  6B9F               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1258  000282  0101               	movlb	1	; () banked
  1259  000284  0101               	movlb	1	; () banked
  1260  000286  51BB               	movf	main@length& (0+255),w,b
  1261  000288  0101               	movlb	1	; () banked
  1262  00028A  0101               	movlb	1	; () banked
  1263  00028C  6FA0               	movwf	i2c_lthread@length& (0+255),b
  1264  00028E  0101               	movlb	1	; () banked
  1265  000290  6BA1               	clrf	(i2c_lthread@length+1)& (0+255),b
  1266  000292  0101               	movlb	1	; () banked
  1267  000294  BFA0               	btfsc	i2c_lthread@length& (0+255),7,b
  1268  000296  07A1               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1269  000298  0101               	movlb	1	; () banked
  1270  00029A  0E01               	movlw	high main@msgbuffer
  1271  00029C  0101               	movlb	1	; () banked
  1272  00029E  0101               	movlb	1	; () banked
  1273  0002A0  6FA3               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1274  0002A2  0101               	movlb	1	; () banked
  1275  0002A4  0EA7               	movlw	low main@msgbuffer
  1276  0002A6  0101               	movlb	1	; () banked
  1277  0002A8  0101               	movlb	1	; () banked
  1278  0002AA  6FA2               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1279  0002AC  ECDA  F008         	call	_i2c_lthread	;wreg free
  1280                           
  1281                           ;main.c: 371: break;
  1282  0002B0  D00C               	goto	l3388
  1283  0002B2                     l3386:
  1284  0002B2  0101               	movlb	1	; () banked
  1285  0002B4  0101               	movlb	1	; () banked
  1286  0002B6  51D3               	movf	main@msgtype& (0+255),w,b
  1287                           
  1288                           ; Switch size 1, requested type "space"
  1289                           ; Number of cases is 3, Range of values is 10 to 40
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte           10     6 (average)
  1293                           ;	Chosen strategy is simple_byte
  1294  0002B8  0A0A               	xorlw	10	; case 10
  1295  0002BA  B4D8               	btfsc	status,2,c
  1296  0002BC  D77F               	goto	l3378
  1297  0002BE  0A2D               	xorlw	45	; case 39
  1298  0002C0  B4D8               	btfsc	status,2,c
  1299  0002C2  D7CE               	goto	l3382
  1300  0002C4  0A0F               	xorlw	15	; case 40
  1301  0002C6  B4D8               	btfsc	status,2,c
  1302  0002C8  D7A2               	goto	l3380
  1303  0002CA                     l3388:
  1304                           
  1305                           ;main.c: 379: }
  1306                           ;main.c: 382: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1307  0002CA  0101               	movlb	1	; () banked
  1308  0002CC  0E01               	movlw	high main@msgtype
  1309  0002CE  0101               	movlb	1	; () banked
  1310  0002D0  0101               	movlb	1	; () banked
  1311  0002D2  6F9B               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1312  0002D4  0101               	movlb	1	; () banked
  1313  0002D6  0ED3               	movlw	low main@msgtype
  1314  0002D8  0101               	movlb	1	; () banked
  1315  0002DA  0101               	movlb	1	; () banked
  1316  0002DC  6F9A               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1317  0002DE  0101               	movlb	1	; () banked
  1318  0002E0  0E01               	movlw	high main@msgbuffer
  1319  0002E2  0101               	movlb	1	; () banked
  1320  0002E4  0101               	movlb	1	; () banked
  1321  0002E6  6F9D               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1322  0002E8  0101               	movlb	1	; () banked
  1323  0002EA  0EA7               	movlw	low main@msgbuffer
  1324  0002EC  0101               	movlb	1	; () banked
  1325  0002EE  0101               	movlb	1	; () banked
  1326  0002F0  6F9C               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1327  0002F2  0E0A               	movlw	10
  1328  0002F4  ECBA  F00D         	call	_ToMainLow_recvmsg
  1329  0002F8  0101               	movlb	1	; () banked
  1330  0002FA  0101               	movlb	1	; () banked
  1331  0002FC  6FBB               	movwf	main@length& (0+255),b
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;main.c: 383: if (length < 0) {
  1335  0002FE  0101               	movlb	1	; () banked
  1336  000300  0101               	movlb	1	; () banked
  1337  000302  BFBB               	btfsc	main@length& (0+255),7,b
  1338  000304  D73A               	goto	l3370
  1339  000306  D07B               	goto	l3402
  1340  000308                     l3394:
  1341                           
  1342                           ; BSR set to: 1
  1343                           ;main.c: 391: {
  1344                           ;main.c: 392: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1345  000308  0101               	movlb	1	; () banked
  1346  00030A  0E01               	movlw	high main@t1thread_data
  1347  00030C  0101               	movlb	1	; () banked
  1348  00030E  0101               	movlb	1	; () banked
  1349  000310  6F9D               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1350  000312  0101               	movlb	1	; () banked
  1351  000314  0EB9               	movlw	low main@t1thread_data
  1352  000316  0101               	movlb	1	; () banked
  1353  000318  0101               	movlb	1	; () banked
  1354  00031A  6F9C               	movwf	timer1_lthread@tptr& (0+255),b
  1355  00031C  0101               	movlb	1	; () banked
  1356  00031E  0101               	movlb	1	; () banked
  1357  000320  C1D3  F19E         	movff	main@msgtype,timer1_lthread@msgtype
  1358  000324  0101               	movlb	1	; () banked
  1359  000326  0101               	movlb	1	; () banked
  1360  000328  6B9F               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1361  00032A  0101               	movlb	1	; () banked
  1362  00032C  0101               	movlb	1	; () banked
  1363  00032E  51BB               	movf	main@length& (0+255),w,b
  1364  000330  0101               	movlb	1	; () banked
  1365  000332  0101               	movlb	1	; () banked
  1366  000334  6FA0               	movwf	timer1_lthread@length& (0+255),b
  1367  000336  0101               	movlb	1	; () banked
  1368  000338  6BA1               	clrf	(timer1_lthread@length+1)& (0+255),b
  1369  00033A  0101               	movlb	1	; () banked
  1370  00033C  BFA0               	btfsc	timer1_lthread@length& (0+255),7,b
  1371  00033E  07A1               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1372  000340  0101               	movlb	1	; () banked
  1373  000342  0E01               	movlw	high main@msgbuffer
  1374  000344  0101               	movlb	1	; () banked
  1375  000346  0101               	movlb	1	; () banked
  1376  000348  6FA3               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1377  00034A  0101               	movlb	1	; () banked
  1378  00034C  0EA7               	movlw	low main@msgbuffer
  1379  00034E  0101               	movlb	1	; () banked
  1380  000350  0101               	movlb	1	; () banked
  1381  000352  6FA2               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1382  000354  ECF8  F00B         	call	_timer1_lthread	;wreg free
  1383                           
  1384                           ;main.c: 393: break;
  1385  000358  D710               	goto	l3370
  1386  00035A                     l3396:
  1387                           
  1388                           ;main.c: 396: {
  1389                           ;main.c: 397: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1390  00035A  0101               	movlb	1	; () banked
  1391  00035C  0E01               	movlw	high main@uthread_data
  1392  00035E  0101               	movlb	1	; () banked
  1393  000360  0101               	movlb	1	; () banked
  1394  000362  6F8C               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1395  000364  0101               	movlb	1	; () banked
  1396  000366  0EB5               	movlw	low main@uthread_data
  1397  000368  0101               	movlb	1	; () banked
  1398  00036A  0101               	movlb	1	; () banked
  1399  00036C  6F8B               	movwf	uart_lthread@uptr& (0+255),b
  1400  00036E  0101               	movlb	1	; () banked
  1401  000370  0101               	movlb	1	; () banked
  1402  000372  C1D3  F18D         	movff	main@msgtype,uart_lthread@msgtype
  1403  000376  0101               	movlb	1	; () banked
  1404  000378  0101               	movlb	1	; () banked
  1405  00037A  6B8E               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1406  00037C  0101               	movlb	1	; () banked
  1407  00037E  0101               	movlb	1	; () banked
  1408  000380  51BB               	movf	main@length& (0+255),w,b
  1409  000382  0101               	movlb	1	; () banked
  1410  000384  0101               	movlb	1	; () banked
  1411  000386  6F8F               	movwf	uart_lthread@length& (0+255),b
  1412  000388  0101               	movlb	1	; () banked
  1413  00038A  6B90               	clrf	(uart_lthread@length+1)& (0+255),b
  1414  00038C  0101               	movlb	1	; () banked
  1415  00038E  BF8F               	btfsc	uart_lthread@length& (0+255),7,b
  1416  000390  0790               	decf	(uart_lthread@length+1)& (0+255),f,b
  1417  000392  0101               	movlb	1	; () banked
  1418  000394  0E01               	movlw	high main@msgbuffer
  1419  000396  0101               	movlb	1	; () banked
  1420  000398  0101               	movlb	1	; () banked
  1421  00039A  6F92               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1422  00039C  0101               	movlb	1	; () banked
  1423  00039E  0EA7               	movlw	low main@msgbuffer
  1424  0003A0  0101               	movlb	1	; () banked
  1425  0003A2  0101               	movlb	1	; () banked
  1426  0003A4  6F91               	movwf	uart_lthread@msgbuffer& (0+255),b
  1427  0003A6  EC3D  F00E         	call	_uart_lthread	;wreg free
  1428                           
  1429                           ;main.c: 398: break;
  1430  0003AA  D6E7               	goto	l3370
  1431  0003AC                     l3398:
  1432                           
  1433                           ;main.c: 401: {
  1434                           ;main.c: 402: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1435  0003AC  0101               	movlb	1	; () banked
  1436  0003AE  0E01               	movlw	high main@uthread_data
  1437  0003B0  0101               	movlb	1	; () banked
  1438  0003B2  0101               	movlb	1	; () banked
  1439  0003B4  6F8C               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1440  0003B6  0101               	movlb	1	; () banked
  1441  0003B8  0EB5               	movlw	low main@uthread_data
  1442  0003BA  0101               	movlb	1	; () banked
  1443  0003BC  0101               	movlb	1	; () banked
  1444  0003BE  6F8B               	movwf	uart_lthread@uptr& (0+255),b
  1445  0003C0  0101               	movlb	1	; () banked
  1446  0003C2  0101               	movlb	1	; () banked
  1447  0003C4  C1D3  F18D         	movff	main@msgtype,uart_lthread@msgtype
  1448  0003C8  0101               	movlb	1	; () banked
  1449  0003CA  0101               	movlb	1	; () banked
  1450  0003CC  6B8E               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1451  0003CE  0101               	movlb	1	; () banked
  1452  0003D0  0101               	movlb	1	; () banked
  1453  0003D2  51BB               	movf	main@length& (0+255),w,b
  1454  0003D4  0101               	movlb	1	; () banked
  1455  0003D6  0101               	movlb	1	; () banked
  1456  0003D8  6F8F               	movwf	uart_lthread@length& (0+255),b
  1457  0003DA  0101               	movlb	1	; () banked
  1458  0003DC  6B90               	clrf	(uart_lthread@length+1)& (0+255),b
  1459  0003DE  0101               	movlb	1	; () banked
  1460  0003E0  BF8F               	btfsc	uart_lthread@length& (0+255),7,b
  1461  0003E2  0790               	decf	(uart_lthread@length+1)& (0+255),f,b
  1462  0003E4  0101               	movlb	1	; () banked
  1463  0003E6  0E01               	movlw	high main@msgbuffer
  1464  0003E8  0101               	movlb	1	; () banked
  1465  0003EA  0101               	movlb	1	; () banked
  1466  0003EC  6F92               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1467  0003EE  0101               	movlb	1	; () banked
  1468  0003F0  0EA7               	movlw	low main@msgbuffer
  1469  0003F2  0101               	movlb	1	; () banked
  1470  0003F4  0101               	movlb	1	; () banked
  1471  0003F6  6F91               	movwf	uart_lthread@msgbuffer& (0+255),b
  1472  0003F8  EC3D  F00E         	call	_uart_lthread	;wreg free
  1473                           
  1474                           ;main.c: 403: break;
  1475  0003FC  D6BE               	goto	l3370
  1476  0003FE                     l3402:
  1477  0003FE  0101               	movlb	1	; () banked
  1478  000400  0101               	movlb	1	; () banked
  1479  000402  51D3               	movf	main@msgtype& (0+255),w,b
  1480                           
  1481                           ; Switch size 1, requested type "space"
  1482                           ; Number of cases is 3, Range of values is 11 to 32
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           10     6 (average)
  1486                           ;	Chosen strategy is simple_byte
  1487  000404  0A0B               	xorlw	11	; case 11
  1488  000406  B4D8               	btfsc	status,2,c
  1489  000408  D77F               	goto	l3394
  1490  00040A  0A15               	xorlw	21	; case 30
  1491  00040C  B4D8               	btfsc	status,2,c
  1492  00040E  D7A5               	goto	l3396
  1493  000410  0A3E               	xorlw	62	; case 32
  1494  000412  B4D8               	btfsc	status,2,c
  1495  000414  D7CB               	goto	l3398
  1496  000416  D6B1               	goto	l3370
  1497  000418                     __end_of_main:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           status	equ	0xFD8
  1503                           
  1504 ;; *************** function _uart_lthread *****************
  1505 ;; Defined at:
  1506 ;;		line 12 in file "../src/uart_thread.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  uptr            2    9[BANK1 ] PTR struct __uart_thread
  1509 ;;		 -> main@uthread_data(2), 
  1510 ;;  msgtype         2   11[BANK1 ] int 
  1511 ;;  length          2   13[BANK1 ] int 
  1512 ;;  msgbuffer       2   15[BANK1 ] PTR unsigned char 
  1513 ;;		 -> main@msgbuffer(11), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2    9[BANK1 ] int 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1525 ;;      Params:         0       0       8       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0
  1528 ;;      Totals:         0       0       8       0       0
  1529 ;;Total ram usage:        8 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:   11
  1532 ;; This function calls:
  1533 ;;		_uart_retrieve_buffer
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text1
  1540  001C7A                     __ptext1:
  1541                           	opt stack 0
  1542  001C7A                     _uart_lthread:
  1543                           	opt stack 18
  1544                           
  1545                           ;uart_thread.c: 13: if (msgtype == 30) {
  1546                           
  1547                           ; BSR set to: 1
  1548                           ;incstack = 0
  1549  001C7A  0101               	movlb	1	; () banked
  1550  001C7C  0101               	movlb	1	; () banked
  1551  001C7E  518D               	movf	uart_lthread@msgtype& (0+255),w,b
  1552  001C80  0A1E               	xorlw	30
  1553  001C82  118E               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1554  001C84  B4D8               	btfsc	status,2,c
  1555  001C86  0012               	return	
  1556                           
  1557                           ; BSR set to: 1
  1558                           
  1559                           ; BSR set to: 1
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;uart_thread.c: 15: } else if (msgtype == 32) {
  1563  001C88  0101               	movlb	1	; () banked
  1564  001C8A  0101               	movlb	1	; () banked
  1565  001C8C  518D               	movf	uart_lthread@msgtype& (0+255),w,b
  1566  001C8E  0A20               	xorlw	32
  1567  001C90  118E               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1568  001C92  A4D8               	btfss	status,2,c
  1569  001C94  0012               	return	
  1570                           
  1571                           ; BSR set to: 1
  1572                           ;uart_thread.c: 17: uart_retrieve_buffer(length, msgbuffer);
  1573  001C96  C18F  F182         	movff	uart_lthread@length,uart_retrieve_buffer@length
  1574  001C9A  C190  F183         	movff	uart_lthread@length+1,uart_retrieve_buffer@length+1
  1575  001C9E  0101               	movlb	1	; () banked
  1576  001CA0  0101               	movlb	1	; () banked
  1577  001CA2  C192  F185         	movff	uart_lthread@msgbuffer+1,uart_retrieve_buffer@msgbuffer+1
  1578  001CA6  0101               	movlb	1	; () banked
  1579  001CA8  0101               	movlb	1	; () banked
  1580  001CAA  C191  F184         	movff	uart_lthread@msgbuffer,uart_retrieve_buffer@msgbuffer
  1581  001CAE  EC9B  F009         	call	_uart_retrieve_buffer	;wreg free
  1582                           
  1583                           ;uart_thread.c: 19: PIE1bits.TX1IE = 0x1;
  1584  001CB2  889D               	bsf	3997,4,c	;volatile
  1585  001CB4  0012               	return	
  1586  001CB6                     __end_of_uart_lthread:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           status	equ	0xFD8
  1592                           
  1593 ;; *************** function _uart_retrieve_buffer *****************
  1594 ;; Defined at:
  1595 ;;		line 258 in file "../src/my_uart.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  length          2    0[BANK1 ] int 
  1598 ;;  msgbuffer       2    2[BANK1 ] PTR unsigned char 
  1599 ;;		 -> main@msgbuffer(11), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  i               2    7[BANK1 ] int 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1611 ;;      Params:         0       0       4       0       0
  1612 ;;      Locals:         0       0       2       0       0
  1613 ;;      Temps:          0       0       3       0       0
  1614 ;;      Totals:         0       0       9       0       0
  1615 ;;Total ram usage:        9 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:   10
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_uart_lthread
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text2
  1626  001336                     __ptext2:
  1627                           	opt stack 0
  1628  001336                     _uart_retrieve_buffer:
  1629                           	opt stack 18
  1630                           
  1631                           ;my_uart.c: 260: uc_ptr->Tx_buflen = length;
  1632                           
  1633                           ;incstack = 0
  1634  001336  EE20 F014          	lfsr	2,20
  1635  00133A  5065               	movf	_uc_ptr,w,c
  1636  00133C  26D9               	addwf	fsr2l,f,c
  1637  00133E  5066               	movf	_uc_ptr+1,w,c
  1638  001340  22DA               	addwfc	fsr2h,f,c
  1639  001342  0101               	movlb	1	; () banked
  1640  001344  C182  FFDF         	movff	uart_retrieve_buffer@length,indf2
  1641                           
  1642                           ; BSR set to: 1
  1643                           ;my_uart.c: 261: int i = 0;
  1644  001348  0E00               	movlw	0
  1645  00134A  0101               	movlb	1	; () banked
  1646  00134C  0101               	movlb	1	; () banked
  1647  00134E  6F8A               	movwf	(uart_retrieve_buffer@i+1)& (0+255),b
  1648  001350  0E00               	movlw	0
  1649  001352  0101               	movlb	1	; () banked
  1650  001354  6F89               	movwf	uart_retrieve_buffer@i& (0+255),b
  1651                           
  1652                           ;my_uart.c: 263: for (; i < length + 1; i++) {
  1653  001356  D01E               	goto	l3822
  1654  001358                     l3818:
  1655                           
  1656                           ; BSR set to: 1
  1657                           ;my_uart.c: 264: uc_ptr->Tx_buffer[i] = msgbuffer[i];
  1658  001358  0101               	movlb	1	; () banked
  1659  00135A  0101               	movlb	1	; () banked
  1660  00135C  5189               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1661  00135E  0101               	movlb	1	; () banked
  1662  001360  0101               	movlb	1	; () banked
  1663  001362  2584               	addwf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1664  001364  6ED9               	movwf	fsr2l,c
  1665  001366  0101               	movlb	1	; () banked
  1666  001368  0101               	movlb	1	; () banked
  1667  00136A  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1668  00136C  0101               	movlb	1	; () banked
  1669  00136E  0101               	movlb	1	; () banked
  1670  001370  2185               	addwfc	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1671  001372  6EDA               	movwf	fsr2h,c
  1672  001374  0101               	movlb	1	; () banked
  1673  001376  0101               	movlb	1	; () banked
  1674  001378  5189               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1675  00137A  2465               	addwf	_uc_ptr,w,c
  1676  00137C  6EE1               	movwf	fsr1l,c
  1677  00137E  0101               	movlb	1	; () banked
  1678  001380  0101               	movlb	1	; () banked
  1679  001382  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1680  001384  2066               	addwfc	_uc_ptr+1,w,c
  1681  001386  6EE2               	movwf	fsr1h,c
  1682  001388  CFDF FFE7          	movff	indf2,indf1
  1683                           
  1684                           ; BSR set to: 1
  1685  00138C  0101               	movlb	1	; () banked
  1686  00138E  0101               	movlb	1	; () banked
  1687  001390  4B89               	infsnz	uart_retrieve_buffer@i& (0+255),f,b
  1688  001392  2B8A               	incf	(uart_retrieve_buffer@i+1)& (0+255),f,b
  1689  001394                     l3822:
  1690                           
  1691                           ; BSR set to: 1
  1692  001394  0E01               	movlw	1
  1693  001396  0101               	movlb	1	; () banked
  1694  001398  0101               	movlb	1	; () banked
  1695  00139A  2582               	addwf	uart_retrieve_buffer@length& (0+255),w,b
  1696  00139C  0101               	movlb	1	; () banked
  1697  00139E  6F86               	movwf	??_uart_retrieve_buffer& (0+255),b
  1698  0013A0  0E00               	movlw	0
  1699  0013A2  0101               	movlb	1	; () banked
  1700  0013A4  0101               	movlb	1	; () banked
  1701  0013A6  2183               	addwfc	(uart_retrieve_buffer@length+1)& (0+255),w,b
  1702  0013A8  0101               	movlb	1	; () banked
  1703  0013AA  6F87               	movwf	(??_uart_retrieve_buffer+1)& (0+255),b
  1704  0013AC  0101               	movlb	1	; () banked
  1705  0013AE  0101               	movlb	1	; () banked
  1706  0013B0  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1707  0013B2  0A80               	xorlw	128
  1708  0013B4  0101               	movlb	1	; () banked
  1709  0013B6  6F88               	movwf	(??_uart_retrieve_buffer+2)& (0+255),b
  1710  0013B8  5186               	movf	??_uart_retrieve_buffer& (0+255),w,b
  1711  0013BA  0101               	movlb	1	; () banked
  1712  0013BC  0101               	movlb	1	; () banked
  1713  0013BE  5D89               	subwf	uart_retrieve_buffer@i& (0+255),w,b
  1714  0013C0  0101               	movlb	1	; () banked
  1715  0013C2  5187               	movf	(??_uart_retrieve_buffer+1)& (0+255),w,b
  1716  0013C4  0A80               	xorlw	128
  1717  0013C6  0101               	movlb	1	; () banked
  1718  0013C8  5988               	subwfb	(??_uart_retrieve_buffer+2)& (0+255),w,b
  1719  0013CA  B0D8               	btfsc	status,0,c
  1720                           
  1721                           ; BSR set to: 1
  1722                           
  1723                           ; BSR set to: 1
  1724  0013CC  0012               	return	
  1725  0013CE  D7C4               	goto	l3818
  1726  0013D0                     __end_of_uart_retrieve_buffer:
  1727                           	opt stack 0
  1728                           tblptru	equ	0xFF8
  1729                           postinc0	equ	0xFEE
  1730                           wreg	equ	0xFE8
  1731                           indf1	equ	0xFE7
  1732                           fsr1h	equ	0xFE2
  1733                           fsr1l	equ	0xFE1
  1734                           indf2	equ	0xFDF
  1735                           fsr2h	equ	0xFDA
  1736                           fsr2l	equ	0xFD9
  1737                           status	equ	0xFD8
  1738                           
  1739 ;; *************** function _timer1_lthread *****************
  1740 ;; Defined at:
  1741 ;;		line 14 in file "../src/timer1_thread.c"
  1742 ;; Parameters:    Size  Location     Type
  1743 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1744 ;;		 -> main@t1thread_data(2), 
  1745 ;;  msgtype         2   28[BANK1 ] int 
  1746 ;;  length          2   30[BANK1 ] int 
  1747 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1748 ;;		 -> main@msgbuffer(11), 
  1749 ;; Auto vars:     Size  Location     Type
  1750 ;;  retval          1   35[BANK1 ] char 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  2   26[BANK1 ] int 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1760 ;;      Params:         0       0       8       0       0
  1761 ;;      Locals:         0       0       1       0       0
  1762 ;;      Temps:          0       0       1       0       0
  1763 ;;      Totals:         0       0      10       0       0
  1764 ;;Total ram usage:       10 bytes
  1765 ;; Hardware stack levels used:    1
  1766 ;; Hardware stack levels required when called:   13
  1767 ;; This function calls:
  1768 ;;		_FromMainHigh_sendmsg
  1769 ;;		___lwmod
  1770 ;; This function is called by:
  1771 ;;		_main
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text3
  1776  0017F0                     __ptext3:
  1777                           	opt stack 0
  1778  0017F0                     _timer1_lthread:
  1779                           	opt stack 16
  1780                           
  1781                           ;timer1_thread.c: 15: signed char retval;
  1782                           ;timer1_thread.c: 17: tptr->msgcount++;
  1783                           
  1784                           ; BSR set to: 1
  1785                           ;incstack = 0
  1786  0017F0  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1787  0017F4  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1788  0017F8  2ADE               	incf	postinc2,f,c
  1789  0017FA  0E00               	movlw	0
  1790  0017FC  22DD               	addwfc	postdec2,f,c
  1791                           
  1792                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1793  0017FE  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1794  001802  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1795  001806  0101               	movlb	1	; () banked
  1796  001808  CFDE F182          	movff	postinc2,___lwmod@dividend
  1797  00180C  0101               	movlb	1	; () banked
  1798  00180E  CFDD F183          	movff	postdec2,___lwmod@dividend+1
  1799  001812  0E00               	movlw	0
  1800  001814  0101               	movlb	1	; () banked
  1801  001816  0101               	movlb	1	; () banked
  1802  001818  6F85               	movwf	(___lwmod@divisor+1)& (0+255),b
  1803  00181A  0E0A               	movlw	10
  1804  00181C  0101               	movlb	1	; () banked
  1805  00181E  6F84               	movwf	___lwmod@divisor& (0+255),b
  1806  001820  EC31  F00A         	call	___lwmod	;wreg free
  1807  001824  0101               	movlb	1	; () banked
  1808  001826  0101               	movlb	1	; () banked
  1809  001828  5182               	movf	?___lwmod& (0+255),w,b
  1810  00182A  0A09               	xorlw	9
  1811  00182C  0101               	movlb	1	; () banked
  1812  00182E  1183               	iorwf	(?___lwmod+1)& (0+255),w,b
  1813  001830  A4D8               	btfss	status,2,c
  1814  001832  0012               	return	
  1815                           
  1816                           ; BSR set to: 1
  1817                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1818  001834  0101               	movlb	1	; () banked
  1819  001836  6FA4               	movwf	??_timer1_lthread& (0+255),b
  1820  001838  0E14               	movlw	20
  1821  00183A  0101               	movlb	1	; () banked
  1822  00183C  0101               	movlb	1	; () banked
  1823  00183E  6F98               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1824  001840  0101               	movlb	1	; () banked
  1825  001842  51A4               	movf	??_timer1_lthread& (0+255),w,b
  1826  001844  0101               	movlb	1	; () banked
  1827  001846  0101               	movlb	1	; () banked
  1828  001848  C19D  F19A         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1829  00184C  0101               	movlb	1	; () banked
  1830  00184E  0101               	movlb	1	; () banked
  1831  001850  C19C  F199         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1832  001854  0E02               	movlw	2
  1833  001856  EC94  F00E         	call	_FromMainHigh_sendmsg
  1834  00185A  0101               	movlb	1	; () banked
  1835  00185C  0101               	movlb	1	; () banked
  1836  00185E  6FA5               	movwf	timer1_lthread@retval& (0+255),b
  1837  001860  0012               	return	
  1838  001862                     __end_of_timer1_lthread:
  1839                           	opt stack 0
  1840                           tblptru	equ	0xFF8
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           indf1	equ	0xFE7
  1844                           fsr1h	equ	0xFE2
  1845                           fsr1l	equ	0xFE1
  1846                           indf2	equ	0xFDF
  1847                           postinc2	equ	0xFDE
  1848                           postdec2	equ	0xFDD
  1849                           fsr2h	equ	0xFDA
  1850                           fsr2l	equ	0xFD9
  1851                           status	equ	0xFD8
  1852                           
  1853 ;; *************** function ___lwmod *****************
  1854 ;; Defined at:
  1855 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1856 ;; Parameters:    Size  Location     Type
  1857 ;;  dividend        2    0[BANK1 ] unsigned int 
  1858 ;;  divisor         2    2[BANK1 ] unsigned int 
  1859 ;; Auto vars:     Size  Location     Type
  1860 ;;  counter         1    5[BANK1 ] unsigned char 
  1861 ;; Return value:  Size  Location     Type
  1862 ;;                  2    0[BANK1 ] unsigned int 
  1863 ;; Registers used:
  1864 ;;		wreg, status,2, status,0
  1865 ;; Tracked objects:
  1866 ;;		On entry : 0/0
  1867 ;;		On exit  : 0/0
  1868 ;;		Unchanged: 0/0
  1869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1870 ;;      Params:         0       0       4       0       0
  1871 ;;      Locals:         0       0       1       0       0
  1872 ;;      Temps:          0       0       1       0       0
  1873 ;;      Totals:         0       0       6       0       0
  1874 ;;Total ram usage:        6 bytes
  1875 ;; Hardware stack levels used:    1
  1876 ;; Hardware stack levels required when called:   10
  1877 ;; This function calls:
  1878 ;;		Nothing
  1879 ;; This function is called by:
  1880 ;;		_timer1_lthread
  1881 ;; This function uses a non-reentrant model
  1882 ;;
  1883                           
  1884                           	psect	text4
  1885  001462                     __ptext4:
  1886                           	opt stack 0
  1887  001462                     ___lwmod:
  1888                           	opt stack 18
  1889                           
  1890                           ; BSR set to: 1
  1891                           ;incstack = 0
  1892  001462  0101               	movlb	1	; () banked
  1893  001464  0101               	movlb	1	; () banked
  1894  001466  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1895  001468  1184               	iorwf	___lwmod@divisor& (0+255),w,b
  1896  00146A  B4D8               	btfsc	status,2,c
  1897  00146C  D03A               	goto	l1190
  1898                           
  1899                           ; BSR set to: 1
  1900  00146E  0101               	movlb	1	; () banked
  1901  001470  6F86               	movwf	??___lwmod& (0+255),b
  1902  001472  0E01               	movlw	1
  1903  001474  0101               	movlb	1	; () banked
  1904  001476  0101               	movlb	1	; () banked
  1905  001478  6F87               	movwf	___lwmod@counter& (0+255),b
  1906  00147A  0101               	movlb	1	; () banked
  1907  00147C  5186               	movf	??___lwmod& (0+255),w,b
  1908  00147E  D009               	goto	l3832
  1909  001480                     l3830:
  1910                           
  1911                           ; BSR set to: 1
  1912  001480  0101               	movlb	1	; () banked
  1913  001482  0101               	movlb	1	; () banked
  1914  001484  0101               	movlb	1	; () banked
  1915  001486  90D8               	bcf	status,0,c
  1916  001488  3784               	rlcf	___lwmod@divisor& (0+255),f,b
  1917  00148A  3785               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1918  00148C  0101               	movlb	1	; () banked
  1919  00148E  0101               	movlb	1	; () banked
  1920  001490  2B87               	incf	___lwmod@counter& (0+255),f,b
  1921  001492                     l3832:
  1922                           
  1923                           ; BSR set to: 1
  1924  001492  0101               	movlb	1	; () banked
  1925  001494  0101               	movlb	1	; () banked
  1926  001496  AF85               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1927  001498  D7F3               	goto	l3830
  1928  00149A                     l3834:
  1929                           
  1930                           ; BSR set to: 1
  1931  00149A  0101               	movlb	1	; () banked
  1932  00149C  0101               	movlb	1	; () banked
  1933  00149E  5184               	movf	___lwmod@divisor& (0+255),w,b
  1934  0014A0  0101               	movlb	1	; () banked
  1935  0014A2  0101               	movlb	1	; () banked
  1936  0014A4  5D82               	subwf	___lwmod@dividend& (0+255),w,b
  1937  0014A6  0101               	movlb	1	; () banked
  1938  0014A8  0101               	movlb	1	; () banked
  1939  0014AA  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1940  0014AC  0101               	movlb	1	; () banked
  1941  0014AE  0101               	movlb	1	; () banked
  1942  0014B0  5983               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1943  0014B2  A0D8               	btfss	status,0,c
  1944  0014B4  D00C               	goto	l3838
  1945                           
  1946                           ; BSR set to: 1
  1947  0014B6  0101               	movlb	1	; () banked
  1948  0014B8  0101               	movlb	1	; () banked
  1949  0014BA  5184               	movf	___lwmod@divisor& (0+255),w,b
  1950  0014BC  0101               	movlb	1	; () banked
  1951  0014BE  0101               	movlb	1	; () banked
  1952  0014C0  5F82               	subwf	___lwmod@dividend& (0+255),f,b
  1953  0014C2  0101               	movlb	1	; () banked
  1954  0014C4  0101               	movlb	1	; () banked
  1955  0014C6  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1956  0014C8  0101               	movlb	1	; () banked
  1957  0014CA  0101               	movlb	1	; () banked
  1958  0014CC  5B83               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1959  0014CE                     l3838:
  1960                           
  1961                           ; BSR set to: 1
  1962  0014CE  0101               	movlb	1	; () banked
  1963  0014D0  0101               	movlb	1	; () banked
  1964  0014D2  0101               	movlb	1	; () banked
  1965  0014D4  90D8               	bcf	status,0,c
  1966  0014D6  3385               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1967  0014D8  3384               	rrcf	___lwmod@divisor& (0+255),f,b
  1968                           
  1969                           ; BSR set to: 1
  1970  0014DA  0101               	movlb	1	; () banked
  1971  0014DC  0101               	movlb	1	; () banked
  1972  0014DE  2F87               	decfsz	___lwmod@counter& (0+255),f,b
  1973  0014E0  D7DC               	goto	l3834
  1974  0014E2                     l1190:
  1975                           
  1976                           ; BSR set to: 1
  1977  0014E2  C182  F182         	movff	___lwmod@dividend,?___lwmod
  1978  0014E6  C183  F183         	movff	___lwmod@dividend+1,?___lwmod+1
  1979                           
  1980                           ; BSR set to: 1
  1981  0014EA  0012               	return	
  1982  0014EC                     __end_of___lwmod:
  1983                           	opt stack 0
  1984                           tblptru	equ	0xFF8
  1985                           postinc0	equ	0xFEE
  1986                           wreg	equ	0xFE8
  1987                           indf1	equ	0xFE7
  1988                           fsr1h	equ	0xFE2
  1989                           fsr1l	equ	0xFE1
  1990                           indf2	equ	0xFDF
  1991                           postinc2	equ	0xFDE
  1992                           postdec2	equ	0xFDD
  1993                           fsr2h	equ	0xFDA
  1994                           fsr2l	equ	0xFD9
  1995                           status	equ	0xFD8
  1996                           
  1997 ;; *************** function _FromMainHigh_sendmsg *****************
  1998 ;; Defined at:
  1999 ;;		line 174 in file "../src/messages.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;  length          1    wreg     unsigned char 
  2002 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2003 ;;  data            2   23[BANK1 ] PTR void 
  2004 ;;		 -> main@t1thread_data(2), 
  2005 ;; Auto vars:     Size  Location     Type
  2006 ;;  length          1   25[BANK1 ] unsigned char 
  2007 ;; Return value:  Size  Location     Type
  2008 ;;                  1    wreg      char 
  2009 ;; Registers used:
  2010 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2011 ;; Tracked objects:
  2012 ;;		On entry : 0/0
  2013 ;;		On exit  : 0/0
  2014 ;;		Unchanged: 0/0
  2015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2016 ;;      Params:         0       0       3       0       0
  2017 ;;      Locals:         0       0       1       0       0
  2018 ;;      Temps:          0       0       0       0       0
  2019 ;;      Totals:         0       0       4       0       0
  2020 ;;Total ram usage:        4 bytes
  2021 ;; Hardware stack levels used:    1
  2022 ;; Hardware stack levels required when called:   12
  2023 ;; This function calls:
  2024 ;;		_send_msg
  2025 ;; This function is called by:
  2026 ;;		_timer1_lthread
  2027 ;; This function uses a non-reentrant model
  2028 ;;
  2029                           
  2030                           	psect	text5
  2031  001D28                     __ptext5:
  2032                           	opt stack 0
  2033  001D28                     _FromMainHigh_sendmsg:
  2034                           	opt stack 16
  2035                           
  2036                           ; BSR set to: 1
  2037                           ;incstack = 0
  2038                           ;FromMainHigh_sendmsg@length stored from wreg
  2039  001D28  CFE8 F19B          	movff	wreg,FromMainHigh_sendmsg@length
  2040                           
  2041                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2042  001D2C  0102               	movlb	2	; () banked
  2043  001D2E  0E02               	movlw	high _FromMainHigh_MQ
  2044  001D30  0101               	movlb	1	; () banked
  2045  001D32  0101               	movlb	1	; () banked
  2046  001D34  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  2047  001D36  0102               	movlb	2	; () banked
  2048  001D38  0E00               	movlw	low _FromMainHigh_MQ
  2049  001D3A  0101               	movlb	1	; () banked
  2050  001D3C  0101               	movlb	1	; () banked
  2051  001D3E  6F8C               	movwf	send_msg@qptr& (0+255),b
  2052  001D40  C19B  F18E         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2053  001D44  C198  F18F         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2054  001D48  0101               	movlb	1	; () banked
  2055  001D4A  0101               	movlb	1	; () banked
  2056  001D4C  C19A  F191         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2057  001D50  0101               	movlb	1	; () banked
  2058  001D52  0101               	movlb	1	; () banked
  2059  001D54  C199  F190         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2060  001D58  EC65  F007         	call	_send_msg	;wreg free
  2061  001D5C  0012               	return	
  2062  001D5E                     __end_of_FromMainHigh_sendmsg:
  2063                           	opt stack 0
  2064                           tblptru	equ	0xFF8
  2065                           postinc0	equ	0xFEE
  2066                           wreg	equ	0xFE8
  2067                           indf1	equ	0xFE7
  2068                           fsr1h	equ	0xFE2
  2069                           fsr1l	equ	0xFE1
  2070                           indf2	equ	0xFDF
  2071                           postinc2	equ	0xFDE
  2072                           postdec2	equ	0xFDD
  2073                           fsr2h	equ	0xFDA
  2074                           fsr2l	equ	0xFD9
  2075                           status	equ	0xFD8
  2076                           
  2077 ;; *************** function _timer0_lthread *****************
  2078 ;; Defined at:
  2079 ;;		line 9 in file "../src/timer0_thread.c"
  2080 ;; Parameters:    Size  Location     Type
  2081 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2082 ;;		 -> main@t0thread_data(2), 
  2083 ;;  msgtype         2    2[BANK1 ] int 
  2084 ;;  length          2    4[BANK1 ] int 
  2085 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2086 ;;		 -> main@msgbuffer(11), 
  2087 ;; Auto vars:     Size  Location     Type
  2088 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2089 ;;		 -> main@msgbuffer(11), 
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  2    0[BANK1 ] int 
  2092 ;; Registers used:
  2093 ;;		wreg, status,2, status,0
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2099 ;;      Params:         0       0       8       0       0
  2100 ;;      Locals:         0       0       2       0       0
  2101 ;;      Temps:          0       0       0       0       0
  2102 ;;      Totals:         0       0      10       0       0
  2103 ;;Total ram usage:       10 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:   10
  2106 ;; This function calls:
  2107 ;;		Nothing
  2108 ;; This function is called by:
  2109 ;;		_main
  2110 ;; This function uses a non-reentrant model
  2111 ;;
  2112                           
  2113                           	psect	text6
  2114  001F50                     __ptext6:
  2115                           	opt stack 0
  2116  001F50                     _timer0_lthread:
  2117                           	opt stack 19
  2118                           
  2119                           ;timer0_thread.c: 10: unsigned int *msgval;
  2120                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2121                           
  2122                           ;incstack = 0
  2123  001F50  0101               	movlb	1	; () banked
  2124  001F52  0101               	movlb	1	; () banked
  2125  001F54  C189  F18B         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2126  001F58  0101               	movlb	1	; () banked
  2127  001F5A  0101               	movlb	1	; () banked
  2128  001F5C  C188  F18A         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2129                           
  2130                           ; BSR set to: 1
  2131  001F60  0012               	return	
  2132  001F62                     __end_of_timer0_lthread:
  2133                           	opt stack 0
  2134                           tblptru	equ	0xFF8
  2135                           postinc0	equ	0xFEE
  2136                           wreg	equ	0xFE8
  2137                           indf1	equ	0xFE7
  2138                           fsr1h	equ	0xFE2
  2139                           fsr1l	equ	0xFE1
  2140                           indf2	equ	0xFDF
  2141                           postinc2	equ	0xFDE
  2142                           postdec2	equ	0xFDD
  2143                           fsr2h	equ	0xFDA
  2144                           fsr2l	equ	0xFD9
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function _init_uart_recv *****************
  2148 ;; Defined at:
  2149 ;;		line 252 in file "../src/my_uart.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2152 ;;		 -> main@uc(23), 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;		None
  2155 ;; Return value:  Size  Location     Type
  2156 ;;		None               void
  2157 ;; Registers used:
  2158 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2159 ;; Tracked objects:
  2160 ;;		On entry : 0/0
  2161 ;;		On exit  : 0/0
  2162 ;;		Unchanged: 0/0
  2163 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2164 ;;      Params:         0       0       2       0       0
  2165 ;;      Locals:         0       0       0       0       0
  2166 ;;      Temps:          0       0       0       0       0
  2167 ;;      Totals:         0       0       2       0       0
  2168 ;;Total ram usage:        2 bytes
  2169 ;; Hardware stack levels used:    1
  2170 ;; Hardware stack levels required when called:   10
  2171 ;; This function calls:
  2172 ;;		Nothing
  2173 ;; This function is called by:
  2174 ;;		_main
  2175 ;; This function uses a non-reentrant model
  2176 ;;
  2177                           
  2178                           	psect	text7
  2179  001E66                     __ptext7:
  2180                           	opt stack 0
  2181  001E66                     _init_uart_recv:
  2182                           	opt stack 19
  2183                           
  2184                           ;my_uart.c: 253: uc_ptr = uc;
  2185                           
  2186                           ; BSR set to: 1
  2187                           ;incstack = 0
  2188  001E66  0101               	movlb	1	; () banked
  2189  001E68  C183  F066         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2190  001E6C  0101               	movlb	1	; () banked
  2191  001E6E  C182  F065         	movff	init_uart_recv@uc,_uc_ptr
  2192                           
  2193                           ; BSR set to: 1
  2194                           ;my_uart.c: 254: uc_ptr->Tx_buflen = 0;
  2195  001E72  EE20 F014          	lfsr	2,20
  2196  001E76  5065               	movf	_uc_ptr,w,c
  2197  001E78  26D9               	addwf	fsr2l,f,c
  2198  001E7A  5066               	movf	_uc_ptr+1,w,c
  2199  001E7C  22DA               	addwfc	fsr2h,f,c
  2200  001E7E  0E00               	movlw	0
  2201  001E80  6EDF               	movwf	indf2,c
  2202                           
  2203                           ; BSR set to: 1
  2204                           ;my_uart.c: 255: uc_ptr->Rx_buflen = 0;
  2205  001E82  EE20 F015          	lfsr	2,21
  2206  001E86  5065               	movf	_uc_ptr,w,c
  2207  001E88  26D9               	addwf	fsr2l,f,c
  2208  001E8A  5066               	movf	_uc_ptr+1,w,c
  2209  001E8C  22DA               	addwfc	fsr2h,f,c
  2210  001E8E  0E00               	movlw	0
  2211  001E90  6EDF               	movwf	indf2,c
  2212                           
  2213                           ; BSR set to: 1
  2214  001E92  0012               	return	
  2215  001E94                     __end_of_init_uart_recv:
  2216                           	opt stack 0
  2217                           tblptru	equ	0xFF8
  2218                           postinc0	equ	0xFEE
  2219                           wreg	equ	0xFE8
  2220                           indf1	equ	0xFE7
  2221                           fsr1h	equ	0xFE2
  2222                           fsr1l	equ	0xFE1
  2223                           indf2	equ	0xFDF
  2224                           postinc2	equ	0xFDE
  2225                           postdec2	equ	0xFDD
  2226                           fsr2h	equ	0xFDA
  2227                           fsr2l	equ	0xFD9
  2228                           status	equ	0xFD8
  2229                           
  2230 ;; *************** function _init_timer1_lthread *****************
  2231 ;; Defined at:
  2232 ;;		line 6 in file "../src/timer1_thread.c"
  2233 ;; Parameters:    Size  Location     Type
  2234 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2235 ;;		 -> main@t1thread_data(2), 
  2236 ;; Auto vars:     Size  Location     Type
  2237 ;;		None
  2238 ;; Return value:  Size  Location     Type
  2239 ;;		None               void
  2240 ;; Registers used:
  2241 ;;		wreg, fsr2l, fsr2h
  2242 ;; Tracked objects:
  2243 ;;		On entry : 0/0
  2244 ;;		On exit  : 0/0
  2245 ;;		Unchanged: 0/0
  2246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2247 ;;      Params:         0       0       2       0       0
  2248 ;;      Locals:         0       0       0       0       0
  2249 ;;      Temps:          0       0       0       0       0
  2250 ;;      Totals:         0       0       2       0       0
  2251 ;;Total ram usage:        2 bytes
  2252 ;; Hardware stack levels used:    1
  2253 ;; Hardware stack levels required when called:   10
  2254 ;; This function calls:
  2255 ;;		Nothing
  2256 ;; This function is called by:
  2257 ;;		_main
  2258 ;; This function uses a non-reentrant model
  2259 ;;
  2260                           
  2261                           	psect	text8
  2262  001F62                     __ptext8:
  2263                           	opt stack 0
  2264  001F62                     _init_timer1_lthread:
  2265                           	opt stack 19
  2266                           
  2267                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2268                           
  2269                           ; BSR set to: 1
  2270                           ;incstack = 0
  2271  001F62  C182  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2272  001F66  C183  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2273  001F6A  0E00               	movlw	0
  2274  001F6C  6EDE               	movwf	postinc2,c
  2275  001F6E  0E00               	movlw	0
  2276  001F70  6EDD               	movwf	postdec2,c
  2277  001F72  0012               	return	
  2278  001F74                     __end_of_init_timer1_lthread:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           postinc0	equ	0xFEE
  2282                           wreg	equ	0xFE8
  2283                           indf1	equ	0xFE7
  2284                           fsr1h	equ	0xFE2
  2285                           fsr1l	equ	0xFE1
  2286                           indf2	equ	0xFDF
  2287                           postinc2	equ	0xFDE
  2288                           postdec2	equ	0xFDD
  2289                           fsr2h	equ	0xFDA
  2290                           fsr2l	equ	0xFD9
  2291                           status	equ	0xFD8
  2292                           
  2293 ;; *************** function _init_queues *****************
  2294 ;; Defined at:
  2295 ;;		line 194 in file "../src/messages.c"
  2296 ;; Parameters:    Size  Location     Type
  2297 ;;		None
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;		None
  2300 ;; Return value:  Size  Location     Type
  2301 ;;		None               void
  2302 ;; Registers used:
  2303 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2304 ;; Tracked objects:
  2305 ;;		On entry : 0/0
  2306 ;;		On exit  : 0/0
  2307 ;;		Unchanged: 0/0
  2308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2309 ;;      Params:         0       0       0       0       0
  2310 ;;      Locals:         0       0       0       0       0
  2311 ;;      Temps:          0       0       1       0       0
  2312 ;;      Totals:         0       0       1       0       0
  2313 ;;Total ram usage:        1 bytes
  2314 ;; Hardware stack levels used:    1
  2315 ;; Hardware stack levels required when called:   11
  2316 ;; This function calls:
  2317 ;;		_init_queue
  2318 ;; This function is called by:
  2319 ;;		_main
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text9
  2324  001862                     __ptext9:
  2325                           	opt stack 0
  2326  001862                     _init_queues:
  2327                           	opt stack 18
  2328                           
  2329                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2330                           
  2331                           ;incstack = 0
  2332  001862  0101               	movlb	1	; () banked
  2333  001864  6F86               	movwf	??_init_queues& (0+255),b
  2334  001866  0E00               	movlw	0
  2335  001868  6E58               	movwf	_MQ_Main_Willing_to_block,c
  2336  00186A  0101               	movlb	1	; () banked
  2337  00186C  5186               	movf	??_init_queues& (0+255),w,b
  2338                           
  2339                           ; BSR set to: 1
  2340                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2341  00186E  0101               	movlb	1	; () banked
  2342  001870  0E01               	movlw	high _ToMainLow_MQ
  2343  001872  0101               	movlb	1	; () banked
  2344  001874  0101               	movlb	1	; () banked
  2345  001876  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2346  001878  0101               	movlb	1	; () banked
  2347  00187A  0E4C               	movlw	low _ToMainLow_MQ
  2348  00187C  0101               	movlb	1	; () banked
  2349  00187E  0101               	movlb	1	; () banked
  2350  001880  6F82               	movwf	init_queue@qptr& (0+255),b
  2351  001882  ECBB  F00B         	call	_init_queue	;wreg free
  2352                           
  2353                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2354  001886  0100               	movlb	0	; () banked
  2355  001888  0E00               	movlw	high _ToMainHigh_MQ
  2356  00188A  0101               	movlb	1	; () banked
  2357  00188C  0101               	movlb	1	; () banked
  2358  00188E  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2359  001890  0100               	movlb	0	; () banked
  2360  001892  0E80               	movlw	low _ToMainHigh_MQ
  2361  001894  0101               	movlb	1	; () banked
  2362  001896  0101               	movlb	1	; () banked
  2363  001898  6F82               	movwf	init_queue@qptr& (0+255),b
  2364  00189A  ECBB  F00B         	call	_init_queue	;wreg free
  2365                           
  2366                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2367  00189E  0101               	movlb	1	; () banked
  2368  0018A0  0E01               	movlw	high _FromMainLow_MQ
  2369  0018A2  0101               	movlb	1	; () banked
  2370  0018A4  0101               	movlb	1	; () banked
  2371  0018A6  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2372  0018A8  0101               	movlb	1	; () banked
  2373  0018AA  0E16               	movlw	low _FromMainLow_MQ
  2374  0018AC  0101               	movlb	1	; () banked
  2375  0018AE  0101               	movlb	1	; () banked
  2376  0018B0  6F82               	movwf	init_queue@qptr& (0+255),b
  2377  0018B2  ECBB  F00B         	call	_init_queue	;wreg free
  2378                           
  2379                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2380  0018B6  0102               	movlb	2	; () banked
  2381  0018B8  0E02               	movlw	high _FromMainHigh_MQ
  2382  0018BA  0101               	movlb	1	; () banked
  2383  0018BC  0101               	movlb	1	; () banked
  2384  0018BE  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2385  0018C0  0102               	movlb	2	; () banked
  2386  0018C2  0E00               	movlw	low _FromMainHigh_MQ
  2387  0018C4  0101               	movlb	1	; () banked
  2388  0018C6  0101               	movlb	1	; () banked
  2389  0018C8  6F82               	movwf	init_queue@qptr& (0+255),b
  2390  0018CA  ECBB  F00B         	call	_init_queue	;wreg free
  2391  0018CE  0012               	return	
  2392  0018D0                     __end_of_init_queues:
  2393                           	opt stack 0
  2394                           tblptru	equ	0xFF8
  2395                           postinc0	equ	0xFEE
  2396                           wreg	equ	0xFE8
  2397                           indf1	equ	0xFE7
  2398                           fsr1h	equ	0xFE2
  2399                           fsr1l	equ	0xFE1
  2400                           indf2	equ	0xFDF
  2401                           postinc2	equ	0xFDE
  2402                           postdec2	equ	0xFDD
  2403                           fsr2h	equ	0xFDA
  2404                           fsr2l	equ	0xFD9
  2405                           status	equ	0xFD8
  2406                           
  2407 ;; *************** function _init_queue *****************
  2408 ;; Defined at:
  2409 ;;		line 14 in file "../src/messages.c"
  2410 ;; Parameters:    Size  Location     Type
  2411 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2412 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2413 ;; Auto vars:     Size  Location     Type
  2414 ;;  i               1    3[BANK1 ] unsigned char 
  2415 ;; Return value:  Size  Location     Type
  2416 ;;		None               void
  2417 ;; Registers used:
  2418 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2419 ;; Tracked objects:
  2420 ;;		On entry : 0/0
  2421 ;;		On exit  : 0/0
  2422 ;;		Unchanged: 0/0
  2423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2424 ;;      Params:         0       0       2       0       0
  2425 ;;      Locals:         0       0       1       0       0
  2426 ;;      Temps:          0       0       1       0       0
  2427 ;;      Totals:         0       0       4       0       0
  2428 ;;Total ram usage:        4 bytes
  2429 ;; Hardware stack levels used:    1
  2430 ;; Hardware stack levels required when called:   10
  2431 ;; This function calls:
  2432 ;;		Nothing
  2433 ;; This function is called by:
  2434 ;;		_init_queues
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           
  2438                           	psect	text10
  2439  001776                     __ptext10:
  2440                           	opt stack 0
  2441  001776                     _init_queue:
  2442                           	opt stack 18
  2443                           
  2444                           ;messages.c: 15: unsigned char i;
  2445                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2446                           
  2447                           ;incstack = 0
  2448  001776  0101               	movlb	1	; () banked
  2449  001778  EE20 F034          	lfsr	2,52
  2450  00177C  0101               	movlb	1	; () banked
  2451  00177E  5182               	movf	init_queue@qptr& (0+255),w,b
  2452  001780  26D9               	addwf	fsr2l,f,c
  2453  001782  0101               	movlb	1	; () banked
  2454  001784  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  2455  001786  22DA               	addwfc	fsr2h,f,c
  2456  001788  0E00               	movlw	0
  2457  00178A  6EDF               	movwf	indf2,c
  2458                           
  2459                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2460  00178C  0101               	movlb	1	; () banked
  2461  00178E  EE20 F035          	lfsr	2,53
  2462  001792  0101               	movlb	1	; () banked
  2463  001794  5182               	movf	init_queue@qptr& (0+255),w,b
  2464  001796  26D9               	addwf	fsr2l,f,c
  2465  001798  0101               	movlb	1	; () banked
  2466  00179A  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  2467  00179C  22DA               	addwfc	fsr2h,f,c
  2468  00179E  0E00               	movlw	0
  2469  0017A0  6EDF               	movwf	indf2,c
  2470                           
  2471                           ; BSR set to: 1
  2472                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2473  0017A2  0101               	movlb	1	; () banked
  2474  0017A4  6F84               	movwf	??_init_queue& (0+255),b
  2475  0017A6  0E00               	movlw	0
  2476  0017A8  0101               	movlb	1	; () banked
  2477  0017AA  0101               	movlb	1	; () banked
  2478  0017AC  6F85               	movwf	init_queue@i& (0+255),b
  2479  0017AE  0101               	movlb	1	; () banked
  2480  0017B0  5184               	movf	??_init_queue& (0+255),w,b
  2481                           
  2482                           ; BSR set to: 1
  2483  0017B2  0E03               	movlw	3
  2484  0017B4  0101               	movlb	1	; () banked
  2485  0017B6  0101               	movlb	1	; () banked
  2486  0017B8  6585               	cpfsgt	init_queue@i& (0+255),b
  2487  0017BA  D001               	goto	l3596
  2488  0017BC  0012               	return	
  2489  0017BE                     l3596:
  2490                           
  2491                           ; BSR set to: 1
  2492                           ;messages.c: 20: qptr->queue[i].full = 0;
  2493  0017BE  0101               	movlb	1	; () banked
  2494  0017C0  0101               	movlb	1	; () banked
  2495  0017C2  5185               	movf	init_queue@i& (0+255),w,b
  2496  0017C4  0D0D               	mullw	13
  2497  0017C6  50F3               	movf	prodl,w,c
  2498  0017C8  0101               	movlb	1	; () banked
  2499  0017CA  0101               	movlb	1	; () banked
  2500  0017CC  2582               	addwf	init_queue@qptr& (0+255),w,b
  2501  0017CE  6ED9               	movwf	fsr2l,c
  2502  0017D0  50F4               	movf	prodh,w,c
  2503  0017D2  0101               	movlb	1	; () banked
  2504  0017D4  0101               	movlb	1	; () banked
  2505  0017D6  2183               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2506  0017D8  6EDA               	movwf	fsr2h,c
  2507  0017DA  0E00               	movlw	0
  2508  0017DC  6EDF               	movwf	indf2,c
  2509                           
  2510                           ; BSR set to: 1
  2511  0017DE  0101               	movlb	1	; () banked
  2512  0017E0  0101               	movlb	1	; () banked
  2513  0017E2  2B85               	incf	init_queue@i& (0+255),f,b
  2514                           
  2515                           ; BSR set to: 1
  2516  0017E4  0E03               	movlw	3
  2517  0017E6  0101               	movlb	1	; () banked
  2518  0017E8  0101               	movlb	1	; () banked
  2519  0017EA  6585               	cpfsgt	init_queue@i& (0+255),b
  2520  0017EC  D7E8               	goto	l3596
  2521  0017EE  0012               	return	
  2522  0017F0                     __end_of_init_queue:
  2523                           	opt stack 0
  2524                           tblptru	equ	0xFF8
  2525                           prodh	equ	0xFF4
  2526                           prodl	equ	0xFF3
  2527                           postinc0	equ	0xFEE
  2528                           wreg	equ	0xFE8
  2529                           indf1	equ	0xFE7
  2530                           fsr1h	equ	0xFE2
  2531                           fsr1l	equ	0xFE1
  2532                           indf2	equ	0xFDF
  2533                           postinc2	equ	0xFDE
  2534                           postdec2	equ	0xFDD
  2535                           fsr2h	equ	0xFDA
  2536                           fsr2l	equ	0xFD9
  2537                           status	equ	0xFD8
  2538                           
  2539 ;; *************** function _init_i2c *****************
  2540 ;; Defined at:
  2541 ;;		line 304 in file "../src/my_i2c.c"
  2542 ;; Parameters:    Size  Location     Type
  2543 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2544 ;;		 -> main@ic(35), 
  2545 ;; Auto vars:     Size  Location     Type
  2546 ;;		None
  2547 ;; Return value:  Size  Location     Type
  2548 ;;		None               void
  2549 ;; Registers used:
  2550 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2551 ;; Tracked objects:
  2552 ;;		On entry : 0/0
  2553 ;;		On exit  : 0/0
  2554 ;;		Unchanged: 0/0
  2555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2556 ;;      Params:         0       0       2       0       0
  2557 ;;      Locals:         0       0       0       0       0
  2558 ;;      Temps:          0       0       0       0       0
  2559 ;;      Totals:         0       0       2       0       0
  2560 ;;Total ram usage:        2 bytes
  2561 ;; Hardware stack levels used:    1
  2562 ;; Hardware stack levels required when called:   10
  2563 ;; This function calls:
  2564 ;;		Nothing
  2565 ;; This function is called by:
  2566 ;;		_main
  2567 ;; This function uses a non-reentrant model
  2568 ;;
  2569                           
  2570                           	psect	text11
  2571  0015F8                     __ptext11:
  2572                           	opt stack 0
  2573  0015F8                     _init_i2c:
  2574                           	opt stack 19
  2575                           
  2576                           ;my_i2c.c: 305: ic_ptr = ic;
  2577                           
  2578                           ; BSR set to: 1
  2579                           ;incstack = 0
  2580  0015F8  0101               	movlb	1	; () banked
  2581  0015FA  0100               	movlb	0	; () banked
  2582  0015FC  C183  F0E9         	movff	init_i2c@ic+1,_ic_ptr+1
  2583  001600  0101               	movlb	1	; () banked
  2584  001602  0100               	movlb	0	; () banked
  2585  001604  C182  F0E8         	movff	init_i2c@ic,_ic_ptr
  2586                           
  2587                           ; BSR set to: 0
  2588                           ;my_i2c.c: 306: ic_ptr->buflen = 0;
  2589  001608  0100               	movlb	0	; () banked
  2590  00160A  EE20 F00A          	lfsr	2,10
  2591  00160E  0100               	movlb	0	; () banked
  2592  001610  51E8               	movf	_ic_ptr& (0+255),w,b
  2593  001612  26D9               	addwf	fsr2l,f,c
  2594  001614  0100               	movlb	0	; () banked
  2595  001616  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2596  001618  22DA               	addwfc	fsr2h,f,c
  2597  00161A  0E00               	movlw	0
  2598  00161C  6EDF               	movwf	indf2,c
  2599                           
  2600                           ; BSR set to: 0
  2601                           ;my_i2c.c: 307: ic_ptr->event_count = 0;
  2602  00161E  0100               	movlb	0	; () banked
  2603  001620  EE20 F00B          	lfsr	2,11
  2604  001624  0100               	movlb	0	; () banked
  2605  001626  51E8               	movf	_ic_ptr& (0+255),w,b
  2606  001628  26D9               	addwf	fsr2l,f,c
  2607  00162A  0100               	movlb	0	; () banked
  2608  00162C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2609  00162E  22DA               	addwfc	fsr2h,f,c
  2610  001630  0E00               	movlw	0
  2611  001632  6EDF               	movwf	indf2,c
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;my_i2c.c: 308: ic_ptr->status = 0x3;
  2615  001634  0100               	movlb	0	; () banked
  2616  001636  EE20 F00C          	lfsr	2,12
  2617  00163A  0100               	movlb	0	; () banked
  2618  00163C  51E8               	movf	_ic_ptr& (0+255),w,b
  2619  00163E  26D9               	addwf	fsr2l,f,c
  2620  001640  0100               	movlb	0	; () banked
  2621  001642  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2622  001644  22DA               	addwfc	fsr2h,f,c
  2623  001646  0E03               	movlw	3
  2624  001648  6EDF               	movwf	indf2,c
  2625                           
  2626                           ; BSR set to: 0
  2627                           ;my_i2c.c: 309: ic_ptr->error_count = 0;
  2628  00164A  0100               	movlb	0	; () banked
  2629  00164C  EE20 F00E          	lfsr	2,14
  2630  001650  0100               	movlb	0	; () banked
  2631  001652  51E8               	movf	_ic_ptr& (0+255),w,b
  2632  001654  26D9               	addwf	fsr2l,f,c
  2633  001656  0100               	movlb	0	; () banked
  2634  001658  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2635  00165A  22DA               	addwfc	fsr2h,f,c
  2636  00165C  0E00               	movlw	0
  2637  00165E  6EDF               	movwf	indf2,c
  2638                           
  2639                           ; BSR set to: 0
  2640                           ;my_i2c.c: 310: ic_ptr->outbufind = 0;
  2641  001660  0100               	movlb	0	; () banked
  2642  001662  EE20 F01A          	lfsr	2,26
  2643  001666  0100               	movlb	0	; () banked
  2644  001668  51E8               	movf	_ic_ptr& (0+255),w,b
  2645  00166A  26D9               	addwf	fsr2l,f,c
  2646  00166C  0100               	movlb	0	; () banked
  2647  00166E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2648  001670  22DA               	addwfc	fsr2h,f,c
  2649  001672  0E00               	movlw	0
  2650  001674  6EDF               	movwf	indf2,c
  2651                           
  2652                           ; BSR set to: 0
  2653  001676  0012               	return	
  2654  001678                     __end_of_init_i2c:
  2655                           	opt stack 0
  2656                           tblptru	equ	0xFF8
  2657                           prodh	equ	0xFF4
  2658                           prodl	equ	0xFF3
  2659                           postinc0	equ	0xFEE
  2660                           wreg	equ	0xFE8
  2661                           indf1	equ	0xFE7
  2662                           fsr1h	equ	0xFE2
  2663                           fsr1l	equ	0xFE1
  2664                           indf2	equ	0xFDF
  2665                           postinc2	equ	0xFDE
  2666                           postdec2	equ	0xFDD
  2667                           fsr2h	equ	0xFDA
  2668                           fsr2l	equ	0xFD9
  2669                           status	equ	0xFD8
  2670                           
  2671 ;; *************** function _i2c_lthread *****************
  2672 ;; Defined at:
  2673 ;;		line 12 in file "../src/i2c_thread.c"
  2674 ;; Parameters:    Size  Location     Type
  2675 ;;  i2cptr          2   26[BANK1 ] PTR struct __i2c_thread_
  2676 ;;		 -> main@i2cthread_data(2), 
  2677 ;;  msgtype         2   28[BANK1 ] int 
  2678 ;;  length          2   30[BANK1 ] int 
  2679 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2680 ;;		 -> main@msgbuffer(11), 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;		None
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  2   26[BANK1 ] int 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2692 ;;      Params:         0       0       8       0       0
  2693 ;;      Locals:         0       0       0       0       0
  2694 ;;      Temps:          0       0       1       0       0
  2695 ;;      Totals:         0       0       9       0       0
  2696 ;;Total ram usage:        9 bytes
  2697 ;; Hardware stack levels used:    1
  2698 ;; Hardware stack levels required when called:   13
  2699 ;; This function calls:
  2700 ;;		_ToMainHigh_sendmsg
  2701 ;;		_i2c_master_recv
  2702 ;;		_i2c_master_send
  2703 ;; This function is called by:
  2704 ;;		_main
  2705 ;; This function uses a non-reentrant model
  2706 ;;
  2707                           
  2708                           	psect	text12
  2709  0011B4                     __ptext12:
  2710                           	opt stack 0
  2711  0011B4                     _i2c_lthread:
  2712                           	opt stack 16
  2713                           
  2714                           ;i2c_thread.c: 16: if (msgtype == 40) {
  2715                           
  2716                           ; BSR set to: 0
  2717                           ;incstack = 0
  2718  0011B4  0101               	movlb	1	; () banked
  2719  0011B6  0101               	movlb	1	; () banked
  2720  0011B8  519E               	movf	i2c_lthread@msgtype& (0+255),w,b
  2721  0011BA  0A28               	xorlw	40
  2722  0011BC  119F               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  2723  0011BE  A4D8               	btfss	status,2,c
  2724  0011C0  D038               	goto	l3556
  2725                           
  2726                           ; BSR set to: 1
  2727                           ;i2c_thread.c: 18: { LATBbits.LATB1 = 1; };
  2728  0011C2  828A               	bsf	3978,1,c	;volatile
  2729                           
  2730                           ;i2c_thread.c: 19: { LATBbits.LATB1 = 0; };
  2731  0011C4  928A               	bcf	3978,1,c	;volatile
  2732                           
  2733                           ; BSR set to: 1
  2734                           ;i2c_thread.c: 22: if (i2c_master_send(length, msgbuffer) == 0) {
  2735  0011C6  0101               	movlb	1	; () banked
  2736  0011C8  0101               	movlb	1	; () banked
  2737  0011CA  C1A3  F183         	movff	i2c_lthread@msgbuffer+1,i2c_master_send@msg+1
  2738  0011CE  0101               	movlb	1	; () banked
  2739  0011D0  0101               	movlb	1	; () banked
  2740  0011D2  C1A2  F182         	movff	i2c_lthread@msgbuffer,i2c_master_send@msg
  2741  0011D6  0101               	movlb	1	; () banked
  2742  0011D8  0101               	movlb	1	; () banked
  2743  0011DA  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2744  0011DC  EC5D  F005         	call	_i2c_master_send
  2745  0011E0  0900               	iorlw	0
  2746  0011E2  A4D8               	btfss	status,2,c
  2747  0011E4  D010               	goto	l3554
  2748                           
  2749                           ;i2c_thread.c: 23: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  2750  0011E6  C19E  F198         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  2751  0011EA  0101               	movlb	1	; () banked
  2752  0011EC  0101               	movlb	1	; () banked
  2753  0011EE  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2754  0011F2  0101               	movlb	1	; () banked
  2755  0011F4  0101               	movlb	1	; () banked
  2756  0011F6  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2757  0011FA  0101               	movlb	1	; () banked
  2758  0011FC  0101               	movlb	1	; () banked
  2759  0011FE  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2760  001200  ECAF  F00E         	call	_ToMainHigh_sendmsg
  2761                           
  2762                           ;i2c_thread.c: 24: } else {
  2763  001204  0012               	return	
  2764  001206                     l3554:
  2765                           
  2766                           ;i2c_thread.c: 26: ToMainHigh_sendmsg(length, 39, (void *) msgbuffer);
  2767  001206  0101               	movlb	1	; () banked
  2768  001208  6FA4               	movwf	??_i2c_lthread& (0+255),b
  2769  00120A  0E27               	movlw	39
  2770  00120C  0101               	movlb	1	; () banked
  2771  00120E  0101               	movlb	1	; () banked
  2772  001210  6F98               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2773  001212  0101               	movlb	1	; () banked
  2774  001214  51A4               	movf	??_i2c_lthread& (0+255),w,b
  2775  001216  0101               	movlb	1	; () banked
  2776  001218  0101               	movlb	1	; () banked
  2777  00121A  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2778  00121E  0101               	movlb	1	; () banked
  2779  001220  0101               	movlb	1	; () banked
  2780  001222  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2781  001226  0101               	movlb	1	; () banked
  2782  001228  0101               	movlb	1	; () banked
  2783  00122A  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2784  00122C  ECAF  F00E         	call	_ToMainHigh_sendmsg
  2785  001230  0012               	return	
  2786  001232                     l3556:
  2787  001232  0101               	movlb	1	; () banked
  2788  001234  0101               	movlb	1	; () banked
  2789  001236  519E               	movf	i2c_lthread@msgtype& (0+255),w,b
  2790  001238  0A27               	xorlw	39
  2791  00123A  119F               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  2792  00123C  A4D8               	btfss	status,2,c
  2793  00123E  0012               	return	
  2794                           
  2795                           ; BSR set to: 1
  2796                           ;i2c_thread.c: 31: if (msgbuffer[0] == 0xaa) {
  2797  001240  0EAA               	movlw	170
  2798  001242  C1A2  FFD9         	movff	i2c_lthread@msgbuffer,fsr2l
  2799  001246  C1A3  FFDA         	movff	i2c_lthread@msgbuffer+1,fsr2h
  2800  00124A  62DF               	cpfseq	indf2,c
  2801  00124C  D007               	goto	l3562
  2802                           
  2803                           ; BSR set to: 1
  2804                           ;i2c_thread.c: 32: length = 5;
  2805  00124E  0E00               	movlw	0
  2806  001250  0101               	movlb	1	; () banked
  2807  001252  0101               	movlb	1	; () banked
  2808  001254  6FA1               	movwf	(i2c_lthread@length+1)& (0+255),b
  2809  001256  0E05               	movlw	5
  2810  001258  0101               	movlb	1	; () banked
  2811  00125A  6FA0               	movwf	i2c_lthread@length& (0+255),b
  2812  00125C                     l3562:
  2813                           
  2814                           ; BSR set to: 1
  2815                           ;i2c_thread.c: 33: }
  2816                           ;i2c_thread.c: 35: if (i2c_master_recv(length) == 0) {
  2817  00125C  0101               	movlb	1	; () banked
  2818  00125E  0101               	movlb	1	; () banked
  2819  001260  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2820  001262  EC69  F008         	call	_i2c_master_recv
  2821  001266  0900               	iorlw	0
  2822  001268  A4D8               	btfss	status,2,c
  2823  00126A  0012               	return	
  2824                           
  2825                           ;i2c_thread.c: 36: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  2826  00126C  C19E  F198         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  2827  001270  0101               	movlb	1	; () banked
  2828  001272  0101               	movlb	1	; () banked
  2829  001274  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2830  001278  0101               	movlb	1	; () banked
  2831  00127A  0101               	movlb	1	; () banked
  2832  00127C  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2833  001280  0101               	movlb	1	; () banked
  2834  001282  0101               	movlb	1	; () banked
  2835  001284  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2836  001286  ECAF  F00E         	call	_ToMainHigh_sendmsg
  2837  00128A  0012               	return	
  2838  00128C                     __end_of_i2c_lthread:
  2839                           	opt stack 0
  2840                           tblptru	equ	0xFF8
  2841                           prodh	equ	0xFF4
  2842                           prodl	equ	0xFF3
  2843                           postinc0	equ	0xFEE
  2844                           wreg	equ	0xFE8
  2845                           indf1	equ	0xFE7
  2846                           fsr1h	equ	0xFE2
  2847                           fsr1l	equ	0xFE1
  2848                           indf2	equ	0xFDF
  2849                           postinc2	equ	0xFDE
  2850                           postdec2	equ	0xFDD
  2851                           fsr2h	equ	0xFDA
  2852                           fsr2l	equ	0xFD9
  2853                           status	equ	0xFD8
  2854                           
  2855 ;; *************** function _i2c_master_send *****************
  2856 ;; Defined at:
  2857 ;;		line 77 in file "../src/my_i2c.c"
  2858 ;; Parameters:    Size  Location     Type
  2859 ;;  length          1    wreg     unsigned char 
  2860 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  2861 ;;		 -> main@msgbuffer(11), 
  2862 ;; Auto vars:     Size  Location     Type
  2863 ;;  length          1    8[BANK1 ] unsigned char 
  2864 ;;  i               2    9[BANK1 ] int 
  2865 ;; Return value:  Size  Location     Type
  2866 ;;                  1    wreg      unsigned char 
  2867 ;; Registers used:
  2868 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2869 ;; Tracked objects:
  2870 ;;		On entry : 0/0
  2871 ;;		On exit  : 0/0
  2872 ;;		Unchanged: 0/0
  2873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2874 ;;      Params:         0       0       2       0       0
  2875 ;;      Locals:         0       0       3       0       0
  2876 ;;      Temps:          0       0       6       0       0
  2877 ;;      Totals:         0       0      11       0       0
  2878 ;;Total ram usage:       11 bytes
  2879 ;; Hardware stack levels used:    1
  2880 ;; Hardware stack levels required when called:   10
  2881 ;; This function calls:
  2882 ;;		Nothing
  2883 ;; This function is called by:
  2884 ;;		_i2c_lthread
  2885 ;; This function uses a non-reentrant model
  2886 ;;
  2887                           
  2888                           	psect	text13
  2889  000ABA                     __ptext13:
  2890                           	opt stack 0
  2891  000ABA                     _i2c_master_send:
  2892                           	opt stack 18
  2893                           
  2894                           ;incstack = 0
  2895                           ;i2c_master_send@length stored from wreg
  2896  000ABA  CFE8 F18A          	movff	wreg,i2c_master_send@length
  2897                           
  2898                           ;my_i2c.c: 80: if (ic_ptr->status != 0x3) {
  2899  000ABE  0100               	movlb	0	; () banked
  2900  000AC0  EE20 F00C          	lfsr	2,12
  2901  000AC4  0100               	movlb	0	; () banked
  2902  000AC6  51E8               	movf	_ic_ptr& (0+255),w,b
  2903  000AC8  26D9               	addwf	fsr2l,f,c
  2904  000ACA  0100               	movlb	0	; () banked
  2905  000ACC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2906  000ACE  22DA               	addwfc	fsr2h,f,c
  2907  000AD0  50DF               	movf	indf2,w,c
  2908  000AD2  0A03               	xorlw	3
  2909  000AD4  B4D8               	btfsc	status,2,c
  2910  000AD6  D002               	goto	l3706
  2911                           
  2912                           ; BSR set to: 0
  2913                           ;my_i2c.c: 81: return 0;
  2914  000AD8  0E00               	movlw	0
  2915  000ADA  0012               	return	
  2916  000ADC                     l3706:
  2917                           
  2918                           ; BSR set to: 0
  2919  000ADC  0100               	movlb	0	; () banked
  2920  000ADE  EE20 F00C          	lfsr	2,12
  2921  000AE2  0100               	movlb	0	; () banked
  2922  000AE4  51E8               	movf	_ic_ptr& (0+255),w,b
  2923  000AE6  26D9               	addwf	fsr2l,f,c
  2924  000AE8  0100               	movlb	0	; () banked
  2925  000AEA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2926  000AEC  22DA               	addwfc	fsr2h,f,c
  2927  000AEE  0E03               	movlw	3
  2928  000AF0  62DF               	cpfseq	indf2,c
  2929  000AF2  0012               	return	
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;my_i2c.c: 87: ic_ptr->bufferCounterSend = 1;
  2933  000AF4  0100               	movlb	0	; () banked
  2934  000AF6  EE20 F01C          	lfsr	2,28
  2935  000AFA  0100               	movlb	0	; () banked
  2936  000AFC  51E8               	movf	_ic_ptr& (0+255),w,b
  2937  000AFE  26D9               	addwf	fsr2l,f,c
  2938  000B00  0100               	movlb	0	; () banked
  2939  000B02  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2940  000B04  22DA               	addwfc	fsr2h,f,c
  2941  000B06  0E01               	movlw	1
  2942  000B08  6EDE               	movwf	postinc2,c
  2943  000B0A  0E00               	movlw	0
  2944  000B0C  6EDD               	movwf	postdec2,c
  2945                           
  2946                           ; BSR set to: 0
  2947                           ;my_i2c.c: 88: ic_ptr->outbuffer[0] = ic_ptr->slave_addr;
  2948  000B0E  0100               	movlb	0	; () banked
  2949  000B10  EE20 F01B          	lfsr	2,27
  2950  000B14  0100               	movlb	0	; () banked
  2951  000B16  51E8               	movf	_ic_ptr& (0+255),w,b
  2952  000B18  26D9               	addwf	fsr2l,f,c
  2953  000B1A  0100               	movlb	0	; () banked
  2954  000B1C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2955  000B1E  22DA               	addwfc	fsr2h,f,c
  2956  000B20  0100               	movlb	0	; () banked
  2957  000B22  EE10 F00F          	lfsr	1,15
  2958  000B26  0100               	movlb	0	; () banked
  2959  000B28  51E8               	movf	_ic_ptr& (0+255),w,b
  2960  000B2A  26E1               	addwf	fsr1l,f,c
  2961  000B2C  0100               	movlb	0	; () banked
  2962  000B2E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2963  000B30  22E2               	addwfc	fsr1h,f,c
  2964  000B32  CFDF FFE7          	movff	indf2,indf1
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;my_i2c.c: 90: ic_ptr->outbuflen = length + 1;
  2968  000B36  0100               	movlb	0	; () banked
  2969  000B38  EE20 F019          	lfsr	2,25
  2970  000B3C  0100               	movlb	0	; () banked
  2971  000B3E  51E8               	movf	_ic_ptr& (0+255),w,b
  2972  000B40  26D9               	addwf	fsr2l,f,c
  2973  000B42  0100               	movlb	0	; () banked
  2974  000B44  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2975  000B46  22DA               	addwfc	fsr2h,f,c
  2976  000B48  0101               	movlb	1	; () banked
  2977  000B4A  0101               	movlb	1	; () banked
  2978  000B4C  298A               	incf	i2c_master_send@length& (0+255),w,b
  2979  000B4E  6EDF               	movwf	indf2,c
  2980                           
  2981                           ; BSR set to: 1
  2982                           ;my_i2c.c: 92: int i = 1;
  2983  000B50  0E00               	movlw	0
  2984  000B52  0101               	movlb	1	; () banked
  2985  000B54  0101               	movlb	1	; () banked
  2986  000B56  6F8C               	movwf	(i2c_master_send@i+1)& (0+255),b
  2987  000B58  0E01               	movlw	1
  2988  000B5A  0101               	movlb	1	; () banked
  2989  000B5C  6F8B               	movwf	i2c_master_send@i& (0+255),b
  2990  000B5E  D03D               	goto	l3720
  2991  000B60                     l3716:
  2992                           
  2993                           ; BSR set to: 1
  2994                           ;my_i2c.c: 94: ic_ptr->outbuffer[i] = msg[i - 1];
  2995  000B60  0EFF               	movlw	255
  2996  000B62  0101               	movlb	1	; () banked
  2997  000B64  6F84               	movwf	??_i2c_master_send& (0+255),b
  2998  000B66  0EFF               	movlw	255
  2999  000B68  6F85               	movwf	(??_i2c_master_send+1)& (0+255),b
  3000  000B6A  0101               	movlb	1	; () banked
  3001  000B6C  C18B  F186         	movff	i2c_master_send@i,??_i2c_master_send+2
  3002  000B70  0101               	movlb	1	; () banked
  3003  000B72  C18C  F187         	movff	i2c_master_send@i+1,??_i2c_master_send+3
  3004  000B76  0101               	movlb	1	; () banked
  3005  000B78  5184               	movf	??_i2c_master_send& (0+255),w,b
  3006  000B7A  0101               	movlb	1	; () banked
  3007  000B7C  2786               	addwf	(??_i2c_master_send+2)& (0+255),f,b
  3008  000B7E  0101               	movlb	1	; () banked
  3009  000B80  5185               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3010  000B82  0101               	movlb	1	; () banked
  3011  000B84  2387               	addwfc	(??_i2c_master_send+3)& (0+255),f,b
  3012  000B86  0101               	movlb	1	; () banked
  3013  000B88  5186               	movf	(??_i2c_master_send+2)& (0+255),w,b
  3014  000B8A  0101               	movlb	1	; () banked
  3015  000B8C  0101               	movlb	1	; () banked
  3016  000B8E  2582               	addwf	i2c_master_send@msg& (0+255),w,b
  3017  000B90  6ED9               	movwf	fsr2l,c
  3018  000B92  0101               	movlb	1	; () banked
  3019  000B94  5187               	movf	(??_i2c_master_send+3)& (0+255),w,b
  3020  000B96  0101               	movlb	1	; () banked
  3021  000B98  0101               	movlb	1	; () banked
  3022  000B9A  2183               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3023  000B9C  6EDA               	movwf	fsr2h,c
  3024  000B9E  0E0F               	movlw	15
  3025  000BA0  0101               	movlb	1	; () banked
  3026  000BA2  0101               	movlb	1	; () banked
  3027  000BA4  258B               	addwf	i2c_master_send@i& (0+255),w,b
  3028  000BA6  0101               	movlb	1	; () banked
  3029  000BA8  6F88               	movwf	(??_i2c_master_send+4)& (0+255),b
  3030  000BAA  0E00               	movlw	0
  3031  000BAC  0101               	movlb	1	; () banked
  3032  000BAE  0101               	movlb	1	; () banked
  3033  000BB0  218C               	addwfc	(i2c_master_send@i+1)& (0+255),w,b
  3034  000BB2  0101               	movlb	1	; () banked
  3035  000BB4  6F89               	movwf	(??_i2c_master_send+5)& (0+255),b
  3036  000BB6  0101               	movlb	1	; () banked
  3037  000BB8  5188               	movf	(??_i2c_master_send+4)& (0+255),w,b
  3038  000BBA  0100               	movlb	0	; () banked
  3039  000BBC  0100               	movlb	0	; () banked
  3040  000BBE  25E8               	addwf	_ic_ptr& (0+255),w,b
  3041  000BC0  6EE1               	movwf	fsr1l,c
  3042  000BC2  0101               	movlb	1	; () banked
  3043  000BC4  5189               	movf	(??_i2c_master_send+5)& (0+255),w,b
  3044  000BC6  0100               	movlb	0	; () banked
  3045  000BC8  0100               	movlb	0	; () banked
  3046  000BCA  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3047  000BCC  6EE2               	movwf	fsr1h,c
  3048  000BCE  CFDF FFE7          	movff	indf2,indf1
  3049                           
  3050                           ; BSR set to: 0
  3051  000BD2  0101               	movlb	1	; () banked
  3052  000BD4  0101               	movlb	1	; () banked
  3053  000BD6  4B8B               	infsnz	i2c_master_send@i& (0+255),f,b
  3054  000BD8  2B8C               	incf	(i2c_master_send@i+1)& (0+255),f,b
  3055  000BDA                     l3720:
  3056                           
  3057                           ; BSR set to: 1
  3058  000BDA  0101               	movlb	1	; () banked
  3059  000BDC  0101               	movlb	1	; () banked
  3060  000BDE  518A               	movf	i2c_master_send@length& (0+255),w,b
  3061  000BE0  0101               	movlb	1	; () banked
  3062  000BE2  6F84               	movwf	??_i2c_master_send& (0+255),b
  3063  000BE4  6B85               	clrf	(??_i2c_master_send+1)& (0+255),b
  3064  000BE6  0E01               	movlw	1
  3065  000BE8  0101               	movlb	1	; () banked
  3066  000BEA  2784               	addwf	??_i2c_master_send& (0+255),f,b
  3067  000BEC  0E00               	movlw	0
  3068  000BEE  2385               	addwfc	(??_i2c_master_send+1)& (0+255),f,b
  3069  000BF0  0101               	movlb	1	; () banked
  3070  000BF2  0101               	movlb	1	; () banked
  3071  000BF4  518C               	movf	(i2c_master_send@i+1)& (0+255),w,b
  3072  000BF6  0A80               	xorlw	128
  3073  000BF8  0101               	movlb	1	; () banked
  3074  000BFA  6F86               	movwf	(??_i2c_master_send+2)& (0+255),b
  3075  000BFC  5184               	movf	??_i2c_master_send& (0+255),w,b
  3076  000BFE  0101               	movlb	1	; () banked
  3077  000C00  0101               	movlb	1	; () banked
  3078  000C02  5D8B               	subwf	i2c_master_send@i& (0+255),w,b
  3079  000C04  0101               	movlb	1	; () banked
  3080  000C06  5185               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3081  000C08  0A80               	xorlw	128
  3082  000C0A  0101               	movlb	1	; () banked
  3083  000C0C  5986               	subwfb	(??_i2c_master_send+2)& (0+255),w,b
  3084  000C0E  A0D8               	btfss	status,0,c
  3085  000C10  D7A7               	goto	l3716
  3086                           
  3087                           ; BSR set to: 1
  3088                           ;my_i2c.c: 95: }
  3089                           ;my_i2c.c: 97: ic_ptr->tx_i2c = 0x1;
  3090                           
  3091                           ; BSR set to: 1
  3092  000C12  0100               	movlb	0	; () banked
  3093  000C14  EE20 F020          	lfsr	2,32
  3094  000C18  0100               	movlb	0	; () banked
  3095  000C1A  51E8               	movf	_ic_ptr& (0+255),w,b
  3096  000C1C  26D9               	addwf	fsr2l,f,c
  3097  000C1E  0100               	movlb	0	; () banked
  3098  000C20  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3099  000C22  22DA               	addwfc	fsr2h,f,c
  3100  000C24  0E01               	movlw	1
  3101  000C26  6EDF               	movwf	indf2,c
  3102                           
  3103                           ;my_i2c.c: 98: ic_ptr->rx_i2c = 0x0;
  3104  000C28  0100               	movlb	0	; () banked
  3105  000C2A  EE20 F021          	lfsr	2,33
  3106  000C2E  0100               	movlb	0	; () banked
  3107  000C30  51E8               	movf	_ic_ptr& (0+255),w,b
  3108  000C32  26D9               	addwf	fsr2l,f,c
  3109  000C34  0100               	movlb	0	; () banked
  3110  000C36  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3111  000C38  22DA               	addwfc	fsr2h,f,c
  3112  000C3A  0E00               	movlw	0
  3113  000C3C  6EDF               	movwf	indf2,c
  3114                           
  3115                           ;my_i2c.c: 100: ic_ptr->status = 0x5;
  3116  000C3E  0100               	movlb	0	; () banked
  3117  000C40  EE20 F00C          	lfsr	2,12
  3118  000C44  0100               	movlb	0	; () banked
  3119  000C46  51E8               	movf	_ic_ptr& (0+255),w,b
  3120  000C48  26D9               	addwf	fsr2l,f,c
  3121  000C4A  0100               	movlb	0	; () banked
  3122  000C4C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3123  000C4E  22DA               	addwfc	fsr2h,f,c
  3124  000C50  0E05               	movlw	5
  3125  000C52  6EDF               	movwf	indf2,c
  3126                           
  3127                           ; BSR set to: 0
  3128                           ;my_i2c.c: 102: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3129  000C54  80C5               	bsf	4037,0,c	;volatile
  3130  000C56                     l306:
  3131  000C56  B0C5               	btfsc	4037,0,c	;volatile
  3132  000C58  D7FE               	goto	l306
  3133                           
  3134                           ;my_i2c.c: 104: return 1;
  3135  000C5A  0E01               	movlw	1
  3136  000C5C  0012               	return	
  3137  000C5E                     __end_of_i2c_master_send:
  3138                           	opt stack 0
  3139                           tblptru	equ	0xFF8
  3140                           prodh	equ	0xFF4
  3141                           prodl	equ	0xFF3
  3142                           postinc0	equ	0xFEE
  3143                           wreg	equ	0xFE8
  3144                           indf1	equ	0xFE7
  3145                           fsr1h	equ	0xFE2
  3146                           fsr1l	equ	0xFE1
  3147                           indf2	equ	0xFDF
  3148                           postinc2	equ	0xFDE
  3149                           postdec2	equ	0xFDD
  3150                           fsr2h	equ	0xFDA
  3151                           fsr2l	equ	0xFD9
  3152                           status	equ	0xFD8
  3153                           
  3154 ;; *************** function _i2c_master_recv *****************
  3155 ;; Defined at:
  3156 ;;		line 121 in file "../src/my_i2c.c"
  3157 ;; Parameters:    Size  Location     Type
  3158 ;;  length          1    wreg     unsigned char 
  3159 ;; Auto vars:     Size  Location     Type
  3160 ;;  length          1    0[BANK1 ] unsigned char 
  3161 ;; Return value:  Size  Location     Type
  3162 ;;                  1    wreg      unsigned char 
  3163 ;; Registers used:
  3164 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3165 ;; Tracked objects:
  3166 ;;		On entry : 0/0
  3167 ;;		On exit  : 0/0
  3168 ;;		Unchanged: 0/0
  3169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3170 ;;      Params:         0       0       0       0       0
  3171 ;;      Locals:         0       0       1       0       0
  3172 ;;      Temps:          0       0       0       0       0
  3173 ;;      Totals:         0       0       1       0       0
  3174 ;;Total ram usage:        1 bytes
  3175 ;; Hardware stack levels used:    1
  3176 ;; Hardware stack levels required when called:   10
  3177 ;; This function calls:
  3178 ;;		Nothing
  3179 ;; This function is called by:
  3180 ;;		_i2c_lthread
  3181 ;; This function uses a non-reentrant model
  3182 ;;
  3183                           
  3184                           	psect	text14
  3185  0010D2                     __ptext14:
  3186                           	opt stack 0
  3187  0010D2                     _i2c_master_recv:
  3188                           	opt stack 18
  3189                           
  3190                           ;incstack = 0
  3191                           ;i2c_master_recv@length stored from wreg
  3192  0010D2  CFE8 F182          	movff	wreg,i2c_master_recv@length
  3193                           
  3194                           ;my_i2c.c: 123: if (ic_ptr->status != 0x3) {
  3195  0010D6  0100               	movlb	0	; () banked
  3196  0010D8  EE20 F00C          	lfsr	2,12
  3197  0010DC  0100               	movlb	0	; () banked
  3198  0010DE  51E8               	movf	_ic_ptr& (0+255),w,b
  3199  0010E0  26D9               	addwf	fsr2l,f,c
  3200  0010E2  0100               	movlb	0	; () banked
  3201  0010E4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3202  0010E6  22DA               	addwfc	fsr2h,f,c
  3203  0010E8  50DF               	movf	indf2,w,c
  3204  0010EA  0A03               	xorlw	3
  3205  0010EC  B4D8               	btfsc	status,2,c
  3206  0010EE  D002               	goto	l3738
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;my_i2c.c: 124: return 0;
  3210  0010F0  0E00               	movlw	0
  3211  0010F2  0012               	return	
  3212  0010F4                     l3738:
  3213                           
  3214                           ; BSR set to: 0
  3215  0010F4  0100               	movlb	0	; () banked
  3216  0010F6  EE20 F00C          	lfsr	2,12
  3217  0010FA  0100               	movlb	0	; () banked
  3218  0010FC  51E8               	movf	_ic_ptr& (0+255),w,b
  3219  0010FE  26D9               	addwf	fsr2l,f,c
  3220  001100  0100               	movlb	0	; () banked
  3221  001102  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3222  001104  22DA               	addwfc	fsr2h,f,c
  3223  001106  0E03               	movlw	3
  3224  001108  62DF               	cpfseq	indf2,c
  3225  00110A  0012               	return	
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;my_i2c.c: 127: ic_ptr->rx_i2c = 0x1;
  3229  00110C  0100               	movlb	0	; () banked
  3230  00110E  EE20 F021          	lfsr	2,33
  3231  001112  0100               	movlb	0	; () banked
  3232  001114  51E8               	movf	_ic_ptr& (0+255),w,b
  3233  001116  26D9               	addwf	fsr2l,f,c
  3234  001118  0100               	movlb	0	; () banked
  3235  00111A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3236  00111C  22DA               	addwfc	fsr2h,f,c
  3237  00111E  0E01               	movlw	1
  3238  001120  6EDF               	movwf	indf2,c
  3239                           
  3240                           ;my_i2c.c: 128: ic_ptr->tx_i2c = 0x0;
  3241  001122  0100               	movlb	0	; () banked
  3242  001124  EE20 F020          	lfsr	2,32
  3243  001128  0100               	movlb	0	; () banked
  3244  00112A  51E8               	movf	_ic_ptr& (0+255),w,b
  3245  00112C  26D9               	addwf	fsr2l,f,c
  3246  00112E  0100               	movlb	0	; () banked
  3247  001130  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3248  001132  22DA               	addwfc	fsr2h,f,c
  3249  001134  0E00               	movlw	0
  3250  001136  6EDF               	movwf	indf2,c
  3251                           
  3252                           ; BSR set to: 0
  3253                           ;my_i2c.c: 130: ic_ptr->slave_addr_rc = ((ic_ptr->slave_addr) | 0b00000001);
  3254  001138  0100               	movlb	0	; () banked
  3255  00113A  EE20 F022          	lfsr	2,34
  3256  00113E  0100               	movlb	0	; () banked
  3257  001140  51E8               	movf	_ic_ptr& (0+255),w,b
  3258  001142  26D9               	addwf	fsr2l,f,c
  3259  001144  0100               	movlb	0	; () banked
  3260  001146  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3261  001148  22DA               	addwfc	fsr2h,f,c
  3262  00114A  0100               	movlb	0	; () banked
  3263  00114C  EE10 F01B          	lfsr	1,27
  3264  001150  0100               	movlb	0	; () banked
  3265  001152  51E8               	movf	_ic_ptr& (0+255),w,b
  3266  001154  26E1               	addwf	fsr1l,f,c
  3267  001156  0100               	movlb	0	; () banked
  3268  001158  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3269  00115A  22E2               	addwfc	fsr1h,f,c
  3270  00115C  50E7               	movf	indf1,w,c
  3271  00115E  0901               	iorlw	1
  3272  001160  6EDF               	movwf	indf2,c
  3273                           
  3274                           ; BSR set to: 0
  3275                           ;my_i2c.c: 132: ic_ptr->buflen = length;
  3276  001162  0100               	movlb	0	; () banked
  3277  001164  EE20 F00A          	lfsr	2,10
  3278  001168  0100               	movlb	0	; () banked
  3279  00116A  51E8               	movf	_ic_ptr& (0+255),w,b
  3280  00116C  26D9               	addwf	fsr2l,f,c
  3281  00116E  0100               	movlb	0	; () banked
  3282  001170  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3283  001172  22DA               	addwfc	fsr2h,f,c
  3284  001174  0101               	movlb	1	; () banked
  3285  001176  C182  FFDF         	movff	i2c_master_recv@length,indf2
  3286                           
  3287                           ; BSR set to: 1
  3288                           ;my_i2c.c: 134: ic_ptr->status = 0xC;
  3289  00117A  0100               	movlb	0	; () banked
  3290  00117C  EE20 F00C          	lfsr	2,12
  3291  001180  0100               	movlb	0	; () banked
  3292  001182  51E8               	movf	_ic_ptr& (0+255),w,b
  3293  001184  26D9               	addwf	fsr2l,f,c
  3294  001186  0100               	movlb	0	; () banked
  3295  001188  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3296  00118A  22DA               	addwfc	fsr2h,f,c
  3297  00118C  0E0C               	movlw	12
  3298  00118E  6EDF               	movwf	indf2,c
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;my_i2c.c: 136: ic_ptr->bufferCounterRx = 0;
  3302  001190  0100               	movlb	0	; () banked
  3303  001192  EE20 F01E          	lfsr	2,30
  3304  001196  0100               	movlb	0	; () banked
  3305  001198  51E8               	movf	_ic_ptr& (0+255),w,b
  3306  00119A  26D9               	addwf	fsr2l,f,c
  3307  00119C  0100               	movlb	0	; () banked
  3308  00119E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3309  0011A0  22DA               	addwfc	fsr2h,f,c
  3310  0011A2  0E00               	movlw	0
  3311  0011A4  6EDE               	movwf	postinc2,c
  3312  0011A6  0E00               	movlw	0
  3313  0011A8  6EDD               	movwf	postdec2,c
  3314                           
  3315                           ; BSR set to: 0
  3316                           ;my_i2c.c: 138: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3317  0011AA  80C5               	bsf	4037,0,c	;volatile
  3318  0011AC                     l315:
  3319  0011AC  B0C5               	btfsc	4037,0,c	;volatile
  3320  0011AE  D7FE               	goto	l315
  3321                           
  3322                           ;my_i2c.c: 140: return 1;
  3323  0011B0  0E01               	movlw	1
  3324  0011B2  0012               	return	
  3325  0011B4                     __end_of_i2c_master_recv:
  3326                           	opt stack 0
  3327                           tblptru	equ	0xFF8
  3328                           prodh	equ	0xFF4
  3329                           prodl	equ	0xFF3
  3330                           postinc0	equ	0xFEE
  3331                           wreg	equ	0xFE8
  3332                           indf1	equ	0xFE7
  3333                           fsr1h	equ	0xFE2
  3334                           fsr1l	equ	0xFE1
  3335                           indf2	equ	0xFDF
  3336                           postinc2	equ	0xFDE
  3337                           postdec2	equ	0xFDD
  3338                           fsr2h	equ	0xFDA
  3339                           fsr2l	equ	0xFD9
  3340                           status	equ	0xFD8
  3341                           
  3342 ;; *************** function _ToMainHigh_sendmsg *****************
  3343 ;; Defined at:
  3344 ;;		line 126 in file "../src/messages.c"
  3345 ;; Parameters:    Size  Location     Type
  3346 ;;  length          1    wreg     unsigned char 
  3347 ;;  msgtype         1   22[BANK1 ] unsigned char 
  3348 ;;  data            2   23[BANK1 ] PTR void 
  3349 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  3350 ;; Auto vars:     Size  Location     Type
  3351 ;;  length          1   25[BANK1 ] unsigned char 
  3352 ;; Return value:  Size  Location     Type
  3353 ;;                  1    wreg      char 
  3354 ;; Registers used:
  3355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3356 ;; Tracked objects:
  3357 ;;		On entry : 0/0
  3358 ;;		On exit  : 0/0
  3359 ;;		Unchanged: 0/0
  3360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3361 ;;      Params:         0       0       3       0       0
  3362 ;;      Locals:         0       0       1       0       0
  3363 ;;      Temps:          0       0       0       0       0
  3364 ;;      Totals:         0       0       4       0       0
  3365 ;;Total ram usage:        4 bytes
  3366 ;; Hardware stack levels used:    1
  3367 ;; Hardware stack levels required when called:   12
  3368 ;; This function calls:
  3369 ;;		_send_msg
  3370 ;; This function is called by:
  3371 ;;		_i2c_lthread
  3372 ;; This function uses a non-reentrant model
  3373 ;;
  3374                           
  3375                           	psect	text15
  3376  001D5E                     __ptext15:
  3377                           	opt stack 0
  3378  001D5E                     _ToMainHigh_sendmsg:
  3379                           	opt stack 16
  3380                           
  3381                           ;incstack = 0
  3382                           ;ToMainHigh_sendmsg@length stored from wreg
  3383  001D5E  CFE8 F19B          	movff	wreg,ToMainHigh_sendmsg@length
  3384                           
  3385                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  3386                           ;	Return value of _ToMainHigh_sendmsg is never used
  3387  001D62  0100               	movlb	0	; () banked
  3388  001D64  0E00               	movlw	high _ToMainHigh_MQ
  3389  001D66  0101               	movlb	1	; () banked
  3390  001D68  0101               	movlb	1	; () banked
  3391  001D6A  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  3392  001D6C  0100               	movlb	0	; () banked
  3393  001D6E  0E80               	movlw	low _ToMainHigh_MQ
  3394  001D70  0101               	movlb	1	; () banked
  3395  001D72  0101               	movlb	1	; () banked
  3396  001D74  6F8C               	movwf	send_msg@qptr& (0+255),b
  3397  001D76  C19B  F18E         	movff	ToMainHigh_sendmsg@length,send_msg@length
  3398  001D7A  C198  F18F         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  3399  001D7E  0101               	movlb	1	; () banked
  3400  001D80  0101               	movlb	1	; () banked
  3401  001D82  C19A  F191         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  3402  001D86  0101               	movlb	1	; () banked
  3403  001D88  0101               	movlb	1	; () banked
  3404  001D8A  C199  F190         	movff	ToMainHigh_sendmsg@data,send_msg@data
  3405  001D8E  EC65  F007         	call	_send_msg	;wreg free
  3406  001D92  0012               	return	
  3407  001D94                     __end_of_ToMainHigh_sendmsg:
  3408                           	opt stack 0
  3409                           tblptru	equ	0xFF8
  3410                           prodh	equ	0xFF4
  3411                           prodl	equ	0xFF3
  3412                           postinc0	equ	0xFEE
  3413                           wreg	equ	0xFE8
  3414                           indf1	equ	0xFE7
  3415                           fsr1h	equ	0xFE2
  3416                           fsr1l	equ	0xFE1
  3417                           indf2	equ	0xFDF
  3418                           postinc2	equ	0xFDE
  3419                           postdec2	equ	0xFDD
  3420                           fsr2h	equ	0xFDA
  3421                           fsr2l	equ	0xFD9
  3422                           status	equ	0xFD8
  3423                           
  3424 ;; *************** function _send_msg *****************
  3425 ;; Defined at:
  3426 ;;		line 24 in file "../src/messages.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3429 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3430 ;;  length          1   12[BANK1 ] unsigned char 
  3431 ;;  msgtype         1   13[BANK1 ] unsigned char 
  3432 ;;  data            2   14[BANK1 ] PTR void 
  3433 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  3434 ;;		 -> main@uc(23), 
  3435 ;; Auto vars:     Size  Location     Type
  3436 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  3437 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3438 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3439 ;;  tlength         2   17[BANK1 ] unsigned int 
  3440 ;;  slot            1   19[BANK1 ] unsigned char 
  3441 ;; Return value:  Size  Location     Type
  3442 ;;                  1    wreg      char 
  3443 ;; Registers used:
  3444 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3445 ;; Tracked objects:
  3446 ;;		On entry : 0/0
  3447 ;;		On exit  : 0/0
  3448 ;;		Unchanged: 0/0
  3449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3450 ;;      Params:         0       0       6       0       0
  3451 ;;      Locals:         0       0       5       0       0
  3452 ;;      Temps:          0       0       1       0       0
  3453 ;;      Totals:         0       0      12       0       0
  3454 ;;Total ram usage:       12 bytes
  3455 ;; Hardware stack levels used:    1
  3456 ;; Hardware stack levels required when called:   11
  3457 ;; This function calls:
  3458 ;;		_memcpy
  3459 ;; This function is called by:
  3460 ;;		_ToMainHigh_sendmsg
  3461 ;;		_FromMainHigh_sendmsg
  3462 ;;		_FromMainLow_sendmsg
  3463 ;; This function uses a non-reentrant model
  3464 ;;
  3465                           
  3466                           	psect	text16
  3467  000ECA                     __ptext16:
  3468                           	opt stack 0
  3469  000ECA                     _send_msg:
  3470                           	opt stack 16
  3471                           
  3472                           ;messages.c: 25: unsigned char slot;
  3473                           ;messages.c: 27: msg *qmsg;
  3474                           ;messages.c: 28: size_t tlength = length;
  3475                           
  3476                           ;incstack = 0
  3477  000ECA  0101               	movlb	1	; () banked
  3478  000ECC  0101               	movlb	1	; () banked
  3479  000ECE  C18E  F193         	movff	send_msg@length,send_msg@tlength
  3480  000ED2  0101               	movlb	1	; () banked
  3481  000ED4  0101               	movlb	1	; () banked
  3482  000ED6  6B94               	clrf	(send_msg@tlength+1)& (0+255),b
  3483                           
  3484                           ; BSR set to: 1
  3485                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3486  000ED8  0101               	movlb	1	; () banked
  3487  000EDA  EE20 F034          	lfsr	2,52
  3488  000EDE  0101               	movlb	1	; () banked
  3489  000EE0  518C               	movf	send_msg@qptr& (0+255),w,b
  3490  000EE2  26D9               	addwf	fsr2l,f,c
  3491  000EE4  0101               	movlb	1	; () banked
  3492  000EE6  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3493  000EE8  22DA               	addwfc	fsr2h,f,c
  3494  000EEA  50DF               	movf	indf2,w,c
  3495  000EEC  0101               	movlb	1	; () banked
  3496  000EEE  0101               	movlb	1	; () banked
  3497  000EF0  6F95               	movwf	send_msg@slot& (0+255),b
  3498                           
  3499                           ; BSR set to: 1
  3500                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3501  000EF2  0101               	movlb	1	; () banked
  3502  000EF4  0101               	movlb	1	; () banked
  3503  000EF6  5195               	movf	send_msg@slot& (0+255),w,b
  3504  000EF8  0D0D               	mullw	13
  3505  000EFA  50F3               	movf	prodl,w,c
  3506  000EFC  0101               	movlb	1	; () banked
  3507  000EFE  0101               	movlb	1	; () banked
  3508  000F00  258C               	addwf	send_msg@qptr& (0+255),w,b
  3509  000F02  0101               	movlb	1	; () banked
  3510  000F04  0101               	movlb	1	; () banked
  3511  000F06  6F96               	movwf	send_msg@qmsg& (0+255),b
  3512  000F08  50F4               	movf	prodh,w,c
  3513  000F0A  0101               	movlb	1	; () banked
  3514  000F0C  0101               	movlb	1	; () banked
  3515  000F0E  218D               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3516  000F10  0101               	movlb	1	; () banked
  3517  000F12  6F97               	movwf	(send_msg@qmsg+1)& (0+255),b
  3518                           
  3519                           ; BSR set to: 1
  3520                           ;messages.c: 41: if (qmsg->full != 0) {
  3521  000F14  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  3522  000F18  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3523  000F1C  50DF               	movf	indf2,w,c
  3524  000F1E  B4D8               	btfsc	status,2,c
  3525  000F20  D002               	goto	l3614
  3526                           
  3527                           ; BSR set to: 1
  3528                           ;messages.c: 42: return (-1);
  3529  000F22  0EFF               	movlw	255
  3530  000F24  0012               	return	
  3531  000F26                     l3614:
  3532                           
  3533                           ; BSR set to: 1
  3534                           ;messages.c: 43: }
  3535                           ;messages.c: 46: qmsg->length = length;
  3536  000F26  0101               	movlb	1	; () banked
  3537  000F28  EE20 F001          	lfsr	2,1
  3538  000F2C  0101               	movlb	1	; () banked
  3539  000F2E  5196               	movf	send_msg@qmsg& (0+255),w,b
  3540  000F30  26D9               	addwf	fsr2l,f,c
  3541  000F32  0101               	movlb	1	; () banked
  3542  000F34  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3543  000F36  22DA               	addwfc	fsr2h,f,c
  3544  000F38  0101               	movlb	1	; () banked
  3545  000F3A  C18E  FFDF         	movff	send_msg@length,indf2
  3546                           
  3547                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3548  000F3E  0101               	movlb	1	; () banked
  3549  000F40  EE20 F002          	lfsr	2,2
  3550  000F44  0101               	movlb	1	; () banked
  3551  000F46  5196               	movf	send_msg@qmsg& (0+255),w,b
  3552  000F48  26D9               	addwf	fsr2l,f,c
  3553  000F4A  0101               	movlb	1	; () banked
  3554  000F4C  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3555  000F4E  22DA               	addwfc	fsr2h,f,c
  3556  000F50  0101               	movlb	1	; () banked
  3557  000F52  C18F  FFDF         	movff	send_msg@msgtype,indf2
  3558                           
  3559                           ; BSR set to: 1
  3560                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3561  000F56  0E03               	movlw	3
  3562  000F58  0101               	movlb	1	; () banked
  3563  000F5A  0101               	movlb	1	; () banked
  3564  000F5C  2596               	addwf	send_msg@qmsg& (0+255),w,b
  3565  000F5E  0101               	movlb	1	; () banked
  3566  000F60  0101               	movlb	1	; () banked
  3567  000F62  6F82               	movwf	memcpy@d1& (0+255),b
  3568  000F64  0E00               	movlw	0
  3569  000F66  0101               	movlb	1	; () banked
  3570  000F68  0101               	movlb	1	; () banked
  3571  000F6A  2197               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3572  000F6C  0101               	movlb	1	; () banked
  3573  000F6E  6F83               	movwf	(memcpy@d1+1)& (0+255),b
  3574  000F70  0101               	movlb	1	; () banked
  3575  000F72  0101               	movlb	1	; () banked
  3576  000F74  C191  F185         	movff	send_msg@data+1,memcpy@s1+1
  3577  000F78  0101               	movlb	1	; () banked
  3578  000F7A  0101               	movlb	1	; () banked
  3579  000F7C  C190  F184         	movff	send_msg@data,memcpy@s1
  3580  000F80  C193  F186         	movff	send_msg@tlength,memcpy@n
  3581  000F84  C194  F187         	movff	send_msg@tlength+1,memcpy@n+1
  3582  000F88  ECD3  F00C         	call	_memcpy	;wreg free
  3583                           
  3584                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3585  000F8C  0101               	movlb	1	; () banked
  3586  000F8E  EE20 F034          	lfsr	2,52
  3587  000F92  0101               	movlb	1	; () banked
  3588  000F94  518C               	movf	send_msg@qptr& (0+255),w,b
  3589  000F96  26D9               	addwf	fsr2l,f,c
  3590  000F98  0101               	movlb	1	; () banked
  3591  000F9A  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3592  000F9C  22DA               	addwfc	fsr2h,f,c
  3593  000F9E  0101               	movlb	1	; () banked
  3594  000FA0  EE10 F034          	lfsr	1,52
  3595  000FA4  0101               	movlb	1	; () banked
  3596  000FA6  518C               	movf	send_msg@qptr& (0+255),w,b
  3597  000FA8  26E1               	addwf	fsr1l,f,c
  3598  000FAA  0101               	movlb	1	; () banked
  3599  000FAC  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3600  000FAE  22E2               	addwfc	fsr1h,f,c
  3601  000FB0  50E7               	movf	indf1,w,c
  3602  000FB2  0101               	movlb	1	; () banked
  3603  000FB4  6F92               	movwf	??_send_msg& (0+255),b
  3604  000FB6  0101               	movlb	1	; () banked
  3605  000FB8  2992               	incf	??_send_msg& (0+255),w,b
  3606  000FBA  0B03               	andlw	3
  3607  000FBC  6EDF               	movwf	indf2,c
  3608                           
  3609                           ; BSR set to: 1
  3610                           ;messages.c: 59: qmsg->full = 1;
  3611  000FBE  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  3612  000FC2  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3613  000FC6  0E01               	movlw	1
  3614  000FC8  6EDF               	movwf	indf2,c
  3615                           
  3616                           ; BSR set to: 1
  3617                           ;messages.c: 60: return (1);
  3618  000FCA  0E01               	movlw	1
  3619  000FCC  0012               	return	
  3620  000FCE                     __end_of_send_msg:
  3621                           	opt stack 0
  3622                           tblptru	equ	0xFF8
  3623                           prodh	equ	0xFF4
  3624                           prodl	equ	0xFF3
  3625                           postinc0	equ	0xFEE
  3626                           wreg	equ	0xFE8
  3627                           indf1	equ	0xFE7
  3628                           fsr1h	equ	0xFE2
  3629                           fsr1l	equ	0xFE1
  3630                           indf2	equ	0xFDF
  3631                           postinc2	equ	0xFDE
  3632                           postdec2	equ	0xFDD
  3633                           fsr2h	equ	0xFDA
  3634                           fsr2l	equ	0xFD9
  3635                           status	equ	0xFD8
  3636                           
  3637 ;; *************** function _i2c_configure_master *****************
  3638 ;; Defined at:
  3639 ;;		line 50 in file "../src/my_i2c.c"
  3640 ;; Parameters:    Size  Location     Type
  3641 ;;  slave_addr      1    wreg     unsigned char 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;  slave_addr      1    0[BANK1 ] unsigned char 
  3644 ;; Return value:  Size  Location     Type
  3645 ;;		None               void
  3646 ;; Registers used:
  3647 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3653 ;;      Params:         0       0       0       0       0
  3654 ;;      Locals:         0       0       1       0       0
  3655 ;;      Temps:          0       0       0       0       0
  3656 ;;      Totals:         0       0       1       0       0
  3657 ;;Total ram usage:        1 bytes
  3658 ;; Hardware stack levels used:    1
  3659 ;; Hardware stack levels required when called:   10
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_main
  3664 ;; This function uses a non-reentrant model
  3665 ;;
  3666                           
  3667                           	psect	text17
  3668  001B32                     __ptext17:
  3669                           	opt stack 0
  3670  001B32                     _i2c_configure_master:
  3671                           	opt stack 19
  3672                           
  3673                           ; BSR set to: 1
  3674                           ;incstack = 0
  3675                           ;i2c_configure_master@slave_addr stored from wreg
  3676  001B32  CFE8 F182          	movff	wreg,i2c_configure_master@slave_addr
  3677                           
  3678                           ;my_i2c.c: 52: ic_ptr->slave_addr = slave_addr;
  3679  001B36  0100               	movlb	0	; () banked
  3680  001B38  EE20 F01B          	lfsr	2,27
  3681  001B3C  0100               	movlb	0	; () banked
  3682  001B3E  51E8               	movf	_ic_ptr& (0+255),w,b
  3683  001B40  26D9               	addwf	fsr2l,f,c
  3684  001B42  0100               	movlb	0	; () banked
  3685  001B44  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3686  001B46  22DA               	addwfc	fsr2h,f,c
  3687  001B48  0101               	movlb	1	; () banked
  3688  001B4A  C182  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  3689                           
  3690                           ; BSR set to: 1
  3691                           ;my_i2c.c: 54: SSPCON1 = 0b00001000;
  3692  001B4E  0E08               	movlw	8
  3693  001B50  6EC6               	movwf	4038,c	;volatile
  3694                           
  3695                           ; BSR set to: 1
  3696                           ;my_i2c.c: 56: SSPCON1 |= 0b00100000;
  3697  001B52  8AC6               	bsf	4038,5,c	;volatile
  3698                           
  3699                           ; BSR set to: 1
  3700                           ;my_i2c.c: 58: SSPADD = 0x77;
  3701  001B54  0E77               	movlw	119
  3702  001B56  6EC8               	movwf	4040,c	;volatile
  3703                           
  3704                           ; BSR set to: 1
  3705                           ;my_i2c.c: 61: ic_ptr->bufferCounterSend = 1;
  3706  001B58  0100               	movlb	0	; () banked
  3707  001B5A  EE20 F01C          	lfsr	2,28
  3708  001B5E  0100               	movlb	0	; () banked
  3709  001B60  51E8               	movf	_ic_ptr& (0+255),w,b
  3710  001B62  26D9               	addwf	fsr2l,f,c
  3711  001B64  0100               	movlb	0	; () banked
  3712  001B66  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3713  001B68  22DA               	addwfc	fsr2h,f,c
  3714  001B6A  0E01               	movlw	1
  3715  001B6C  6EDE               	movwf	postinc2,c
  3716  001B6E  0E00               	movlw	0
  3717  001B70  6EDD               	movwf	postdec2,c
  3718                           
  3719                           ; BSR set to: 0
  3720  001B72  0012               	return	
  3721  001B74                     __end_of_i2c_configure_master:
  3722                           	opt stack 0
  3723                           tblptru	equ	0xFF8
  3724                           prodh	equ	0xFF4
  3725                           prodl	equ	0xFF3
  3726                           postinc0	equ	0xFEE
  3727                           wreg	equ	0xFE8
  3728                           indf1	equ	0xFE7
  3729                           fsr1h	equ	0xFE2
  3730                           fsr1l	equ	0xFE1
  3731                           indf2	equ	0xFDF
  3732                           postinc2	equ	0xFDE
  3733                           postdec2	equ	0xFDD
  3734                           fsr2h	equ	0xFDA
  3735                           fsr2l	equ	0xFD9
  3736                           status	equ	0xFD8
  3737                           
  3738 ;; *************** function _enable_interrupts *****************
  3739 ;; Defined at:
  3740 ;;		line 16 in file "../src/interrupts.c"
  3741 ;; Parameters:    Size  Location     Type
  3742 ;;		None
  3743 ;; Auto vars:     Size  Location     Type
  3744 ;;		None
  3745 ;; Return value:  Size  Location     Type
  3746 ;;		None               void
  3747 ;; Registers used:
  3748 ;;		None
  3749 ;; Tracked objects:
  3750 ;;		On entry : 0/0
  3751 ;;		On exit  : 0/0
  3752 ;;		Unchanged: 0/0
  3753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3754 ;;      Params:         0       0       0       0       0
  3755 ;;      Locals:         0       0       0       0       0
  3756 ;;      Temps:          0       0       0       0       0
  3757 ;;      Totals:         0       0       0       0       0
  3758 ;;Total ram usage:        0 bytes
  3759 ;; Hardware stack levels used:    1
  3760 ;; Hardware stack levels required when called:   10
  3761 ;; This function calls:
  3762 ;;		Nothing
  3763 ;; This function is called by:
  3764 ;;		_main
  3765 ;; This function uses a non-reentrant model
  3766 ;;
  3767                           
  3768                           	psect	text18
  3769  001FCE                     __ptext18:
  3770                           	opt stack 0
  3771  001FCE                     _enable_interrupts:
  3772                           	opt stack 19
  3773                           
  3774                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  3775                           
  3776                           ; BSR set to: 0
  3777                           ;incstack = 0
  3778  001FCE  8ED0               	bsf	4048,7,c	;volatile
  3779                           
  3780                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  3781  001FD0  8EF2               	bsf	intcon,7,c	;volatile
  3782                           
  3783                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  3784  001FD2  8CF2               	bsf	intcon,6,c	;volatile
  3785  001FD4  0012               	return	
  3786  001FD6                     __end_of_enable_interrupts:
  3787                           	opt stack 0
  3788                           tblptru	equ	0xFF8
  3789                           prodh	equ	0xFF4
  3790                           prodl	equ	0xFF3
  3791                           intcon	equ	0xFF2
  3792                           postinc0	equ	0xFEE
  3793                           wreg	equ	0xFE8
  3794                           indf1	equ	0xFE7
  3795                           fsr1h	equ	0xFE2
  3796                           fsr1l	equ	0xFE1
  3797                           indf2	equ	0xFDF
  3798                           postinc2	equ	0xFDE
  3799                           postdec2	equ	0xFDD
  3800                           fsr2h	equ	0xFDA
  3801                           fsr2l	equ	0xFD9
  3802                           status	equ	0xFD8
  3803                           
  3804 ;; *************** function _block_on_To_msgqueues *****************
  3805 ;; Defined at:
  3806 ;;		line 258 in file "../src/messages.c"
  3807 ;; Parameters:    Size  Location     Type
  3808 ;;		None
  3809 ;; Auto vars:     Size  Location     Type
  3810 ;;		None
  3811 ;; Return value:  Size  Location     Type
  3812 ;;		None               void
  3813 ;; Registers used:
  3814 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3815 ;; Tracked objects:
  3816 ;;		On entry : 0/0
  3817 ;;		On exit  : 0/0
  3818 ;;		Unchanged: 0/0
  3819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3820 ;;      Params:         0       0       0       0       0
  3821 ;;      Locals:         0       0       0       0       0
  3822 ;;      Temps:          0       0       1       0       0
  3823 ;;      Totals:         0       0       1       0       0
  3824 ;;Total ram usage:        1 bytes
  3825 ;; Hardware stack levels used:    1
  3826 ;; Hardware stack levels required when called:   13
  3827 ;; This function calls:
  3828 ;;		_Delay1KTCYx
  3829 ;;		_check_msg
  3830 ;;		_in_main
  3831 ;; This function is called by:
  3832 ;;		_main
  3833 ;; This function uses a non-reentrant model
  3834 ;;
  3835                           
  3836                           	psect	text19
  3837  0016F8                     __ptext19:
  3838                           	opt stack 0
  3839  0016F8                     _block_on_To_msgqueues:
  3840                           	opt stack 16
  3841                           
  3842                           ;messages.c: 259: if (!in_main()) {
  3843                           
  3844                           ;incstack = 0
  3845  0016F8  EC77  F00D         	call	_in_main	;wreg free
  3846  0016FC  0101               	movlb	1	; () banked
  3847  0016FE  0101               	movlb	1	; () banked
  3848  001700  5187               	movf	(?_in_main+1)& (0+255),w,b
  3849  001702  0101               	movlb	1	; () banked
  3850  001704  1186               	iorwf	?_in_main& (0+255),w,b
  3851  001706  B4D8               	btfsc	status,2,c
  3852  001708  0012               	return	
  3853                           
  3854                           ; BSR set to: 1
  3855                           ;messages.c: 261: }
  3856                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3857                           
  3858                           ; BSR set to: 1
  3859                           
  3860                           ; BSR set to: 1
  3861                           ;messages.c: 260: return;
  3862  00170A  0101               	movlb	1	; () banked
  3863  00170C  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3864  00170E  0E01               	movlw	1
  3865  001710  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3866  001712  0101               	movlb	1	; () banked
  3867  001714  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3868  001716                     l3526:
  3869                           
  3870                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3871  001716  0100               	movlb	0	; () banked
  3872  001718  0E00               	movlw	high _ToMainHigh_MQ
  3873  00171A  0101               	movlb	1	; () banked
  3874  00171C  0101               	movlb	1	; () banked
  3875  00171E  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  3876  001720  0100               	movlb	0	; () banked
  3877  001722  0E80               	movlw	low _ToMainHigh_MQ
  3878  001724  0101               	movlb	1	; () banked
  3879  001726  0101               	movlb	1	; () banked
  3880  001728  6F82               	movwf	check_msg@qptr& (0+255),b
  3881  00172A  ECCA  F00E         	call	_check_msg	;wreg free
  3882  00172E  0900               	iorlw	0
  3883  001730  B4D8               	btfsc	status,2,c
  3884  001732  D007               	goto	l3532
  3885                           
  3886                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3887  001734  0101               	movlb	1	; () banked
  3888  001736  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3889  001738  0E00               	movlw	0
  3890  00173A  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3891  00173C  0101               	movlb	1	; () banked
  3892  00173E  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3893  001740  0012               	return	
  3894  001742                     l3532:
  3895                           
  3896                           ;messages.c: 271: }
  3897                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3898  001742  0101               	movlb	1	; () banked
  3899  001744  0E01               	movlw	high _ToMainLow_MQ
  3900  001746  0101               	movlb	1	; () banked
  3901  001748  0101               	movlb	1	; () banked
  3902  00174A  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  3903  00174C  0101               	movlb	1	; () banked
  3904  00174E  0E4C               	movlw	low _ToMainLow_MQ
  3905  001750  0101               	movlb	1	; () banked
  3906  001752  0101               	movlb	1	; () banked
  3907  001754  6F82               	movwf	check_msg@qptr& (0+255),b
  3908  001756  ECCA  F00E         	call	_check_msg	;wreg free
  3909  00175A  0900               	iorlw	0
  3910  00175C  B4D8               	btfsc	status,2,c
  3911  00175E  D007               	goto	l3538
  3912                           
  3913                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3914  001760  0101               	movlb	1	; () banked
  3915  001762  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3916  001764  0E00               	movlw	0
  3917  001766  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3918  001768  0101               	movlb	1	; () banked
  3919  00176A  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3920  00176C  0012               	return	
  3921  00176E                     l3538:
  3922                           
  3923                           ;messages.c: 278: }
  3924                           ;messages.c: 279: Delay1KTCYx(10);
  3925  00176E  0E0A               	movlw	10
  3926  001770  EC93  F00F         	call	_Delay1KTCYx
  3927  001774  D7D0               	goto	l3526
  3928  001776                     __end_of_block_on_To_msgqueues:
  3929                           	opt stack 0
  3930                           tblptru	equ	0xFF8
  3931                           prodh	equ	0xFF4
  3932                           prodl	equ	0xFF3
  3933                           intcon	equ	0xFF2
  3934                           postinc0	equ	0xFEE
  3935                           wreg	equ	0xFE8
  3936                           indf1	equ	0xFE7
  3937                           fsr1h	equ	0xFE2
  3938                           fsr1l	equ	0xFE1
  3939                           indf2	equ	0xFDF
  3940                           postinc2	equ	0xFDE
  3941                           postdec2	equ	0xFDD
  3942                           fsr2h	equ	0xFDA
  3943                           fsr2l	equ	0xFD9
  3944                           status	equ	0xFD8
  3945                           
  3946 ;; *************** function _in_main *****************
  3947 ;; Defined at:
  3948 ;;		line 44 in file "../src/interrupts.c"
  3949 ;; Parameters:    Size  Location     Type
  3950 ;;		None
  3951 ;; Auto vars:     Size  Location     Type
  3952 ;;		None
  3953 ;; Return value:  Size  Location     Type
  3954 ;;                  2    4[BANK1 ] int 
  3955 ;; Registers used:
  3956 ;;		wreg, status,2, status,0, cstack
  3957 ;; Tracked objects:
  3958 ;;		On entry : 0/0
  3959 ;;		On exit  : 0/0
  3960 ;;		Unchanged: 0/0
  3961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3962 ;;      Params:         0       0       2       0       0
  3963 ;;      Locals:         0       0       0       0       0
  3964 ;;      Temps:          0       0       0       0       0
  3965 ;;      Totals:         0       0       2       0       0
  3966 ;;Total ram usage:        2 bytes
  3967 ;; Hardware stack levels used:    1
  3968 ;; Hardware stack levels required when called:   12
  3969 ;; This function calls:
  3970 ;;		_in_high_int
  3971 ;;		_in_low_int
  3972 ;; This function is called by:
  3973 ;;		_block_on_To_msgqueues
  3974 ;; This function uses a non-reentrant model
  3975 ;;
  3976                           
  3977                           	psect	text20
  3978  001AEE                     __ptext20:
  3979                           	opt stack 0
  3980  001AEE                     _in_main:
  3981                           	opt stack 16
  3982                           
  3983                           ;interrupts.c: 45: if ((!in_low_int()) && (!in_high_int())) {
  3984                           
  3985                           ;incstack = 0
  3986  001AEE  EC31  F00D         	call	_in_low_int	;wreg free
  3987  001AF2  0101               	movlb	1	; () banked
  3988  001AF4  0101               	movlb	1	; () banked
  3989  001AF6  5185               	movf	(?_in_low_int+1)& (0+255),w,b
  3990  001AF8  0101               	movlb	1	; () banked
  3991  001AFA  1184               	iorwf	?_in_low_int& (0+255),w,b
  3992  001AFC  A4D8               	btfss	status,2,c
  3993  001AFE  D011               	goto	l3264
  3994                           
  3995                           ; BSR set to: 1
  3996  001B00  ECBA  F00F         	call	_in_high_int	;wreg free
  3997  001B04  0101               	movlb	1	; () banked
  3998  001B06  0101               	movlb	1	; () banked
  3999  001B08  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4000  001B0A  0101               	movlb	1	; () banked
  4001  001B0C  1182               	iorwf	?_in_high_int& (0+255),w,b
  4002  001B0E  A4D8               	btfss	status,2,c
  4003  001B10  D008               	goto	l3264
  4004                           
  4005                           ; BSR set to: 1
  4006                           ;interrupts.c: 46: return (1);
  4007  001B12  0E00               	movlw	0
  4008  001B14  0101               	movlb	1	; () banked
  4009  001B16  0101               	movlb	1	; () banked
  4010  001B18  6F87               	movwf	(?_in_main+1)& (0+255),b
  4011  001B1A  0E01               	movlw	1
  4012  001B1C  0101               	movlb	1	; () banked
  4013  001B1E  6F86               	movwf	?_in_main& (0+255),b
  4014  001B20  0012               	return	
  4015  001B22                     l3264:
  4016                           
  4017                           ; BSR set to: 1
  4018                           ;interrupts.c: 48: return (0);
  4019  001B22  0E00               	movlw	0
  4020  001B24  0101               	movlb	1	; () banked
  4021  001B26  0101               	movlb	1	; () banked
  4022  001B28  6F87               	movwf	(?_in_main+1)& (0+255),b
  4023  001B2A  0E00               	movlw	0
  4024  001B2C  0101               	movlb	1	; () banked
  4025  001B2E  6F86               	movwf	?_in_main& (0+255),b
  4026  001B30  0012               	return	
  4027  001B32                     __end_of_in_main:
  4028                           	opt stack 0
  4029                           tblptru	equ	0xFF8
  4030                           prodh	equ	0xFF4
  4031                           prodl	equ	0xFF3
  4032                           intcon	equ	0xFF2
  4033                           postinc0	equ	0xFEE
  4034                           wreg	equ	0xFE8
  4035                           indf1	equ	0xFE7
  4036                           fsr1h	equ	0xFE2
  4037                           fsr1l	equ	0xFE1
  4038                           indf2	equ	0xFDF
  4039                           postinc2	equ	0xFDE
  4040                           postdec2	equ	0xFDD
  4041                           fsr2h	equ	0xFDA
  4042                           fsr2l	equ	0xFD9
  4043                           status	equ	0xFD8
  4044                           
  4045 ;; *************** function _in_low_int *****************
  4046 ;; Defined at:
  4047 ;;		line 33 in file "../src/interrupts.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;		None
  4050 ;; Auto vars:     Size  Location     Type
  4051 ;;		None
  4052 ;; Return value:  Size  Location     Type
  4053 ;;                  2    2[BANK1 ] int 
  4054 ;; Registers used:
  4055 ;;		wreg, status,2, status,0, cstack
  4056 ;; Tracked objects:
  4057 ;;		On entry : 0/0
  4058 ;;		On exit  : 0/0
  4059 ;;		Unchanged: 0/0
  4060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4061 ;;      Params:         0       0       2       0       0
  4062 ;;      Locals:         0       0       0       0       0
  4063 ;;      Temps:          0       0       0       0       0
  4064 ;;      Totals:         0       0       2       0       0
  4065 ;;Total ram usage:        2 bytes
  4066 ;; Hardware stack levels used:    1
  4067 ;; Hardware stack levels required when called:   11
  4068 ;; This function calls:
  4069 ;;		_in_high_int
  4070 ;; This function is called by:
  4071 ;;		_in_main
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text21
  4076  001A62                     __ptext21:
  4077                           	opt stack 0
  4078  001A62                     _in_low_int:
  4079                           	opt stack 16
  4080                           
  4081                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  4082                           
  4083                           ; BSR set to: 1
  4084                           ;incstack = 0
  4085  001A62  ACF2               	btfss	intcon,6,c	;volatile
  4086  001A64  D008               	goto	l3242
  4087                           
  4088                           ;interrupts.c: 36: return (0);
  4089  001A66  0E00               	movlw	0
  4090  001A68  0101               	movlb	1	; () banked
  4091  001A6A  0101               	movlb	1	; () banked
  4092  001A6C  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4093  001A6E  0E00               	movlw	0
  4094  001A70  0101               	movlb	1	; () banked
  4095  001A72  6F84               	movwf	?_in_low_int& (0+255),b
  4096  001A74  0012               	return	
  4097  001A76                     l3242:
  4098  001A76  ECBA  F00F         	call	_in_high_int	;wreg free
  4099  001A7A  0101               	movlb	1	; () banked
  4100  001A7C  0101               	movlb	1	; () banked
  4101  001A7E  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4102  001A80  0101               	movlb	1	; () banked
  4103  001A82  1182               	iorwf	?_in_high_int& (0+255),w,b
  4104  001A84  B4D8               	btfsc	status,2,c
  4105  001A86  D008               	goto	l3250
  4106                           
  4107                           ; BSR set to: 1
  4108                           ;interrupts.c: 38: return (0);
  4109  001A88  0E00               	movlw	0
  4110  001A8A  0101               	movlb	1	; () banked
  4111  001A8C  0101               	movlb	1	; () banked
  4112  001A8E  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4113  001A90  0E00               	movlw	0
  4114  001A92  0101               	movlb	1	; () banked
  4115  001A94  6F84               	movwf	?_in_low_int& (0+255),b
  4116  001A96  0012               	return	
  4117  001A98                     l3250:
  4118                           
  4119                           ; BSR set to: 1
  4120                           ;interrupts.c: 40: return (1);
  4121  001A98  0E00               	movlw	0
  4122  001A9A  0101               	movlb	1	; () banked
  4123  001A9C  0101               	movlb	1	; () banked
  4124  001A9E  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4125  001AA0  0E01               	movlw	1
  4126  001AA2  0101               	movlb	1	; () banked
  4127  001AA4  6F84               	movwf	?_in_low_int& (0+255),b
  4128  001AA6  0012               	return	
  4129  001AA8                     __end_of_in_low_int:
  4130                           	opt stack 0
  4131                           tblptru	equ	0xFF8
  4132                           prodh	equ	0xFF4
  4133                           prodl	equ	0xFF3
  4134                           intcon	equ	0xFF2
  4135                           postinc0	equ	0xFEE
  4136                           wreg	equ	0xFE8
  4137                           indf1	equ	0xFE7
  4138                           fsr1h	equ	0xFE2
  4139                           fsr1l	equ	0xFE1
  4140                           indf2	equ	0xFDF
  4141                           postinc2	equ	0xFDE
  4142                           postdec2	equ	0xFDD
  4143                           fsr2h	equ	0xFDA
  4144                           fsr2l	equ	0xFD9
  4145                           status	equ	0xFD8
  4146                           
  4147 ;; *************** function _in_high_int *****************
  4148 ;; Defined at:
  4149 ;;		line 24 in file "../src/interrupts.c"
  4150 ;; Parameters:    Size  Location     Type
  4151 ;;		None
  4152 ;; Auto vars:     Size  Location     Type
  4153 ;;		None
  4154 ;; Return value:  Size  Location     Type
  4155 ;;                  2    0[BANK1 ] int 
  4156 ;; Registers used:
  4157 ;;		wreg, status,2
  4158 ;; Tracked objects:
  4159 ;;		On entry : 0/0
  4160 ;;		On exit  : 0/0
  4161 ;;		Unchanged: 0/0
  4162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4163 ;;      Params:         0       0       2       0       0
  4164 ;;      Locals:         0       0       0       0       0
  4165 ;;      Temps:          0       0       0       0       0
  4166 ;;      Totals:         0       0       2       0       0
  4167 ;;Total ram usage:        2 bytes
  4168 ;; Hardware stack levels used:    1
  4169 ;; Hardware stack levels required when called:   10
  4170 ;; This function calls:
  4171 ;;		Nothing
  4172 ;; This function is called by:
  4173 ;;		_in_low_int
  4174 ;;		_in_main
  4175 ;; This function uses a non-reentrant model
  4176 ;;
  4177                           
  4178                           	psect	text22
  4179  001F74                     __ptext22:
  4180                           	opt stack 0
  4181  001F74                     _in_high_int:
  4182                           	opt stack 16
  4183                           
  4184                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  4185                           
  4186                           ; BSR set to: 1
  4187                           ;incstack = 0
  4188  001F74  0E00               	movlw	0
  4189  001F76  AEF2               	btfss	intcon,7,c	;volatile
  4190  001F78  0E01               	movlw	1
  4191  001F7A  0101               	movlb	1	; () banked
  4192  001F7C  0101               	movlb	1	; () banked
  4193  001F7E  6F82               	movwf	?_in_high_int& (0+255),b
  4194  001F80  0101               	movlb	1	; () banked
  4195  001F82  6B83               	clrf	(?_in_high_int+1)& (0+255),b
  4196  001F84  0012               	return	
  4197  001F86                     __end_of_in_high_int:
  4198                           	opt stack 0
  4199                           tblptru	equ	0xFF8
  4200                           prodh	equ	0xFF4
  4201                           prodl	equ	0xFF3
  4202                           intcon	equ	0xFF2
  4203                           postinc0	equ	0xFEE
  4204                           wreg	equ	0xFE8
  4205                           indf1	equ	0xFE7
  4206                           fsr1h	equ	0xFE2
  4207                           fsr1l	equ	0xFE1
  4208                           indf2	equ	0xFDF
  4209                           postinc2	equ	0xFDE
  4210                           postdec2	equ	0xFDD
  4211                           fsr2h	equ	0xFDA
  4212                           fsr2l	equ	0xFD9
  4213                           status	equ	0xFD8
  4214                           
  4215 ;; *************** function _check_msg *****************
  4216 ;; Defined at:
  4217 ;;		line 222 in file "../src/messages.c"
  4218 ;; Parameters:    Size  Location     Type
  4219 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4220 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;		None
  4223 ;; Return value:  Size  Location     Type
  4224 ;;                  1    wreg      unsigned char 
  4225 ;; Registers used:
  4226 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4227 ;; Tracked objects:
  4228 ;;		On entry : 0/0
  4229 ;;		On exit  : 0/0
  4230 ;;		Unchanged: 0/0
  4231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4232 ;;      Params:         0       0       2       0       0
  4233 ;;      Locals:         0       0       0       0       0
  4234 ;;      Temps:          0       0       1       0       0
  4235 ;;      Totals:         0       0       3       0       0
  4236 ;;Total ram usage:        3 bytes
  4237 ;; Hardware stack levels used:    1
  4238 ;; Hardware stack levels required when called:   10
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_block_on_To_msgqueues
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           	psect	text23
  4247  001D94                     __ptext23:
  4248                           	opt stack 0
  4249  001D94                     _check_msg:
  4250                           	opt stack 18
  4251                           
  4252                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4253                           
  4254                           ; BSR set to: 1
  4255                           ;incstack = 0
  4256  001D94  0101               	movlb	1	; () banked
  4257  001D96  EE20 F035          	lfsr	2,53
  4258  001D9A  0101               	movlb	1	; () banked
  4259  001D9C  5182               	movf	check_msg@qptr& (0+255),w,b
  4260  001D9E  26D9               	addwf	fsr2l,f,c
  4261  001DA0  0101               	movlb	1	; () banked
  4262  001DA2  5183               	movf	(check_msg@qptr+1)& (0+255),w,b
  4263  001DA4  22DA               	addwfc	fsr2h,f,c
  4264  001DA6  50DF               	movf	indf2,w,c
  4265  001DA8  0101               	movlb	1	; () banked
  4266  001DAA  6F84               	movwf	??_check_msg& (0+255),b
  4267  001DAC  0101               	movlb	1	; () banked
  4268  001DAE  5184               	movf	??_check_msg& (0+255),w,b
  4269  001DB0  0D0D               	mullw	13
  4270  001DB2  50F3               	movf	prodl,w,c
  4271  001DB4  0101               	movlb	1	; () banked
  4272  001DB6  0101               	movlb	1	; () banked
  4273  001DB8  2582               	addwf	check_msg@qptr& (0+255),w,b
  4274  001DBA  6ED9               	movwf	fsr2l,c
  4275  001DBC  50F4               	movf	prodh,w,c
  4276  001DBE  0101               	movlb	1	; () banked
  4277  001DC0  0101               	movlb	1	; () banked
  4278  001DC2  2183               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4279  001DC4  6EDA               	movwf	fsr2h,c
  4280  001DC6  50DF               	movf	indf2,w,c
  4281  001DC8  0012               	return	
  4282  001DCA                     __end_of_check_msg:
  4283                           	opt stack 0
  4284                           tblptru	equ	0xFF8
  4285                           prodh	equ	0xFF4
  4286                           prodl	equ	0xFF3
  4287                           intcon	equ	0xFF2
  4288                           postinc0	equ	0xFEE
  4289                           wreg	equ	0xFE8
  4290                           indf1	equ	0xFE7
  4291                           fsr1h	equ	0xFE2
  4292                           fsr1l	equ	0xFE1
  4293                           indf2	equ	0xFDF
  4294                           postinc2	equ	0xFDE
  4295                           postdec2	equ	0xFDD
  4296                           fsr2h	equ	0xFDA
  4297                           fsr2l	equ	0xFD9
  4298                           status	equ	0xFD8
  4299                           
  4300 ;; *************** function _Delay1KTCYx *****************
  4301 ;; Defined at:
  4302 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;  unit            1    wreg     unsigned char 
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;  unit            1    0[BANK1 ] unsigned char 
  4307 ;; Return value:  Size  Location     Type
  4308 ;;		None               void
  4309 ;; Registers used:
  4310 ;;		wreg
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4316 ;;      Params:         0       0       0       0       0
  4317 ;;      Locals:         0       0       1       0       0
  4318 ;;      Temps:          0       0       0       0       0
  4319 ;;      Totals:         0       0       1       0       0
  4320 ;;Total ram usage:        1 bytes
  4321 ;; Hardware stack levels used:    1
  4322 ;; Hardware stack levels required when called:   10
  4323 ;; This function calls:
  4324 ;;		Nothing
  4325 ;; This function is called by:
  4326 ;;		_block_on_To_msgqueues
  4327 ;; This function uses a non-reentrant model
  4328 ;;
  4329                           
  4330                           	psect	text24
  4331  001F26                     __ptext24:
  4332                           	opt stack 0
  4333  001F26                     _Delay1KTCYx:
  4334                           	opt stack 18
  4335                           
  4336                           ; BSR set to: 1
  4337                           ;incstack = 0
  4338                           ;Delay1KTCYx@unit stored from wreg
  4339  001F26  CFE8 F182          	movff	wreg,Delay1KTCYx@unit
  4340  001F2A                     l878:
  4341  001F2A  0EFA               	movlw	250
  4342  001F2C                     u2757:
  4343  001F2C  F000               	nop	
  4344  001F2E  2EE8               	decfsz	wreg,f,c
  4345  001F30  D7FD               	goto	u2757
  4346  001F32  0101               	movlb	1	; () banked
  4347  001F34  0101               	movlb	1	; () banked
  4348  001F36  2F82               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4349  001F38  D7F8               	goto	l878
  4350  001F3A  0012               	return	
  4351  001F3C                     __end_of_Delay1KTCYx:
  4352                           	opt stack 0
  4353                           tblptru	equ	0xFF8
  4354                           prodh	equ	0xFF4
  4355                           prodl	equ	0xFF3
  4356                           intcon	equ	0xFF2
  4357                           postinc0	equ	0xFEE
  4358                           wreg	equ	0xFE8
  4359                           indf1	equ	0xFE7
  4360                           fsr1h	equ	0xFE2
  4361                           fsr1l	equ	0xFE1
  4362                           indf2	equ	0xFDF
  4363                           postinc2	equ	0xFDE
  4364                           postdec2	equ	0xFDD
  4365                           fsr2h	equ	0xFDA
  4366                           fsr2l	equ	0xFD9
  4367                           status	equ	0xFD8
  4368                           
  4369 ;; *************** function _ToMainLow_recvmsg *****************
  4370 ;; Defined at:
  4371 ;;		line 112 in file "../src/messages.c"
  4372 ;; Parameters:    Size  Location     Type
  4373 ;;  maxlength       1    wreg     unsigned char 
  4374 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4375 ;;		 -> main@msgtype(1), 
  4376 ;;  data            2   26[BANK1 ] PTR void 
  4377 ;;		 -> main@msgbuffer(11), 
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      char 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4389 ;;      Params:         0       0       4       0       0
  4390 ;;      Locals:         0       0       1       0       0
  4391 ;;      Temps:          0       0       0       0       0
  4392 ;;      Totals:         0       0       5       0       0
  4393 ;;Total ram usage:        5 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:   12
  4396 ;; This function calls:
  4397 ;;		_recv_msg
  4398 ;; This function is called by:
  4399 ;;		_main
  4400 ;; This function uses a non-reentrant model
  4401 ;;
  4402                           
  4403                           	psect	text25
  4404  001B74                     __ptext25:
  4405                           	opt stack 0
  4406  001B74                     _ToMainLow_recvmsg:
  4407                           	opt stack 17
  4408                           
  4409                           ; BSR set to: 1
  4410                           ;incstack = 0
  4411                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4412  001B74  CFE8 F19E          	movff	wreg,ToMainLow_recvmsg@maxlength
  4413                           
  4414                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4415  001B78  0101               	movlb	1	; () banked
  4416  001B7A  0E01               	movlw	high _ToMainLow_MQ
  4417  001B7C  0101               	movlb	1	; () banked
  4418  001B7E  0101               	movlb	1	; () banked
  4419  001B80  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  4420  001B82  0101               	movlb	1	; () banked
  4421  001B84  0E4C               	movlw	low _ToMainLow_MQ
  4422  001B86  0101               	movlb	1	; () banked
  4423  001B88  0101               	movlb	1	; () banked
  4424  001B8A  6F8C               	movwf	recv_msg@qptr& (0+255),b
  4425  001B8C  C19E  F18E         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4426  001B90  0101               	movlb	1	; () banked
  4427  001B92  0101               	movlb	1	; () banked
  4428  001B94  C19B  F190         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4429  001B98  0101               	movlb	1	; () banked
  4430  001B9A  0101               	movlb	1	; () banked
  4431  001B9C  C19A  F18F         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4432  001BA0  0101               	movlb	1	; () banked
  4433  001BA2  0101               	movlb	1	; () banked
  4434  001BA4  C19D  F192         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4435  001BA8  0101               	movlb	1	; () banked
  4436  001BAA  0101               	movlb	1	; () banked
  4437  001BAC  C19C  F191         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4438  001BB0  EC2F  F006         	call	_recv_msg	;wreg free
  4439  001BB4  0012               	return	
  4440  001BB6                     __end_of_ToMainLow_recvmsg:
  4441                           	opt stack 0
  4442                           tblptru	equ	0xFF8
  4443                           prodh	equ	0xFF4
  4444                           prodl	equ	0xFF3
  4445                           intcon	equ	0xFF2
  4446                           postinc0	equ	0xFEE
  4447                           wreg	equ	0xFE8
  4448                           indf1	equ	0xFE7
  4449                           fsr1h	equ	0xFE2
  4450                           fsr1l	equ	0xFE1
  4451                           indf2	equ	0xFDF
  4452                           postinc2	equ	0xFDE
  4453                           postdec2	equ	0xFDD
  4454                           fsr2h	equ	0xFDA
  4455                           fsr2l	equ	0xFD9
  4456                           status	equ	0xFD8
  4457                           
  4458 ;; *************** function _ToMainHigh_recvmsg *****************
  4459 ;; Defined at:
  4460 ;;		line 135 in file "../src/messages.c"
  4461 ;; Parameters:    Size  Location     Type
  4462 ;;  maxlength       1    wreg     unsigned char 
  4463 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4464 ;;		 -> main@msgtype(1), 
  4465 ;;  data            2   26[BANK1 ] PTR void 
  4466 ;;		 -> main@msgbuffer(11), 
  4467 ;; Auto vars:     Size  Location     Type
  4468 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4469 ;; Return value:  Size  Location     Type
  4470 ;;                  1    wreg      char 
  4471 ;; Registers used:
  4472 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4473 ;; Tracked objects:
  4474 ;;		On entry : 0/0
  4475 ;;		On exit  : 0/0
  4476 ;;		Unchanged: 0/0
  4477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4478 ;;      Params:         0       0       4       0       0
  4479 ;;      Locals:         0       0       1       0       0
  4480 ;;      Temps:          0       0       0       0       0
  4481 ;;      Totals:         0       0       5       0       0
  4482 ;;Total ram usage:        5 bytes
  4483 ;; Hardware stack levels used:    1
  4484 ;; Hardware stack levels required when called:   12
  4485 ;; This function calls:
  4486 ;;		_recv_msg
  4487 ;; This function is called by:
  4488 ;;		_main
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text26
  4493  001BB6                     __ptext26:
  4494                           	opt stack 0
  4495  001BB6                     _ToMainHigh_recvmsg:
  4496                           	opt stack 17
  4497                           
  4498                           ;incstack = 0
  4499                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4500  001BB6  CFE8 F19E          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4501                           
  4502                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4503  001BBA  0100               	movlb	0	; () banked
  4504  001BBC  0E00               	movlw	high _ToMainHigh_MQ
  4505  001BBE  0101               	movlb	1	; () banked
  4506  001BC0  0101               	movlb	1	; () banked
  4507  001BC2  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  4508  001BC4  0100               	movlb	0	; () banked
  4509  001BC6  0E80               	movlw	low _ToMainHigh_MQ
  4510  001BC8  0101               	movlb	1	; () banked
  4511  001BCA  0101               	movlb	1	; () banked
  4512  001BCC  6F8C               	movwf	recv_msg@qptr& (0+255),b
  4513  001BCE  C19E  F18E         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4514  001BD2  0101               	movlb	1	; () banked
  4515  001BD4  0101               	movlb	1	; () banked
  4516  001BD6  C19B  F190         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4517  001BDA  0101               	movlb	1	; () banked
  4518  001BDC  0101               	movlb	1	; () banked
  4519  001BDE  C19A  F18F         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4520  001BE2  0101               	movlb	1	; () banked
  4521  001BE4  0101               	movlb	1	; () banked
  4522  001BE6  C19D  F192         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4523  001BEA  0101               	movlb	1	; () banked
  4524  001BEC  0101               	movlb	1	; () banked
  4525  001BEE  C19C  F191         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4526  001BF2  EC2F  F006         	call	_recv_msg	;wreg free
  4527  001BF6  0012               	return	
  4528  001BF8                     __end_of_ToMainHigh_recvmsg:
  4529                           	opt stack 0
  4530                           tblptru	equ	0xFF8
  4531                           prodh	equ	0xFF4
  4532                           prodl	equ	0xFF3
  4533                           intcon	equ	0xFF2
  4534                           postinc0	equ	0xFEE
  4535                           wreg	equ	0xFE8
  4536                           indf1	equ	0xFE7
  4537                           fsr1h	equ	0xFE2
  4538                           fsr1l	equ	0xFE1
  4539                           indf2	equ	0xFDF
  4540                           postinc2	equ	0xFDE
  4541                           postdec2	equ	0xFDD
  4542                           fsr2h	equ	0xFDA
  4543                           fsr2l	equ	0xFD9
  4544                           status	equ	0xFD8
  4545                           
  4546 ;; *************** function _recv_msg *****************
  4547 ;; Defined at:
  4548 ;;		line 63 in file "../src/messages.c"
  4549 ;; Parameters:    Size  Location     Type
  4550 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4551 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4552 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4553 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4554 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4555 ;;  data            2   15[BANK1 ] PTR void 
  4556 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4557 ;; Auto vars:     Size  Location     Type
  4558 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4559 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4560 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4561 ;;  tlength         2   20[BANK1 ] unsigned int 
  4562 ;;  slot            1   19[BANK1 ] unsigned char 
  4563 ;; Return value:  Size  Location     Type
  4564 ;;                  1    wreg      char 
  4565 ;; Registers used:
  4566 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4567 ;; Tracked objects:
  4568 ;;		On entry : 0/0
  4569 ;;		On exit  : 0/0
  4570 ;;		Unchanged: 0/0
  4571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4572 ;;      Params:         0       0       7       0       0
  4573 ;;      Locals:         0       0       5       0       0
  4574 ;;      Temps:          0       0       2       0       0
  4575 ;;      Totals:         0       0      14       0       0
  4576 ;;Total ram usage:       14 bytes
  4577 ;; Hardware stack levels used:    1
  4578 ;; Hardware stack levels required when called:   11
  4579 ;; This function calls:
  4580 ;;		_memcpy
  4581 ;; This function is called by:
  4582 ;;		_ToMainLow_recvmsg
  4583 ;;		_ToMainHigh_recvmsg
  4584 ;;		_FromMainLow_recvmsg
  4585 ;; This function uses a non-reentrant model
  4586 ;;
  4587                           
  4588                           	psect	text27
  4589  000C5E                     __ptext27:
  4590                           	opt stack 0
  4591  000C5E                     _recv_msg:
  4592                           	opt stack 17
  4593                           
  4594                           ;messages.c: 64: unsigned char slot;
  4595                           ;messages.c: 68: msg *qmsg;
  4596                           ;messages.c: 69: size_t tlength;
  4597                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4598                           
  4599                           ;incstack = 0
  4600  000C5E  0101               	movlb	1	; () banked
  4601  000C60  EE20 F035          	lfsr	2,53
  4602  000C64  0101               	movlb	1	; () banked
  4603  000C66  518C               	movf	recv_msg@qptr& (0+255),w,b
  4604  000C68  26D9               	addwf	fsr2l,f,c
  4605  000C6A  0101               	movlb	1	; () banked
  4606  000C6C  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4607  000C6E  22DA               	addwfc	fsr2h,f,c
  4608  000C70  50DF               	movf	indf2,w,c
  4609  000C72  0101               	movlb	1	; () banked
  4610  000C74  0101               	movlb	1	; () banked
  4611  000C76  6F95               	movwf	recv_msg@slot& (0+255),b
  4612                           
  4613                           ; BSR set to: 1
  4614                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4615  000C78  0101               	movlb	1	; () banked
  4616  000C7A  0101               	movlb	1	; () banked
  4617  000C7C  5195               	movf	recv_msg@slot& (0+255),w,b
  4618  000C7E  0D0D               	mullw	13
  4619  000C80  50F3               	movf	prodl,w,c
  4620  000C82  0101               	movlb	1	; () banked
  4621  000C84  0101               	movlb	1	; () banked
  4622  000C86  258C               	addwf	recv_msg@qptr& (0+255),w,b
  4623  000C88  0101               	movlb	1	; () banked
  4624  000C8A  0101               	movlb	1	; () banked
  4625  000C8C  6F98               	movwf	recv_msg@qmsg& (0+255),b
  4626  000C8E  50F4               	movf	prodh,w,c
  4627  000C90  0101               	movlb	1	; () banked
  4628  000C92  0101               	movlb	1	; () banked
  4629  000C94  218D               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4630  000C96  0101               	movlb	1	; () banked
  4631  000C98  6F99               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4632                           
  4633                           ; BSR set to: 1
  4634                           ;messages.c: 74: if (qmsg->full == 1) {
  4635  000C9A  0E01               	movlw	1
  4636  000C9C  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  4637  000CA0  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4638  000CA4  62DF               	cpfseq	indf2,c
  4639  000CA6  D074               	goto	l3664
  4640                           
  4641                           ; BSR set to: 1
  4642                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4643  000CA8  0101               	movlb	1	; () banked
  4644  000CAA  EE20 F001          	lfsr	2,1
  4645  000CAE  0101               	movlb	1	; () banked
  4646  000CB0  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4647  000CB2  26D9               	addwf	fsr2l,f,c
  4648  000CB4  0101               	movlb	1	; () banked
  4649  000CB6  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4650  000CB8  22DA               	addwfc	fsr2h,f,c
  4651  000CBA  50DF               	movf	indf2,w,c
  4652  000CBC  0101               	movlb	1	; () banked
  4653  000CBE  0101               	movlb	1	; () banked
  4654  000CC0  5D8E               	subwf	recv_msg@maxlength& (0+255),w,b
  4655  000CC2  B0D8               	btfsc	status,0,c
  4656  000CC4  D002               	goto	l3648
  4657                           
  4658                           ; BSR set to: 1
  4659                           ;messages.c: 77: return (-3);
  4660  000CC6  0EFD               	movlw	253
  4661  000CC8  0012               	return	
  4662  000CCA                     l3648:
  4663                           
  4664                           ; BSR set to: 1
  4665                           ;messages.c: 78: }
  4666                           ;messages.c: 80: tlength = qmsg->length;
  4667  000CCA  0101               	movlb	1	; () banked
  4668  000CCC  EE20 F001          	lfsr	2,1
  4669  000CD0  0101               	movlb	1	; () banked
  4670  000CD2  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4671  000CD4  26D9               	addwf	fsr2l,f,c
  4672  000CD6  0101               	movlb	1	; () banked
  4673  000CD8  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4674  000CDA  22DA               	addwfc	fsr2h,f,c
  4675  000CDC  50DF               	movf	indf2,w,c
  4676  000CDE  0101               	movlb	1	; () banked
  4677  000CE0  6F93               	movwf	??_recv_msg& (0+255),b
  4678  000CE2  0101               	movlb	1	; () banked
  4679  000CE4  5193               	movf	??_recv_msg& (0+255),w,b
  4680  000CE6  0101               	movlb	1	; () banked
  4681  000CE8  0101               	movlb	1	; () banked
  4682  000CEA  6F96               	movwf	recv_msg@tlength& (0+255),b
  4683  000CEC  0101               	movlb	1	; () banked
  4684  000CEE  6B97               	clrf	(recv_msg@tlength+1)& (0+255),b
  4685                           
  4686                           ; BSR set to: 1
  4687                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4688  000CF0  0101               	movlb	1	; () banked
  4689  000CF2  0101               	movlb	1	; () banked
  4690  000CF4  C192  F183         	movff	recv_msg@data+1,memcpy@d1+1
  4691  000CF8  0101               	movlb	1	; () banked
  4692  000CFA  0101               	movlb	1	; () banked
  4693  000CFC  C191  F182         	movff	recv_msg@data,memcpy@d1
  4694  000D00  0E03               	movlw	3
  4695  000D02  0101               	movlb	1	; () banked
  4696  000D04  0101               	movlb	1	; () banked
  4697  000D06  2598               	addwf	recv_msg@qmsg& (0+255),w,b
  4698  000D08  0101               	movlb	1	; () banked
  4699  000D0A  6F93               	movwf	??_recv_msg& (0+255),b
  4700  000D0C  0E00               	movlw	0
  4701  000D0E  0101               	movlb	1	; () banked
  4702  000D10  0101               	movlb	1	; () banked
  4703  000D12  2199               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4704  000D14  0101               	movlb	1	; () banked
  4705  000D16  6F94               	movwf	(??_recv_msg+1)& (0+255),b
  4706  000D18  C193  F184         	movff	??_recv_msg,memcpy@s1
  4707  000D1C  C194  F185         	movff	??_recv_msg+1,memcpy@s1+1
  4708  000D20  C196  F186         	movff	recv_msg@tlength,memcpy@n
  4709  000D24  C197  F187         	movff	recv_msg@tlength+1,memcpy@n+1
  4710  000D28  ECD3  F00C         	call	_memcpy	;wreg free
  4711                           
  4712                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4713  000D2C  0101               	movlb	1	; () banked
  4714  000D2E  EE20 F035          	lfsr	2,53
  4715  000D32  0101               	movlb	1	; () banked
  4716  000D34  518C               	movf	recv_msg@qptr& (0+255),w,b
  4717  000D36  26D9               	addwf	fsr2l,f,c
  4718  000D38  0101               	movlb	1	; () banked
  4719  000D3A  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4720  000D3C  22DA               	addwfc	fsr2h,f,c
  4721  000D3E  0101               	movlb	1	; () banked
  4722  000D40  EE10 F035          	lfsr	1,53
  4723  000D44  0101               	movlb	1	; () banked
  4724  000D46  518C               	movf	recv_msg@qptr& (0+255),w,b
  4725  000D48  26E1               	addwf	fsr1l,f,c
  4726  000D4A  0101               	movlb	1	; () banked
  4727  000D4C  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4728  000D4E  22E2               	addwfc	fsr1h,f,c
  4729  000D50  50E7               	movf	indf1,w,c
  4730  000D52  0101               	movlb	1	; () banked
  4731  000D54  6F93               	movwf	??_recv_msg& (0+255),b
  4732  000D56  0101               	movlb	1	; () banked
  4733  000D58  2993               	incf	??_recv_msg& (0+255),w,b
  4734  000D5A  0B03               	andlw	3
  4735  000D5C  6EDF               	movwf	indf2,c
  4736                           
  4737                           ; BSR set to: 1
  4738                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4739  000D5E  0101               	movlb	1	; () banked
  4740  000D60  EE20 F002          	lfsr	2,2
  4741  000D64  0101               	movlb	1	; () banked
  4742  000D66  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4743  000D68  26D9               	addwf	fsr2l,f,c
  4744  000D6A  0101               	movlb	1	; () banked
  4745  000D6C  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4746  000D6E  22DA               	addwfc	fsr2h,f,c
  4747  000D70  C18F  FFE1         	movff	recv_msg@msgtype,fsr1l
  4748  000D74  C190  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4749  000D78  CFDF FFE7          	movff	indf2,indf1
  4750                           
  4751                           ; BSR set to: 1
  4752                           ;messages.c: 91: qmsg->full = 0;
  4753  000D7C  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  4754  000D80  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4755  000D84  0E00               	movlw	0
  4756  000D86  6EDF               	movwf	indf2,c
  4757                           
  4758                           ; BSR set to: 1
  4759                           ;messages.c: 92: return (tlength);
  4760  000D88  0101               	movlb	1	; () banked
  4761  000D8A  0101               	movlb	1	; () banked
  4762  000D8C  5196               	movf	recv_msg@tlength& (0+255),w,b
  4763  000D8E  0012               	return	
  4764  000D90                     l3664:
  4765                           
  4766                           ; BSR set to: 1
  4767                           ;messages.c: 94: return (-4);
  4768  000D90  0EFC               	movlw	252
  4769  000D92  0012               	return	
  4770  000D94                     __end_of_recv_msg:
  4771                           	opt stack 0
  4772                           tblptru	equ	0xFF8
  4773                           prodh	equ	0xFF4
  4774                           prodl	equ	0xFF3
  4775                           intcon	equ	0xFF2
  4776                           postinc0	equ	0xFEE
  4777                           wreg	equ	0xFE8
  4778                           indf1	equ	0xFE7
  4779                           fsr1h	equ	0xFE2
  4780                           fsr1l	equ	0xFE1
  4781                           indf2	equ	0xFDF
  4782                           postinc2	equ	0xFDE
  4783                           postdec2	equ	0xFDD
  4784                           fsr2h	equ	0xFDA
  4785                           fsr2l	equ	0xFD9
  4786                           status	equ	0xFD8
  4787                           
  4788 ;; *************** function _memcpy *****************
  4789 ;; Defined at:
  4790 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4791 ;; Parameters:    Size  Location     Type
  4792 ;;  d1              2    0[BANK1 ] PTR void 
  4793 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4794 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4795 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4796 ;;  s1              2    2[BANK1 ] PTR const void 
  4797 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4798 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4799 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4800 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4801 ;;		 -> main@uc(23), 
  4802 ;;  n               2    4[BANK1 ] unsigned int 
  4803 ;; Auto vars:     Size  Location     Type
  4804 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4805 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4806 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4807 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4808 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4809 ;;		 -> main@uc(23), 
  4810 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4811 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4812 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4813 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4814 ;; Return value:  Size  Location     Type
  4815 ;;                  2    0[BANK1 ] PTR void 
  4816 ;; Registers used:
  4817 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4818 ;; Tracked objects:
  4819 ;;		On entry : 0/0
  4820 ;;		On exit  : 0/0
  4821 ;;		Unchanged: 0/0
  4822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4823 ;;      Params:         0       0       6       0       0
  4824 ;;      Locals:         0       0       4       0       0
  4825 ;;      Temps:          0       0       0       0       0
  4826 ;;      Totals:         0       0      10       0       0
  4827 ;;Total ram usage:       10 bytes
  4828 ;; Hardware stack levels used:    1
  4829 ;; Hardware stack levels required when called:   10
  4830 ;; This function calls:
  4831 ;;		Nothing
  4832 ;; This function is called by:
  4833 ;;		_send_msg
  4834 ;;		_recv_msg
  4835 ;; This function uses a non-reentrant model
  4836 ;;
  4837                           
  4838                           	psect	text28
  4839  0019A6                     __ptext28:
  4840                           	opt stack 0
  4841  0019A6                     _memcpy:
  4842                           	opt stack 16
  4843                           
  4844                           ; BSR set to: 1
  4845                           ;incstack = 0
  4846  0019A6  0101               	movlb	1	; () banked
  4847  0019A8  0101               	movlb	1	; () banked
  4848  0019AA  C185  F18B         	movff	memcpy@s1+1,memcpy@s+1
  4849  0019AE  0101               	movlb	1	; () banked
  4850  0019B0  0101               	movlb	1	; () banked
  4851  0019B2  C184  F18A         	movff	memcpy@s1,memcpy@s
  4852  0019B6  0101               	movlb	1	; () banked
  4853  0019B8  0101               	movlb	1	; () banked
  4854  0019BA  C183  F189         	movff	memcpy@d1+1,memcpy@d+1
  4855  0019BE  0101               	movlb	1	; () banked
  4856  0019C0  0101               	movlb	1	; () banked
  4857  0019C2  C182  F188         	movff	memcpy@d1,memcpy@d
  4858  0019C6  D012               	goto	l3634
  4859  0019C8                     l3628:
  4860                           
  4861                           ; BSR set to: 1
  4862  0019C8  C18A  FFD9         	movff	memcpy@s,fsr2l
  4863  0019CC  C18B  FFDA         	movff	memcpy@s+1,fsr2h
  4864  0019D0  C188  FFE1         	movff	memcpy@d,fsr1l
  4865  0019D4  C189  FFE2         	movff	memcpy@d+1,fsr1h
  4866  0019D8  CFDF FFE7          	movff	indf2,indf1
  4867                           
  4868                           ; BSR set to: 1
  4869  0019DC  0101               	movlb	1	; () banked
  4870  0019DE  0101               	movlb	1	; () banked
  4871  0019E0  4B8A               	infsnz	memcpy@s& (0+255),f,b
  4872  0019E2  2B8B               	incf	(memcpy@s+1)& (0+255),f,b
  4873                           
  4874                           ; BSR set to: 1
  4875  0019E4  0101               	movlb	1	; () banked
  4876  0019E6  0101               	movlb	1	; () banked
  4877  0019E8  4B88               	infsnz	memcpy@d& (0+255),f,b
  4878  0019EA  2B89               	incf	(memcpy@d+1)& (0+255),f,b
  4879  0019EC                     l3634:
  4880                           
  4881                           ; BSR set to: 1
  4882  0019EC  0101               	movlb	1	; () banked
  4883  0019EE  0101               	movlb	1	; () banked
  4884  0019F0  0786               	decf	memcpy@n& (0+255),f,b
  4885  0019F2  A0D8               	btfss	status,0,c
  4886  0019F4  0787               	decf	(memcpy@n+1)& (0+255),f,b
  4887  0019F6  0101               	movlb	1	; () banked
  4888  0019F8  2986               	incf	memcpy@n& (0+255),w,b
  4889  0019FA  B4D8               	btfsc	status,2,c
  4890  0019FC  2987               	incf	(memcpy@n+1)& (0+255),w,b
  4891  0019FE  B4D8               	btfsc	status,2,c
  4892                           
  4893                           ; BSR set to: 1
  4894                           
  4895                           ; BSR set to: 1
  4896                           ;	Return value of _memcpy is never used
  4897  001A00  0012               	return	
  4898  001A02  D7E2               	goto	l3628
  4899  001A04                     __end_of_memcpy:
  4900                           	opt stack 0
  4901                           tblptru	equ	0xFF8
  4902                           prodh	equ	0xFF4
  4903                           prodl	equ	0xFF3
  4904                           intcon	equ	0xFF2
  4905                           postinc0	equ	0xFEE
  4906                           wreg	equ	0xFE8
  4907                           indf1	equ	0xFE7
  4908                           fsr1h	equ	0xFE2
  4909                           fsr1l	equ	0xFE1
  4910                           indf2	equ	0xFDF
  4911                           postinc2	equ	0xFDE
  4912                           postdec2	equ	0xFDD
  4913                           fsr2h	equ	0xFDA
  4914                           fsr2l	equ	0xFD9
  4915                           status	equ	0xFD8
  4916                           
  4917 ;; *************** function _OpenUSART *****************
  4918 ;; Defined at:
  4919 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  config          1    wreg     unsigned char 
  4922 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  config          1    5[BANK1 ] unsigned char 
  4925 ;; Return value:  Size  Location     Type
  4926 ;;		None               void
  4927 ;; Registers used:
  4928 ;;		wreg, status,2
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4934 ;;      Params:         0       0       2       0       0
  4935 ;;      Locals:         0       0       1       0       0
  4936 ;;      Temps:          0       0       3       0       0
  4937 ;;      Totals:         0       0       6       0       0
  4938 ;;Total ram usage:        6 bytes
  4939 ;; Hardware stack levels used:    1
  4940 ;; Hardware stack levels required when called:   10
  4941 ;; This function calls:
  4942 ;;		Nothing
  4943 ;; This function is called by:
  4944 ;;		_main
  4945 ;; This function uses a non-reentrant model
  4946 ;;
  4947                           
  4948                           	psect	text29
  4949  0013D0                     __ptext29:
  4950                           	opt stack 0
  4951  0013D0                     _OpenUSART:
  4952                           	opt stack 19
  4953                           
  4954                           ; BSR set to: 1
  4955                           ;incstack = 0
  4956                           ;OpenUSART@config stored from wreg
  4957  0013D0  CFE8 F187          	movff	wreg,OpenUSART@config
  4958  0013D4  0E00               	movlw	0
  4959  0013D6  6EAC               	movwf	4012,c	;volatile
  4960  0013D8  0E00               	movlw	0
  4961  0013DA  6EAB               	movwf	4011,c	;volatile
  4962  0013DC  0101               	movlb	1	; () banked
  4963  0013DE  0101               	movlb	1	; () banked
  4964  0013E0  B187               	btfsc	OpenUSART@config& (0+255),0,b
  4965                           
  4966                           ; BSR set to: 1
  4967  0013E2  88AC               	bsf	4012,4,c	;volatile
  4968                           
  4969                           ; BSR set to: 1
  4970                           
  4971                           ; BSR set to: 1
  4972  0013E4  0101               	movlb	1	; () banked
  4973  0013E6  0101               	movlb	1	; () banked
  4974  0013E8  A387               	btfss	OpenUSART@config& (0+255),1,b
  4975  0013EA  D002               	goto	l3480
  4976                           
  4977                           ; BSR set to: 1
  4978  0013EC  8CAC               	bsf	4012,6,c	;volatile
  4979  0013EE  8CAB               	bsf	4011,6,c	;volatile
  4980  0013F0                     l3480:
  4981                           
  4982                           ; BSR set to: 1
  4983  0013F0  0101               	movlb	1	; () banked
  4984  0013F2  0101               	movlb	1	; () banked
  4985  0013F4  B587               	btfsc	OpenUSART@config& (0+255),2,b
  4986                           
  4987                           ; BSR set to: 1
  4988  0013F6  8EAC               	bsf	4012,7,c	;volatile
  4989                           
  4990                           ; BSR set to: 1
  4991                           
  4992                           ; BSR set to: 1
  4993  0013F8  0101               	movlb	1	; () banked
  4994  0013FA  0101               	movlb	1	; () banked
  4995  0013FC  A787               	btfss	OpenUSART@config& (0+255),3,b
  4996  0013FE  D002               	goto	l634
  4997                           
  4998                           ; BSR set to: 1
  4999  001400  88AB               	bsf	4011,4,c	;volatile
  5000  001402  D001               	goto	l3488
  5001  001404                     l634:
  5002                           
  5003                           ; BSR set to: 1
  5004  001404  8AAB               	bsf	4011,5,c	;volatile
  5005  001406                     l3488:
  5006                           
  5007                           ; BSR set to: 1
  5008  001406  0101               	movlb	1	; () banked
  5009  001408  0101               	movlb	1	; () banked
  5010  00140A  B987               	btfsc	OpenUSART@config& (0+255),4,b
  5011                           
  5012                           ; BSR set to: 1
  5013  00140C  84AC               	bsf	4012,2,c	;volatile
  5014                           
  5015                           ; BSR set to: 1
  5016  00140E  989E               	bcf	3998,4,c	;volatile
  5017                           
  5018                           ; BSR set to: 1
  5019  001410  0101               	movlb	1	; () banked
  5020  001412  0101               	movlb	1	; () banked
  5021  001414  BB87               	btfsc	OpenUSART@config& (0+255),5,b
  5022                           
  5023                           ; BSR set to: 1
  5024  001416  86AB               	bsf	4011,3,c	;volatile
  5025                           
  5026                           ; BSR set to: 1
  5027                           
  5028                           ; BSR set to: 1
  5029  001418  0101               	movlb	1	; () banked
  5030  00141A  0101               	movlb	1	; () banked
  5031  00141C  AD87               	btfss	OpenUSART@config& (0+255),6,b
  5032  00141E  D002               	goto	l638
  5033                           
  5034                           ; BSR set to: 1
  5035  001420  8A9D               	bsf	3997,5,c	;volatile
  5036  001422  D001               	goto	l639
  5037  001424                     l638:
  5038                           
  5039                           ; BSR set to: 1
  5040  001424  9A9D               	bcf	3997,5,c	;volatile
  5041  001426                     l639:
  5042                           
  5043                           ; BSR set to: 1
  5044  001426  9A9E               	bcf	3998,5,c	;volatile
  5045                           
  5046                           ; BSR set to: 1
  5047  001428  0101               	movlb	1	; () banked
  5048  00142A  0101               	movlb	1	; () banked
  5049  00142C  AF87               	btfss	OpenUSART@config& (0+255),7,b
  5050  00142E  D002               	goto	l640
  5051                           
  5052                           ; BSR set to: 1
  5053  001430  889D               	bsf	3997,4,c	;volatile
  5054  001432  D001               	goto	l641
  5055  001434                     l640:
  5056                           
  5057                           ; BSR set to: 1
  5058  001434  989D               	bcf	3997,4,c	;volatile
  5059  001436                     l641:
  5060                           
  5061                           ; BSR set to: 1
  5062  001436  C182  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5063                           
  5064                           ; BSR set to: 1
  5065  00143A  0101               	movlb	1	; () banked
  5066  00143C  C183  F184         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5067  001440  C184  F185         	movff	??_OpenUSART,??_OpenUSART+1
  5068  001444  0101               	movlb	1	; () banked
  5069  001446  6B86               	clrf	(??_OpenUSART+2)& (0+255),b
  5070  001448  0101               	movlb	1	; () banked
  5071  00144A  5185               	movf	(??_OpenUSART+1)& (0+255),w,b
  5072  00144C  6EB0               	movwf	4016,c	;volatile
  5073                           
  5074                           ; BSR set to: 1
  5075  00144E  8AAC               	bsf	4012,5,c	;volatile
  5076                           
  5077                           ; BSR set to: 1
  5078  001450  8EAB               	bsf	4011,7,c	;volatile
  5079                           
  5080                           ; BSR set to: 1
  5081  001452  9C94               	bcf	3988,6,c	;volatile
  5082                           
  5083                           ; BSR set to: 1
  5084  001454  8E94               	bsf	3988,7,c	;volatile
  5085                           
  5086                           ; BSR set to: 1
  5087  001456  A8AC               	btfss	4012,4,c	;volatile
  5088  001458  0012               	return	
  5089                           
  5090                           ; BSR set to: 1
  5091  00145A  BEAC               	btfsc	4012,7,c	;volatile
  5092  00145C  0012               	return	
  5093                           
  5094                           ; BSR set to: 1
  5095  00145E  8C94               	bsf	3988,6,c	;volatile
  5096  001460  0012               	return	
  5097  001462                     __end_of_OpenUSART:
  5098                           	opt stack 0
  5099                           tblptru	equ	0xFF8
  5100                           prodh	equ	0xFF4
  5101                           prodl	equ	0xFF3
  5102                           intcon	equ	0xFF2
  5103                           postinc0	equ	0xFEE
  5104                           wreg	equ	0xFE8
  5105                           indf1	equ	0xFE7
  5106                           fsr1h	equ	0xFE2
  5107                           fsr1l	equ	0xFE1
  5108                           indf2	equ	0xFDF
  5109                           postinc2	equ	0xFDE
  5110                           postdec2	equ	0xFDD
  5111                           fsr2h	equ	0xFDA
  5112                           fsr2l	equ	0xFD9
  5113                           status	equ	0xFD8
  5114                           
  5115 ;; *************** function _OpenTimer1 *****************
  5116 ;; Defined at:
  5117 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5118 ;; Parameters:    Size  Location     Type
  5119 ;;  config          1    wreg     unsigned char 
  5120 ;; Auto vars:     Size  Location     Type
  5121 ;;  config          1    0[BANK1 ] unsigned char 
  5122 ;; Return value:  Size  Location     Type
  5123 ;;		None               void
  5124 ;; Registers used:
  5125 ;;		wreg, status,2, status,0
  5126 ;; Tracked objects:
  5127 ;;		On entry : 0/0
  5128 ;;		On exit  : 0/0
  5129 ;;		Unchanged: 0/0
  5130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5131 ;;      Params:         0       0       0       0       0
  5132 ;;      Locals:         0       0       1       0       0
  5133 ;;      Temps:          0       0       0       0       0
  5134 ;;      Totals:         0       0       1       0       0
  5135 ;;Total ram usage:        1 bytes
  5136 ;; Hardware stack levels used:    1
  5137 ;; Hardware stack levels required when called:   10
  5138 ;; This function calls:
  5139 ;;		Nothing
  5140 ;; This function is called by:
  5141 ;;		_main
  5142 ;; This function uses a non-reentrant model
  5143 ;;
  5144                           
  5145                           	psect	text30
  5146  001CF0                     __ptext30:
  5147                           	opt stack 0
  5148  001CF0                     _OpenTimer1:
  5149                           	opt stack 19
  5150                           
  5151                           ; BSR set to: 1
  5152                           ;incstack = 0
  5153                           ;OpenTimer1@config stored from wreg
  5154  001CF0  CFE8 F182          	movff	wreg,OpenTimer1@config
  5155  001CF4  0101               	movlb	1	; () banked
  5156  001CF6  0101               	movlb	1	; () banked
  5157  001CF8  5182               	movf	OpenTimer1@config& (0+255),w,b
  5158  001CFA  0B7E               	andlw	126
  5159  001CFC  6ECD               	movwf	4045,c	;volatile
  5160                           
  5161                           ; BSR set to: 1
  5162  001CFE  0101               	movlb	1	; () banked
  5163  001D00  0101               	movlb	1	; () banked
  5164  001D02  AD82               	btfss	OpenTimer1@config& (0+255),6,b
  5165  001D04  D002               	goto	l590
  5166                           
  5167                           ; BSR set to: 1
  5168  001D06  8ECD               	bsf	4045,7,c	;volatile
  5169  001D08  D001               	goto	l3452
  5170  001D0A                     l590:
  5171                           
  5172                           ; BSR set to: 1
  5173  001D0A  9ECD               	bcf	4045,7,c	;volatile
  5174  001D0C                     l3452:
  5175                           
  5176                           ; BSR set to: 1
  5177  001D0C  0E00               	movlw	0
  5178  001D0E  6ECF               	movwf	4047,c	;volatile
  5179  001D10  0E00               	movlw	0
  5180  001D12  6ECE               	movwf	4046,c	;volatile
  5181                           
  5182                           ; BSR set to: 1
  5183  001D14  909E               	bcf	3998,0,c	;volatile
  5184                           
  5185                           ; BSR set to: 1
  5186  001D16  0101               	movlb	1	; () banked
  5187  001D18  0101               	movlb	1	; () banked
  5188  001D1A  AF82               	btfss	OpenTimer1@config& (0+255),7,b
  5189  001D1C  D002               	goto	l592
  5190                           
  5191                           ; BSR set to: 1
  5192  001D1E  809D               	bsf	3997,0,c	;volatile
  5193  001D20  D001               	goto	l593
  5194  001D22                     l592:
  5195                           
  5196                           ; BSR set to: 1
  5197  001D22  909D               	bcf	3997,0,c	;volatile
  5198  001D24                     l593:
  5199                           
  5200                           ; BSR set to: 1
  5201  001D24  80CD               	bsf	4045,0,c	;volatile
  5202                           
  5203                           ; BSR set to: 1
  5204  001D26  0012               	return	
  5205  001D28                     __end_of_OpenTimer1:
  5206                           	opt stack 0
  5207                           tblptru	equ	0xFF8
  5208                           prodh	equ	0xFF4
  5209                           prodl	equ	0xFF3
  5210                           intcon	equ	0xFF2
  5211                           postinc0	equ	0xFEE
  5212                           wreg	equ	0xFE8
  5213                           indf1	equ	0xFE7
  5214                           fsr1h	equ	0xFE2
  5215                           fsr1l	equ	0xFE1
  5216                           indf2	equ	0xFDF
  5217                           postinc2	equ	0xFDE
  5218                           postdec2	equ	0xFDD
  5219                           fsr2h	equ	0xFDA
  5220                           fsr2l	equ	0xFD9
  5221                           status	equ	0xFD8
  5222                           
  5223 ;; *************** function _OpenTimer0 *****************
  5224 ;; Defined at:
  5225 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5226 ;; Parameters:    Size  Location     Type
  5227 ;;  config          1    wreg     unsigned char 
  5228 ;; Auto vars:     Size  Location     Type
  5229 ;;  config          1    0[BANK1 ] unsigned char 
  5230 ;; Return value:  Size  Location     Type
  5231 ;;		None               void
  5232 ;; Registers used:
  5233 ;;		wreg, status,2, status,0
  5234 ;; Tracked objects:
  5235 ;;		On entry : 0/0
  5236 ;;		On exit  : 0/0
  5237 ;;		Unchanged: 0/0
  5238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5239 ;;      Params:         0       0       0       0       0
  5240 ;;      Locals:         0       0       1       0       0
  5241 ;;      Temps:          0       0       0       0       0
  5242 ;;      Totals:         0       0       1       0       0
  5243 ;;Total ram usage:        1 bytes
  5244 ;; Hardware stack levels used:    1
  5245 ;; Hardware stack levels required when called:   10
  5246 ;; This function calls:
  5247 ;;		Nothing
  5248 ;; This function is called by:
  5249 ;;		_main
  5250 ;; This function uses a non-reentrant model
  5251 ;;
  5252                           
  5253                           	psect	text31
  5254  001E94                     __ptext31:
  5255                           	opt stack 0
  5256  001E94                     _OpenTimer0:
  5257                           	opt stack 19
  5258                           
  5259                           ; BSR set to: 1
  5260                           ;incstack = 0
  5261                           ;OpenTimer0@config stored from wreg
  5262  001E94  CFE8 F182          	movff	wreg,OpenTimer0@config
  5263  001E98  0101               	movlb	1	; () banked
  5264  001E9A  0101               	movlb	1	; () banked
  5265  001E9C  5182               	movf	OpenTimer0@config& (0+255),w,b
  5266  001E9E  0B7F               	andlw	127
  5267  001EA0  6ED5               	movwf	4053,c	;volatile
  5268                           
  5269                           ; BSR set to: 1
  5270  001EA2  0E00               	movlw	0
  5271  001EA4  6ED7               	movwf	4055,c	;volatile
  5272                           
  5273                           ; BSR set to: 1
  5274  001EA6  0E00               	movlw	0
  5275  001EA8  6ED6               	movwf	4054,c	;volatile
  5276                           
  5277                           ; BSR set to: 1
  5278  001EAA  94F2               	bcf	intcon,2,c	;volatile
  5279                           
  5280                           ; BSR set to: 1
  5281  001EAC  0101               	movlb	1	; () banked
  5282  001EAE  0101               	movlb	1	; () banked
  5283  001EB0  AF82               	btfss	OpenTimer0@config& (0+255),7,b
  5284  001EB2  D002               	goto	l566
  5285                           
  5286                           ; BSR set to: 1
  5287  001EB4  8AF2               	bsf	intcon,5,c	;volatile
  5288  001EB6  D001               	goto	l567
  5289  001EB8                     l566:
  5290                           
  5291                           ; BSR set to: 1
  5292  001EB8  9AF2               	bcf	intcon,5,c	;volatile
  5293  001EBA                     l567:
  5294                           
  5295                           ; BSR set to: 1
  5296  001EBA  8ED5               	bsf	4053,7,c	;volatile
  5297                           
  5298                           ; BSR set to: 1
  5299  001EBC  0012               	return	
  5300  001EBE                     __end_of_OpenTimer0:
  5301                           	opt stack 0
  5302                           tblptru	equ	0xFF8
  5303                           prodh	equ	0xFF4
  5304                           prodl	equ	0xFF3
  5305                           intcon	equ	0xFF2
  5306                           postinc0	equ	0xFEE
  5307                           wreg	equ	0xFE8
  5308                           indf1	equ	0xFE7
  5309                           fsr1h	equ	0xFE2
  5310                           fsr1l	equ	0xFE1
  5311                           indf2	equ	0xFDF
  5312                           postinc2	equ	0xFDE
  5313                           postdec2	equ	0xFDD
  5314                           fsr2h	equ	0xFDA
  5315                           fsr2l	equ	0xFD9
  5316                           status	equ	0xFD8
  5317                           
  5318 ;; *************** function _InterruptHandlerLow *****************
  5319 ;; Defined at:
  5320 ;;		line 129 in file "../src/interrupts.c"
  5321 ;; Parameters:    Size  Location     Type
  5322 ;;		None
  5323 ;; Auto vars:     Size  Location     Type
  5324 ;;		None
  5325 ;; Return value:  Size  Location     Type
  5326 ;;		None               void
  5327 ;; Registers used:
  5328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5329 ;; Tracked objects:
  5330 ;;		On entry : 0/0
  5331 ;;		On exit  : 0/0
  5332 ;;		Unchanged: 0/0
  5333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5334 ;;      Params:         0       0       0       0       0
  5335 ;;      Locals:         0       0       0       0       0
  5336 ;;      Temps:         17       0       0       0       0
  5337 ;;      Totals:        17       0       0       0       0
  5338 ;;Total ram usage:       17 bytes
  5339 ;; Hardware stack levels used:    1
  5340 ;; Hardware stack levels required when called:    9
  5341 ;; This function calls:
  5342 ;;		_timer1_int_handler
  5343 ;;		_uart_recv_int_handler
  5344 ;;		_uart_send_int_handler
  5345 ;; This function is called by:
  5346 ;;		Interrupt level 1
  5347 ;; This function uses a non-reentrant model
  5348 ;;
  5349                           
  5350                           	psect	intcodelo
  5351  000018                     __pintcodelo:
  5352                           	opt stack 0
  5353  000018                     _InterruptHandlerLow:
  5354                           	opt stack 16
  5355                           
  5356                           ; BSR set to: 1
  5357                           ;incstack = 0
  5358  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  5359  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  5360  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  5361  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  5362  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  5363  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  5364  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  5365  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  5366  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  5367  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  5368  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  5369  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  5370  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  5371  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  5372  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  5373  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  5374  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  5375                           
  5376                           ;interrupts.c: 132: if (PIR1bits.TMR1IF) {
  5377  00005C  A09E               	btfss	3998,0,c	;volatile
  5378  00005E  D003               	goto	i1l3214
  5379                           
  5380                           ;interrupts.c: 133: PIR1bits.TMR1IF = 0;
  5381  000060  909E               	bcf	3998,0,c	;volatile
  5382                           
  5383                           ;interrupts.c: 134: timer1_int_handler();
  5384  000062  EC1B  F00F         	call	_timer1_int_handler	;wreg free
  5385  000066                     i1l3214:
  5386                           
  5387                           ;interrupts.c: 135: }
  5388                           ;interrupts.c: 138: if (PIR1bits.RCIF) {
  5389  000066  AA9E               	btfss	3998,5,c	;volatile
  5390  000068  D003               	goto	i1l3220
  5391                           
  5392                           ;interrupts.c: 139: PIR1bits.RCIF = 0;
  5393  00006A  9A9E               	bcf	3998,5,c	;volatile
  5394                           
  5395                           ;interrupts.c: 140: uart_recv_int_handler();
  5396  00006C  EC0C  F002         	call	_uart_recv_int_handler	;wreg free
  5397  000070                     i1l3220:
  5398                           
  5399                           ;interrupts.c: 141: }
  5400                           ;interrupts.c: 144: if (PIR1bits.TX1IF && PIE1bits.TX1IE) {
  5401  000070  B89E               	btfsc	3998,4,c	;volatile
  5402  000072  A89D               	btfss	3997,4,c	;volatile
  5403  000074  D002               	goto	i1l84
  5404                           
  5405                           ;interrupts.c: 145: uart_send_int_handler();
  5406  000076  EC3C  F00B         	call	_uart_send_int_handler	;wreg free
  5407  00007A                     i1l84:
  5408  00007A  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5409  00007E  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5410  000082  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5411  000086  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5412  00008A  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5413  00008E  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5414  000092  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5415  000096  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5416  00009A  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5417  00009E  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5418  0000A2  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5419  0000A6  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5420  0000AA  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5421  0000AE  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5422  0000B2  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5423  0000B6  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5424  0000BA  C023  FFD8         	movff	??_InterruptHandlerLow,status
  5425  0000BE  0010               	retfie	
  5426  0000C0                     __end_of_InterruptHandlerLow:
  5427                           	opt stack 0
  5428                           pclatu	equ	0xFFB
  5429                           pclath	equ	0xFFA
  5430                           tblptru	equ	0xFF8
  5431                           tblptrh	equ	0xFF7
  5432                           tblptrl	equ	0xFF6
  5433                           tablat	equ	0xFF5
  5434                           prodh	equ	0xFF4
  5435                           prodl	equ	0xFF3
  5436                           intcon	equ	0xFF2
  5437                           postinc0	equ	0xFEE
  5438                           fsr0h	equ	0xFEA
  5439                           fsr0l	equ	0xFE9
  5440                           wreg	equ	0xFE8
  5441                           indf1	equ	0xFE7
  5442                           fsr1h	equ	0xFE2
  5443                           fsr1l	equ	0xFE1
  5444                           bsr	equ	0xFE0
  5445                           indf2	equ	0xFDF
  5446                           postinc2	equ	0xFDE
  5447                           postdec2	equ	0xFDD
  5448                           fsr2h	equ	0xFDA
  5449                           fsr2l	equ	0xFD9
  5450                           status	equ	0xFD8
  5451                           
  5452 ;; *************** function _uart_send_int_handler *****************
  5453 ;; Defined at:
  5454 ;;		line 241 in file "../src/my_uart.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;		None               void
  5461 ;; Registers used:
  5462 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5468 ;;      Params:         0       0       0       0       0
  5469 ;;      Locals:         0       0       0       0       0
  5470 ;;      Temps:          1       0       0       0       0
  5471 ;;      Totals:         1       0       0       0       0
  5472 ;;Total ram usage:        1 bytes
  5473 ;; Hardware stack levels used:    1
  5474 ;; Hardware stack levels required when called:    6
  5475 ;; This function calls:
  5476 ;;		_WriteUSART
  5477 ;; This function is called by:
  5478 ;;		_InterruptHandlerLow
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           
  5482                           	psect	text33
  5483  001678                     __ptext33:
  5484                           	opt stack 0
  5485  001678                     _uart_send_int_handler:
  5486                           	opt stack 18
  5487                           
  5488                           ;my_uart.c: 243: if (uc_ptr->Tx_buflen == 10) {
  5489                           
  5490                           ;incstack = 0
  5491  001678  EE20 F014          	lfsr	2,20
  5492  00167C  5065               	movf	_uc_ptr,w,c
  5493  00167E  26D9               	addwf	fsr2l,f,c
  5494  001680  5066               	movf	_uc_ptr+1,w,c
  5495  001682  22DA               	addwfc	fsr2h,f,c
  5496  001684  0E0A               	movlw	10
  5497  001686  62DF               	cpfseq	indf2,c
  5498  001688  D00A               	goto	i1l3070
  5499                           
  5500                           ;my_uart.c: 244: PIE1bits.TX1IE = 0;
  5501  00168A  989D               	bcf	3997,4,c	;volatile
  5502                           
  5503                           ;my_uart.c: 245: uc_ptr->Tx_buflen = 0;
  5504  00168C  EE20 F014          	lfsr	2,20
  5505  001690  5065               	movf	_uc_ptr,w,c
  5506  001692  26D9               	addwf	fsr2l,f,c
  5507  001694  5066               	movf	_uc_ptr+1,w,c
  5508  001696  22DA               	addwfc	fsr2h,f,c
  5509  001698  0E00               	movlw	0
  5510  00169A  6EDF               	movwf	indf2,c
  5511                           
  5512                           ;my_uart.c: 246: } else if (uc_ptr->Tx_buflen < uc_ptr->msg_length) {
  5513  00169C  0012               	return	
  5514  00169E                     i1l3070:
  5515  00169E  EE20 F014          	lfsr	2,20
  5516  0016A2  5065               	movf	_uc_ptr,w,c
  5517  0016A4  26D9               	addwf	fsr2l,f,c
  5518  0016A6  5066               	movf	_uc_ptr+1,w,c
  5519  0016A8  22DA               	addwfc	fsr2h,f,c
  5520  0016AA  50DF               	movf	indf2,w,c
  5521  0016AC  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  5522  0016AE  EE20 F016          	lfsr	2,22
  5523  0016B2  5065               	movf	_uc_ptr,w,c
  5524  0016B4  26D9               	addwf	fsr2l,f,c
  5525  0016B6  5066               	movf	_uc_ptr+1,w,c
  5526  0016B8  22DA               	addwfc	fsr2h,f,c
  5527  0016BA  50DF               	movf	indf2,w,c
  5528  0016BC  5C02               	subwf	??_uart_send_int_handler,w,c
  5529  0016BE  B0D8               	btfsc	status,0,c
  5530  0016C0  0012               	return	
  5531                           
  5532                           ;my_uart.c: 247: WriteUSART(uc_ptr->Tx_buffer[uc_ptr->Tx_buflen]);
  5533  0016C2  EE20 F014          	lfsr	2,20
  5534  0016C6  5065               	movf	_uc_ptr,w,c
  5535  0016C8  26D9               	addwf	fsr2l,f,c
  5536  0016CA  5066               	movf	_uc_ptr+1,w,c
  5537  0016CC  22DA               	addwfc	fsr2h,f,c
  5538  0016CE  50DF               	movf	indf2,w,c
  5539  0016D0  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  5540  0016D2  5002               	movf	??_uart_send_int_handler,w,c
  5541  0016D4  0D01               	mullw	1
  5542  0016D6  50F3               	movf	prodl,w,c
  5543  0016D8  2465               	addwf	_uc_ptr,w,c
  5544  0016DA  6ED9               	movwf	fsr2l,c
  5545  0016DC  50F4               	movf	prodh,w,c
  5546  0016DE  2066               	addwfc	_uc_ptr+1,w,c
  5547  0016E0  6EDA               	movwf	fsr2h,c
  5548  0016E2  50DF               	movf	indf2,w,c
  5549  0016E4  EC9E  F00F         	call	_WriteUSART
  5550                           
  5551                           ;my_uart.c: 248: uc_ptr->Tx_buflen++;
  5552  0016E8  EE20 F014          	lfsr	2,20
  5553  0016EC  5065               	movf	_uc_ptr,w,c
  5554  0016EE  26D9               	addwf	fsr2l,f,c
  5555  0016F0  5066               	movf	_uc_ptr+1,w,c
  5556  0016F2  22DA               	addwfc	fsr2h,f,c
  5557  0016F4  2ADF               	incf	indf2,f,c
  5558  0016F6  0012               	return	
  5559  0016F8                     __end_of_uart_send_int_handler:
  5560                           	opt stack 0
  5561                           pclatu	equ	0xFFB
  5562                           pclath	equ	0xFFA
  5563                           tblptru	equ	0xFF8
  5564                           tblptrh	equ	0xFF7
  5565                           tblptrl	equ	0xFF6
  5566                           tablat	equ	0xFF5
  5567                           prodh	equ	0xFF4
  5568                           prodl	equ	0xFF3
  5569                           intcon	equ	0xFF2
  5570                           postinc0	equ	0xFEE
  5571                           fsr0h	equ	0xFEA
  5572                           fsr0l	equ	0xFE9
  5573                           wreg	equ	0xFE8
  5574                           indf1	equ	0xFE7
  5575                           fsr1h	equ	0xFE2
  5576                           fsr1l	equ	0xFE1
  5577                           bsr	equ	0xFE0
  5578                           indf2	equ	0xFDF
  5579                           postinc2	equ	0xFDE
  5580                           postdec2	equ	0xFDD
  5581                           fsr2h	equ	0xFDA
  5582                           fsr2l	equ	0xFD9
  5583                           status	equ	0xFD8
  5584                           
  5585 ;; *************** function _WriteUSART *****************
  5586 ;; Defined at:
  5587 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  5588 ;; Parameters:    Size  Location     Type
  5589 ;;  data            1    wreg     unsigned char 
  5590 ;; Auto vars:     Size  Location     Type
  5591 ;;  data            1    0[COMRAM] unsigned char 
  5592 ;; Return value:  Size  Location     Type
  5593 ;;		None               void
  5594 ;; Registers used:
  5595 ;;		wreg
  5596 ;; Tracked objects:
  5597 ;;		On entry : 0/0
  5598 ;;		On exit  : 0/0
  5599 ;;		Unchanged: 0/0
  5600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5601 ;;      Params:         0       0       0       0       0
  5602 ;;      Locals:         1       0       0       0       0
  5603 ;;      Temps:          0       0       0       0       0
  5604 ;;      Totals:         1       0       0       0       0
  5605 ;;Total ram usage:        1 bytes
  5606 ;; Hardware stack levels used:    1
  5607 ;; Hardware stack levels required when called:    5
  5608 ;; This function calls:
  5609 ;;		Nothing
  5610 ;; This function is called by:
  5611 ;;		_uart_send_int_handler
  5612 ;; This function uses a non-reentrant model
  5613 ;;
  5614                           
  5615                           	psect	text34
  5616  001F3C                     __ptext34:
  5617                           	opt stack 0
  5618  001F3C                     _WriteUSART:
  5619                           	opt stack 18
  5620                           
  5621                           ;incstack = 0
  5622                           ;WriteUSART@data stored from wreg
  5623  001F3C  CFE8 F001          	movff	wreg,WriteUSART@data
  5624  001F40  ACAC               	btfss	4012,6,c	;volatile
  5625  001F42  D003               	goto	i1l2926
  5626  001F44  90AC               	bcf	4012,0,c	;volatile
  5627  001F46  B259               	btfsc	_USART_Status,1,c
  5628  001F48  80AC               	bsf	4012,0,c	;volatile
  5629  001F4A                     i1l2926:
  5630  001F4A  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  5631  001F4E  0012               	return	
  5632  001F50                     __end_of_WriteUSART:
  5633                           	opt stack 0
  5634                           pclatu	equ	0xFFB
  5635                           pclath	equ	0xFFA
  5636                           tblptru	equ	0xFF8
  5637                           tblptrh	equ	0xFF7
  5638                           tblptrl	equ	0xFF6
  5639                           tablat	equ	0xFF5
  5640                           prodh	equ	0xFF4
  5641                           prodl	equ	0xFF3
  5642                           intcon	equ	0xFF2
  5643                           postinc0	equ	0xFEE
  5644                           fsr0h	equ	0xFEA
  5645                           fsr0l	equ	0xFE9
  5646                           wreg	equ	0xFE8
  5647                           indf1	equ	0xFE7
  5648                           fsr1h	equ	0xFE2
  5649                           fsr1l	equ	0xFE1
  5650                           bsr	equ	0xFE0
  5651                           indf2	equ	0xFDF
  5652                           postinc2	equ	0xFDE
  5653                           postdec2	equ	0xFDD
  5654                           fsr2h	equ	0xFDA
  5655                           fsr2l	equ	0xFD9
  5656                           status	equ	0xFD8
  5657                           
  5658 ;; *************** function _uart_recv_int_handler *****************
  5659 ;; Defined at:
  5660 ;;		line 14 in file "../src/my_uart.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;		None
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  i               2   31[COMRAM] int 
  5665 ;;  checkSum        1   30[COMRAM] unsigned char 
  5666 ;;  bufLength       1   29[COMRAM] unsigned char 
  5667 ;;  data            1   33[COMRAM] unsigned char 
  5668 ;; Return value:  Size  Location     Type
  5669 ;;		None               void
  5670 ;; Registers used:
  5671 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5677 ;;      Params:         0       0       0       0       0
  5678 ;;      Locals:         5       0       0       0       0
  5679 ;;      Temps:          3       0       0       0       0
  5680 ;;      Totals:         8       0       0       0       0
  5681 ;;Total ram usage:        8 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    8
  5684 ;; This function calls:
  5685 ;;		_ReadUSART
  5686 ;;		_ToMainLow_sendmsg
  5687 ;;		i1_ToMainHigh_sendmsg
  5688 ;; This function is called by:
  5689 ;;		_InterruptHandlerLow
  5690 ;; This function uses a non-reentrant model
  5691 ;;
  5692                           
  5693                           	psect	text35
  5694  000418                     __ptext35:
  5695                           	opt stack 0
  5696  000418                     _uart_recv_int_handler:
  5697                           	opt stack 16
  5698                           
  5699                           ;my_uart.c: 28: if ((PIR1bits.RCIF)) {
  5700                           
  5701                           ;incstack = 0
  5702  000418  AA9E               	btfss	3998,5,c	;volatile
  5703  00041A  D152               	goto	i1l397
  5704                           
  5705                           ;my_uart.c: 30: char data = ReadUSART();
  5706  00041C  EC84  F00F         	call	_ReadUSART	;wreg free
  5707  000420  6E22               	movwf	uart_recv_int_handler@data,c
  5708                           
  5709                           ;my_uart.c: 35: if (!msgtype_flag) {
  5710  000422  6660               	tstfsz	_msgtype_flag,c
  5711  000424  D13A               	goto	i1l3202
  5712                           
  5713                           ;my_uart.c: 36: msgtype = 0xaa;
  5714  000426  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5715  000428  0EAA               	movlw	170
  5716  00042A  6E5F               	movwf	_msgtype,c
  5717  00042C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5718  00042E  D135               	goto	i1l3202
  5719  000430                     i1l400:
  5720                           
  5721                           ;my_uart.c: 42: if (!msgtype_flag) {
  5722  000430  6660               	tstfsz	_msgtype_flag,c
  5723  000432  D146               	goto	i1l397
  5724                           
  5725                           ;my_uart.c: 43: uc_ptr->Rx_buffer[0] = data;
  5726  000434  EE20 F00A          	lfsr	2,10
  5727  000438  5065               	movf	_uc_ptr,w,c
  5728  00043A  26D9               	addwf	fsr2l,f,c
  5729  00043C  5066               	movf	_uc_ptr+1,w,c
  5730  00043E  22DA               	addwfc	fsr2h,f,c
  5731  000440  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5732                           
  5733                           ;my_uart.c: 44: uc_ptr->Rx_buflen++;
  5734  000444  EE20 F015          	lfsr	2,21
  5735  000448  5065               	movf	_uc_ptr,w,c
  5736  00044A  26D9               	addwf	fsr2l,f,c
  5737  00044C  5066               	movf	_uc_ptr+1,w,c
  5738  00044E  22DA               	addwfc	fsr2h,f,c
  5739  000450  2ADF               	incf	indf2,f,c
  5740                           
  5741                           ;my_uart.c: 45: msgtype_flag = 1;
  5742  000452  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5743  000454  0E01               	movlw	1
  5744  000456  6E60               	movwf	_msgtype_flag,c
  5745  000458  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5746                           
  5747                           ;my_uart.c: 46: sendToSensorPIC_flag = 1;
  5748  00045A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5749  00045C  0E01               	movlw	1
  5750  00045E  6E62               	movwf	_sendToSensorPIC_flag,c
  5751  000460  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5752                           
  5753                           ;my_uart.c: 47: msgtype = 0;
  5754  000462  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5755  000464  0E00               	movlw	0
  5756  000466  D029               	goto	L1
  5757  000468                     i1l3130:
  5758                           
  5759                           ;my_uart.c: 52: if (msgtype_flag && sendToSensorPIC_flag) {
  5760  000468  5060               	movf	_msgtype_flag,w,c
  5761  00046A  B4D8               	btfsc	status,2,c
  5762  00046C  D028               	goto	i1l3142
  5763  00046E  5062               	movf	_sendToSensorPIC_flag,w,c
  5764  000470  B4D8               	btfsc	status,2,c
  5765  000472  D025               	goto	i1l3142
  5766                           
  5767                           ;my_uart.c: 53: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5768  000474  EE20 F015          	lfsr	2,21
  5769  000478  5065               	movf	_uc_ptr,w,c
  5770  00047A  26D9               	addwf	fsr2l,f,c
  5771  00047C  5066               	movf	_uc_ptr+1,w,c
  5772  00047E  22DA               	addwfc	fsr2h,f,c
  5773  000480  50DF               	movf	indf2,w,c
  5774  000482  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5775  000484  501B               	movf	??_uart_recv_int_handler,w,c
  5776  000486  0D01               	mullw	1
  5777  000488  0E0A               	movlw	10
  5778  00048A  26F3               	addwf	prodl,f,c
  5779  00048C  0E00               	movlw	0
  5780  00048E  22F4               	addwfc	prodh,f,c
  5781  000490  50F3               	movf	prodl,w,c
  5782  000492  2465               	addwf	_uc_ptr,w,c
  5783  000494  6ED9               	movwf	fsr2l,c
  5784  000496  50F4               	movf	prodh,w,c
  5785  000498  2066               	addwfc	_uc_ptr+1,w,c
  5786  00049A  6EDA               	movwf	fsr2h,c
  5787  00049C  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5788                           
  5789                           ;my_uart.c: 54: uc_ptr->Rx_buflen++;
  5790  0004A0  EE20 F015          	lfsr	2,21
  5791  0004A4  5065               	movf	_uc_ptr,w,c
  5792  0004A6  26D9               	addwf	fsr2l,f,c
  5793  0004A8  5066               	movf	_uc_ptr+1,w,c
  5794  0004AA  22DA               	addwfc	fsr2h,f,c
  5795  0004AC  2ADF               	incf	indf2,f,c
  5796  0004AE                     
  5797                           ;my_uart.c: 55: msg_flag = 1;
  5798  0004AE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5799  0004B0  0E01               	movlw	1
  5800  0004B2  6E5E               	movwf	_msg_flag,c
  5801  0004B4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5802                           
  5803                           ;my_uart.c: 56: msgtype = 5;
  5804  0004B6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5805  0004B8  0E05               	movlw	5
  5806  0004BA                     L1:
  5807  0004BA  6E5F               	movwf	_msgtype,c
  5808  0004BC  D0E9               	goto	L5
  5809  0004BE                     i1l3142:
  5810                           
  5811                           ;my_uart.c: 58: msgtype = 0xaa;
  5812  0004BE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5813  0004C0  0EAA               	movlw	170
  5814  0004C2  6E5F               	movwf	_msgtype,c
  5815  0004C4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5816                           
  5817                           ;my_uart.c: 59: msgtype_flag = 0;
  5818  0004C6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5819  0004C8  0E00               	movlw	0
  5820  0004CA  6E60               	movwf	_msgtype_flag,c
  5821  0004CC  D0E1               	goto	L5
  5822  0004CE                     i1l3144:
  5823                           
  5824                           ;my_uart.c: 65: if (msg_flag) {
  5825  0004CE  505E               	movf	_msg_flag,w,c
  5826  0004D0  B4D8               	btfsc	status,2,c
  5827  0004D2  D0B6               	goto	i1l3188
  5828                           
  5829                           ;my_uart.c: 67: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5830  0004D4  EE20 F015          	lfsr	2,21
  5831  0004D8  5065               	movf	_uc_ptr,w,c
  5832  0004DA  26D9               	addwf	fsr2l,f,c
  5833  0004DC  5066               	movf	_uc_ptr+1,w,c
  5834  0004DE  22DA               	addwfc	fsr2h,f,c
  5835  0004E0  50DF               	movf	indf2,w,c
  5836  0004E2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5837  0004E4  501B               	movf	??_uart_recv_int_handler,w,c
  5838  0004E6  0D01               	mullw	1
  5839  0004E8  0E0A               	movlw	10
  5840  0004EA  26F3               	addwf	prodl,f,c
  5841  0004EC  0E00               	movlw	0
  5842  0004EE  22F4               	addwfc	prodh,f,c
  5843  0004F0  50F3               	movf	prodl,w,c
  5844  0004F2  2465               	addwf	_uc_ptr,w,c
  5845  0004F4  6ED9               	movwf	fsr2l,c
  5846  0004F6  50F4               	movf	prodh,w,c
  5847  0004F8  2066               	addwfc	_uc_ptr+1,w,c
  5848  0004FA  6EDA               	movwf	fsr2h,c
  5849  0004FC  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5850                           
  5851                           ;my_uart.c: 68: unsigned char checkSum = 0;
  5852  000500  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5853  000502  0E00               	movlw	0
  5854  000504  6E1F               	movwf	uart_recv_int_handler@checkSum,c
  5855  000506  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5856                           
  5857                           ;my_uart.c: 69: unsigned char bufLength = uc_ptr->Rx_buffer[1];
  5858  000508  EE20 F00B          	lfsr	2,11
  5859  00050C  5065               	movf	_uc_ptr,w,c
  5860  00050E  26D9               	addwf	fsr2l,f,c
  5861  000510  5066               	movf	_uc_ptr+1,w,c
  5862  000512  22DA               	addwfc	fsr2h,f,c
  5863  000514  50DF               	movf	indf2,w,c
  5864  000516  6E1E               	movwf	uart_recv_int_handler@bufLength,c
  5865                           
  5866                           ;my_uart.c: 72: if (bufLength == 0 && sendToSensorPIC_flag && uc_ptr->Rx_buffer[2] == 0x
      +                          aa) {
  5867  000518  661E               	tstfsz	uart_recv_int_handler@bufLength,c
  5868  00051A  D011               	goto	i1l3160
  5869  00051C  5062               	movf	_sendToSensorPIC_flag,w,c
  5870  00051E  B4D8               	btfsc	status,2,c
  5871  000520  D00E               	goto	i1l3160
  5872  000522  EE20 F00C          	lfsr	2,12
  5873  000526  5065               	movf	_uc_ptr,w,c
  5874  000528  26D9               	addwf	fsr2l,f,c
  5875  00052A  5066               	movf	_uc_ptr+1,w,c
  5876  00052C  22DA               	addwfc	fsr2h,f,c
  5877  00052E  0EAA               	movlw	170
  5878  000530  62DF               	cpfseq	indf2,c
  5879  000532  D005               	goto	i1l3160
  5880                           
  5881                           ;my_uart.c: 73: checkSum = 0xaa;
  5882  000534  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5883  000536  0EAA               	movlw	170
  5884  000538  6E1F               	movwf	uart_recv_int_handler@checkSum,c
  5885  00053A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5886                           
  5887                           ;my_uart.c: 74: } else {
  5888  00053C  D02C               	goto	i1l3168
  5889  00053E                     i1l3160:
  5890                           
  5891                           ;my_uart.c: 76: int i = 2;
  5892  00053E  0E00               	movlw	0
  5893  000540  6E21               	movwf	uart_recv_int_handler@i+1,c
  5894  000542  0E02               	movlw	2
  5895  000544  6E20               	movwf	uart_recv_int_handler@i,c
  5896                           
  5897                           ;my_uart.c: 78: for (; i < uc_ptr->Rx_buffer[1] + 2; i++) {
  5898  000546  D010               	goto	i1l3166
  5899  000548                     i1l3162:
  5900                           
  5901                           ;my_uart.c: 79: checkSum ^= uc_ptr->Rx_buffer[i];
  5902  000548  0E0A               	movlw	10
  5903  00054A  2420               	addwf	uart_recv_int_handler@i,w,c
  5904  00054C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5905  00054E  0E00               	movlw	0
  5906  000550  2021               	addwfc	uart_recv_int_handler@i+1,w,c
  5907  000552  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  5908  000554  501B               	movf	??_uart_recv_int_handler,w,c
  5909  000556  2465               	addwf	_uc_ptr,w,c
  5910  000558  6ED9               	movwf	fsr2l,c
  5911  00055A  501C               	movf	??_uart_recv_int_handler+1,w,c
  5912  00055C  2066               	addwfc	_uc_ptr+1,w,c
  5913  00055E  6EDA               	movwf	fsr2h,c
  5914  000560  50DF               	movf	indf2,w,c
  5915  000562  1A1F               	xorwf	uart_recv_int_handler@checkSum,f,c
  5916  000564  4A20               	infsnz	uart_recv_int_handler@i,f,c
  5917  000566  2A21               	incf	uart_recv_int_handler@i+1,f,c
  5918  000568                     i1l3166:
  5919  000568  EE20 F00B          	lfsr	2,11
  5920  00056C  5065               	movf	_uc_ptr,w,c
  5921  00056E  26D9               	addwf	fsr2l,f,c
  5922  000570  5066               	movf	_uc_ptr+1,w,c
  5923  000572  22DA               	addwfc	fsr2h,f,c
  5924  000574  50DF               	movf	indf2,w,c
  5925  000576  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5926  000578  6A1C               	clrf	(??_uart_recv_int_handler+1)& (0+255),c
  5927  00057A  0E02               	movlw	2
  5928  00057C  261B               	addwf	??_uart_recv_int_handler,f,c
  5929  00057E  0E00               	movlw	0
  5930  000580  221C               	addwfc	??_uart_recv_int_handler+1,f,c
  5931  000582  5021               	movf	uart_recv_int_handler@i+1,w,c
  5932  000584  0A80               	xorlw	128
  5933  000586  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  5934  000588  501B               	movf	??_uart_recv_int_handler,w,c
  5935  00058A  5C20               	subwf	uart_recv_int_handler@i,w,c
  5936  00058C  501C               	movf	??_uart_recv_int_handler+1,w,c
  5937  00058E  0A80               	xorlw	128
  5938  000590  581D               	subwfb	(??_uart_recv_int_handler+2)& (0+255),w,c
  5939  000592  A0D8               	btfss	status,0,c
  5940  000594  D7D9               	goto	i1l3162
  5941  000596                     i1l3168:
  5942                           
  5943                           ;my_uart.c: 80: }
  5944                           ;my_uart.c: 81: }
  5945                           ;my_uart.c: 84: if (checkSum != uc_ptr->Rx_buffer[uc_ptr->Rx_buflen]) {
  5946  000596  EE20 F015          	lfsr	2,21
  5947  00059A  5065               	movf	_uc_ptr,w,c
  5948  00059C  26D9               	addwf	fsr2l,f,c
  5949  00059E  5066               	movf	_uc_ptr+1,w,c
  5950  0005A0  22DA               	addwfc	fsr2h,f,c
  5951  0005A2  50DF               	movf	indf2,w,c
  5952  0005A4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5953  0005A6  501B               	movf	??_uart_recv_int_handler,w,c
  5954  0005A8  0D01               	mullw	1
  5955  0005AA  0E0A               	movlw	10
  5956  0005AC  26F3               	addwf	prodl,f,c
  5957  0005AE  0E00               	movlw	0
  5958  0005B0  22F4               	addwfc	prodh,f,c
  5959  0005B2  50F3               	movf	prodl,w,c
  5960  0005B4  2465               	addwf	_uc_ptr,w,c
  5961  0005B6  6ED9               	movwf	fsr2l,c
  5962  0005B8  50F4               	movf	prodh,w,c
  5963  0005BA  2066               	addwfc	_uc_ptr+1,w,c
  5964  0005BC  6EDA               	movwf	fsr2h,c
  5965  0005BE  50DF               	movf	indf2,w,c
  5966  0005C0  181F               	xorwf	uart_recv_int_handler@checkSum,w,c
  5967  0005C2  B4D8               	btfsc	status,2,c
  5968  0005C4  D009               	goto	i1l3172
  5969                           
  5970                           ;my_uart.c: 86: uc_ptr->Rx_buflen = 0;
  5971  0005C6  EE20 F015          	lfsr	2,21
  5972  0005CA  5065               	movf	_uc_ptr,w,c
  5973  0005CC  26D9               	addwf	fsr2l,f,c
  5974  0005CE  5066               	movf	_uc_ptr+1,w,c
  5975  0005D0  22DA               	addwfc	fsr2h,f,c
  5976  0005D2  0E00               	movlw	0
  5977  0005D4  6EDF               	movwf	indf2,c
  5978                           
  5979                           ;my_uart.c: 89: } else if (sendToSensorPIC_flag) {
  5980  0005D6  D01D               	goto	i1l3178
  5981  0005D8                     i1l3172:
  5982  0005D8  5062               	movf	_sendToSensorPIC_flag,w,c
  5983  0005DA  B4D8               	btfsc	status,2,c
  5984  0005DC  D01A               	goto	i1l3178
  5985                           
  5986                           ;my_uart.c: 90: uc_ptr->Rx_buflen++;
  5987  0005DE  EE20 F015          	lfsr	2,21
  5988  0005E2  5065               	movf	_uc_ptr,w,c
  5989  0005E4  26D9               	addwf	fsr2l,f,c
  5990  0005E6  5066               	movf	_uc_ptr+1,w,c
  5991  0005E8  22DA               	addwfc	fsr2h,f,c
  5992  0005EA  2ADF               	incf	indf2,f,c
  5993                           
  5994                           ;my_uart.c: 92: ToMainHigh_sendmsg(uc_ptr->Rx_buflen, 40, (void *) uc_ptr->Rx_buffer);
  5995  0005EC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5996  0005EE  0E28               	movlw	40
  5997  0005F0  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  5998  0005F2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5999  0005F4  0E0A               	movlw	10
  6000  0005F6  2465               	addwf	_uc_ptr,w,c
  6001  0005F8  6E18               	movwf	i1ToMainHigh_sendmsg@data,c
  6002  0005FA  0E00               	movlw	0
  6003  0005FC  2066               	addwfc	_uc_ptr+1,w,c
  6004  0005FE  6E19               	movwf	i1ToMainHigh_sendmsg@data+1,c
  6005  000600  EE20 F015          	lfsr	2,21
  6006  000604  5065               	movf	_uc_ptr,w,c
  6007  000606  26D9               	addwf	fsr2l,f,c
  6008  000608  5066               	movf	_uc_ptr+1,w,c
  6009  00060A  22DA               	addwfc	fsr2h,f,c
  6010  00060C  50DF               	movf	indf2,w,c
  6011  00060E  EC5F  F00F         	call	i1_ToMainHigh_sendmsg
  6012  000612                     i1l3178:
  6013                           
  6014                           ;my_uart.c: 93: }
  6015                           ;my_uart.c: 95: msgtype_flag = 0;
  6016  000612  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6017  000614  0E00               	movlw	0
  6018  000616  6E60               	movwf	_msgtype_flag,c
  6019  000618  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6020                           
  6021                           ;my_uart.c: 96: sendToSensorPIC_flag = 0;
  6022  00061A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6023  00061C  0E00               	movlw	0
  6024  00061E  6E62               	movwf	_sendToSensorPIC_flag,c
  6025  000620  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6026                           
  6027                           ;my_uart.c: 97: uc_ptr->Rx_buflen = 0;
  6028  000622  EE20 F015          	lfsr	2,21
  6029  000626  5065               	movf	_uc_ptr,w,c
  6030  000628  26D9               	addwf	fsr2l,f,c
  6031  00062A  5066               	movf	_uc_ptr+1,w,c
  6032  00062C  22DA               	addwfc	fsr2h,f,c
  6033  00062E  0E00               	movlw	0
  6034  000630  6EDF               	movwf	indf2,c
  6035                           
  6036                           ;my_uart.c: 98: msg_flag = 0;
  6037  000632  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6038  000634  0E00               	movlw	0
  6039  000636  6E5E               	movwf	_msg_flag,c
  6040  000638  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6041                           
  6042                           ;my_uart.c: 99: msgtype = 0xaa;
  6043  00063A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6044  00063C  0EAA               	movlw	170
  6045  00063E  D73D               	goto	L1
  6046  000640                     i1l3188:
  6047                           
  6048                           ;my_uart.c: 101: msgtype = 0xaa;
  6049  000640  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6050  000642  0EAA               	movlw	170
  6051  000644  6E5F               	movwf	_msgtype,c
  6052  000646  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6053                           
  6054                           ;my_uart.c: 102: msgtype_flag = 0;
  6055  000648  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6056  00064A  0E00               	movlw	0
  6057  00064C  6E60               	movwf	_msgtype_flag,c
  6058  00064E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6059                           
  6060                           ;my_uart.c: 103: sendToSensorPIC_flag = 0;
  6061  000650  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6062  000652  0E00               	movlw	0
  6063  000654  6E62               	movwf	_sendToSensorPIC_flag,c
  6064  000656  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6065                           
  6066                           ;my_uart.c: 104: uc_ptr->Rx_buflen = 0;
  6067  000658  EE20 F015          	lfsr	2,21
  6068  00065C  5065               	movf	_uc_ptr,w,c
  6069  00065E  26D9               	addwf	fsr2l,f,c
  6070  000660  5066               	movf	_uc_ptr+1,w,c
  6071  000662  22DA               	addwfc	fsr2h,f,c
  6072  000664  0E00               	movlw	0
  6073  000666  6EDF               	movwf	indf2,c
  6074                           
  6075                           ;my_uart.c: 105: msg_flag = 0;
  6076  000668  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6077  00066A  0E00               	movlw	0
  6078  00066C  6E5E               	movwf	_msg_flag,c
  6079  00066E  D010               	goto	L5
  6080  000670                     i1l3194:
  6081                           
  6082                           ;my_uart.c: 110: if (uc_ptr->Rx_buflen == uc_ptr->Rx_buffer[1]) {
  6083  000670  EE20 F015          	lfsr	2,21
  6084  000674  5065               	movf	_uc_ptr,w,c
  6085  000676  26D9               	addwf	fsr2l,f,c
  6086  000678  5066               	movf	_uc_ptr+1,w,c
  6087  00067A  22DA               	addwfc	fsr2h,f,c
  6088  00067C  EE10 F00B          	lfsr	1,11
  6089  000680  5065               	movf	_uc_ptr,w,c
  6090  000682  26E1               	addwf	fsr1l,f,c
  6091  000684  5066               	movf	_uc_ptr+1,w,c
  6092  000686  22E2               	addwfc	fsr1h,f,c
  6093  000688  50E7               	movf	indf1,w,c
  6094  00068A  62DF               	cpfseq	indf2,c
  6095  00068C  D003               	goto	i1l3198
  6096  00068E  D70F               	goto	L8
  6097  000690                     L5:
  6098  000690  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6099                           
  6100                           ;my_uart.c: 113: } else {
  6101  000692  D016               	goto	i1l397
  6102  000694                     i1l3198:
  6103                           
  6104                           ;my_uart.c: 114: msgtype = 4;
  6105  000694  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6106  000696  0E04               	movlw	4
  6107  000698  D710               	goto	L1
  6108  00069A                     i1l3202:
  6109  00069A  505F               	movf	_msgtype,w,c
  6110                           
  6111                           ; Switch size 1, requested type "space"
  6112                           ; Number of cases is 6, Range of values is 0 to 170
  6113                           ; switch strategies available:
  6114                           ; Name         Instructions Cycles
  6115                           ; simple_byte           19    10 (average)
  6116                           ;	Chosen strategy is simple_byte
  6117  00069C  0A00               	xorlw	0	; case 0
  6118  00069E  B4D8               	btfsc	status,2,c
  6119  0006A0  D6E3               	goto	i1l3130
  6120  0006A2  0A01               	xorlw	1	; case 1
  6121  0006A4  B4D8               	btfsc	status,2,c
  6122  0006A6  D00C               	goto	i1l397
  6123  0006A8  0A02               	xorlw	2	; case 3
  6124  0006AA  B4D8               	btfsc	status,2,c
  6125  0006AC  D009               	goto	i1l397
  6126  0006AE  0A07               	xorlw	7	; case 4
  6127  0006B0  B4D8               	btfsc	status,2,c
  6128  0006B2  D7DE               	goto	i1l3194
  6129  0006B4  0A01               	xorlw	1	; case 5
  6130  0006B6  B4D8               	btfsc	status,2,c
  6131  0006B8  D70A               	goto	i1l3144
  6132  0006BA  0AAF               	xorlw	175	; case 170
  6133  0006BC  B4D8               	btfsc	status,2,c
  6134  0006BE  D6B8               	goto	i1l400
  6135  0006C0                     i1l397:
  6136                           
  6137                           ;my_uart.c: 221: }
  6138                           ;my_uart.c: 229: if (USART_Status.OVERRUN_ERROR == 1) {
  6139  0006C0  A659               	btfss	_USART_Status,3,c
  6140  0006C2  0012               	return	
  6141                           
  6142                           ;my_uart.c: 235: RCSTAbits.CREN = 0;
  6143  0006C4  98AB               	bcf	4011,4,c	;volatile
  6144                           
  6145                           ;my_uart.c: 236: RCSTAbits.CREN = 1;
  6146  0006C6  88AB               	bsf	4011,4,c	;volatile
  6147                           
  6148                           ;my_uart.c: 237: ToMainLow_sendmsg(0, 30, (void *) 0);
  6149  0006C8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6150  0006CA  0E1E               	movlw	30
  6151  0006CC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6152  0006CE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6153  0006D0  0E00               	movlw	0
  6154  0006D2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6155  0006D4  0E00               	movlw	0
  6156  0006D6  6E18               	movwf	ToMainLow_sendmsg@data,c
  6157  0006D8  0E00               	movlw	0
  6158  0006DA  EC72  F00F         	call	_ToMainLow_sendmsg
  6159  0006DE  0012               	return	
  6160  0006E0                     __end_of_uart_recv_int_handler:
  6161                           	opt stack 0
  6162                           pclatu	equ	0xFFB
  6163                           pclath	equ	0xFFA
  6164                           tblptru	equ	0xFF8
  6165                           tblptrh	equ	0xFF7
  6166                           tblptrl	equ	0xFF6
  6167                           tablat	equ	0xFF5
  6168                           prodh	equ	0xFF4
  6169                           prodl	equ	0xFF3
  6170                           intcon	equ	0xFF2
  6171                           postinc0	equ	0xFEE
  6172                           fsr0h	equ	0xFEA
  6173                           fsr0l	equ	0xFE9
  6174                           wreg	equ	0xFE8
  6175                           indf1	equ	0xFE7
  6176                           fsr1h	equ	0xFE2
  6177                           fsr1l	equ	0xFE1
  6178                           bsr	equ	0xFE0
  6179                           indf2	equ	0xFDF
  6180                           postinc2	equ	0xFDE
  6181                           postdec2	equ	0xFDD
  6182                           fsr2h	equ	0xFDA
  6183                           fsr2l	equ	0xFD9
  6184                           status	equ	0xFD8
  6185                           
  6186 ;; *************** function i1_ToMainHigh_sendmsg *****************
  6187 ;; Defined at:
  6188 ;;		line 126 in file "../src/messages.c"
  6189 ;; Parameters:    Size  Location     Type
  6190 ;;  length          1    wreg     unsigned char 
  6191 ;;  msgtype         1   22[COMRAM] unsigned char 
  6192 ;;  data            2   23[COMRAM] PTR void 
  6193 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  length          1   25[COMRAM] unsigned char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  1    wreg      char 
  6198 ;; Registers used:
  6199 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6205 ;;      Params:         3       0       0       0       0
  6206 ;;      Locals:         1       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0
  6208 ;;      Totals:         4       0       0       0       0
  6209 ;;Total ram usage:        4 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    7
  6212 ;; This function calls:
  6213 ;;		i1_send_msg
  6214 ;; This function is called by:
  6215 ;;		_uart_recv_int_handler
  6216 ;; This function uses a non-reentrant model
  6217 ;;
  6218                           
  6219                           	psect	text36
  6220  001EBE                     __ptext36:
  6221                           	opt stack 0
  6222  001EBE                     i1_ToMainHigh_sendmsg:
  6223                           	opt stack 16
  6224                           
  6225                           ;incstack = 0
  6226                           ;i1ToMainHigh_sendmsg@length stored from wreg
  6227  001EBE  CFE8 F01A          	movff	wreg,i1ToMainHigh_sendmsg@length
  6228                           
  6229                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6230                           ;	Return value of i1_ToMainHigh_sendmsg is never used
  6231  001EC2  0100               	movlb	0	; () banked
  6232  001EC4  0E00               	movlw	high _ToMainHigh_MQ
  6233  001EC6  6E0C               	movwf	i1send_msg@qptr+1,c
  6234  001EC8  0100               	movlb	0	; () banked
  6235  001ECA  0E80               	movlw	low _ToMainHigh_MQ
  6236  001ECC  6E0B               	movwf	i1send_msg@qptr,c
  6237  001ECE  C01A  F00D         	movff	i1ToMainHigh_sendmsg@length,i1send_msg@length
  6238  001ED2  C017  F00E         	movff	i1ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  6239  001ED6  C019  F010         	movff	i1ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  6240  001EDA  C018  F00F         	movff	i1ToMainHigh_sendmsg@data,i1send_msg@data
  6241  001EDE  EC46  F009         	call	i1_send_msg	;wreg free
  6242  001EE2  0012               	return	
  6243  001EE4                     __end_ofi1_ToMainHigh_sendmsg:
  6244                           	opt stack 0
  6245                           pclatu	equ	0xFFB
  6246                           pclath	equ	0xFFA
  6247                           tblptru	equ	0xFF8
  6248                           tblptrh	equ	0xFF7
  6249                           tblptrl	equ	0xFF6
  6250                           tablat	equ	0xFF5
  6251                           prodh	equ	0xFF4
  6252                           prodl	equ	0xFF3
  6253                           intcon	equ	0xFF2
  6254                           postinc0	equ	0xFEE
  6255                           fsr0h	equ	0xFEA
  6256                           fsr0l	equ	0xFE9
  6257                           wreg	equ	0xFE8
  6258                           indf1	equ	0xFE7
  6259                           fsr1h	equ	0xFE2
  6260                           fsr1l	equ	0xFE1
  6261                           bsr	equ	0xFE0
  6262                           indf2	equ	0xFDF
  6263                           postinc2	equ	0xFDE
  6264                           postdec2	equ	0xFDD
  6265                           fsr2h	equ	0xFDA
  6266                           fsr2l	equ	0xFD9
  6267                           status	equ	0xFD8
  6268                           
  6269 ;; *************** function _ReadUSART *****************
  6270 ;; Defined at:
  6271 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6272 ;; Parameters:    Size  Location     Type
  6273 ;;		None
  6274 ;; Auto vars:     Size  Location     Type
  6275 ;;  data            1    0[COMRAM] unsigned char 
  6276 ;; Return value:  Size  Location     Type
  6277 ;;                  1    wreg      unsigned char 
  6278 ;; Registers used:
  6279 ;;		wreg, status,2, status,0
  6280 ;; Tracked objects:
  6281 ;;		On entry : 0/0
  6282 ;;		On exit  : 0/0
  6283 ;;		Unchanged: 0/0
  6284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6285 ;;      Params:         0       0       0       0       0
  6286 ;;      Locals:         1       0       0       0       0
  6287 ;;      Temps:          0       0       0       0       0
  6288 ;;      Totals:         1       0       0       0       0
  6289 ;;Total ram usage:        1 bytes
  6290 ;; Hardware stack levels used:    1
  6291 ;; Hardware stack levels required when called:    5
  6292 ;; This function calls:
  6293 ;;		Nothing
  6294 ;; This function is called by:
  6295 ;;		_uart_recv_int_handler
  6296 ;; This function uses a non-reentrant model
  6297 ;;
  6298                           
  6299                           	psect	text37
  6300  001F08                     __ptext37:
  6301                           	opt stack 0
  6302  001F08                     _ReadUSART:
  6303                           	opt stack 18
  6304                           
  6305                           ;incstack = 0
  6306  001F08  0EF2               	movlw	242
  6307  001F0A  1659               	andwf	_USART_Status,f,c
  6308  001F0C  ACAB               	btfss	4011,6,c	;volatile
  6309  001F0E  D003               	goto	i1l652
  6310  001F10  9059               	bcf	_USART_Status,0,c
  6311  001F12  B0AB               	btfsc	4011,0,c	;volatile
  6312  001F14  8059               	bsf	_USART_Status,0,c
  6313  001F16                     i1l652:
  6314  001F16  B4AB               	btfsc	4011,2,c	;volatile
  6315  001F18  8459               	bsf	_USART_Status,2,c
  6316  001F1A  B2AB               	btfsc	4011,1,c	;volatile
  6317  001F1C  8659               	bsf	_USART_Status,3,c
  6318  001F1E  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6319  001F22  5001               	movf	ReadUSART@data,w,c
  6320  001F24  0012               	return	
  6321  001F26                     __end_of_ReadUSART:
  6322                           	opt stack 0
  6323                           pclatu	equ	0xFFB
  6324                           pclath	equ	0xFFA
  6325                           tblptru	equ	0xFF8
  6326                           tblptrh	equ	0xFF7
  6327                           tblptrl	equ	0xFF6
  6328                           tablat	equ	0xFF5
  6329                           prodh	equ	0xFF4
  6330                           prodl	equ	0xFF3
  6331                           intcon	equ	0xFF2
  6332                           postinc0	equ	0xFEE
  6333                           fsr0h	equ	0xFEA
  6334                           fsr0l	equ	0xFE9
  6335                           wreg	equ	0xFE8
  6336                           indf1	equ	0xFE7
  6337                           fsr1h	equ	0xFE2
  6338                           fsr1l	equ	0xFE1
  6339                           bsr	equ	0xFE0
  6340                           indf2	equ	0xFDF
  6341                           postinc2	equ	0xFDE
  6342                           postdec2	equ	0xFDD
  6343                           fsr2h	equ	0xFDA
  6344                           fsr2l	equ	0xFD9
  6345                           status	equ	0xFD8
  6346                           
  6347 ;; *************** function _timer1_int_handler *****************
  6348 ;; Defined at:
  6349 ;;		line 39 in file "../src/user_interrupts.c"
  6350 ;; Parameters:    Size  Location     Type
  6351 ;;		None
  6352 ;; Auto vars:     Size  Location     Type
  6353 ;;  result          2   27[COMRAM] unsigned int 
  6354 ;; Return value:  Size  Location     Type
  6355 ;;		None               void
  6356 ;; Registers used:
  6357 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6358 ;; Tracked objects:
  6359 ;;		On entry : 0/0
  6360 ;;		On exit  : 0/0
  6361 ;;		Unchanged: 0/0
  6362 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6363 ;;      Params:         0       0       0       0       0
  6364 ;;      Locals:         2       0       0       0       0
  6365 ;;      Temps:          1       0       0       0       0
  6366 ;;      Totals:         3       0       0       0       0
  6367 ;;Total ram usage:        3 bytes
  6368 ;; Hardware stack levels used:    1
  6369 ;; Hardware stack levels required when called:    8
  6370 ;; This function calls:
  6371 ;;		_ReadTimer1
  6372 ;;		_ToMainLow_sendmsg
  6373 ;;		_WriteTimer1
  6374 ;; This function is called by:
  6375 ;;		_InterruptHandlerLow
  6376 ;; This function uses a non-reentrant model
  6377 ;;
  6378                           
  6379                           	psect	text38
  6380  001E36                     __ptext38:
  6381                           	opt stack 0
  6382  001E36                     _timer1_int_handler:
  6383                           	opt stack 16
  6384                           
  6385                           ;user_interrupts.c: 40: unsigned int result;
  6386                           ;user_interrupts.c: 47: result = ReadTimer1();
  6387                           
  6388                           ;incstack = 0
  6389  001E36  ECCC  F00F         	call	_ReadTimer1	;wreg free
  6390  001E3A  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  6391  001E3E  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6392                           
  6393                           ;user_interrupts.c: 48: ToMainLow_sendmsg(0, 11, (void *) 0);
  6394  001E42  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6395  001E44  0E0B               	movlw	11
  6396  001E46  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6397  001E48  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6398  001E4A  0E00               	movlw	0
  6399  001E4C  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6400  001E4E  0E00               	movlw	0
  6401  001E50  6E18               	movwf	ToMainLow_sendmsg@data,c
  6402  001E52  0E00               	movlw	0
  6403  001E54  EC72  F00F         	call	_ToMainLow_sendmsg
  6404                           
  6405                           ;user_interrupts.c: 51: WriteTimer1(0);
  6406  001E58  0E00               	movlw	0
  6407  001E5A  6E02               	movwf	WriteTimer1@timer1+1,c
  6408  001E5C  0E00               	movlw	0
  6409  001E5E  6E01               	movwf	WriteTimer1@timer1,c
  6410  001E60  ECC3  F00F         	call	_WriteTimer1	;wreg free
  6411  001E64  0012               	return	
  6412  001E66                     __end_of_timer1_int_handler:
  6413                           	opt stack 0
  6414                           pclatu	equ	0xFFB
  6415                           pclath	equ	0xFFA
  6416                           tblptru	equ	0xFF8
  6417                           tblptrh	equ	0xFF7
  6418                           tblptrl	equ	0xFF6
  6419                           tablat	equ	0xFF5
  6420                           prodh	equ	0xFF4
  6421                           prodl	equ	0xFF3
  6422                           intcon	equ	0xFF2
  6423                           postinc0	equ	0xFEE
  6424                           fsr0h	equ	0xFEA
  6425                           fsr0l	equ	0xFE9
  6426                           wreg	equ	0xFE8
  6427                           indf1	equ	0xFE7
  6428                           fsr1h	equ	0xFE2
  6429                           fsr1l	equ	0xFE1
  6430                           bsr	equ	0xFE0
  6431                           indf2	equ	0xFDF
  6432                           postinc2	equ	0xFDE
  6433                           postdec2	equ	0xFDD
  6434                           fsr2h	equ	0xFDA
  6435                           fsr2l	equ	0xFD9
  6436                           status	equ	0xFD8
  6437                           
  6438 ;; *************** function _WriteTimer1 *****************
  6439 ;; Defined at:
  6440 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6441 ;; Parameters:    Size  Location     Type
  6442 ;;  timer1          2    0[COMRAM] unsigned int 
  6443 ;; Auto vars:     Size  Location     Type
  6444 ;;  timer           2    2[COMRAM] struct Timers
  6445 ;; Return value:  Size  Location     Type
  6446 ;;		None               void
  6447 ;; Registers used:
  6448 ;;		None
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6454 ;;      Params:         2       0       0       0       0
  6455 ;;      Locals:         2       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0
  6457 ;;      Totals:         4       0       0       0       0
  6458 ;;Total ram usage:        4 bytes
  6459 ;; Hardware stack levels used:    1
  6460 ;; Hardware stack levels required when called:    5
  6461 ;; This function calls:
  6462 ;;		Nothing
  6463 ;; This function is called by:
  6464 ;;		_timer1_int_handler
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text39
  6469  001F86                     __ptext39:
  6470                           	opt stack 0
  6471  001F86                     _WriteTimer1:
  6472                           	opt stack 18
  6473                           
  6474                           ;incstack = 0
  6475  001F86  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6476  001F8A  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6477  001F8E  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6478  001F92  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6479  001F96  0012               	return	
  6480  001F98                     __end_of_WriteTimer1:
  6481                           	opt stack 0
  6482                           pclatu	equ	0xFFB
  6483                           pclath	equ	0xFFA
  6484                           tblptru	equ	0xFF8
  6485                           tblptrh	equ	0xFF7
  6486                           tblptrl	equ	0xFF6
  6487                           tablat	equ	0xFF5
  6488                           prodh	equ	0xFF4
  6489                           prodl	equ	0xFF3
  6490                           intcon	equ	0xFF2
  6491                           postinc0	equ	0xFEE
  6492                           fsr0h	equ	0xFEA
  6493                           fsr0l	equ	0xFE9
  6494                           wreg	equ	0xFE8
  6495                           indf1	equ	0xFE7
  6496                           fsr1h	equ	0xFE2
  6497                           fsr1l	equ	0xFE1
  6498                           bsr	equ	0xFE0
  6499                           indf2	equ	0xFDF
  6500                           postinc2	equ	0xFDE
  6501                           postdec2	equ	0xFDD
  6502                           fsr2h	equ	0xFDA
  6503                           fsr2l	equ	0xFD9
  6504                           status	equ	0xFD8
  6505                           
  6506 ;; *************** function _ToMainLow_sendmsg *****************
  6507 ;; Defined at:
  6508 ;;		line 103 in file "../src/messages.c"
  6509 ;; Parameters:    Size  Location     Type
  6510 ;;  length          1    wreg     unsigned char 
  6511 ;;  msgtype         1   22[COMRAM] unsigned char 
  6512 ;;  data            2   23[COMRAM] PTR void 
  6513 ;;		 -> NULL(0), 
  6514 ;; Auto vars:     Size  Location     Type
  6515 ;;  length          1   25[COMRAM] unsigned char 
  6516 ;; Return value:  Size  Location     Type
  6517 ;;                  1    wreg      char 
  6518 ;; Registers used:
  6519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6520 ;; Tracked objects:
  6521 ;;		On entry : 0/0
  6522 ;;		On exit  : 0/0
  6523 ;;		Unchanged: 0/0
  6524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6525 ;;      Params:         3       0       0       0       0
  6526 ;;      Locals:         1       0       0       0       0
  6527 ;;      Temps:          0       0       0       0       0
  6528 ;;      Totals:         4       0       0       0       0
  6529 ;;Total ram usage:        4 bytes
  6530 ;; Hardware stack levels used:    1
  6531 ;; Hardware stack levels required when called:    7
  6532 ;; This function calls:
  6533 ;;		i1_send_msg
  6534 ;; This function is called by:
  6535 ;;		_uart_recv_int_handler
  6536 ;;		_timer1_int_handler
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           
  6540                           	psect	text40
  6541  001EE4                     __ptext40:
  6542                           	opt stack 0
  6543  001EE4                     _ToMainLow_sendmsg:
  6544                           	opt stack 16
  6545                           
  6546                           ;incstack = 0
  6547                           ;ToMainLow_sendmsg@length stored from wreg
  6548  001EE4  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6549                           
  6550                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6551                           ;	Return value of _ToMainLow_sendmsg is never used
  6552  001EE8  0101               	movlb	1	; () banked
  6553  001EEA  0E01               	movlw	high _ToMainLow_MQ
  6554  001EEC  6E0C               	movwf	i1send_msg@qptr+1,c
  6555  001EEE  0101               	movlb	1	; () banked
  6556  001EF0  0E4C               	movlw	low _ToMainLow_MQ
  6557  001EF2  6E0B               	movwf	i1send_msg@qptr,c
  6558  001EF4  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6559  001EF8  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6560  001EFC  6A10               	clrf	i1send_msg@data+1,c
  6561  001EFE  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6562  001F02  EC46  F009         	call	i1_send_msg	;wreg free
  6563  001F06  0012               	return	
  6564  001F08                     __end_of_ToMainLow_sendmsg:
  6565                           	opt stack 0
  6566                           pclatu	equ	0xFFB
  6567                           pclath	equ	0xFFA
  6568                           tblptru	equ	0xFF8
  6569                           tblptrh	equ	0xFF7
  6570                           tblptrl	equ	0xFF6
  6571                           tablat	equ	0xFF5
  6572                           prodh	equ	0xFF4
  6573                           prodl	equ	0xFF3
  6574                           intcon	equ	0xFF2
  6575                           postinc0	equ	0xFEE
  6576                           fsr0h	equ	0xFEA
  6577                           fsr0l	equ	0xFE9
  6578                           wreg	equ	0xFE8
  6579                           indf1	equ	0xFE7
  6580                           fsr1h	equ	0xFE2
  6581                           fsr1l	equ	0xFE1
  6582                           bsr	equ	0xFE0
  6583                           indf2	equ	0xFDF
  6584                           postinc2	equ	0xFDE
  6585                           postdec2	equ	0xFDD
  6586                           fsr2h	equ	0xFDA
  6587                           fsr2l	equ	0xFD9
  6588                           status	equ	0xFD8
  6589                           
  6590 ;; *************** function i1_send_msg *****************
  6591 ;; Defined at:
  6592 ;;		line 24 in file "../src/messages.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6595 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6596 ;;  length          1   12[COMRAM] unsigned char 
  6597 ;;  msgtype         1   13[COMRAM] unsigned char 
  6598 ;;  data            2   14[COMRAM] PTR void 
  6599 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  6600 ;;		 -> main@uc(23), 
  6601 ;; Auto vars:     Size  Location     Type
  6602 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6603 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6604 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6605 ;;  send_msg        2   17[COMRAM] unsigned int 
  6606 ;;  send_msg        1   19[COMRAM] unsigned char 
  6607 ;; Return value:  Size  Location     Type
  6608 ;;                  1    wreg      char 
  6609 ;; Registers used:
  6610 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6611 ;; Tracked objects:
  6612 ;;		On entry : 0/0
  6613 ;;		On exit  : 0/0
  6614 ;;		Unchanged: 0/0
  6615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6616 ;;      Params:         6       0       0       0       0
  6617 ;;      Locals:         5       0       0       0       0
  6618 ;;      Temps:          1       0       0       0       0
  6619 ;;      Totals:        12       0       0       0       0
  6620 ;;Total ram usage:       12 bytes
  6621 ;; Hardware stack levels used:    1
  6622 ;; Hardware stack levels required when called:    6
  6623 ;; This function calls:
  6624 ;;		i1_memcpy
  6625 ;; This function is called by:
  6626 ;;		_ToMainLow_sendmsg
  6627 ;;		i1_ToMainHigh_sendmsg
  6628 ;; This function uses a non-reentrant model
  6629 ;;
  6630                           
  6631                           	psect	text41
  6632  00128C                     __ptext41:
  6633                           	opt stack 0
  6634  00128C                     i1_send_msg:
  6635                           	opt stack 16
  6636                           
  6637                           ;messages.c: 25: unsigned char slot;
  6638                           ;messages.c: 27: msg *qmsg;
  6639                           ;messages.c: 28: size_t tlength = length;
  6640                           
  6641                           ;incstack = 0
  6642  00128C  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6643  001290  6A13               	clrf	i1send_msg@tlength+1,c
  6644                           
  6645                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6646  001292  EE20 F034          	lfsr	2,52
  6647  001296  500B               	movf	i1send_msg@qptr,w,c
  6648  001298  26D9               	addwf	fsr2l,f,c
  6649  00129A  500C               	movf	i1send_msg@qptr+1,w,c
  6650  00129C  22DA               	addwfc	fsr2h,f,c
  6651  00129E  50DF               	movf	indf2,w,c
  6652  0012A0  6E14               	movwf	i1send_msg@slot,c
  6653                           
  6654                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6655  0012A2  5014               	movf	i1send_msg@slot,w,c
  6656  0012A4  0D0D               	mullw	13
  6657  0012A6  50F3               	movf	prodl,w,c
  6658  0012A8  240B               	addwf	i1send_msg@qptr,w,c
  6659  0012AA  6E15               	movwf	i1send_msg@qmsg,c
  6660  0012AC  50F4               	movf	prodh,w,c
  6661  0012AE  200C               	addwfc	i1send_msg@qptr+1,w,c
  6662  0012B0  6E16               	movwf	i1send_msg@qmsg+1,c
  6663                           
  6664                           ;messages.c: 41: if (qmsg->full != 0) {
  6665  0012B2  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6666  0012B6  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6667  0012BA  50DF               	movf	indf2,w,c
  6668  0012BC  B4D8               	btfsc	status,2,c
  6669  0012BE  D002               	goto	i1l3088
  6670                           
  6671                           ;messages.c: 42: return (-1);
  6672  0012C0  0EFF               	movlw	255
  6673  0012C2  0012               	return	
  6674  0012C4                     i1l3088:
  6675                           
  6676                           ;messages.c: 43: }
  6677                           ;messages.c: 46: qmsg->length = length;
  6678  0012C4  EE20 F001          	lfsr	2,1
  6679  0012C8  5015               	movf	i1send_msg@qmsg,w,c
  6680  0012CA  26D9               	addwf	fsr2l,f,c
  6681  0012CC  5016               	movf	i1send_msg@qmsg+1,w,c
  6682  0012CE  22DA               	addwfc	fsr2h,f,c
  6683  0012D0  C00D  FFDF         	movff	i1send_msg@length,indf2
  6684                           
  6685                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6686  0012D4  EE20 F002          	lfsr	2,2
  6687  0012D8  5015               	movf	i1send_msg@qmsg,w,c
  6688  0012DA  26D9               	addwf	fsr2l,f,c
  6689  0012DC  5016               	movf	i1send_msg@qmsg+1,w,c
  6690  0012DE  22DA               	addwfc	fsr2h,f,c
  6691  0012E0  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6692                           
  6693                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6694  0012E4  0E03               	movlw	3
  6695  0012E6  2415               	addwf	i1send_msg@qmsg,w,c
  6696  0012E8  6E01               	movwf	i1memcpy@d1,c
  6697  0012EA  0E00               	movlw	0
  6698  0012EC  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6699  0012EE  6E02               	movwf	i1memcpy@d1+1,c
  6700  0012F0  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6701  0012F4  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6702  0012F8  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6703  0012FC  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6704  001300  EC1D  F00E         	call	i1_memcpy	;wreg free
  6705                           
  6706                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6707  001304  EE20 F034          	lfsr	2,52
  6708  001308  500B               	movf	i1send_msg@qptr,w,c
  6709  00130A  26D9               	addwf	fsr2l,f,c
  6710  00130C  500C               	movf	i1send_msg@qptr+1,w,c
  6711  00130E  22DA               	addwfc	fsr2h,f,c
  6712  001310  EE10 F034          	lfsr	1,52
  6713  001314  500B               	movf	i1send_msg@qptr,w,c
  6714  001316  26E1               	addwf	fsr1l,f,c
  6715  001318  500C               	movf	i1send_msg@qptr+1,w,c
  6716  00131A  22E2               	addwfc	fsr1h,f,c
  6717  00131C  50E7               	movf	indf1,w,c
  6718  00131E  6E11               	movwf	??i1_send_msg& (0+255),c
  6719  001320  2811               	incf	??i1_send_msg,w,c
  6720  001322  0B03               	andlw	3
  6721  001324  6EDF               	movwf	indf2,c
  6722                           
  6723                           ;messages.c: 59: qmsg->full = 1;
  6724  001326  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6725  00132A  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6726  00132E  0E01               	movlw	1
  6727  001330  6EDF               	movwf	indf2,c
  6728                           
  6729                           ;messages.c: 60: return (1);
  6730  001332  0E01               	movlw	1
  6731  001334  0012               	return	
  6732  001336                     __end_ofi1_send_msg:
  6733                           	opt stack 0
  6734                           pclatu	equ	0xFFB
  6735                           pclath	equ	0xFFA
  6736                           tblptru	equ	0xFF8
  6737                           tblptrh	equ	0xFF7
  6738                           tblptrl	equ	0xFF6
  6739                           tablat	equ	0xFF5
  6740                           prodh	equ	0xFF4
  6741                           prodl	equ	0xFF3
  6742                           intcon	equ	0xFF2
  6743                           postinc0	equ	0xFEE
  6744                           fsr0h	equ	0xFEA
  6745                           fsr0l	equ	0xFE9
  6746                           wreg	equ	0xFE8
  6747                           indf1	equ	0xFE7
  6748                           fsr1h	equ	0xFE2
  6749                           fsr1l	equ	0xFE1
  6750                           bsr	equ	0xFE0
  6751                           indf2	equ	0xFDF
  6752                           postinc2	equ	0xFDE
  6753                           postdec2	equ	0xFDD
  6754                           fsr2h	equ	0xFDA
  6755                           fsr2l	equ	0xFD9
  6756                           status	equ	0xFD8
  6757                           
  6758 ;; *************** function i1_memcpy *****************
  6759 ;; Defined at:
  6760 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6761 ;; Parameters:    Size  Location     Type
  6762 ;;  d1              2    0[COMRAM] PTR void 
  6763 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6764 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6765 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6766 ;;  s1              2    2[COMRAM] PTR const void 
  6767 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6768 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6769 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6770 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6771 ;;		 -> main@uc(23), 
  6772 ;;  n               2    4[COMRAM] unsigned int 
  6773 ;; Auto vars:     Size  Location     Type
  6774 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6775 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6776 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6777 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6778 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6779 ;;		 -> main@uc(23), 
  6780 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6781 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6782 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6783 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  2    0[COMRAM] PTR void 
  6786 ;; Registers used:
  6787 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6793 ;;      Params:         6       0       0       0       0
  6794 ;;      Locals:         4       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0
  6796 ;;      Totals:        10       0       0       0       0
  6797 ;;Total ram usage:       10 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    5
  6800 ;; This function calls:
  6801 ;;		Nothing
  6802 ;; This function is called by:
  6803 ;;		i1_send_msg
  6804 ;; This function uses a non-reentrant model
  6805 ;;
  6806                           
  6807                           	psect	text42
  6808  001C3A                     __ptext42:
  6809                           	opt stack 0
  6810  001C3A                     i1_memcpy:
  6811                           	opt stack 16
  6812                           
  6813                           ;incstack = 0
  6814  001C3A  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6815  001C3E  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6816  001C42  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6817  001C46  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6818  001C4A  D00E               	goto	i1l3052
  6819  001C4C                     i1l3046:
  6820  001C4C  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6821  001C50  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6822  001C54  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6823  001C58  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6824  001C5C  CFDF FFE7          	movff	indf2,indf1
  6825  001C60  4A09               	infsnz	i1memcpy@s,f,c
  6826  001C62  2A0A               	incf	i1memcpy@s+1,f,c
  6827  001C64  4A07               	infsnz	i1memcpy@d,f,c
  6828  001C66  2A08               	incf	i1memcpy@d+1,f,c
  6829  001C68                     i1l3052:
  6830  001C68  0605               	decf	i1memcpy@n,f,c
  6831  001C6A  A0D8               	btfss	status,0,c
  6832  001C6C  0606               	decf	i1memcpy@n+1,f,c
  6833  001C6E  2805               	incf	i1memcpy@n& (0+255),w,c
  6834  001C70  B4D8               	btfsc	status,2,c
  6835  001C72  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6836  001C74  B4D8               	btfsc	status,2,c
  6837                           
  6838                           ;	Return value of i1_memcpy is never used
  6839  001C76  0012               	return	
  6840  001C78  D7E9               	goto	i1l3046
  6841  001C7A                     __end_ofi1_memcpy:
  6842                           	opt stack 0
  6843                           pclatu	equ	0xFFB
  6844                           pclath	equ	0xFFA
  6845                           tblptru	equ	0xFF8
  6846                           tblptrh	equ	0xFF7
  6847                           tblptrl	equ	0xFF6
  6848                           tablat	equ	0xFF5
  6849                           prodh	equ	0xFF4
  6850                           prodl	equ	0xFF3
  6851                           intcon	equ	0xFF2
  6852                           postinc0	equ	0xFEE
  6853                           fsr0h	equ	0xFEA
  6854                           fsr0l	equ	0xFE9
  6855                           wreg	equ	0xFE8
  6856                           indf1	equ	0xFE7
  6857                           fsr1h	equ	0xFE2
  6858                           fsr1l	equ	0xFE1
  6859                           bsr	equ	0xFE0
  6860                           indf2	equ	0xFDF
  6861                           postinc2	equ	0xFDE
  6862                           postdec2	equ	0xFDD
  6863                           fsr2h	equ	0xFDA
  6864                           fsr2l	equ	0xFD9
  6865                           status	equ	0xFD8
  6866                           
  6867 ;; *************** function _ReadTimer1 *****************
  6868 ;; Defined at:
  6869 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6870 ;; Parameters:    Size  Location     Type
  6871 ;;		None
  6872 ;; Auto vars:     Size  Location     Type
  6873 ;;  timer           2    2[COMRAM] struct Timers
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  2    0[COMRAM] unsigned int 
  6876 ;; Registers used:
  6877 ;;		None
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6883 ;;      Params:         2       0       0       0       0
  6884 ;;      Locals:         2       0       0       0       0
  6885 ;;      Temps:          0       0       0       0       0
  6886 ;;      Totals:         4       0       0       0       0
  6887 ;;Total ram usage:        4 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    5
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_timer1_int_handler
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           
  6897                           	psect	text43
  6898  001F98                     __ptext43:
  6899                           	opt stack 0
  6900  001F98                     _ReadTimer1:
  6901                           	opt stack 18
  6902                           
  6903                           ;incstack = 0
  6904  001F98  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6905  001F9C  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6906  001FA0  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6907  001FA4  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6908  001FA8  0012               	return	
  6909  001FAA                     __end_of_ReadTimer1:
  6910                           	opt stack 0
  6911                           pclatu	equ	0xFFB
  6912                           pclath	equ	0xFFA
  6913                           tblptru	equ	0xFF8
  6914                           tblptrh	equ	0xFF7
  6915                           tblptrl	equ	0xFF6
  6916                           tablat	equ	0xFF5
  6917                           prodh	equ	0xFF4
  6918                           prodl	equ	0xFF3
  6919                           intcon	equ	0xFF2
  6920                           postinc0	equ	0xFEE
  6921                           fsr0h	equ	0xFEA
  6922                           fsr0l	equ	0xFE9
  6923                           wreg	equ	0xFE8
  6924                           indf1	equ	0xFE7
  6925                           fsr1h	equ	0xFE2
  6926                           fsr1l	equ	0xFE1
  6927                           bsr	equ	0xFE0
  6928                           indf2	equ	0xFDF
  6929                           postinc2	equ	0xFDE
  6930                           postdec2	equ	0xFDD
  6931                           fsr2h	equ	0xFDA
  6932                           fsr2l	equ	0xFD9
  6933                           status	equ	0xFD8
  6934                           
  6935 ;; *************** function _InterruptHandlerHigh *****************
  6936 ;; Defined at:
  6937 ;;		line 88 in file "../src/interrupts.c"
  6938 ;; Parameters:    Size  Location     Type
  6939 ;;		None
  6940 ;; Auto vars:     Size  Location     Type
  6941 ;;		None
  6942 ;; Return value:  Size  Location     Type
  6943 ;;		None               void
  6944 ;; Registers used:
  6945 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6946 ;; Tracked objects:
  6947 ;;		On entry : 0/0
  6948 ;;		On exit  : 0/0
  6949 ;;		Unchanged: 0/0
  6950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6951 ;;      Params:         0       0       0       0       0
  6952 ;;      Locals:         0       0       0       0       0
  6953 ;;      Temps:          0      14       0       0       0
  6954 ;;      Totals:         0      14       0       0       0
  6955 ;;Total ram usage:       14 bytes
  6956 ;; Hardware stack levels used:    1
  6957 ;; Hardware stack levels required when called:    4
  6958 ;; This function calls:
  6959 ;;		_SleepIfOkay
  6960 ;;		_i2c_int_handler
  6961 ;;		_timer0_int_handler
  6962 ;; This function is called by:
  6963 ;;		Interrupt level 2
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	intcode
  6968  000008                     __pintcode:
  6969                           	opt stack 0
  6970  000008                     _InterruptHandlerHigh:
  6971                           	opt stack 16
  6972                           
  6973                           ;incstack = 0
  6974  000008  CFFA F0DA          	movff	pclath,??_InterruptHandlerHigh
  6975  00000C  CFFB F0DB          	movff	pclatu,??_InterruptHandlerHigh+1
  6976  000010  EFBB  F00A         	goto	int_func
  6977                           pclatu	equ	0xFFB
  6978                           pclath	equ	0xFFA
  6979                           tblptru	equ	0xFF8
  6980                           tblptrh	equ	0xFF7
  6981                           tblptrl	equ	0xFF6
  6982                           tablat	equ	0xFF5
  6983                           prodh	equ	0xFF4
  6984                           prodl	equ	0xFF3
  6985                           intcon	equ	0xFF2
  6986                           postinc0	equ	0xFEE
  6987                           fsr0h	equ	0xFEA
  6988                           fsr0l	equ	0xFE9
  6989                           wreg	equ	0xFE8
  6990                           indf1	equ	0xFE7
  6991                           fsr1h	equ	0xFE2
  6992                           fsr1l	equ	0xFE1
  6993                           bsr	equ	0xFE0
  6994                           indf2	equ	0xFDF
  6995                           postinc2	equ	0xFDE
  6996                           postdec2	equ	0xFDD
  6997                           fsr2h	equ	0xFDA
  6998                           fsr2l	equ	0xFD9
  6999                           status	equ	0xFD8
  7000                           
  7001                           	psect	intcode_body
  7002  001576                     __pintcode_body:
  7003                           	opt stack 16
  7004  001576                     int_func:
  7005                           	opt stack 16
  7006  001576  CFE9 F0DC          	movff	fsr0l,??_InterruptHandlerHigh+2
  7007  00157A  CFEA F0DD          	movff	fsr0h,??_InterruptHandlerHigh+3
  7008  00157E  CFE1 F0DE          	movff	fsr1l,??_InterruptHandlerHigh+4
  7009  001582  CFE2 F0DF          	movff	fsr1h,??_InterruptHandlerHigh+5
  7010  001586  CFD9 F0E0          	movff	fsr2l,??_InterruptHandlerHigh+6
  7011  00158A  CFDA F0E1          	movff	fsr2h,??_InterruptHandlerHigh+7
  7012  00158E  CFF3 F0E2          	movff	prodl,??_InterruptHandlerHigh+8
  7013  001592  CFF4 F0E3          	movff	prodh,??_InterruptHandlerHigh+9
  7014  001596  CFF6 F0E4          	movff	tblptrl,??_InterruptHandlerHigh+10
  7015  00159A  CFF7 F0E5          	movff	tblptrh,??_InterruptHandlerHigh+11
  7016  00159E  CFF8 F0E6          	movff	tblptru,??_InterruptHandlerHigh+12
  7017  0015A2  CFF5 F0E7          	movff	tablat,??_InterruptHandlerHigh+13
  7018                           
  7019                           ;interrupts.c: 93: if (PIR1bits.SSPIF) {
  7020  0015A6  A69E               	btfss	3998,3,c	;volatile
  7021  0015A8  D003               	goto	i2l3274
  7022                           
  7023                           ;interrupts.c: 95: PIR1bits.SSPIF = 0;
  7024  0015AA  969E               	bcf	3998,3,c	;volatile
  7025                           
  7026                           ;interrupts.c: 97: i2c_int_handler();
  7027  0015AC  EC68  F00C         	call	_i2c_int_handler	;wreg free
  7028  0015B0                     i2l3274:
  7029                           
  7030                           ;interrupts.c: 98: }
  7031                           ;interrupts.c: 101: if (INTCONbits.TMR0IF) {
  7032  0015B0  A4F2               	btfss	intcon,2,c	;volatile
  7033  0015B2  D003               	goto	i2l3280
  7034                           
  7035                           ;interrupts.c: 102: INTCONbits.TMR0IF = 0;
  7036  0015B4  94F2               	bcf	intcon,2,c	;volatile
  7037                           
  7038                           ;interrupts.c: 104: timer0_int_handler();
  7039  0015B6  EC76  F00A         	call	_timer0_int_handler	;wreg free
  7040  0015BA                     i2l3280:
  7041                           
  7042                           ;interrupts.c: 105: }
  7043                           ;interrupts.c: 115: SleepIfOkay();
  7044  0015BA  EC9E  F00C         	call	_SleepIfOkay	;wreg free
  7045  0015BE  C0E7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7046  0015C2  C0E6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7047  0015C6  C0E5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7048  0015CA  C0E4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7049  0015CE  C0E3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7050  0015D2  C0E2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7051  0015D6  C0E1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7052  0015DA  C0E0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7053  0015DE  C0DF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7054  0015E2  C0DE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7055  0015E6  C0DD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7056  0015EA  C0DC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7057  0015EE  C0DB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7058  0015F2  C0DA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7059  0015F6  0011               	retfie		f
  7060  0015F8                     __end_of_InterruptHandlerHigh:
  7061                           	opt stack 0
  7062                           pclatu	equ	0xFFB
  7063                           pclath	equ	0xFFA
  7064                           tblptru	equ	0xFF8
  7065                           tblptrh	equ	0xFF7
  7066                           tblptrl	equ	0xFF6
  7067                           tablat	equ	0xFF5
  7068                           prodh	equ	0xFF4
  7069                           prodl	equ	0xFF3
  7070                           intcon	equ	0xFF2
  7071                           postinc0	equ	0xFEE
  7072                           fsr0h	equ	0xFEA
  7073                           fsr0l	equ	0xFE9
  7074                           wreg	equ	0xFE8
  7075                           indf1	equ	0xFE7
  7076                           fsr1h	equ	0xFE2
  7077                           fsr1l	equ	0xFE1
  7078                           bsr	equ	0xFE0
  7079                           indf2	equ	0xFDF
  7080                           postinc2	equ	0xFDE
  7081                           postdec2	equ	0xFDD
  7082                           fsr2h	equ	0xFDA
  7083                           fsr2l	equ	0xFD9
  7084                           status	equ	0xFD8
  7085                           
  7086 ;; *************** function _timer0_int_handler *****************
  7087 ;; Defined at:
  7088 ;;		line 17 in file "../src/user_interrupts.c"
  7089 ;; Parameters:    Size  Location     Type
  7090 ;;		None
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  val             2   34[BANK0 ] unsigned int 
  7093 ;;  msgtype         2   32[BANK0 ] int 
  7094 ;;  length          2   30[BANK0 ] int 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;		None               void
  7097 ;; Registers used:
  7098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7104 ;;      Params:         0       0       0       0       0
  7105 ;;      Locals:         0       6       0       0       0
  7106 ;;      Temps:          0       1       0       0       0
  7107 ;;      Totals:         0       7       0       0       0
  7108 ;;Total ram usage:        7 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; Hardware stack levels required when called:    3
  7111 ;; This function calls:
  7112 ;;		_FromMainHigh_recvmsg
  7113 ;;		_WriteTimer0
  7114 ;;		i2_ToMainHigh_sendmsg
  7115 ;; This function is called by:
  7116 ;;		_InterruptHandlerHigh
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text45
  7121  0014EC                     __ptext45:
  7122                           	opt stack 0
  7123  0014EC                     _timer0_int_handler:
  7124                           	opt stack 16
  7125                           
  7126                           ;user_interrupts.c: 18: unsigned int val;
  7127                           ;user_interrupts.c: 19: int length, msgtype;
  7128                           ;user_interrupts.c: 27: WriteTimer0(0);
  7129                           
  7130                           ;incstack = 0
  7131  0014EC  0E00               	movlw	0
  7132  0014EE  0100               	movlb	0	; () banked
  7133  0014F0  0100               	movlb	0	; () banked
  7134  0014F2  6FB7               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7135  0014F4  0E00               	movlw	0
  7136  0014F6  0100               	movlb	0	; () banked
  7137  0014F8  6FB6               	movwf	WriteTimer0@timer0& (0+255),b
  7138  0014FA  ECD5  F00F         	call	_WriteTimer0	;wreg free
  7139                           
  7140                           ;user_interrupts.c: 30: length = FromMainHigh_recvmsg(sizeof (val), (unsigned char *) &m
      +                          sgtype, (void *) &val);
  7141  0014FE  0100               	movlb	0	; () banked
  7142  001500  0E00               	movlw	high timer0_int_handler@msgtype
  7143  001502  0100               	movlb	0	; () banked
  7144  001504  0100               	movlb	0	; () banked
  7145  001506  6FCF               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7146  001508  0100               	movlb	0	; () banked
  7147  00150A  0ED6               	movlw	low timer0_int_handler@msgtype
  7148  00150C  0100               	movlb	0	; () banked
  7149  00150E  0100               	movlb	0	; () banked
  7150  001510  6FCE               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7151  001512  0100               	movlb	0	; () banked
  7152  001514  0E00               	movlw	high timer0_int_handler@val
  7153  001516  0100               	movlb	0	; () banked
  7154  001518  0100               	movlb	0	; () banked
  7155  00151A  6FD1               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7156  00151C  0100               	movlb	0	; () banked
  7157  00151E  0ED8               	movlw	low timer0_int_handler@val
  7158  001520  0100               	movlb	0	; () banked
  7159  001522  0100               	movlb	0	; () banked
  7160  001524  6FD0               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7161  001526  0E02               	movlw	2
  7162  001528  ECFC  F00D         	call	_FromMainHigh_recvmsg
  7163  00152C  0100               	movlb	0	; () banked
  7164  00152E  0100               	movlb	0	; () banked
  7165  001530  6FD4               	movwf	timer0_int_handler@length& (0+255),b
  7166  001532  0100               	movlb	0	; () banked
  7167  001534  6BD5               	clrf	(timer0_int_handler@length+1)& (0+255),b
  7168  001536  0100               	movlb	0	; () banked
  7169  001538  BFD4               	btfsc	timer0_int_handler@length& (0+255),7,b
  7170  00153A  07D5               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  7171                           
  7172                           ; BSR set to: 0
  7173                           ;user_interrupts.c: 31: if (length == sizeof (val)) {
  7174  00153C  0100               	movlb	0	; () banked
  7175  00153E  0100               	movlb	0	; () banked
  7176  001540  51D4               	movf	timer0_int_handler@length& (0+255),w,b
  7177  001542  0A02               	xorlw	2
  7178  001544  11D5               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  7179  001546  A4D8               	btfss	status,2,c
  7180  001548  0012               	return	
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;user_interrupts.c: 32: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  7184  00154A  0100               	movlb	0	; () banked
  7185  00154C  6FD3               	movwf	??_timer0_int_handler& (0+255),b
  7186  00154E  0E0A               	movlw	10
  7187  001550  0100               	movlb	0	; () banked
  7188  001552  0100               	movlb	0	; () banked
  7189  001554  6FCC               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  7190  001556  0100               	movlb	0	; () banked
  7191  001558  51D3               	movf	??_timer0_int_handler& (0+255),w,b
  7192  00155A  0100               	movlb	0	; () banked
  7193  00155C  0E00               	movlw	high timer0_int_handler@val
  7194  00155E  0100               	movlb	0	; () banked
  7195  001560  0100               	movlb	0	; () banked
  7196  001562  6FCE               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  7197  001564  0100               	movlb	0	; () banked
  7198  001566  0ED8               	movlw	low timer0_int_handler@val
  7199  001568  0100               	movlb	0	; () banked
  7200  00156A  0100               	movlb	0	; () banked
  7201  00156C  6FCD               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  7202  00156E  0E02               	movlw	2
  7203  001570  ECE5  F00E         	call	i2_ToMainHigh_sendmsg
  7204  001574  0012               	return	
  7205  001576                     __end_of_timer0_int_handler:
  7206                           	opt stack 0
  7207                           pclatu	equ	0xFFB
  7208                           pclath	equ	0xFFA
  7209                           tblptru	equ	0xFF8
  7210                           tblptrh	equ	0xFF7
  7211                           tblptrl	equ	0xFF6
  7212                           tablat	equ	0xFF5
  7213                           prodh	equ	0xFF4
  7214                           prodl	equ	0xFF3
  7215                           intcon	equ	0xFF2
  7216                           postinc0	equ	0xFEE
  7217                           fsr0h	equ	0xFEA
  7218                           fsr0l	equ	0xFE9
  7219                           wreg	equ	0xFE8
  7220                           indf1	equ	0xFE7
  7221                           fsr1h	equ	0xFE2
  7222                           fsr1l	equ	0xFE1
  7223                           bsr	equ	0xFE0
  7224                           indf2	equ	0xFDF
  7225                           postinc2	equ	0xFDE
  7226                           postdec2	equ	0xFDD
  7227                           fsr2h	equ	0xFDA
  7228                           fsr2l	equ	0xFD9
  7229                           status	equ	0xFD8
  7230                           
  7231 ;; *************** function i2_ToMainHigh_sendmsg *****************
  7232 ;; Defined at:
  7233 ;;		line 126 in file "../src/messages.c"
  7234 ;; Parameters:    Size  Location     Type
  7235 ;;  length          1    wreg     unsigned char 
  7236 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7237 ;;  data            2   23[BANK0 ] PTR void 
  7238 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  7239 ;; Auto vars:     Size  Location     Type
  7240 ;;  length          1   25[BANK0 ] unsigned char 
  7241 ;; Return value:  Size  Location     Type
  7242 ;;                  1    wreg      char 
  7243 ;; Registers used:
  7244 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7245 ;; Tracked objects:
  7246 ;;		On entry : 0/0
  7247 ;;		On exit  : 0/0
  7248 ;;		Unchanged: 0/0
  7249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7250 ;;      Params:         0       3       0       0       0
  7251 ;;      Locals:         0       1       0       0       0
  7252 ;;      Temps:          0       0       0       0       0
  7253 ;;      Totals:         0       4       0       0       0
  7254 ;;Total ram usage:        4 bytes
  7255 ;; Hardware stack levels used:    1
  7256 ;; Hardware stack levels required when called:    2
  7257 ;; This function calls:
  7258 ;;		i2_send_msg
  7259 ;; This function is called by:
  7260 ;;		_timer0_int_handler
  7261 ;; This function uses a non-reentrant model
  7262 ;;
  7263                           
  7264                           	psect	text46
  7265  001DCA                     __ptext46:
  7266                           	opt stack 0
  7267  001DCA                     i2_ToMainHigh_sendmsg:
  7268                           	opt stack 16
  7269                           
  7270                           ;incstack = 0
  7271                           ;i2ToMainHigh_sendmsg@length stored from wreg
  7272  001DCA  CFE8 F0CF          	movff	wreg,i2ToMainHigh_sendmsg@length
  7273                           
  7274                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7275                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  7276  001DCE  0100               	movlb	0	; () banked
  7277  001DD0  0E00               	movlw	high _ToMainHigh_MQ
  7278  001DD2  0100               	movlb	0	; () banked
  7279  001DD4  0100               	movlb	0	; () banked
  7280  001DD6  6FC1               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7281  001DD8  0100               	movlb	0	; () banked
  7282  001DDA  0E80               	movlw	low _ToMainHigh_MQ
  7283  001DDC  0100               	movlb	0	; () banked
  7284  001DDE  0100               	movlb	0	; () banked
  7285  001DE0  6FC0               	movwf	i2send_msg@qptr& (0+255),b
  7286  001DE2  C0CF  F0C2         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  7287  001DE6  C0CC  F0C3         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7288  001DEA  0100               	movlb	0	; () banked
  7289  001DEC  0100               	movlb	0	; () banked
  7290  001DEE  C0CE  F0C5         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7291  001DF2  0100               	movlb	0	; () banked
  7292  001DF4  0100               	movlb	0	; () banked
  7293  001DF6  C0CD  F0C4         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  7294  001DFA  ECE7  F007         	call	i2_send_msg	;wreg free
  7295  001DFE  0012               	return	
  7296  001E00                     __end_ofi2_ToMainHigh_sendmsg:
  7297                           	opt stack 0
  7298                           pclatu	equ	0xFFB
  7299                           pclath	equ	0xFFA
  7300                           tblptru	equ	0xFF8
  7301                           tblptrh	equ	0xFF7
  7302                           tblptrl	equ	0xFF6
  7303                           tablat	equ	0xFF5
  7304                           prodh	equ	0xFF4
  7305                           prodl	equ	0xFF3
  7306                           intcon	equ	0xFF2
  7307                           postinc0	equ	0xFEE
  7308                           fsr0h	equ	0xFEA
  7309                           fsr0l	equ	0xFE9
  7310                           wreg	equ	0xFE8
  7311                           indf1	equ	0xFE7
  7312                           fsr1h	equ	0xFE2
  7313                           fsr1l	equ	0xFE1
  7314                           bsr	equ	0xFE0
  7315                           indf2	equ	0xFDF
  7316                           postinc2	equ	0xFDE
  7317                           postdec2	equ	0xFDD
  7318                           fsr2h	equ	0xFDA
  7319                           fsr2l	equ	0xFD9
  7320                           status	equ	0xFD8
  7321                           
  7322 ;; *************** function i2_send_msg *****************
  7323 ;; Defined at:
  7324 ;;		line 24 in file "../src/messages.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7327 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7328 ;;  length          1   12[BANK0 ] unsigned char 
  7329 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7330 ;;  data            2   14[BANK0 ] PTR void 
  7331 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  7332 ;;		 -> main@uc(23), 
  7333 ;; Auto vars:     Size  Location     Type
  7334 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7335 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7336 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7337 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7338 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7339 ;; Return value:  Size  Location     Type
  7340 ;;                  1    wreg      char 
  7341 ;; Registers used:
  7342 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7343 ;; Tracked objects:
  7344 ;;		On entry : 0/0
  7345 ;;		On exit  : 0/0
  7346 ;;		Unchanged: 0/0
  7347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7348 ;;      Params:         0       6       0       0       0
  7349 ;;      Locals:         0       5       0       0       0
  7350 ;;      Temps:          0       1       0       0       0
  7351 ;;      Totals:         0      12       0       0       0
  7352 ;;Total ram usage:       12 bytes
  7353 ;; Hardware stack levels used:    1
  7354 ;; Hardware stack levels required when called:    1
  7355 ;; This function calls:
  7356 ;;		i2_memcpy
  7357 ;; This function is called by:
  7358 ;;		i2_ToMainHigh_sendmsg
  7359 ;; This function uses a non-reentrant model
  7360 ;;
  7361                           
  7362                           	psect	text47
  7363  000FCE                     __ptext47:
  7364                           	opt stack 0
  7365  000FCE                     i2_send_msg:
  7366                           	opt stack 16
  7367                           
  7368                           ;messages.c: 25: unsigned char slot;
  7369                           ;messages.c: 27: msg *qmsg;
  7370                           ;messages.c: 28: size_t tlength = length;
  7371                           
  7372                           ;incstack = 0
  7373  000FCE  0100               	movlb	0	; () banked
  7374  000FD0  0100               	movlb	0	; () banked
  7375  000FD2  C0C2  F0C7         	movff	i2send_msg@length,i2send_msg@tlength
  7376  000FD6  0100               	movlb	0	; () banked
  7377  000FD8  0100               	movlb	0	; () banked
  7378  000FDA  6BC8               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7379                           
  7380                           ; BSR set to: 0
  7381                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7382  000FDC  0100               	movlb	0	; () banked
  7383  000FDE  EE20 F034          	lfsr	2,52
  7384  000FE2  0100               	movlb	0	; () banked
  7385  000FE4  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7386  000FE6  26D9               	addwf	fsr2l,f,c
  7387  000FE8  0100               	movlb	0	; () banked
  7388  000FEA  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7389  000FEC  22DA               	addwfc	fsr2h,f,c
  7390  000FEE  50DF               	movf	indf2,w,c
  7391  000FF0  0100               	movlb	0	; () banked
  7392  000FF2  0100               	movlb	0	; () banked
  7393  000FF4  6FC9               	movwf	i2send_msg@slot& (0+255),b
  7394                           
  7395                           ; BSR set to: 0
  7396                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7397  000FF6  0100               	movlb	0	; () banked
  7398  000FF8  0100               	movlb	0	; () banked
  7399  000FFA  51C9               	movf	i2send_msg@slot& (0+255),w,b
  7400  000FFC  0D0D               	mullw	13
  7401  000FFE  50F3               	movf	prodl,w,c
  7402  001000  0100               	movlb	0	; () banked
  7403  001002  0100               	movlb	0	; () banked
  7404  001004  25C0               	addwf	i2send_msg@qptr& (0+255),w,b
  7405  001006  0100               	movlb	0	; () banked
  7406  001008  0100               	movlb	0	; () banked
  7407  00100A  6FCA               	movwf	i2send_msg@qmsg& (0+255),b
  7408  00100C  50F4               	movf	prodh,w,c
  7409  00100E  0100               	movlb	0	; () banked
  7410  001010  0100               	movlb	0	; () banked
  7411  001012  21C1               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7412  001014  0100               	movlb	0	; () banked
  7413  001016  6FCB               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7414                           
  7415                           ; BSR set to: 0
  7416                           ;messages.c: 41: if (qmsg->full != 0) {
  7417  001018  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7418  00101C  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7419  001020  50DF               	movf	indf2,w,c
  7420  001022  B4D8               	btfsc	status,2,c
  7421  001024  D002               	goto	i2l3878
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;messages.c: 42: return (-1);
  7425  001026  0EFF               	movlw	255
  7426  001028  0012               	return	
  7427  00102A                     i2l3878:
  7428                           
  7429                           ; BSR set to: 0
  7430                           ;messages.c: 43: }
  7431                           ;messages.c: 46: qmsg->length = length;
  7432  00102A  0100               	movlb	0	; () banked
  7433  00102C  EE20 F001          	lfsr	2,1
  7434  001030  0100               	movlb	0	; () banked
  7435  001032  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7436  001034  26D9               	addwf	fsr2l,f,c
  7437  001036  0100               	movlb	0	; () banked
  7438  001038  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7439  00103A  22DA               	addwfc	fsr2h,f,c
  7440  00103C  0100               	movlb	0	; () banked
  7441  00103E  C0C2  FFDF         	movff	i2send_msg@length,indf2
  7442                           
  7443                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7444  001042  0100               	movlb	0	; () banked
  7445  001044  EE20 F002          	lfsr	2,2
  7446  001048  0100               	movlb	0	; () banked
  7447  00104A  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7448  00104C  26D9               	addwf	fsr2l,f,c
  7449  00104E  0100               	movlb	0	; () banked
  7450  001050  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7451  001052  22DA               	addwfc	fsr2h,f,c
  7452  001054  0100               	movlb	0	; () banked
  7453  001056  C0C3  FFDF         	movff	i2send_msg@msgtype,indf2
  7454                           
  7455                           ; BSR set to: 0
  7456                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7457  00105A  0E03               	movlw	3
  7458  00105C  0100               	movlb	0	; () banked
  7459  00105E  0100               	movlb	0	; () banked
  7460  001060  25CA               	addwf	i2send_msg@qmsg& (0+255),w,b
  7461  001062  0100               	movlb	0	; () banked
  7462  001064  0100               	movlb	0	; () banked
  7463  001066  6FB6               	movwf	i2memcpy@d1& (0+255),b
  7464  001068  0E00               	movlw	0
  7465  00106A  0100               	movlb	0	; () banked
  7466  00106C  0100               	movlb	0	; () banked
  7467  00106E  21CB               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7468  001070  0100               	movlb	0	; () banked
  7469  001072  6FB7               	movwf	(i2memcpy@d1+1)& (0+255),b
  7470  001074  0100               	movlb	0	; () banked
  7471  001076  0100               	movlb	0	; () banked
  7472  001078  C0C5  F0B9         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7473  00107C  0100               	movlb	0	; () banked
  7474  00107E  0100               	movlb	0	; () banked
  7475  001080  C0C4  F0B8         	movff	i2send_msg@data,i2memcpy@s1
  7476  001084  C0C7  F0BA         	movff	i2send_msg@tlength,i2memcpy@n
  7477  001088  C0C8  F0BB         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7478  00108C  EC02  F00D         	call	i2_memcpy	;wreg free
  7479                           
  7480                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7481  001090  0100               	movlb	0	; () banked
  7482  001092  EE20 F034          	lfsr	2,52
  7483  001096  0100               	movlb	0	; () banked
  7484  001098  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7485  00109A  26D9               	addwf	fsr2l,f,c
  7486  00109C  0100               	movlb	0	; () banked
  7487  00109E  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7488  0010A0  22DA               	addwfc	fsr2h,f,c
  7489  0010A2  0100               	movlb	0	; () banked
  7490  0010A4  EE10 F034          	lfsr	1,52
  7491  0010A8  0100               	movlb	0	; () banked
  7492  0010AA  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7493  0010AC  26E1               	addwf	fsr1l,f,c
  7494  0010AE  0100               	movlb	0	; () banked
  7495  0010B0  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7496  0010B2  22E2               	addwfc	fsr1h,f,c
  7497  0010B4  50E7               	movf	indf1,w,c
  7498  0010B6  0100               	movlb	0	; () banked
  7499  0010B8  6FC6               	movwf	??i2_send_msg& (0+255),b
  7500  0010BA  0100               	movlb	0	; () banked
  7501  0010BC  29C6               	incf	??i2_send_msg& (0+255),w,b
  7502  0010BE  0B03               	andlw	3
  7503  0010C0  6EDF               	movwf	indf2,c
  7504                           
  7505                           ; BSR set to: 0
  7506                           ;messages.c: 59: qmsg->full = 1;
  7507  0010C2  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7508  0010C6  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7509  0010CA  0E01               	movlw	1
  7510  0010CC  6EDF               	movwf	indf2,c
  7511                           
  7512                           ; BSR set to: 0
  7513                           ;messages.c: 60: return (1);
  7514  0010CE  0E01               	movlw	1
  7515  0010D0  0012               	return	
  7516  0010D2                     __end_ofi2_send_msg:
  7517                           	opt stack 0
  7518                           pclatu	equ	0xFFB
  7519                           pclath	equ	0xFFA
  7520                           tblptru	equ	0xFF8
  7521                           tblptrh	equ	0xFF7
  7522                           tblptrl	equ	0xFF6
  7523                           tablat	equ	0xFF5
  7524                           prodh	equ	0xFF4
  7525                           prodl	equ	0xFF3
  7526                           intcon	equ	0xFF2
  7527                           postinc0	equ	0xFEE
  7528                           fsr0h	equ	0xFEA
  7529                           fsr0l	equ	0xFE9
  7530                           wreg	equ	0xFE8
  7531                           indf1	equ	0xFE7
  7532                           fsr1h	equ	0xFE2
  7533                           fsr1l	equ	0xFE1
  7534                           bsr	equ	0xFE0
  7535                           indf2	equ	0xFDF
  7536                           postinc2	equ	0xFDE
  7537                           postdec2	equ	0xFDD
  7538                           fsr2h	equ	0xFDA
  7539                           fsr2l	equ	0xFD9
  7540                           status	equ	0xFD8
  7541                           
  7542 ;; *************** function _WriteTimer0 *****************
  7543 ;; Defined at:
  7544 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7545 ;; Parameters:    Size  Location     Type
  7546 ;;  timer0          2    0[BANK0 ] unsigned int 
  7547 ;; Auto vars:     Size  Location     Type
  7548 ;;  timer           2    2[BANK0 ] struct Timers
  7549 ;; Return value:  Size  Location     Type
  7550 ;;		None               void
  7551 ;; Registers used:
  7552 ;;		None
  7553 ;; Tracked objects:
  7554 ;;		On entry : 0/0
  7555 ;;		On exit  : 0/0
  7556 ;;		Unchanged: 0/0
  7557 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7558 ;;      Params:         0       2       0       0       0
  7559 ;;      Locals:         0       2       0       0       0
  7560 ;;      Temps:          0       0       0       0       0
  7561 ;;      Totals:         0       4       0       0       0
  7562 ;;Total ram usage:        4 bytes
  7563 ;; Hardware stack levels used:    1
  7564 ;; This function calls:
  7565 ;;		Nothing
  7566 ;; This function is called by:
  7567 ;;		_timer0_int_handler
  7568 ;; This function uses a non-reentrant model
  7569 ;;
  7570                           
  7571                           	psect	text48
  7572  001FAA                     __ptext48:
  7573                           	opt stack 0
  7574  001FAA                     _WriteTimer0:
  7575                           	opt stack 18
  7576                           
  7577                           ; BSR set to: 0
  7578                           ;incstack = 0
  7579  001FAA  C0B6  F0B8         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7580  001FAE  C0B7  F0B9         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7581  001FB2  C0B9  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7582  001FB6  C0B8  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7583  001FBA  0012               	return	
  7584  001FBC                     __end_of_WriteTimer0:
  7585                           	opt stack 0
  7586                           pclatu	equ	0xFFB
  7587                           pclath	equ	0xFFA
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           intcon	equ	0xFF2
  7595                           postinc0	equ	0xFEE
  7596                           fsr0h	equ	0xFEA
  7597                           fsr0l	equ	0xFE9
  7598                           wreg	equ	0xFE8
  7599                           indf1	equ	0xFE7
  7600                           fsr1h	equ	0xFE2
  7601                           fsr1l	equ	0xFE1
  7602                           bsr	equ	0xFE0
  7603                           indf2	equ	0xFDF
  7604                           postinc2	equ	0xFDE
  7605                           postdec2	equ	0xFDD
  7606                           fsr2h	equ	0xFDA
  7607                           fsr2l	equ	0xFD9
  7608                           status	equ	0xFD8
  7609                           
  7610 ;; *************** function _FromMainHigh_recvmsg *****************
  7611 ;; Defined at:
  7612 ;;		line 183 in file "../src/messages.c"
  7613 ;; Parameters:    Size  Location     Type
  7614 ;;  maxlength       1    wreg     unsigned char 
  7615 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  7616 ;;		 -> timer0_int_handler@msgtype(2), 
  7617 ;;  data            2   26[BANK0 ] PTR void 
  7618 ;;		 -> timer0_int_handler@val(2), 
  7619 ;; Auto vars:     Size  Location     Type
  7620 ;;  maxlength       1   28[BANK0 ] unsigned char 
  7621 ;; Return value:  Size  Location     Type
  7622 ;;                  1    wreg      char 
  7623 ;; Registers used:
  7624 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7625 ;; Tracked objects:
  7626 ;;		On entry : 0/0
  7627 ;;		On exit  : 0/0
  7628 ;;		Unchanged: 0/0
  7629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7630 ;;      Params:         0       4       0       0       0
  7631 ;;      Locals:         0       1       0       0       0
  7632 ;;      Temps:          0       0       0       0       0
  7633 ;;      Totals:         0       5       0       0       0
  7634 ;;Total ram usage:        5 bytes
  7635 ;; Hardware stack levels used:    1
  7636 ;; Hardware stack levels required when called:    2
  7637 ;; This function calls:
  7638 ;;		i2_recv_msg
  7639 ;; This function is called by:
  7640 ;;		_timer0_int_handler
  7641 ;; This function uses a non-reentrant model
  7642 ;;
  7643                           
  7644                           	psect	text49
  7645  001BF8                     __ptext49:
  7646                           	opt stack 0
  7647  001BF8                     _FromMainHigh_recvmsg:
  7648                           	opt stack 16
  7649                           
  7650                           ;incstack = 0
  7651                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  7652  001BF8  CFE8 F0D2          	movff	wreg,FromMainHigh_recvmsg@maxlength
  7653                           
  7654                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  7655  001BFC  0102               	movlb	2	; () banked
  7656  001BFE  0E02               	movlw	high _FromMainHigh_MQ
  7657  001C00  0100               	movlb	0	; () banked
  7658  001C02  0100               	movlb	0	; () banked
  7659  001C04  6FC1               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  7660  001C06  0102               	movlb	2	; () banked
  7661  001C08  0E00               	movlw	low _FromMainHigh_MQ
  7662  001C0A  0100               	movlb	0	; () banked
  7663  001C0C  0100               	movlb	0	; () banked
  7664  001C0E  6FC0               	movwf	i2recv_msg@qptr& (0+255),b
  7665  001C10  C0D2  F0C2         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  7666  001C14  0100               	movlb	0	; () banked
  7667  001C16  0100               	movlb	0	; () banked
  7668  001C18  C0CF  F0C4         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  7669  001C1C  0100               	movlb	0	; () banked
  7670  001C1E  0100               	movlb	0	; () banked
  7671  001C20  C0CE  F0C3         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  7672  001C24  0100               	movlb	0	; () banked
  7673  001C26  0100               	movlb	0	; () banked
  7674  001C28  C0D1  F0C6         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  7675  001C2C  0100               	movlb	0	; () banked
  7676  001C2E  0100               	movlb	0	; () banked
  7677  001C30  C0D0  F0C5         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  7678  001C34  ECCA  F006         	call	i2_recv_msg	;wreg free
  7679  001C38  0012               	return	
  7680  001C3A                     __end_of_FromMainHigh_recvmsg:
  7681                           	opt stack 0
  7682                           pclatu	equ	0xFFB
  7683                           pclath	equ	0xFFA
  7684                           tblptru	equ	0xFF8
  7685                           tblptrh	equ	0xFF7
  7686                           tblptrl	equ	0xFF6
  7687                           tablat	equ	0xFF5
  7688                           prodh	equ	0xFF4
  7689                           prodl	equ	0xFF3
  7690                           intcon	equ	0xFF2
  7691                           postinc0	equ	0xFEE
  7692                           fsr0h	equ	0xFEA
  7693                           fsr0l	equ	0xFE9
  7694                           wreg	equ	0xFE8
  7695                           indf1	equ	0xFE7
  7696                           fsr1h	equ	0xFE2
  7697                           fsr1l	equ	0xFE1
  7698                           bsr	equ	0xFE0
  7699                           indf2	equ	0xFDF
  7700                           postinc2	equ	0xFDE
  7701                           postdec2	equ	0xFDD
  7702                           fsr2h	equ	0xFDA
  7703                           fsr2l	equ	0xFD9
  7704                           status	equ	0xFD8
  7705                           
  7706 ;; *************** function i2_recv_msg *****************
  7707 ;; Defined at:
  7708 ;;		line 63 in file "../src/messages.c"
  7709 ;; Parameters:    Size  Location     Type
  7710 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7711 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7712 ;;  maxlength       1   12[BANK0 ] unsigned char 
  7713 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  7714 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  7715 ;;  data            2   15[BANK0 ] PTR void 
  7716 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  7719 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7720 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7721 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  7722 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  7723 ;; Return value:  Size  Location     Type
  7724 ;;                  1    wreg      char 
  7725 ;; Registers used:
  7726 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7727 ;; Tracked objects:
  7728 ;;		On entry : 0/0
  7729 ;;		On exit  : 0/0
  7730 ;;		Unchanged: 0/0
  7731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7732 ;;      Params:         0       7       0       0       0
  7733 ;;      Locals:         0       5       0       0       0
  7734 ;;      Temps:          0       2       0       0       0
  7735 ;;      Totals:         0      14       0       0       0
  7736 ;;Total ram usage:       14 bytes
  7737 ;; Hardware stack levels used:    1
  7738 ;; Hardware stack levels required when called:    1
  7739 ;; This function calls:
  7740 ;;		i2_memcpy
  7741 ;; This function is called by:
  7742 ;;		_FromMainHigh_recvmsg
  7743 ;; This function uses a non-reentrant model
  7744 ;;
  7745                           
  7746                           	psect	text50
  7747  000D94                     __ptext50:
  7748                           	opt stack 0
  7749  000D94                     i2_recv_msg:
  7750                           	opt stack 16
  7751                           
  7752                           ;messages.c: 64: unsigned char slot;
  7753                           ;messages.c: 68: msg *qmsg;
  7754                           ;messages.c: 69: size_t tlength;
  7755                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7756                           
  7757                           ;incstack = 0
  7758  000D94  0100               	movlb	0	; () banked
  7759  000D96  EE20 F035          	lfsr	2,53
  7760  000D9A  0100               	movlb	0	; () banked
  7761  000D9C  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7762  000D9E  26D9               	addwf	fsr2l,f,c
  7763  000DA0  0100               	movlb	0	; () banked
  7764  000DA2  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7765  000DA4  22DA               	addwfc	fsr2h,f,c
  7766  000DA6  50DF               	movf	indf2,w,c
  7767  000DA8  0100               	movlb	0	; () banked
  7768  000DAA  0100               	movlb	0	; () banked
  7769  000DAC  6FC9               	movwf	i2recv_msg@slot& (0+255),b
  7770                           
  7771                           ; BSR set to: 0
  7772                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7773  000DAE  0100               	movlb	0	; () banked
  7774  000DB0  0100               	movlb	0	; () banked
  7775  000DB2  51C9               	movf	i2recv_msg@slot& (0+255),w,b
  7776  000DB4  0D0D               	mullw	13
  7777  000DB6  50F3               	movf	prodl,w,c
  7778  000DB8  0100               	movlb	0	; () banked
  7779  000DBA  0100               	movlb	0	; () banked
  7780  000DBC  25C0               	addwf	i2recv_msg@qptr& (0+255),w,b
  7781  000DBE  0100               	movlb	0	; () banked
  7782  000DC0  0100               	movlb	0	; () banked
  7783  000DC2  6FCC               	movwf	i2recv_msg@qmsg& (0+255),b
  7784  000DC4  50F4               	movf	prodh,w,c
  7785  000DC6  0100               	movlb	0	; () banked
  7786  000DC8  0100               	movlb	0	; () banked
  7787  000DCA  21C1               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  7788  000DCC  0100               	movlb	0	; () banked
  7789  000DCE  6FCD               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  7790                           
  7791                           ; BSR set to: 0
  7792                           ;messages.c: 74: if (qmsg->full == 1) {
  7793  000DD0  0E01               	movlw	1
  7794  000DD2  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7795  000DD6  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7796  000DDA  62DF               	cpfseq	indf2,c
  7797  000DDC  D074               	goto	i2l3918
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7801  000DDE  0100               	movlb	0	; () banked
  7802  000DE0  EE20 F001          	lfsr	2,1
  7803  000DE4  0100               	movlb	0	; () banked
  7804  000DE6  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7805  000DE8  26D9               	addwf	fsr2l,f,c
  7806  000DEA  0100               	movlb	0	; () banked
  7807  000DEC  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7808  000DEE  22DA               	addwfc	fsr2h,f,c
  7809  000DF0  50DF               	movf	indf2,w,c
  7810  000DF2  0100               	movlb	0	; () banked
  7811  000DF4  0100               	movlb	0	; () banked
  7812  000DF6  5DC2               	subwf	i2recv_msg@maxlength& (0+255),w,b
  7813  000DF8  B0D8               	btfsc	status,0,c
  7814  000DFA  D002               	goto	i2l3902
  7815                           
  7816                           ; BSR set to: 0
  7817                           ;messages.c: 77: return (-3);
  7818  000DFC  0EFD               	movlw	253
  7819  000DFE  0012               	return	
  7820  000E00                     i2l3902:
  7821                           
  7822                           ; BSR set to: 0
  7823                           ;messages.c: 78: }
  7824                           ;messages.c: 80: tlength = qmsg->length;
  7825  000E00  0100               	movlb	0	; () banked
  7826  000E02  EE20 F001          	lfsr	2,1
  7827  000E06  0100               	movlb	0	; () banked
  7828  000E08  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7829  000E0A  26D9               	addwf	fsr2l,f,c
  7830  000E0C  0100               	movlb	0	; () banked
  7831  000E0E  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7832  000E10  22DA               	addwfc	fsr2h,f,c
  7833  000E12  50DF               	movf	indf2,w,c
  7834  000E14  0100               	movlb	0	; () banked
  7835  000E16  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7836  000E18  0100               	movlb	0	; () banked
  7837  000E1A  51C7               	movf	??i2_recv_msg& (0+255),w,b
  7838  000E1C  0100               	movlb	0	; () banked
  7839  000E1E  0100               	movlb	0	; () banked
  7840  000E20  6FCA               	movwf	i2recv_msg@tlength& (0+255),b
  7841  000E22  0100               	movlb	0	; () banked
  7842  000E24  6BCB               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7843                           
  7844                           ; BSR set to: 0
  7845                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7846  000E26  0100               	movlb	0	; () banked
  7847  000E28  0100               	movlb	0	; () banked
  7848  000E2A  C0C6  F0B7         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7849  000E2E  0100               	movlb	0	; () banked
  7850  000E30  0100               	movlb	0	; () banked
  7851  000E32  C0C5  F0B6         	movff	i2recv_msg@data,i2memcpy@d1
  7852  000E36  0E03               	movlw	3
  7853  000E38  0100               	movlb	0	; () banked
  7854  000E3A  0100               	movlb	0	; () banked
  7855  000E3C  25CC               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7856  000E3E  0100               	movlb	0	; () banked
  7857  000E40  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7858  000E42  0E00               	movlw	0
  7859  000E44  0100               	movlb	0	; () banked
  7860  000E46  0100               	movlb	0	; () banked
  7861  000E48  21CD               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7862  000E4A  0100               	movlb	0	; () banked
  7863  000E4C  6FC8               	movwf	(??i2_recv_msg+1)& (0+255),b
  7864  000E4E  C0C7  F0B8         	movff	??i2_recv_msg,i2memcpy@s1
  7865  000E52  C0C8  F0B9         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7866  000E56  C0CA  F0BA         	movff	i2recv_msg@tlength,i2memcpy@n
  7867  000E5A  C0CB  F0BB         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7868  000E5E  EC02  F00D         	call	i2_memcpy	;wreg free
  7869                           
  7870                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7871  000E62  0100               	movlb	0	; () banked
  7872  000E64  EE20 F035          	lfsr	2,53
  7873  000E68  0100               	movlb	0	; () banked
  7874  000E6A  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7875  000E6C  26D9               	addwf	fsr2l,f,c
  7876  000E6E  0100               	movlb	0	; () banked
  7877  000E70  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7878  000E72  22DA               	addwfc	fsr2h,f,c
  7879  000E74  0100               	movlb	0	; () banked
  7880  000E76  EE10 F035          	lfsr	1,53
  7881  000E7A  0100               	movlb	0	; () banked
  7882  000E7C  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7883  000E7E  26E1               	addwf	fsr1l,f,c
  7884  000E80  0100               	movlb	0	; () banked
  7885  000E82  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7886  000E84  22E2               	addwfc	fsr1h,f,c
  7887  000E86  50E7               	movf	indf1,w,c
  7888  000E88  0100               	movlb	0	; () banked
  7889  000E8A  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7890  000E8C  0100               	movlb	0	; () banked
  7891  000E8E  29C7               	incf	??i2_recv_msg& (0+255),w,b
  7892  000E90  0B03               	andlw	3
  7893  000E92  6EDF               	movwf	indf2,c
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7897  000E94  0100               	movlb	0	; () banked
  7898  000E96  EE20 F002          	lfsr	2,2
  7899  000E9A  0100               	movlb	0	; () banked
  7900  000E9C  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7901  000E9E  26D9               	addwf	fsr2l,f,c
  7902  000EA0  0100               	movlb	0	; () banked
  7903  000EA2  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7904  000EA4  22DA               	addwfc	fsr2h,f,c
  7905  000EA6  C0C3  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  7906  000EAA  C0C4  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  7907  000EAE  CFDF FFE7          	movff	indf2,indf1
  7908                           
  7909                           ; BSR set to: 0
  7910                           ;messages.c: 91: qmsg->full = 0;
  7911  000EB2  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7912  000EB6  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7913  000EBA  0E00               	movlw	0
  7914  000EBC  6EDF               	movwf	indf2,c
  7915                           
  7916                           ; BSR set to: 0
  7917                           ;messages.c: 92: return (tlength);
  7918  000EBE  0100               	movlb	0	; () banked
  7919  000EC0  0100               	movlb	0	; () banked
  7920  000EC2  51CA               	movf	i2recv_msg@tlength& (0+255),w,b
  7921  000EC4  0012               	return	
  7922  000EC6                     i2l3918:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;messages.c: 94: return (-4);
  7926  000EC6  0EFC               	movlw	252
  7927  000EC8  0012               	return	
  7928  000ECA                     __end_ofi2_recv_msg:
  7929                           	opt stack 0
  7930                           pclatu	equ	0xFFB
  7931                           pclath	equ	0xFFA
  7932                           tblptru	equ	0xFF8
  7933                           tblptrh	equ	0xFF7
  7934                           tblptrl	equ	0xFF6
  7935                           tablat	equ	0xFF5
  7936                           prodh	equ	0xFF4
  7937                           prodl	equ	0xFF3
  7938                           intcon	equ	0xFF2
  7939                           postinc0	equ	0xFEE
  7940                           fsr0h	equ	0xFEA
  7941                           fsr0l	equ	0xFE9
  7942                           wreg	equ	0xFE8
  7943                           indf1	equ	0xFE7
  7944                           fsr1h	equ	0xFE2
  7945                           fsr1l	equ	0xFE1
  7946                           bsr	equ	0xFE0
  7947                           indf2	equ	0xFDF
  7948                           postinc2	equ	0xFDE
  7949                           postdec2	equ	0xFDD
  7950                           fsr2h	equ	0xFDA
  7951                           fsr2l	equ	0xFD9
  7952                           status	equ	0xFD8
  7953                           
  7954 ;; *************** function i2_memcpy *****************
  7955 ;; Defined at:
  7956 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7957 ;; Parameters:    Size  Location     Type
  7958 ;;  d1              2    0[BANK0 ] PTR void 
  7959 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7960 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7961 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7962 ;;  s1              2    2[BANK0 ] PTR const void 
  7963 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7964 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7965 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7966 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  7967 ;;		 -> main@uc(23), 
  7968 ;;  n               2    4[BANK0 ] unsigned int 
  7969 ;; Auto vars:     Size  Location     Type
  7970 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  7971 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7972 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7973 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7974 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  7975 ;;		 -> main@uc(23), 
  7976 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  7977 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7978 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7979 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7980 ;; Return value:  Size  Location     Type
  7981 ;;                  2    0[BANK0 ] PTR void 
  7982 ;; Registers used:
  7983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7984 ;; Tracked objects:
  7985 ;;		On entry : 0/0
  7986 ;;		On exit  : 0/0
  7987 ;;		Unchanged: 0/0
  7988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7989 ;;      Params:         0       6       0       0       0
  7990 ;;      Locals:         0       4       0       0       0
  7991 ;;      Temps:          0       0       0       0       0
  7992 ;;      Totals:         0      10       0       0       0
  7993 ;;Total ram usage:       10 bytes
  7994 ;; Hardware stack levels used:    1
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		i2_send_msg
  7999 ;;		i2_recv_msg
  8000 ;; This function uses a non-reentrant model
  8001 ;;
  8002                           
  8003                           	psect	text51
  8004  001A04                     __ptext51:
  8005                           	opt stack 0
  8006  001A04                     i2_memcpy:
  8007                           	opt stack 16
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;incstack = 0
  8011  001A04  0100               	movlb	0	; () banked
  8012  001A06  0100               	movlb	0	; () banked
  8013  001A08  C0B9  F0BF         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8014  001A0C  0100               	movlb	0	; () banked
  8015  001A0E  0100               	movlb	0	; () banked
  8016  001A10  C0B8  F0BE         	movff	i2memcpy@s1,i2memcpy@s
  8017  001A14  0100               	movlb	0	; () banked
  8018  001A16  0100               	movlb	0	; () banked
  8019  001A18  C0B7  F0BD         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8020  001A1C  0100               	movlb	0	; () banked
  8021  001A1E  0100               	movlb	0	; () banked
  8022  001A20  C0B6  F0BC         	movff	i2memcpy@d1,i2memcpy@d
  8023  001A24  D012               	goto	i2l3938
  8024  001A26                     i2l3932:
  8025                           
  8026                           ; BSR set to: 0
  8027  001A26  C0BE  FFD9         	movff	i2memcpy@s,fsr2l
  8028  001A2A  C0BF  FFDA         	movff	i2memcpy@s+1,fsr2h
  8029  001A2E  C0BC  FFE1         	movff	i2memcpy@d,fsr1l
  8030  001A32  C0BD  FFE2         	movff	i2memcpy@d+1,fsr1h
  8031  001A36  CFDF FFE7          	movff	indf2,indf1
  8032                           
  8033                           ; BSR set to: 0
  8034  001A3A  0100               	movlb	0	; () banked
  8035  001A3C  0100               	movlb	0	; () banked
  8036  001A3E  4BBE               	infsnz	i2memcpy@s& (0+255),f,b
  8037  001A40  2BBF               	incf	(i2memcpy@s+1)& (0+255),f,b
  8038                           
  8039                           ; BSR set to: 0
  8040  001A42  0100               	movlb	0	; () banked
  8041  001A44  0100               	movlb	0	; () banked
  8042  001A46  4BBC               	infsnz	i2memcpy@d& (0+255),f,b
  8043  001A48  2BBD               	incf	(i2memcpy@d+1)& (0+255),f,b
  8044  001A4A                     i2l3938:
  8045                           
  8046                           ; BSR set to: 0
  8047  001A4A  0100               	movlb	0	; () banked
  8048  001A4C  0100               	movlb	0	; () banked
  8049  001A4E  07BA               	decf	i2memcpy@n& (0+255),f,b
  8050  001A50  A0D8               	btfss	status,0,c
  8051  001A52  07BB               	decf	(i2memcpy@n+1)& (0+255),f,b
  8052  001A54  0100               	movlb	0	; () banked
  8053  001A56  29BA               	incf	i2memcpy@n& (0+255),w,b
  8054  001A58  B4D8               	btfsc	status,2,c
  8055  001A5A  29BB               	incf	(i2memcpy@n+1)& (0+255),w,b
  8056  001A5C  B4D8               	btfsc	status,2,c
  8057                           
  8058                           ; BSR set to: 0
  8059                           
  8060                           ; BSR set to: 0
  8061                           ;	Return value of i2_memcpy is never used
  8062  001A5E  0012               	return	
  8063  001A60  D7E2               	goto	i2l3932
  8064  001A62                     __end_ofi2_memcpy:
  8065                           	opt stack 0
  8066                           pclatu	equ	0xFFB
  8067                           pclath	equ	0xFFA
  8068                           tblptru	equ	0xFF8
  8069                           tblptrh	equ	0xFF7
  8070                           tblptrl	equ	0xFF6
  8071                           tablat	equ	0xFF5
  8072                           prodh	equ	0xFF4
  8073                           prodl	equ	0xFF3
  8074                           intcon	equ	0xFF2
  8075                           postinc0	equ	0xFEE
  8076                           fsr0h	equ	0xFEA
  8077                           fsr0l	equ	0xFE9
  8078                           wreg	equ	0xFE8
  8079                           indf1	equ	0xFE7
  8080                           fsr1h	equ	0xFE2
  8081                           fsr1l	equ	0xFE1
  8082                           bsr	equ	0xFE0
  8083                           indf2	equ	0xFDF
  8084                           postinc2	equ	0xFDE
  8085                           postdec2	equ	0xFDD
  8086                           fsr2h	equ	0xFDA
  8087                           fsr2l	equ	0xFD9
  8088                           status	equ	0xFD8
  8089                           
  8090 ;; *************** function _i2c_int_handler *****************
  8091 ;; Defined at:
  8092 ;;		line 145 in file "../src/my_i2c.c"
  8093 ;; Parameters:    Size  Location     Type
  8094 ;;		None
  8095 ;; Auto vars:     Size  Location     Type
  8096 ;;		None
  8097 ;; Return value:  Size  Location     Type
  8098 ;;		None               void
  8099 ;; Registers used:
  8100 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8101 ;; Tracked objects:
  8102 ;;		On entry : 0/0
  8103 ;;		On exit  : 0/0
  8104 ;;		Unchanged: 0/0
  8105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8106 ;;      Params:         0       0       0       0       0
  8107 ;;      Locals:         0       0       0       0       0
  8108 ;;      Temps:          0       0       0       0       0
  8109 ;;      Totals:         0       0       0       0       0
  8110 ;;Total ram usage:        0 bytes
  8111 ;; Hardware stack levels used:    1
  8112 ;; Hardware stack levels required when called:    1
  8113 ;; This function calls:
  8114 ;;		_i2c_int_handler_master_rx
  8115 ;;		_i2c_int_handler_master_tx
  8116 ;; This function is called by:
  8117 ;;		_InterruptHandlerHigh
  8118 ;; This function uses a non-reentrant model
  8119 ;;
  8120                           
  8121                           	psect	text52
  8122  0018D0                     __ptext52:
  8123                           	opt stack 0
  8124  0018D0                     _i2c_int_handler:
  8125                           	opt stack 18
  8126                           
  8127                           ;my_i2c.c: 147: if ((ic_ptr->rx_i2c == 1) && (ic_ptr->tx_i2c == 0)) {
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;incstack = 0
  8131  0018D0  0100               	movlb	0	; () banked
  8132  0018D2  EE20 F021          	lfsr	2,33
  8133  0018D6  0100               	movlb	0	; () banked
  8134  0018D8  51E8               	movf	_ic_ptr& (0+255),w,b
  8135  0018DA  26D9               	addwf	fsr2l,f,c
  8136  0018DC  0100               	movlb	0	; () banked
  8137  0018DE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8138  0018E0  22DA               	addwfc	fsr2h,f,c
  8139  0018E2  0E01               	movlw	1
  8140  0018E4  62DF               	cpfseq	indf2,c
  8141  0018E6  D00F               	goto	i2l3288
  8142                           
  8143                           ; BSR set to: 0
  8144  0018E8  0100               	movlb	0	; () banked
  8145  0018EA  EE20 F020          	lfsr	2,32
  8146  0018EE  0100               	movlb	0	; () banked
  8147  0018F0  51E8               	movf	_ic_ptr& (0+255),w,b
  8148  0018F2  26D9               	addwf	fsr2l,f,c
  8149  0018F4  0100               	movlb	0	; () banked
  8150  0018F6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8151  0018F8  22DA               	addwfc	fsr2h,f,c
  8152  0018FA  50DF               	movf	indf2,w,c
  8153  0018FC  A4D8               	btfss	status,2,c
  8154  0018FE  D003               	goto	i2l3288
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;my_i2c.c: 148: i2c_int_handler_master_rx();
  8158  001900  EC7F  F004         	call	_i2c_int_handler_master_rx	;wreg free
  8159                           
  8160                           ;my_i2c.c: 149: } else if ((ic_ptr->tx_i2c == 1) && (ic_ptr->rx_i2c == 0)) {
  8161  001904  0012               	return	
  8162  001906                     i2l3288:
  8163  001906  0100               	movlb	0	; () banked
  8164  001908  EE20 F020          	lfsr	2,32
  8165  00190C  0100               	movlb	0	; () banked
  8166  00190E  51E8               	movf	_ic_ptr& (0+255),w,b
  8167  001910  26D9               	addwf	fsr2l,f,c
  8168  001912  0100               	movlb	0	; () banked
  8169  001914  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8170  001916  22DA               	addwfc	fsr2h,f,c
  8171  001918  0E01               	movlw	1
  8172  00191A  62DF               	cpfseq	indf2,c
  8173  00191C  0012               	return	
  8174                           
  8175                           ; BSR set to: 0
  8176  00191E  0100               	movlb	0	; () banked
  8177  001920  EE20 F021          	lfsr	2,33
  8178  001924  0100               	movlb	0	; () banked
  8179  001926  51E8               	movf	_ic_ptr& (0+255),w,b
  8180  001928  26D9               	addwf	fsr2l,f,c
  8181  00192A  0100               	movlb	0	; () banked
  8182  00192C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8183  00192E  22DA               	addwfc	fsr2h,f,c
  8184  001930  50DF               	movf	indf2,w,c
  8185  001932  A4D8               	btfss	status,2,c
  8186  001934  0012               	return	
  8187                           
  8188                           ; BSR set to: 0
  8189                           ;my_i2c.c: 150: i2c_int_handler_master_tx();
  8190  001936  EC70  F003         	call	_i2c_int_handler_master_tx	;wreg free
  8191  00193A  0012               	return	
  8192  00193C                     __end_of_i2c_int_handler:
  8193                           	opt stack 0
  8194                           pclatu	equ	0xFFB
  8195                           pclath	equ	0xFFA
  8196                           tblptru	equ	0xFF8
  8197                           tblptrh	equ	0xFF7
  8198                           tblptrl	equ	0xFF6
  8199                           tablat	equ	0xFF5
  8200                           prodh	equ	0xFF4
  8201                           prodl	equ	0xFF3
  8202                           intcon	equ	0xFF2
  8203                           postinc0	equ	0xFEE
  8204                           fsr0h	equ	0xFEA
  8205                           fsr0l	equ	0xFE9
  8206                           wreg	equ	0xFE8
  8207                           indf1	equ	0xFE7
  8208                           fsr1h	equ	0xFE2
  8209                           fsr1l	equ	0xFE1
  8210                           bsr	equ	0xFE0
  8211                           indf2	equ	0xFDF
  8212                           postinc2	equ	0xFDE
  8213                           postdec2	equ	0xFDD
  8214                           fsr2h	equ	0xFDA
  8215                           fsr2l	equ	0xFD9
  8216                           status	equ	0xFD8
  8217                           
  8218 ;; *************** function _i2c_int_handler_master_tx *****************
  8219 ;; Defined at:
  8220 ;;		line 231 in file "../src/my_i2c.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;		None
  8223 ;; Auto vars:     Size  Location     Type
  8224 ;;		None
  8225 ;; Return value:  Size  Location     Type
  8226 ;;		None               void
  8227 ;; Registers used:
  8228 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8229 ;; Tracked objects:
  8230 ;;		On entry : 0/0
  8231 ;;		On exit  : 0/0
  8232 ;;		Unchanged: 0/0
  8233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8234 ;;      Params:         0       0       0       0       0
  8235 ;;      Locals:         0       0       0       0       0
  8236 ;;      Temps:          0       4       0       0       0
  8237 ;;      Totals:         0       4       0       0       0
  8238 ;;Total ram usage:        4 bytes
  8239 ;; Hardware stack levels used:    1
  8240 ;; This function calls:
  8241 ;;		Nothing
  8242 ;; This function is called by:
  8243 ;;		_i2c_int_handler
  8244 ;; This function uses a non-reentrant model
  8245 ;;
  8246                           
  8247                           	psect	text53
  8248  0006E0                     __ptext53:
  8249                           	opt stack 0
  8250  0006E0                     _i2c_int_handler_master_tx:
  8251                           	opt stack 18
  8252                           
  8253                           ;my_i2c.c: 234: switch (ic_ptr->status) {
  8254                           
  8255                           ;incstack = 0
  8256  0006E0  D0F7               	goto	i2l3812
  8257  0006E2                     i2l3786:
  8258                           
  8259                           ;my_i2c.c: 238: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8260  0006E2  0100               	movlb	0	; () banked
  8261  0006E4  EE20 F01A          	lfsr	2,26
  8262  0006E8  0100               	movlb	0	; () banked
  8263  0006EA  51E8               	movf	_ic_ptr& (0+255),w,b
  8264  0006EC  26D9               	addwf	fsr2l,f,c
  8265  0006EE  0100               	movlb	0	; () banked
  8266  0006F0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8267  0006F2  22DA               	addwfc	fsr2h,f,c
  8268  0006F4  50DF               	movf	indf2,w,c
  8269  0006F6  0100               	movlb	0	; () banked
  8270  0006F8  6FB6               	movwf	??_i2c_int_handler_master_tx& (0+255),b
  8271  0006FA  0100               	movlb	0	; () banked
  8272  0006FC  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8273  0006FE  0D01               	mullw	1
  8274  000700  0E0F               	movlw	15
  8275  000702  26F3               	addwf	prodl,f,c
  8276  000704  0E00               	movlw	0
  8277  000706  22F4               	addwfc	prodh,f,c
  8278  000708  50F3               	movf	prodl,w,c
  8279  00070A  0100               	movlb	0	; () banked
  8280  00070C  0100               	movlb	0	; () banked
  8281  00070E  25E8               	addwf	_ic_ptr& (0+255),w,b
  8282  000710  6ED9               	movwf	fsr2l,c
  8283  000712  50F4               	movf	prodh,w,c
  8284  000714  0100               	movlb	0	; () banked
  8285  000716  0100               	movlb	0	; () banked
  8286  000718  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8287  00071A  6EDA               	movwf	fsr2h,c
  8288  00071C  50DF               	movf	indf2,w,c
  8289  00071E  6EC9               	movwf	4041,c	;volatile
  8290                           
  8291                           ; BSR set to: 0
  8292                           ;my_i2c.c: 239: ic_ptr->status = 0x6;
  8293  000720  0100               	movlb	0	; () banked
  8294  000722  EE20 F00C          	lfsr	2,12
  8295  000726  0100               	movlb	0	; () banked
  8296  000728  51E8               	movf	_ic_ptr& (0+255),w,b
  8297  00072A  26D9               	addwf	fsr2l,f,c
  8298  00072C  0100               	movlb	0	; () banked
  8299  00072E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8300  000730  22DA               	addwfc	fsr2h,f,c
  8301  000732  0E06               	movlw	6
  8302  000734  6EDF               	movwf	indf2,c
  8303                           
  8304                           ;my_i2c.c: 240: break;
  8305  000736  0012               	return	
  8306  000738                     i2l344:
  8307                           
  8308                           ; BSR set to: 0
  8309                           ;my_i2c.c: 244: if (!SSPCON2bits.ACKSTAT) {
  8310  000738  BCC5               	btfsc	4037,6,c	;volatile
  8311  00073A  D039               	goto	i2l3794
  8312                           
  8313                           ; BSR set to: 0
  8314                           ;my_i2c.c: 246: SSPCON2bits.ACKDT = 1;
  8315  00073C  8AC5               	bsf	4037,5,c	;volatile
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;my_i2c.c: 248: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  8319  00073E  0100               	movlb	0	; () banked
  8320  000740  EE20 F01C          	lfsr	2,28
  8321  000744  0100               	movlb	0	; () banked
  8322  000746  51E8               	movf	_ic_ptr& (0+255),w,b
  8323  000748  26D9               	addwf	fsr2l,f,c
  8324  00074A  0100               	movlb	0	; () banked
  8325  00074C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8326  00074E  22DA               	addwfc	fsr2h,f,c
  8327  000750  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8328  000754  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8329  000758  0E0F               	movlw	15
  8330  00075A  0100               	movlb	0	; () banked
  8331  00075C  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  8332  00075E  0E00               	movlw	0
  8333  000760  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  8334  000762  0100               	movlb	0	; () banked
  8335  000764  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8336  000766  0100               	movlb	0	; () banked
  8337  000768  0100               	movlb	0	; () banked
  8338  00076A  25E8               	addwf	_ic_ptr& (0+255),w,b
  8339  00076C  6ED9               	movwf	fsr2l,c
  8340  00076E  0100               	movlb	0	; () banked
  8341  000770  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8342  000772  0100               	movlb	0	; () banked
  8343  000774  0100               	movlb	0	; () banked
  8344  000776  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8345  000778  6EDA               	movwf	fsr2h,c
  8346  00077A  50DF               	movf	indf2,w,c
  8347  00077C  6EC9               	movwf	4041,c	;volatile
  8348                           
  8349                           ;my_i2c.c: 250: ic_ptr->bufferCounterSend++;
  8350  00077E  0100               	movlb	0	; () banked
  8351  000780  EE20 F01C          	lfsr	2,28
  8352  000784  0100               	movlb	0	; () banked
  8353  000786  51E8               	movf	_ic_ptr& (0+255),w,b
  8354  000788  26D9               	addwf	fsr2l,f,c
  8355  00078A  0100               	movlb	0	; () banked
  8356  00078C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8357  00078E  22DA               	addwfc	fsr2h,f,c
  8358  000790  2ADE               	incf	postinc2,f,c
  8359  000792  0E00               	movlw	0
  8360  000794  22DD               	addwfc	postdec2,f,c
  8361                           
  8362                           ;my_i2c.c: 251: ic_ptr->status = 0x7;
  8363  000796  0100               	movlb	0	; () banked
  8364  000798  EE20 F00C          	lfsr	2,12
  8365  00079C  0100               	movlb	0	; () banked
  8366  00079E  51E8               	movf	_ic_ptr& (0+255),w,b
  8367  0007A0  26D9               	addwf	fsr2l,f,c
  8368  0007A2  0100               	movlb	0	; () banked
  8369  0007A4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8370  0007A6  22DA               	addwfc	fsr2h,f,c
  8371  0007A8  0E07               	movlw	7
  8372  0007AA  6EDF               	movwf	indf2,c
  8373                           
  8374                           ;my_i2c.c: 254: } else {
  8375  0007AC  0012               	return	
  8376  0007AE                     i2l3794:
  8377                           
  8378                           ; BSR set to: 0
  8379                           ;my_i2c.c: 255: ic_ptr->status = 1;
  8380  0007AE  0100               	movlb	0	; () banked
  8381  0007B0  EE20 F00C          	lfsr	2,12
  8382  0007B4  0100               	movlb	0	; () banked
  8383  0007B6  51E8               	movf	_ic_ptr& (0+255),w,b
  8384  0007B8  26D9               	addwf	fsr2l,f,c
  8385  0007BA  0100               	movlb	0	; () banked
  8386  0007BC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8387  0007BE  22DA               	addwfc	fsr2h,f,c
  8388  0007C0  0E01               	movlw	1
  8389  0007C2  6EDF               	movwf	indf2,c
  8390  0007C4  0012               	return	
  8391  0007C6                     i2l347:
  8392                           
  8393                           ; BSR set to: 0
  8394                           ;my_i2c.c: 261: if (!SSPCON2bits.ACKSTAT) {
  8395  0007C6  BCC5               	btfsc	4037,6,c	;volatile
  8396  0007C8  D06B               	goto	i2l3806
  8397                           
  8398                           ; BSR set to: 0
  8399                           ;my_i2c.c: 265: SSPCON2bits.ACKDT = 1;
  8400  0007CA  8AC5               	bsf	4037,5,c	;volatile
  8401                           
  8402                           ; BSR set to: 0
  8403                           ;my_i2c.c: 267: if (ic_ptr->bufferCounterSend == (ic_ptr->outbuflen)) {
  8404  0007CC  0100               	movlb	0	; () banked
  8405  0007CE  EE20 F01C          	lfsr	2,28
  8406  0007D2  0100               	movlb	0	; () banked
  8407  0007D4  51E8               	movf	_ic_ptr& (0+255),w,b
  8408  0007D6  26D9               	addwf	fsr2l,f,c
  8409  0007D8  0100               	movlb	0	; () banked
  8410  0007DA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8411  0007DC  22DA               	addwfc	fsr2h,f,c
  8412  0007DE  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8413  0007E2  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8414  0007E6  0100               	movlb	0	; () banked
  8415  0007E8  EE20 F019          	lfsr	2,25
  8416  0007EC  0100               	movlb	0	; () banked
  8417  0007EE  51E8               	movf	_ic_ptr& (0+255),w,b
  8418  0007F0  26D9               	addwf	fsr2l,f,c
  8419  0007F2  0100               	movlb	0	; () banked
  8420  0007F4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8421  0007F6  22DA               	addwfc	fsr2h,f,c
  8422  0007F8  50DF               	movf	indf2,w,c
  8423  0007FA  0100               	movlb	0	; () banked
  8424  0007FC  6FB8               	movwf	(??_i2c_int_handler_master_tx+2)& (0+255),b
  8425  0007FE  6BB9               	clrf	(??_i2c_int_handler_master_tx+3)& (0+255),b
  8426  000800  0100               	movlb	0	; () banked
  8427  000802  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8428  000804  0100               	movlb	0	; () banked
  8429  000806  19B9               	xorwf	(??_i2c_int_handler_master_tx+3)& (0+255),w,b
  8430  000808  E104               	bnz	i2u264_45
  8431  00080A  0100               	movlb	0	; () banked
  8432  00080C  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8433  00080E  0100               	movlb	0	; () banked
  8434  000810  19B8               	xorwf	(??_i2c_int_handler_master_tx+2)& (0+255),w,b
  8435  000812                     i2u264_45:
  8436  000812  A4D8               	btfss	status,2,c
  8437  000814  D00D               	goto	i2l3804
  8438                           
  8439                           ; BSR set to: 0
  8440                           ;my_i2c.c: 268: ic_ptr->status = 0xA;
  8441  000816  0100               	movlb	0	; () banked
  8442  000818  EE20 F00C          	lfsr	2,12
  8443  00081C  0100               	movlb	0	; () banked
  8444  00081E  51E8               	movf	_ic_ptr& (0+255),w,b
  8445  000820  26D9               	addwf	fsr2l,f,c
  8446  000822  0100               	movlb	0	; () banked
  8447  000824  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8448  000826  22DA               	addwfc	fsr2h,f,c
  8449  000828  0E0A               	movlw	10
  8450  00082A  6EDF               	movwf	indf2,c
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;my_i2c.c: 270: SSP1CON2bits.PEN = 1;
  8454  00082C  84C5               	bsf	4037,2,c	;volatile
  8455                           
  8456                           ;my_i2c.c: 272: } else {
  8457  00082E  0012               	return	
  8458  000830                     i2l3804:
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;my_i2c.c: 274: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  8462  000830  0100               	movlb	0	; () banked
  8463  000832  EE20 F01C          	lfsr	2,28
  8464  000836  0100               	movlb	0	; () banked
  8465  000838  51E8               	movf	_ic_ptr& (0+255),w,b
  8466  00083A  26D9               	addwf	fsr2l,f,c
  8467  00083C  0100               	movlb	0	; () banked
  8468  00083E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8469  000840  22DA               	addwfc	fsr2h,f,c
  8470  000842  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8471  000846  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8472  00084A  0E0F               	movlw	15
  8473  00084C  0100               	movlb	0	; () banked
  8474  00084E  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  8475  000850  0E00               	movlw	0
  8476  000852  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  8477  000854  0100               	movlb	0	; () banked
  8478  000856  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8479  000858  0100               	movlb	0	; () banked
  8480  00085A  0100               	movlb	0	; () banked
  8481  00085C  25E8               	addwf	_ic_ptr& (0+255),w,b
  8482  00085E  6ED9               	movwf	fsr2l,c
  8483  000860  0100               	movlb	0	; () banked
  8484  000862  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8485  000864  0100               	movlb	0	; () banked
  8486  000866  0100               	movlb	0	; () banked
  8487  000868  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8488  00086A  6EDA               	movwf	fsr2h,c
  8489  00086C  50DF               	movf	indf2,w,c
  8490  00086E  6EC9               	movwf	4041,c	;volatile
  8491                           
  8492                           ;my_i2c.c: 276: ic_ptr->bufferCounterSend++;
  8493  000870  0100               	movlb	0	; () banked
  8494  000872  EE20 F01C          	lfsr	2,28
  8495  000876  0100               	movlb	0	; () banked
  8496  000878  51E8               	movf	_ic_ptr& (0+255),w,b
  8497  00087A  26D9               	addwf	fsr2l,f,c
  8498  00087C  0100               	movlb	0	; () banked
  8499  00087E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8500  000880  22DA               	addwfc	fsr2h,f,c
  8501  000882  2ADE               	incf	postinc2,f,c
  8502  000884  0E00               	movlw	0
  8503  000886  22DD               	addwfc	postdec2,f,c
  8504                           
  8505                           ;my_i2c.c: 277: ic_ptr->status = 0x7;
  8506  000888  0100               	movlb	0	; () banked
  8507  00088A  EE20 F00C          	lfsr	2,12
  8508  00088E  0100               	movlb	0	; () banked
  8509  000890  51E8               	movf	_ic_ptr& (0+255),w,b
  8510  000892  26D9               	addwf	fsr2l,f,c
  8511  000894  0100               	movlb	0	; () banked
  8512  000896  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8513  000898  22DA               	addwfc	fsr2h,f,c
  8514  00089A  0E07               	movlw	7
  8515  00089C  6EDF               	movwf	indf2,c
  8516  00089E  0012               	return	
  8517  0008A0                     i2l3806:
  8518                           
  8519                           ; BSR set to: 0
  8520                           ;my_i2c.c: 281: ic_ptr->status = 0x9;
  8521  0008A0  0100               	movlb	0	; () banked
  8522  0008A2  EE20 F00C          	lfsr	2,12
  8523  0008A6  0100               	movlb	0	; () banked
  8524  0008A8  51E8               	movf	_ic_ptr& (0+255),w,b
  8525  0008AA  26D9               	addwf	fsr2l,f,c
  8526  0008AC  0100               	movlb	0	; () banked
  8527  0008AE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8528  0008B0  22DA               	addwfc	fsr2h,f,c
  8529  0008B2  0E09               	movlw	9
  8530  0008B4  6EDF               	movwf	indf2,c
  8531  0008B6  0012               	return	
  8532  0008B8                     i2l3808:
  8533                           
  8534                           ; BSR set to: 0
  8535                           ;my_i2c.c: 286: ic_ptr->status = 0x3;
  8536  0008B8  0100               	movlb	0	; () banked
  8537  0008BA  EE20 F00C          	lfsr	2,12
  8538  0008BE  0100               	movlb	0	; () banked
  8539  0008C0  51E8               	movf	_ic_ptr& (0+255),w,b
  8540  0008C2  26D9               	addwf	fsr2l,f,c
  8541  0008C4  0100               	movlb	0	; () banked
  8542  0008C6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8543  0008C8  22DA               	addwfc	fsr2h,f,c
  8544  0008CA  0E03               	movlw	3
  8545  0008CC  6EDF               	movwf	indf2,c
  8546                           
  8547                           ;my_i2c.c: 289: break;
  8548  0008CE  0012               	return	
  8549  0008D0                     i2l3812:
  8550  0008D0  0100               	movlb	0	; () banked
  8551  0008D2  EE20 F00C          	lfsr	2,12
  8552  0008D6  0100               	movlb	0	; () banked
  8553  0008D8  51E8               	movf	_ic_ptr& (0+255),w,b
  8554  0008DA  26D9               	addwf	fsr2l,f,c
  8555  0008DC  0100               	movlb	0	; () banked
  8556  0008DE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8557  0008E0  22DA               	addwfc	fsr2h,f,c
  8558  0008E2  50DF               	movf	indf2,w,c
  8559                           
  8560                           ; Switch size 1, requested type "space"
  8561                           ; Number of cases is 4, Range of values is 5 to 10
  8562                           ; switch strategies available:
  8563                           ; Name         Instructions Cycles
  8564                           ; simple_byte           13     7 (average)
  8565                           ;	Chosen strategy is simple_byte
  8566  0008E4  0A05               	xorlw	5	; case 5
  8567  0008E6  B4D8               	btfsc	status,2,c
  8568  0008E8  D6FC               	goto	i2l3786
  8569  0008EA  0A03               	xorlw	3	; case 6
  8570  0008EC  B4D8               	btfsc	status,2,c
  8571  0008EE  D724               	goto	i2l344
  8572  0008F0  0A01               	xorlw	1	; case 7
  8573  0008F2  B4D8               	btfsc	status,2,c
  8574  0008F4  D768               	goto	i2l347
  8575  0008F6  0A0D               	xorlw	13	; case 10
  8576  0008F8  A4D8               	btfss	status,2,c
  8577  0008FA  0012               	return	
  8578  0008FC  D7DD               	goto	i2l3808
  8579  0008FE                     __end_of_i2c_int_handler_master_tx:
  8580                           	opt stack 0
  8581                           pclatu	equ	0xFFB
  8582                           pclath	equ	0xFFA
  8583                           tblptru	equ	0xFF8
  8584                           tblptrh	equ	0xFF7
  8585                           tblptrl	equ	0xFF6
  8586                           tablat	equ	0xFF5
  8587                           prodh	equ	0xFF4
  8588                           prodl	equ	0xFF3
  8589                           intcon	equ	0xFF2
  8590                           postinc0	equ	0xFEE
  8591                           fsr0h	equ	0xFEA
  8592                           fsr0l	equ	0xFE9
  8593                           wreg	equ	0xFE8
  8594                           indf1	equ	0xFE7
  8595                           fsr1h	equ	0xFE2
  8596                           fsr1l	equ	0xFE1
  8597                           bsr	equ	0xFE0
  8598                           indf2	equ	0xFDF
  8599                           postinc2	equ	0xFDE
  8600                           postdec2	equ	0xFDD
  8601                           fsr2h	equ	0xFDA
  8602                           fsr2l	equ	0xFD9
  8603                           status	equ	0xFD8
  8604                           
  8605 ;; *************** function _i2c_int_handler_master_rx *****************
  8606 ;; Defined at:
  8607 ;;		line 154 in file "../src/my_i2c.c"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;		None
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;		None
  8612 ;; Return value:  Size  Location     Type
  8613 ;;		None               void
  8614 ;; Registers used:
  8615 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8616 ;; Tracked objects:
  8617 ;;		On entry : 0/0
  8618 ;;		On exit  : 0/0
  8619 ;;		Unchanged: 0/0
  8620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8621 ;;      Params:         0       0       0       0       0
  8622 ;;      Locals:         0       0       0       0       0
  8623 ;;      Temps:          0       4       0       0       0
  8624 ;;      Totals:         0       4       0       0       0
  8625 ;;Total ram usage:        4 bytes
  8626 ;; Hardware stack levels used:    1
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_i2c_int_handler
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text54
  8635  0008FE                     __ptext54:
  8636                           	opt stack 0
  8637  0008FE                     _i2c_int_handler_master_rx:
  8638                           	opt stack 18
  8639                           
  8640                           ;my_i2c.c: 155: switch (ic_ptr->status) {
  8641                           
  8642                           ; BSR set to: 0
  8643                           ;incstack = 0
  8644  0008FE  D0C0               	goto	i2l3782
  8645  000900                     i2l3758:
  8646                           
  8647                           ;my_i2c.c: 159: SSPBUF = ic_ptr->slave_addr_rc;
  8648  000900  0100               	movlb	0	; () banked
  8649  000902  EE20 F022          	lfsr	2,34
  8650  000906  0100               	movlb	0	; () banked
  8651  000908  51E8               	movf	_ic_ptr& (0+255),w,b
  8652  00090A  26D9               	addwf	fsr2l,f,c
  8653  00090C  0100               	movlb	0	; () banked
  8654  00090E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8655  000910  22DA               	addwfc	fsr2h,f,c
  8656  000912  50DF               	movf	indf2,w,c
  8657  000914  6EC9               	movwf	4041,c	;volatile
  8658                           
  8659                           ;my_i2c.c: 160: ic_ptr->status = 0xD;
  8660  000916  0100               	movlb	0	; () banked
  8661  000918  EE20 F00C          	lfsr	2,12
  8662  00091C  0100               	movlb	0	; () banked
  8663  00091E  51E8               	movf	_ic_ptr& (0+255),w,b
  8664  000920  26D9               	addwf	fsr2l,f,c
  8665  000922  0100               	movlb	0	; () banked
  8666  000924  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8667  000926  22DA               	addwfc	fsr2h,f,c
  8668  000928  0E0D               	movlw	13
  8669  00092A  6EDF               	movwf	indf2,c
  8670                           
  8671                           ;my_i2c.c: 161: break;
  8672  00092C  0012               	return	
  8673  00092E                     i2l329:
  8674                           
  8675                           ; BSR set to: 0
  8676                           ;my_i2c.c: 165: if (!SSPCON2bits.ACKSTAT) {
  8677  00092E  BCC5               	btfsc	4037,6,c	;volatile
  8678  000930  D00D               	goto	i2l3764
  8679                           
  8680                           ; BSR set to: 0
  8681                           ;my_i2c.c: 167: SSPCON2bits.RCEN = 1;
  8682  000932  86C5               	bsf	4037,3,c	;volatile
  8683                           
  8684                           ; BSR set to: 0
  8685                           ;my_i2c.c: 169: ic_ptr->status = 0xF;
  8686  000934  0100               	movlb	0	; () banked
  8687  000936  EE20 F00C          	lfsr	2,12
  8688  00093A  0100               	movlb	0	; () banked
  8689  00093C  51E8               	movf	_ic_ptr& (0+255),w,b
  8690  00093E  26D9               	addwf	fsr2l,f,c
  8691  000940  0100               	movlb	0	; () banked
  8692  000942  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8693  000944  22DA               	addwfc	fsr2h,f,c
  8694  000946  0E0F               	movlw	15
  8695  000948  6EDF               	movwf	indf2,c
  8696                           
  8697                           ;my_i2c.c: 171: } else {
  8698  00094A  0012               	return	
  8699  00094C                     i2l3764:
  8700                           
  8701                           ; BSR set to: 0
  8702                           ;my_i2c.c: 172: ic_ptr->status = 0xE;
  8703  00094C  0100               	movlb	0	; () banked
  8704  00094E  EE20 F00C          	lfsr	2,12
  8705  000952  0100               	movlb	0	; () banked
  8706  000954  51E8               	movf	_ic_ptr& (0+255),w,b
  8707  000956  26D9               	addwf	fsr2l,f,c
  8708  000958  0100               	movlb	0	; () banked
  8709  00095A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8710  00095C  22DA               	addwfc	fsr2h,f,c
  8711  00095E  0E0E               	movlw	14
  8712  000960  6EDF               	movwf	indf2,c
  8713  000962  0012               	return	
  8714  000964                     i2l3766:
  8715                           
  8716                           ; BSR set to: 0
  8717                           ;my_i2c.c: 178: ic_ptr->buffer[ic_ptr->bufferCounterRx] = SSPBUF;
  8718  000964  0100               	movlb	0	; () banked
  8719  000966  EE20 F01E          	lfsr	2,30
  8720  00096A  0100               	movlb	0	; () banked
  8721  00096C  51E8               	movf	_ic_ptr& (0+255),w,b
  8722  00096E  26D9               	addwf	fsr2l,f,c
  8723  000970  0100               	movlb	0	; () banked
  8724  000972  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8725  000974  22DA               	addwfc	fsr2h,f,c
  8726  000976  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  8727  00097A  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  8728  00097E  0100               	movlb	0	; () banked
  8729  000980  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  8730  000982  0100               	movlb	0	; () banked
  8731  000984  0100               	movlb	0	; () banked
  8732  000986  25E8               	addwf	_ic_ptr& (0+255),w,b
  8733  000988  6ED9               	movwf	fsr2l,c
  8734  00098A  0100               	movlb	0	; () banked
  8735  00098C  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  8736  00098E  0100               	movlb	0	; () banked
  8737  000990  0100               	movlb	0	; () banked
  8738  000992  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8739  000994  6EDA               	movwf	fsr2h,c
  8740  000996  CFC9 FFDF          	movff	4041,indf2	;volatile
  8741                           
  8742                           ;my_i2c.c: 179: ic_ptr->bufferCounterRx++;
  8743  00099A  0100               	movlb	0	; () banked
  8744  00099C  EE20 F01E          	lfsr	2,30
  8745  0009A0  0100               	movlb	0	; () banked
  8746  0009A2  51E8               	movf	_ic_ptr& (0+255),w,b
  8747  0009A4  26D9               	addwf	fsr2l,f,c
  8748  0009A6  0100               	movlb	0	; () banked
  8749  0009A8  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8750  0009AA  22DA               	addwfc	fsr2h,f,c
  8751  0009AC  2ADE               	incf	postinc2,f,c
  8752  0009AE  0E00               	movlw	0
  8753  0009B0  22DD               	addwfc	postdec2,f,c
  8754                           
  8755                           ;my_i2c.c: 180: if (ic_ptr->buflen == ic_ptr->bufferCounterRx) {
  8756  0009B2  0100               	movlb	0	; () banked
  8757  0009B4  EE20 F01E          	lfsr	2,30
  8758  0009B8  0100               	movlb	0	; () banked
  8759  0009BA  51E8               	movf	_ic_ptr& (0+255),w,b
  8760  0009BC  26D9               	addwf	fsr2l,f,c
  8761  0009BE  0100               	movlb	0	; () banked
  8762  0009C0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8763  0009C2  22DA               	addwfc	fsr2h,f,c
  8764  0009C4  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  8765  0009C8  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  8766  0009CC  0100               	movlb	0	; () banked
  8767  0009CE  EE20 F00A          	lfsr	2,10
  8768  0009D2  0100               	movlb	0	; () banked
  8769  0009D4  51E8               	movf	_ic_ptr& (0+255),w,b
  8770  0009D6  26D9               	addwf	fsr2l,f,c
  8771  0009D8  0100               	movlb	0	; () banked
  8772  0009DA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8773  0009DC  22DA               	addwfc	fsr2h,f,c
  8774  0009DE  50DF               	movf	indf2,w,c
  8775  0009E0  0100               	movlb	0	; () banked
  8776  0009E2  6FB8               	movwf	(??_i2c_int_handler_master_rx+2)& (0+255),b
  8777  0009E4  6BB9               	clrf	(??_i2c_int_handler_master_rx+3)& (0+255),b
  8778  0009E6  0100               	movlb	0	; () banked
  8779  0009E8  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  8780  0009EA  0100               	movlb	0	; () banked
  8781  0009EC  19B9               	xorwf	(??_i2c_int_handler_master_rx+3)& (0+255),w,b
  8782  0009EE  E104               	bnz	i2u261_45
  8783  0009F0  0100               	movlb	0	; () banked
  8784  0009F2  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  8785  0009F4  0100               	movlb	0	; () banked
  8786  0009F6  19B8               	xorwf	(??_i2c_int_handler_master_rx+2)& (0+255),w,b
  8787  0009F8                     i2u261_45:
  8788  0009F8  A4D8               	btfss	status,2,c
  8789  0009FA  D00E               	goto	i2l333
  8790                           
  8791                           ; BSR set to: 0
  8792                           ;my_i2c.c: 181: SSPCON2bits.ACKDT = 1;
  8793  0009FC  8AC5               	bsf	4037,5,c	;volatile
  8794                           
  8795                           ;my_i2c.c: 182: SSPCON2bits.ACKEN = 1;
  8796  0009FE  88C5               	bsf	4037,4,c	;volatile
  8797                           
  8798                           ; BSR set to: 0
  8799                           ;my_i2c.c: 184: ic_ptr->status = 0x11;
  8800  000A00  0100               	movlb	0	; () banked
  8801  000A02  EE20 F00C          	lfsr	2,12
  8802  000A06  0100               	movlb	0	; () banked
  8803  000A08  51E8               	movf	_ic_ptr& (0+255),w,b
  8804  000A0A  26D9               	addwf	fsr2l,f,c
  8805  000A0C  0100               	movlb	0	; () banked
  8806  000A0E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8807  000A10  22DA               	addwfc	fsr2h,f,c
  8808  000A12  0E11               	movlw	17
  8809  000A14  6EDF               	movwf	indf2,c
  8810                           
  8811                           ;my_i2c.c: 185: } else {
  8812  000A16  0012               	return	
  8813  000A18                     i2l333:
  8814                           
  8815                           ; BSR set to: 0
  8816                           ;my_i2c.c: 186: SSPCON2bits.ACKDT = 0;
  8817  000A18  9AC5               	bcf	4037,5,c	;volatile
  8818                           
  8819                           ;my_i2c.c: 187: SSPCON2bits.ACKEN = 1;
  8820  000A1A  88C5               	bsf	4037,4,c	;volatile
  8821                           
  8822                           ; BSR set to: 0
  8823                           ;my_i2c.c: 190: ic_ptr->status = 0x10;
  8824  000A1C  0100               	movlb	0	; () banked
  8825  000A1E  EE20 F00C          	lfsr	2,12
  8826  000A22  0100               	movlb	0	; () banked
  8827  000A24  51E8               	movf	_ic_ptr& (0+255),w,b
  8828  000A26  26D9               	addwf	fsr2l,f,c
  8829  000A28  0100               	movlb	0	; () banked
  8830  000A2A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8831  000A2C  22DA               	addwfc	fsr2h,f,c
  8832  000A2E  0E10               	movlw	16
  8833  000A30  6EDF               	movwf	indf2,c
  8834  000A32  0012               	return	
  8835  000A34                     i2l335:
  8836                           
  8837                           ; BSR set to: 0
  8838                           ;my_i2c.c: 206: SSPCON2bits.RCEN = 1;
  8839  000A34  86C5               	bsf	4037,3,c	;volatile
  8840                           
  8841                           ; BSR set to: 0
  8842                           ;my_i2c.c: 208: ic_ptr->status = 0xF;
  8843  000A36  0100               	movlb	0	; () banked
  8844  000A38  EE20 F00C          	lfsr	2,12
  8845  000A3C  0100               	movlb	0	; () banked
  8846  000A3E  51E8               	movf	_ic_ptr& (0+255),w,b
  8847  000A40  26D9               	addwf	fsr2l,f,c
  8848  000A42  0100               	movlb	0	; () banked
  8849  000A44  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8850  000A46  22DA               	addwfc	fsr2h,f,c
  8851  000A48  0E0F               	movlw	15
  8852  000A4A  6EDF               	movwf	indf2,c
  8853                           
  8854                           ;my_i2c.c: 210: break;
  8855  000A4C  0012               	return	
  8856  000A4E                     i2l336:
  8857                           
  8858                           ; BSR set to: 0
  8859                           ;my_i2c.c: 212: {
  8860                           ;my_i2c.c: 214: SSPCON2bits.PEN = 1;
  8861  000A4E  84C5               	bsf	4037,2,c	;volatile
  8862                           
  8863                           ; BSR set to: 0
  8864                           ;my_i2c.c: 215: ic_ptr->status = 0x12;
  8865  000A50  0100               	movlb	0	; () banked
  8866  000A52  EE20 F00C          	lfsr	2,12
  8867  000A56  0100               	movlb	0	; () banked
  8868  000A58  51E8               	movf	_ic_ptr& (0+255),w,b
  8869  000A5A  26D9               	addwf	fsr2l,f,c
  8870  000A5C  0100               	movlb	0	; () banked
  8871  000A5E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8872  000A60  22DA               	addwfc	fsr2h,f,c
  8873  000A62  0E12               	movlw	18
  8874  000A64  6EDF               	movwf	indf2,c
  8875                           
  8876                           ;my_i2c.c: 217: }
  8877                           ;my_i2c.c: 218: break;
  8878  000A66  0012               	return	
  8879  000A68                     i2l3778:
  8880                           
  8881                           ; BSR set to: 0
  8882                           ;my_i2c.c: 221: ic_ptr->status = 0x3;
  8883  000A68  0100               	movlb	0	; () banked
  8884  000A6A  EE20 F00C          	lfsr	2,12
  8885  000A6E  0100               	movlb	0	; () banked
  8886  000A70  51E8               	movf	_ic_ptr& (0+255),w,b
  8887  000A72  26D9               	addwf	fsr2l,f,c
  8888  000A74  0100               	movlb	0	; () banked
  8889  000A76  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8890  000A78  22DA               	addwfc	fsr2h,f,c
  8891  000A7A  0E03               	movlw	3
  8892  000A7C  6EDF               	movwf	indf2,c
  8893                           
  8894                           ;my_i2c.c: 224: break;
  8895  000A7E  0012               	return	
  8896  000A80                     i2l3782:
  8897  000A80  0100               	movlb	0	; () banked
  8898  000A82  EE20 F00C          	lfsr	2,12
  8899  000A86  0100               	movlb	0	; () banked
  8900  000A88  51E8               	movf	_ic_ptr& (0+255),w,b
  8901  000A8A  26D9               	addwf	fsr2l,f,c
  8902  000A8C  0100               	movlb	0	; () banked
  8903  000A8E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8904  000A90  22DA               	addwfc	fsr2h,f,c
  8905  000A92  50DF               	movf	indf2,w,c
  8906                           
  8907                           ; Switch size 1, requested type "space"
  8908                           ; Number of cases is 6, Range of values is 12 to 18
  8909                           ; switch strategies available:
  8910                           ; Name         Instructions Cycles
  8911                           ; simple_byte           19    10 (average)
  8912                           ;	Chosen strategy is simple_byte
  8913  000A94  0A0C               	xorlw	12	; case 12
  8914  000A96  B4D8               	btfsc	status,2,c
  8915  000A98  D733               	goto	i2l3758
  8916  000A9A  0A01               	xorlw	1	; case 13
  8917  000A9C  B4D8               	btfsc	status,2,c
  8918  000A9E  D747               	goto	i2l329
  8919  000AA0  0A02               	xorlw	2	; case 15
  8920  000AA2  B4D8               	btfsc	status,2,c
  8921  000AA4  D75F               	goto	i2l3766
  8922  000AA6  0A1F               	xorlw	31	; case 16
  8923  000AA8  B4D8               	btfsc	status,2,c
  8924  000AAA  D7C4               	goto	i2l335
  8925  000AAC  0A01               	xorlw	1	; case 17
  8926  000AAE  B4D8               	btfsc	status,2,c
  8927  000AB0  D7CE               	goto	i2l336
  8928  000AB2  0A03               	xorlw	3	; case 18
  8929  000AB4  A4D8               	btfss	status,2,c
  8930  000AB6  0012               	return	
  8931  000AB8  D7D7               	goto	i2l3778
  8932  000ABA                     __end_of_i2c_int_handler_master_rx:
  8933                           	opt stack 0
  8934                           pclatu	equ	0xFFB
  8935                           pclath	equ	0xFFA
  8936                           tblptru	equ	0xFF8
  8937                           tblptrh	equ	0xFF7
  8938                           tblptrl	equ	0xFF6
  8939                           tablat	equ	0xFF5
  8940                           prodh	equ	0xFF4
  8941                           prodl	equ	0xFF3
  8942                           intcon	equ	0xFF2
  8943                           postinc0	equ	0xFEE
  8944                           fsr0h	equ	0xFEA
  8945                           fsr0l	equ	0xFE9
  8946                           wreg	equ	0xFE8
  8947                           indf1	equ	0xFE7
  8948                           fsr1h	equ	0xFE2
  8949                           fsr1l	equ	0xFE1
  8950                           bsr	equ	0xFE0
  8951                           indf2	equ	0xFDF
  8952                           postinc2	equ	0xFDE
  8953                           postdec2	equ	0xFDD
  8954                           fsr2h	equ	0xFDA
  8955                           fsr2l	equ	0xFD9
  8956                           status	equ	0xFD8
  8957                           
  8958 ;; *************** function _SleepIfOkay *****************
  8959 ;; Defined at:
  8960 ;;		line 228 in file "../src/messages.c"
  8961 ;; Parameters:    Size  Location     Type
  8962 ;;		None
  8963 ;; Auto vars:     Size  Location     Type
  8964 ;;		None
  8965 ;; Return value:  Size  Location     Type
  8966 ;;		None               void
  8967 ;; Registers used:
  8968 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8969 ;; Tracked objects:
  8970 ;;		On entry : 0/0
  8971 ;;		On exit  : 0/0
  8972 ;;		Unchanged: 0/0
  8973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8974 ;;      Params:         0       0       0       0       0
  8975 ;;      Locals:         0       0       0       0       0
  8976 ;;      Temps:          0       0       0       0       0
  8977 ;;      Totals:         0       0       0       0       0
  8978 ;;Total ram usage:        0 bytes
  8979 ;; Hardware stack levels used:    1
  8980 ;; Hardware stack levels required when called:    2
  8981 ;; This function calls:
  8982 ;;		_enter_sleep_mode
  8983 ;;		i2_check_msg
  8984 ;;		i2_in_high_int
  8985 ;;		i2_in_low_int
  8986 ;; This function is called by:
  8987 ;;		_InterruptHandlerHigh
  8988 ;; This function uses a non-reentrant model
  8989 ;;
  8990                           
  8991                           	psect	text55
  8992  00193C                     __ptext55:
  8993                           	opt stack 0
  8994  00193C                     _SleepIfOkay:
  8995                           	opt stack 17
  8996                           
  8997                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  8998                           
  8999                           ; BSR set to: 0
  9000                           ;incstack = 0
  9001  00193C  6658               	tstfsz	_MQ_Main_Willing_to_block,c
  9002  00193E  D001               	goto	i2l3306
  9003  001940  0012               	return	
  9004  001942                     i2l3306:
  9005                           
  9006                           ;messages.c: 232: }
  9007                           ;messages.c: 235: if (in_low_int()) {
  9008  001942  EC54  F00D         	call	i2_in_low_int	;wreg free
  9009  001946  0100               	movlb	0	; () banked
  9010  001948  0100               	movlb	0	; () banked
  9011  00194A  51B9               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9012  00194C  0100               	movlb	0	; () banked
  9013  00194E  11B8               	iorwf	?i2_in_low_int& (0+255),w,b
  9014  001950  A4D8               	btfss	status,2,c
  9015  001952  0012               	return	
  9016                           
  9017                           ; BSR set to: 0
  9018                           ;messages.c: 237: }
  9019                           ;messages.c: 240: if (!in_high_int()) {
  9020                           
  9021                           ; BSR set to: 0
  9022                           
  9023                           ; BSR set to: 0
  9024                           ;messages.c: 236: return;
  9025  001954  ECDE  F00F         	call	i2_in_high_int	;wreg free
  9026  001958  0100               	movlb	0	; () banked
  9027  00195A  0100               	movlb	0	; () banked
  9028  00195C  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9029  00195E  0100               	movlb	0	; () banked
  9030  001960  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  9031  001962  B4D8               	btfsc	status,2,c
  9032  001964  0012               	return	
  9033                           
  9034                           ; BSR set to: 0
  9035                           ;messages.c: 242: }
  9036                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9037                           
  9038                           ; BSR set to: 0
  9039                           
  9040                           ; BSR set to: 0
  9041                           ;messages.c: 241: return;
  9042  001966  0100               	movlb	0	; () banked
  9043  001968  0E00               	movlw	high _ToMainHigh_MQ
  9044  00196A  0100               	movlb	0	; () banked
  9045  00196C  0100               	movlb	0	; () banked
  9046  00196E  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9047  001970  0100               	movlb	0	; () banked
  9048  001972  0E80               	movlw	low _ToMainHigh_MQ
  9049  001974  0100               	movlb	0	; () banked
  9050  001976  0100               	movlb	0	; () banked
  9051  001978  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  9052  00197A  EC00  F00F         	call	i2_check_msg	;wreg free
  9053  00197E  0900               	iorlw	0
  9054  001980  A4D8               	btfss	status,2,c
  9055  001982  0012               	return	
  9056                           
  9057                           ;messages.c: 249: }
  9058                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9059                           
  9060                           ;messages.c: 248: return;
  9061  001984  0101               	movlb	1	; () banked
  9062  001986  0E01               	movlw	high _ToMainLow_MQ
  9063  001988  0100               	movlb	0	; () banked
  9064  00198A  0100               	movlb	0	; () banked
  9065  00198C  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9066  00198E  0101               	movlb	1	; () banked
  9067  001990  0E4C               	movlw	low _ToMainLow_MQ
  9068  001992  0100               	movlb	0	; () banked
  9069  001994  0100               	movlb	0	; () banked
  9070  001996  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  9071  001998  EC00  F00F         	call	i2_check_msg	;wreg free
  9072  00199C  0900               	iorlw	0
  9073  00199E  B4D8               	btfsc	status,2,c
  9074                           
  9075                           ;messages.c: 252: }
  9076                           ;messages.c: 253: enter_sleep_mode();
  9077                           
  9078                           ;messages.c: 251: return;
  9079  0019A0  ECEB  F00F         	call	_enter_sleep_mode	;wreg free
  9080  0019A4  0012               	return	
  9081  0019A6                     __end_of_SleepIfOkay:
  9082                           	opt stack 0
  9083                           pclatu	equ	0xFFB
  9084                           pclath	equ	0xFFA
  9085                           tblptru	equ	0xFF8
  9086                           tblptrh	equ	0xFF7
  9087                           tblptrl	equ	0xFF6
  9088                           tablat	equ	0xFF5
  9089                           prodh	equ	0xFF4
  9090                           prodl	equ	0xFF3
  9091                           intcon	equ	0xFF2
  9092                           postinc0	equ	0xFEE
  9093                           fsr0h	equ	0xFEA
  9094                           fsr0l	equ	0xFE9
  9095                           wreg	equ	0xFE8
  9096                           indf1	equ	0xFE7
  9097                           fsr1h	equ	0xFE2
  9098                           fsr1l	equ	0xFE1
  9099                           bsr	equ	0xFE0
  9100                           indf2	equ	0xFDF
  9101                           postinc2	equ	0xFDE
  9102                           postdec2	equ	0xFDD
  9103                           fsr2h	equ	0xFDA
  9104                           fsr2l	equ	0xFD9
  9105                           status	equ	0xFD8
  9106                           
  9107 ;; *************** function i2_in_low_int *****************
  9108 ;; Defined at:
  9109 ;;		line 33 in file "../src/interrupts.c"
  9110 ;; Parameters:    Size  Location     Type
  9111 ;;		None
  9112 ;; Auto vars:     Size  Location     Type
  9113 ;;		None
  9114 ;; Return value:  Size  Location     Type
  9115 ;;                  2    2[BANK0 ] int 
  9116 ;; Registers used:
  9117 ;;		wreg, status,2, status,0, cstack
  9118 ;; Tracked objects:
  9119 ;;		On entry : 0/0
  9120 ;;		On exit  : 0/0
  9121 ;;		Unchanged: 0/0
  9122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9123 ;;      Params:         0       2       0       0       0
  9124 ;;      Locals:         0       0       0       0       0
  9125 ;;      Temps:          0       0       0       0       0
  9126 ;;      Totals:         0       2       0       0       0
  9127 ;;Total ram usage:        2 bytes
  9128 ;; Hardware stack levels used:    1
  9129 ;; Hardware stack levels required when called:    1
  9130 ;; This function calls:
  9131 ;;		i2_in_high_int
  9132 ;; This function is called by:
  9133 ;;		_SleepIfOkay
  9134 ;; This function uses a non-reentrant model
  9135 ;;
  9136                           
  9137                           	psect	text56
  9138  001AA8                     __ptext56:
  9139                           	opt stack 0
  9140  001AA8                     i2_in_low_int:
  9141                           	opt stack 17
  9142                           
  9143                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  9144                           
  9145                           ;incstack = 0
  9146  001AA8  ACF2               	btfss	intcon,6,c	;volatile
  9147  001AAA  D008               	goto	i2l3854
  9148                           
  9149                           ;interrupts.c: 36: return (0);
  9150  001AAC  0E00               	movlw	0
  9151  001AAE  0100               	movlb	0	; () banked
  9152  001AB0  0100               	movlb	0	; () banked
  9153  001AB2  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9154  001AB4  0E00               	movlw	0
  9155  001AB6  0100               	movlb	0	; () banked
  9156  001AB8  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9157  001ABA  0012               	return	
  9158  001ABC                     i2l3854:
  9159  001ABC  ECDE  F00F         	call	i2_in_high_int	;wreg free
  9160  001AC0  0100               	movlb	0	; () banked
  9161  001AC2  0100               	movlb	0	; () banked
  9162  001AC4  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9163  001AC6  0100               	movlb	0	; () banked
  9164  001AC8  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  9165  001ACA  B4D8               	btfsc	status,2,c
  9166  001ACC  D008               	goto	i2l3862
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;interrupts.c: 38: return (0);
  9170  001ACE  0E00               	movlw	0
  9171  001AD0  0100               	movlb	0	; () banked
  9172  001AD2  0100               	movlb	0	; () banked
  9173  001AD4  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9174  001AD6  0E00               	movlw	0
  9175  001AD8  0100               	movlb	0	; () banked
  9176  001ADA  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9177  001ADC  0012               	return	
  9178  001ADE                     i2l3862:
  9179                           
  9180                           ; BSR set to: 0
  9181                           ;interrupts.c: 40: return (1);
  9182  001ADE  0E00               	movlw	0
  9183  001AE0  0100               	movlb	0	; () banked
  9184  001AE2  0100               	movlb	0	; () banked
  9185  001AE4  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9186  001AE6  0E01               	movlw	1
  9187  001AE8  0100               	movlb	0	; () banked
  9188  001AEA  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9189  001AEC  0012               	return	
  9190  001AEE                     __end_ofi2_in_low_int:
  9191                           	opt stack 0
  9192                           pclatu	equ	0xFFB
  9193                           pclath	equ	0xFFA
  9194                           tblptru	equ	0xFF8
  9195                           tblptrh	equ	0xFF7
  9196                           tblptrl	equ	0xFF6
  9197                           tablat	equ	0xFF5
  9198                           prodh	equ	0xFF4
  9199                           prodl	equ	0xFF3
  9200                           intcon	equ	0xFF2
  9201                           postinc0	equ	0xFEE
  9202                           fsr0h	equ	0xFEA
  9203                           fsr0l	equ	0xFE9
  9204                           wreg	equ	0xFE8
  9205                           indf1	equ	0xFE7
  9206                           fsr1h	equ	0xFE2
  9207                           fsr1l	equ	0xFE1
  9208                           bsr	equ	0xFE0
  9209                           indf2	equ	0xFDF
  9210                           postinc2	equ	0xFDE
  9211                           postdec2	equ	0xFDD
  9212                           fsr2h	equ	0xFDA
  9213                           fsr2l	equ	0xFD9
  9214                           status	equ	0xFD8
  9215                           
  9216 ;; *************** function i2_in_high_int *****************
  9217 ;; Defined at:
  9218 ;;		line 24 in file "../src/interrupts.c"
  9219 ;; Parameters:    Size  Location     Type
  9220 ;;		None
  9221 ;; Auto vars:     Size  Location     Type
  9222 ;;		None
  9223 ;; Return value:  Size  Location     Type
  9224 ;;                  2    0[BANK0 ] int 
  9225 ;; Registers used:
  9226 ;;		wreg, status,2
  9227 ;; Tracked objects:
  9228 ;;		On entry : 0/0
  9229 ;;		On exit  : 0/0
  9230 ;;		Unchanged: 0/0
  9231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9232 ;;      Params:         0       2       0       0       0
  9233 ;;      Locals:         0       0       0       0       0
  9234 ;;      Temps:          0       0       0       0       0
  9235 ;;      Totals:         0       2       0       0       0
  9236 ;;Total ram usage:        2 bytes
  9237 ;; Hardware stack levels used:    1
  9238 ;; This function calls:
  9239 ;;		Nothing
  9240 ;; This function is called by:
  9241 ;;		_SleepIfOkay
  9242 ;;		i2_in_low_int
  9243 ;; This function uses a non-reentrant model
  9244 ;;
  9245                           
  9246                           	psect	text57
  9247  001FBC                     __ptext57:
  9248                           	opt stack 0
  9249  001FBC                     i2_in_high_int:
  9250                           	opt stack 17
  9251                           
  9252                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9253                           
  9254                           ; BSR set to: 0
  9255                           ;incstack = 0
  9256  001FBC  0E00               	movlw	0
  9257  001FBE  AEF2               	btfss	intcon,7,c	;volatile
  9258  001FC0  0E01               	movlw	1
  9259  001FC2  0100               	movlb	0	; () banked
  9260  001FC4  0100               	movlb	0	; () banked
  9261  001FC6  6FB6               	movwf	?i2_in_high_int& (0+255),b
  9262  001FC8  0100               	movlb	0	; () banked
  9263  001FCA  6BB7               	clrf	(?i2_in_high_int+1)& (0+255),b
  9264  001FCC  0012               	return	
  9265  001FCE                     __end_ofi2_in_high_int:
  9266                           	opt stack 0
  9267                           pclatu	equ	0xFFB
  9268                           pclath	equ	0xFFA
  9269                           tblptru	equ	0xFF8
  9270                           tblptrh	equ	0xFF7
  9271                           tblptrl	equ	0xFF6
  9272                           tablat	equ	0xFF5
  9273                           prodh	equ	0xFF4
  9274                           prodl	equ	0xFF3
  9275                           intcon	equ	0xFF2
  9276                           postinc0	equ	0xFEE
  9277                           fsr0h	equ	0xFEA
  9278                           fsr0l	equ	0xFE9
  9279                           wreg	equ	0xFE8
  9280                           indf1	equ	0xFE7
  9281                           fsr1h	equ	0xFE2
  9282                           fsr1l	equ	0xFE1
  9283                           bsr	equ	0xFE0
  9284                           indf2	equ	0xFDF
  9285                           postinc2	equ	0xFDE
  9286                           postdec2	equ	0xFDD
  9287                           fsr2h	equ	0xFDA
  9288                           fsr2l	equ	0xFD9
  9289                           status	equ	0xFD8
  9290                           
  9291 ;; *************** function i2_check_msg *****************
  9292 ;; Defined at:
  9293 ;;		line 222 in file "../src/messages.c"
  9294 ;; Parameters:    Size  Location     Type
  9295 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9296 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9297 ;; Auto vars:     Size  Location     Type
  9298 ;;		None
  9299 ;; Return value:  Size  Location     Type
  9300 ;;                  1    wreg      unsigned char 
  9301 ;; Registers used:
  9302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9303 ;; Tracked objects:
  9304 ;;		On entry : 0/0
  9305 ;;		On exit  : 0/0
  9306 ;;		Unchanged: 0/0
  9307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9308 ;;      Params:         0       2       0       0       0
  9309 ;;      Locals:         0       0       0       0       0
  9310 ;;      Temps:          0       1       0       0       0
  9311 ;;      Totals:         0       3       0       0       0
  9312 ;;Total ram usage:        3 bytes
  9313 ;; Hardware stack levels used:    1
  9314 ;; This function calls:
  9315 ;;		Nothing
  9316 ;; This function is called by:
  9317 ;;		_SleepIfOkay
  9318 ;; This function uses a non-reentrant model
  9319 ;;
  9320                           
  9321                           	psect	text58
  9322  001E00                     __ptext58:
  9323                           	opt stack 0
  9324  001E00                     i2_check_msg:
  9325                           	opt stack 18
  9326                           
  9327                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9328                           
  9329                           ; BSR set to: 0
  9330                           ;incstack = 0
  9331  001E00  0100               	movlb	0	; () banked
  9332  001E02  EE20 F035          	lfsr	2,53
  9333  001E06  0100               	movlb	0	; () banked
  9334  001E08  51B6               	movf	i2check_msg@qptr& (0+255),w,b
  9335  001E0A  26D9               	addwf	fsr2l,f,c
  9336  001E0C  0100               	movlb	0	; () banked
  9337  001E0E  51B7               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9338  001E10  22DA               	addwfc	fsr2h,f,c
  9339  001E12  50DF               	movf	indf2,w,c
  9340  001E14  0100               	movlb	0	; () banked
  9341  001E16  6FB8               	movwf	??i2_check_msg& (0+255),b
  9342  001E18  0100               	movlb	0	; () banked
  9343  001E1A  51B8               	movf	??i2_check_msg& (0+255),w,b
  9344  001E1C  0D0D               	mullw	13
  9345  001E1E  50F3               	movf	prodl,w,c
  9346  001E20  0100               	movlb	0	; () banked
  9347  001E22  0100               	movlb	0	; () banked
  9348  001E24  25B6               	addwf	i2check_msg@qptr& (0+255),w,b
  9349  001E26  6ED9               	movwf	fsr2l,c
  9350  001E28  50F4               	movf	prodh,w,c
  9351  001E2A  0100               	movlb	0	; () banked
  9352  001E2C  0100               	movlb	0	; () banked
  9353  001E2E  21B7               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9354  001E30  6EDA               	movwf	fsr2h,c
  9355  001E32  50DF               	movf	indf2,w,c
  9356  001E34  0012               	return	
  9357  001E36                     __end_ofi2_check_msg:
  9358                           	opt stack 0
  9359                           pclatu	equ	0xFFB
  9360                           pclath	equ	0xFFA
  9361                           tblptru	equ	0xFF8
  9362                           tblptrh	equ	0xFF7
  9363                           tblptrl	equ	0xFF6
  9364                           tablat	equ	0xFF5
  9365                           prodh	equ	0xFF4
  9366                           prodl	equ	0xFF3
  9367                           intcon	equ	0xFF2
  9368                           postinc0	equ	0xFEE
  9369                           fsr0h	equ	0xFEA
  9370                           fsr0l	equ	0xFE9
  9371                           wreg	equ	0xFE8
  9372                           indf1	equ	0xFE7
  9373                           fsr1h	equ	0xFE2
  9374                           fsr1l	equ	0xFE1
  9375                           bsr	equ	0xFE0
  9376                           indf2	equ	0xFDF
  9377                           postinc2	equ	0xFDE
  9378                           postdec2	equ	0xFDD
  9379                           fsr2h	equ	0xFDA
  9380                           fsr2l	equ	0xFD9
  9381                           status	equ	0xFD8
  9382                           
  9383 ;; *************** function _enter_sleep_mode *****************
  9384 ;; Defined at:
  9385 ;;		line 202 in file "../src/messages.c"
  9386 ;; Parameters:    Size  Location     Type
  9387 ;;		None
  9388 ;; Auto vars:     Size  Location     Type
  9389 ;;		None
  9390 ;; Return value:  Size  Location     Type
  9391 ;;		None               void
  9392 ;; Registers used:
  9393 ;;		None
  9394 ;; Tracked objects:
  9395 ;;		On entry : 0/0
  9396 ;;		On exit  : 0/0
  9397 ;;		Unchanged: 0/0
  9398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9399 ;;      Params:         0       0       0       0       0
  9400 ;;      Locals:         0       0       0       0       0
  9401 ;;      Temps:          0       0       0       0       0
  9402 ;;      Totals:         0       0       0       0       0
  9403 ;;Total ram usage:        0 bytes
  9404 ;; Hardware stack levels used:    1
  9405 ;; This function calls:
  9406 ;;		Nothing
  9407 ;; This function is called by:
  9408 ;;		_SleepIfOkay
  9409 ;; This function uses a non-reentrant model
  9410 ;;
  9411                           
  9412                           	psect	text59
  9413  001FD6                     __ptext59:
  9414                           	opt stack 0
  9415  001FD6                     _enter_sleep_mode:
  9416                           	opt stack 18
  9417                           
  9418                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9419                           
  9420                           ; BSR set to: 0
  9421                           ;incstack = 0
  9422  001FD6  8ED3               	bsf	4051,7,c	;volatile
  9423  001FD8  0003               	sleep		;# 
  9424  001FDA  0012               	return	
  9425  001FDC                     __end_of_enter_sleep_mode:
  9426                           	opt stack 0
  9427  0000                     pclatu	equ	0xFFB
  9428                           pclath	equ	0xFFA
  9429                           tblptru	equ	0xFF8
  9430                           tblptrh	equ	0xFF7
  9431                           tblptrl	equ	0xFF6
  9432                           tablat	equ	0xFF5
  9433                           prodh	equ	0xFF4
  9434                           prodl	equ	0xFF3
  9435                           intcon	equ	0xFF2
  9436                           postinc0	equ	0xFEE
  9437                           fsr0h	equ	0xFEA
  9438                           fsr0l	equ	0xFE9
  9439                           wreg	equ	0xFE8
  9440                           indf1	equ	0xFE7
  9441                           fsr1h	equ	0xFE2
  9442                           fsr1l	equ	0xFE1
  9443                           bsr	equ	0xFE0
  9444                           indf2	equ	0xFDF
  9445                           postinc2	equ	0xFDE
  9446                           postdec2	equ	0xFDD
  9447                           fsr2h	equ	0xFDA
  9448                           fsr2l	equ	0xFD9
  9449                           status	equ	0xFD8
  9450                           pclatu	equ	0xFFB
  9451                           pclath	equ	0xFFA
  9452                           tblptru	equ	0xFF8
  9453                           tblptrh	equ	0xFF7
  9454                           tblptrl	equ	0xFF6
  9455                           tablat	equ	0xFF5
  9456                           prodh	equ	0xFF4
  9457                           prodl	equ	0xFF3
  9458                           intcon	equ	0xFF2
  9459                           postinc0	equ	0xFEE
  9460                           fsr0h	equ	0xFEA
  9461                           fsr0l	equ	0xFE9
  9462                           wreg	equ	0xFE8
  9463                           indf1	equ	0xFE7
  9464                           fsr1h	equ	0xFE2
  9465                           fsr1l	equ	0xFE1
  9466                           bsr	equ	0xFE0
  9467                           indf2	equ	0xFDF
  9468                           postinc2	equ	0xFDE
  9469                           postdec2	equ	0xFDD
  9470                           fsr2h	equ	0xFDA
  9471                           fsr2l	equ	0xFD9
  9472                           status	equ	0xFD8
  9473                           
  9474                           	psect	param0
  9475  0000                     pclatu	equ	0xFFB
  9476                           pclath	equ	0xFFA
  9477                           tblptru	equ	0xFF8
  9478                           tblptrh	equ	0xFF7
  9479                           tblptrl	equ	0xFF6
  9480                           tablat	equ	0xFF5
  9481                           prodh	equ	0xFF4
  9482                           prodl	equ	0xFF3
  9483                           intcon	equ	0xFF2
  9484                           postinc0	equ	0xFEE
  9485                           fsr0h	equ	0xFEA
  9486                           fsr0l	equ	0xFE9
  9487                           wreg	equ	0xFE8
  9488                           indf1	equ	0xFE7
  9489                           fsr1h	equ	0xFE2
  9490                           fsr1l	equ	0xFE1
  9491                           bsr	equ	0xFE0
  9492                           indf2	equ	0xFDF
  9493                           postinc2	equ	0xFDE
  9494                           postdec2	equ	0xFDD
  9495                           fsr2h	equ	0xFDA
  9496                           fsr2l	equ	0xFD9
  9497                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         287
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51     102
    BANK0           128     50     106
    BANK1           256    117     247
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    i2c_lthread@i2cptr	PTR struct __i2c_thread_struct size(2) Largest target is 2
		 -> main@i2cthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    i2c_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_retrieve_buffer@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 35
		 -> main@ic(BANK1[35]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 35
		 -> NULL(NULL[0]), main@ic(BANK1[35]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@uc(BANK1[23]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_send_int_handler->_WriteUSART
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->i1_ToMainHigh_sendmsg
    i1_ToMainHigh_sendmsg->i1_send_msg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_int_handler_master_rx
    _i2c_int_handler->_i2c_int_handler_master_tx
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_uart_retrieve_buffer
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i2c_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                84    84      0   15600
                                             36 BANK1     81    81      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                        _i2c_lthread
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     966
                                              9 BANK1      8     0      8
               _uart_retrieve_buffer
 ---------------------------------------------------------------------------------
 (2) _uart_retrieve_buffer                                 9     5      4     322
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2850
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2161
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_lthread                                          9     1      8    3786
                                             26 BANK1      9     1      8
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                     11     9      2     257
                                              0 BANK1     11     9      2
 ---------------------------------------------------------------------------------
 (2) _i2c_master_recv                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2541
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    8087
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      22
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                8     8      0    5369
                                             26 COMRAM     8     8      0
                          _ReadUSART
                  _ToMainLow_sendmsg
               i1_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainHigh_sendmsg                                 4     1      3    2608
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2696
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2577
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2299
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6831
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6547
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    3231
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2859
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0       0
          _i2c_int_handler_master_rx
          _i2c_int_handler_master_tx
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_tx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_rx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
     _i2c_master_recv
     _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _uart_retrieve_buffer

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     i1_ToMainHigh_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_int_handler_master_rx
     _i2c_int_handler_master_tx
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     75      F7       6       96.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     32      6A       5       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      66       1       80.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FD       9        0.0%
DATA                 0      0     1FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Mar 15 22:31:54 2014

                  main@uthread_data 01B5            _MQ_Main_Willing_to_block 0058  
             ?i2_ToMainHigh_sendmsg 00CC           __end_of_ToMainLow_recvmsg 1BB6  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 1F08  
                      __CFG_CP0$OFF 000000                   i2recv_msg@msgtype 00C3  
                 i2recv_msg@tlength 00CA                                 l306 0C56  
                               l315 11AC                                 l640 1434  
                               l641 1436                                 l634 1404  
                               l566 1EB8                                 l590 1D0A  
                               l638 1424                                 l567 1EBA  
                               l639 1426                                 l592 1D22  
                               l593 1D24                                 l878 1F2A  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                               _buf 0034                      _FromMainLow_MQ 0116  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 0182                    ??_init_uart_recv 0184  
                   ReadTimer1@timer 0003   __end_of_i2c_int_handler_master_rx 0ABA  
 __end_of_i2c_int_handler_master_tx 08FE                 i2recv_msg@maxlength 00C2  
                              l1190 14E2                                l3250 1A98  
                              l3242 1A76                                l3402 03FE  
                              l3264 1B22                                l3370 017A  
                              l3452 1D0C                                l3532 1742  
                              l3380 020E                                l3526 1716  
                              l3614 0F26                                l3382 0260  
                              l3480 13F0                                l3720 0BDA  
                              l3634 19EC                                l3538 176E  
                              l3706 0ADC                                l3562 125C  
                              l3554 1206                                l3394 0308  
                              l3378 01BC                                l3386 02B2  
                              l3628 19C8                                l3716 0B60  
                              l3556 1232                                l3396 035A  
                              l3388 02CA                                l3830 1480  
                              l3822 1394                                l3398 03AC  
                              l3488 1406                                l3648 0CCA  
                              l3664 0D90                                l3832 1492  
                              l3738 10F4                                l3834 149A  
                              l3818 1358                                l3596 17BE  
                              l3838 14CE                                _LATB 000F8A  
                              u2757 1F2C                                i1l84 007A  
                   _FromMainHigh_MQ 0200                       __CFG_FCMEN$ON 000000  
              _uart_retrieve_buffer 1336                                _buff 0048  
            ?_block_on_To_msgqueues 0001                                _main 00C4  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01D3                          i1_send_msg 128C  
                              pclat 000FFA                         i2_check_msg 1E00  
                              prodh 000FF4                                prodl 000FF3  
                              start 00C0                          i2_recv_msg 0D94  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 0FCE  
     __size_of_i2c_configure_master 0042                       ??_i2c_lthread 01A4  
         ToMainHigh_recvmsg@msgtype 019A                      send_msg@length 018E  
       __size_of_timer0_int_handler 008A                         _Delay1KTCYx 1F26  
                             ?_main 0001                               _T0CON 000FD5  
                             _T1CON 000FCD                               i1l400 0430  
                   __end_of___lwmod 14EC                          i1memcpy@d1 0001  
                             i1l652 1F16                               i2l333 0A18  
                             i1l397 06C0                               i2l335 0A34  
                             i2l336 0A4E                               i2l344 0738  
                             i2l329 092E                               i2l347 07C6  
                        i1memcpy@s1 0003         FromMainHigh_recvmsg@msgtype 00CE  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 00B6                          i2memcpy@s1 00B8  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 1B32                               _count 005B  
      __end_ofi1_ToMainHigh_sendmsg 1EE4          ToMainLow_recvmsg@maxlength 019E  
           timer0_lthread@msgbuffer 0188                               tablat 000FF5  
             ?_uart_retrieve_buffer 0182                               status 000FD8  
          i2ToMainHigh_sendmsg@data 00CD                    __end_ofi1_memcpy 1C7A  
                  __end_ofi2_memcpy 1A62                      WriteUSART@data 0001  
                   __initialization 1CB6              ??i2_ToMainHigh_sendmsg 00CF  
                      __end_of_main 0418                          _ReadTimer1 1F98  
       __size_of_timer1_int_handler 0030          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0024       __size_of_FromMainHigh_recvmsg 0042  
             __size_ofi2_in_low_int 0046       __size_of_FromMainHigh_sendmsg 0036  
               __end_of_i2c_lthread 128C                              ??_main 01A6  
                   send_msg@msgtype 018F                       __activetblptr 000002  
                   send_msg@tlength 0193             ??_uart_recv_int_handler 001B  
                            i1l3130 0468                              i1l3202 069A  
                            i1l3052 1C68                              i1l3220 0070  
                            i1l3046 1C4C                              i1l3142 04BE  
                            i1l3070 169E                              i1l3214 0066  
                            i1l3160 053E                              i1l3144 04CE  
                            i1l3162 0548                              i1l3172 05D8  
                            i1l3166 0568                              i1l3088 12C4  
                            i1l3168 0596                              i1l3194 0670  
                            i1l3178 0612                              i1l3188 0640  
                            i1l3198 0694                              i1l2926 1F4A  
                        _OpenTimer0 1E94                              i2l3306 1942  
                        _OpenTimer1 1CF0                      __CFG_WDTEN$OFF 000000  
                            i2l3280 15BA                              i2l3274 15B0  
                            i2l3288 1906                              i2l3804 0830  
                            i2l3812 08D0                              i2l3806 08A0  
                            i2l3902 0E00                              i2l3808 08B8  
                            i2l3764 094C                              i2l3932 1A26  
                            i2l3862 1ADE                              i2l3854 1ABC  
                            i2l3766 0964                              i2l3758 0900  
                            i2l3782 0A80                              i2l3918 0EC6  
                            i2l3778 0A68                              i2l3794 07AE  
                            i2l3786 06E2                              i2l3938 1A4A  
                            i2l3878 102A                       ??_SleepIfOkay 00BA  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9                         ?i1_send_msg 000B  
                timer0_lthread@tptr 0182           uart_recv_int_handler@data 0022  
                       ?i2_recv_msg 00C0                        i2_in_low_int 1AA8  
                       ?i2_send_msg 00C0                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 18D0  
                   _i2c_master_recv 10D2                     _i2c_master_send 0ABA  
                  OpenTimer0@config 0182                              _ic_ptr 00E8  
                         ??___lwmod 0186                       main@msgbuffer 01A7  
                  __end_of_init_i2c 1678                    OpenTimer1@config 0182  
                            _length 0054                              _memcpy 19A6  
                            clear_0 1CBC                              clear_1 1CC8  
                            clear_2 1CD4                              clear_3 1CE0  
                            _uc_ptr 0065                              main@ic 01D4  
                            main@uc 01BC                    __end_of_recv_msg 0D94  
                         ??_in_main 0188                    __end_of_send_msg 0FCE  
             timer0_int_handler@val 00D8                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 0185            ToMainLow_recvmsg@msgtype 019A  
       ??_i2c_int_handler_master_rx 00B6         ??_i2c_int_handler_master_tx 00B6  
              __size_of_in_high_int 0012              ??_uart_retrieve_buffer 0186  
                i2c_lthread@msgtype 019E                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1CE6  
        __end_of_ToMainHigh_recvmsg 1BF8          __end_of_ToMainHigh_sendmsg 1D94  
    __size_of_uart_send_int_handler 0080       __end_of_uart_send_int_handler 16F8  
       __end_of_init_timer1_lthread 1F74                 __end_of_SleepIfOkay 19A6  
                       _i2c_lthread 11B4                          _WriteUSART 1F3C  
                    __pcstackCOMRAM 0001              __size_ofi2_in_high_int 0012  
                       ?_ReadTimer1 0001                  __size_of_check_msg 0036  
              i1_ToMainHigh_sendmsg 1EBE                   __end_of_ReadUSART 1F26  
         timer0_int_handler@msgtype 00D6                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 15F0  
       __end_of_InterruptHandlerLow 00C0                           ?i2_memcpy 00B6  
                     _ToMainHigh_MQ 0080                 __size_ofi2_recv_msg 0136  
                  _enter_sleep_mode 1FD6                 __size_ofi2_send_msg 0104  
              timer1_lthread@length 01A0                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1462                       check_msg@qptr 0182  
              timer1_lthread@retval 01A5             ??_block_on_To_msgqueues 0188  
              __size_of_init_queues 006E                          __pbssBANK0 0080  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0065             __end_of_i2c_int_handler 193C  
                      ?i2_check_msg 00B6             __end_of_i2c_master_recv 11B4  
           __end_of_i2c_master_send 0C5E                  timer1_lthread@tptr 019C  
         _i2c_int_handler_master_rx 08FE           _i2c_int_handler_master_tx 06E0  
             uart_retrieve_buffer@i 0189               ?i1_ToMainHigh_sendmsg 0017  
                 recv_msg@maxlength 018E                     recv_msg@msgtype 018F  
                   recv_msg@tlength 0196                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 00B8                             ?_memcpy 0182  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 00B8  
                     ??_WriteTimer1 0003             __size_of_timer0_lthread 0012  
           __size_of_timer1_lthread 0072                 _sendToMotorPIC_flag 0061  
      __end_of_i2c_configure_master 1B74                          ??i1_memcpy 0007  
                        _bufferFlag 0114                          ??i2_memcpy 00BC  
                  i1send_msg@length 000D                       i2_in_high_int 1FBC  
                           _SSPCON1 000FC6                 __size_of_ReadTimer1 0012  
                 __end_of_check_msg 1DCA                           ?_init_i2c 0182  
                       _SleepIfOkay 193C                           ?_recv_msg 018C  
                         _ADCResult 0050                          _in_low_int 1A62  
                           __Hparam 0000                           ?_send_msg 018C  
                           __Lparam 0000          __end_of_timer0_int_handler 1576  
                       ?_WriteUSART 0001                    init_uart_recv@uc 0182  
                           ___lwmod 1462                     __CFG_STVREN$OFF 000000  
                           __pcinit 1CB6                     __size_of_memcpy 005E  
                        _init_queue 1776                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 00C4                             __ptext1 1C7A  
                           __ptext2 1336                             __ptext3 17F0  
                           __ptext4 1462                             __ptext5 1D28  
                           __ptext6 1F50                             __ptext7 1E66  
                           __ptext8 1F62                             __ptext9 1862  
                         _T0CONbits 000FD5                             _in_main 1AEE  
                         _T1CONbits 000FCD                 __end_of_WriteTimer0 1FBC  
               __end_of_WriteTimer1 1F98                      ?i2_in_high_int 00B6  
                           _msgtype 005F       uart_retrieve_buffer@msgbuffer 0184  
                           _voltage 004D                      __pintcode_body 1576  
      __end_of_FromMainHigh_recvmsg 1C3A                end_of_initialization 1CE6  
           timer1_lthread@msgbuffer 01A2        __end_of_FromMainHigh_sendmsg 1D5E  
    __size_of_uart_recv_int_handler 02C8          FromMainHigh_sendmsg@length 019B  
                           memcpy@d 0188                             memcpy@n 0186  
                           memcpy@s 018A            i1ToMainHigh_sendmsg@data 0018  
     __end_of_uart_recv_int_handler 06E0              uart_recv_int_handler@i 0020  
                        ??_init_i2c 0184                       __Lmediumconst 0000  
                           int_func 1576                        ??i1_send_msg 0011  
                     ?_uart_lthread 018B             __size_of_init_uart_recv 002E  
                  ?_i2c_int_handler 0001                        ??i2_recv_msg 00C7  
                  ?_i2c_master_recv 0001                    ?_i2c_master_send 0182  
                        ??_recv_msg 0193                        ??i2_send_msg 00C6  
                        ??_send_msg 0192          __end_of_timer1_int_handler 1E66  
                         _RCSTAbits 000FAB              ??i1_ToMainHigh_sendmsg 001A  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0198  
     __size_ofi2_ToMainHigh_sendmsg 0036                      _last_reg_recvd 005C  
                __end_ofi1_send_msg 1336         FromMainHigh_sendmsg@msgtype 0198  
                         _TRISCbits 000F94                  __end_ofi2_recv_msg 0ECA  
                __end_ofi2_send_msg 10D2                 __size_of_WriteUSART 0014  
     FromMainHigh_recvmsg@maxlength 00D2            timer1_int_handler@result 001C  
                    ??_uart_lthread 0193                   main@slave_address 01B4  
                         _TXSTAbits 000FAC                          main@length 01BB  
                       ?_in_low_int 0184               timer0_lthread@msgtype 0184  
              _i2c_configure_master 1B32                        ?_i2c_lthread 019C  
              __size_ofi2_check_msg 0036            __end_of_enter_sleep_mode 1FDC  
                      ??_ReadTimer1 0003                  _ToMainHigh_recvmsg 1BB6  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1D5E  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                       _BAUDCONbits 000FB8                      _timer0_lthread 1F50  
                       ?_init_queue 0182                           i2memcpy@d 00BC  
                       _WriteTimer0 1FAA                         _WriteTimer1 1F86  
                         i2memcpy@n 00BA                           i2memcpy@s 00BE  
                    _timer1_lthread 17F0                      __end_of_memcpy 1A04  
                 _enable_interrupts 1FCE                __size_of_Delay1KTCYx 0016  
__size_of_i2c_int_handler_master_rx 01BC  __size_of_i2c_int_handler_master_tx 021E  
               ?_ToMainHigh_recvmsg 019A                     ??i2_in_high_int 00B8  
               ?_ToMainHigh_sendmsg 0198                  ?_enable_interrupts 0001  
               start_initialization 1CB6                       ??_in_high_int 0184  
                         _ReadUSART 1F08       uart_recv_int_handler@checkSum 001F  
                     _checksum_flag 005A                   __size_ofi1_memcpy 0040  
       i1ToMainHigh_sendmsg@msgtype 0017                   __size_ofi2_memcpy 005E  
               ??_enable_interrupts 0182                        ??_OpenTimer0 0182  
                      ??_OpenTimer1 0182      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 1FAA       __end_of_block_on_To_msgqueues 1776  
     __size_of_uart_retrieve_buffer 009A                           _OpenUSART 13D0  
      __end_of_InterruptHandlerHigh 15F8                          init_i2c@ic 0182  
              ??_ToMainHigh_recvmsg 019E                ??_ToMainHigh_sendmsg 019B  
             ?_i2c_configure_master 0001                   i2c_lthread@i2cptr 019C  
             _uart_send_int_handler 1678              __end_of_timer0_lthread 1F62  
            __end_of_timer1_lthread 1862           __end_of_enable_interrupts 1FD6  
                          ??_memcpy 0188               timer1_lthread@msgtype 019E  
              _FromMainHigh_recvmsg 1BF8                _FromMainHigh_sendmsg 1D28  
      __size_of_init_timer1_lthread 0012                   i2c_lthread@length 01A0  
                __end_of_OpenTimer0 1EBE                  __end_of_OpenTimer1 1D28  
                       __pbssCOMRAM 0034                          ?_ReadUSART 0001  
                     ??_init_queues 0186                       __pcstackBANK0 00B6  
                     __pcstackBANK1 0182                 __size_of_in_low_int 0046  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0182  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00A8  
               __end_of_in_high_int 1F86                          ?_OpenUSART 0182  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 019C  
                      _ToMainLow_MQ 014C                 __size_of_init_queue 007A  
                    _init_uart_recv 1E66                           _check_msg 1D94  
                         __pnvBANK0 00E8                   __size_of_init_i2c 0080  
                      recv_msg@data 0191                        ??_WriteUSART 0001  
                      recv_msg@qmsg 0198                        recv_msg@slot 0195  
                      recv_msg@qptr 018C          i2ToMainHigh_sendmsg@length 00CF  
                 __size_of_recv_msg 0136                           __pintcode 0008  
                 __size_of_send_msg 0104                     ?_timer0_lthread 0182  
                          ?___lwmod 0182               ?_FromMainHigh_recvmsg 00CE  
                   ?_timer1_lthread 019C               ?_FromMainHigh_sendmsg 0198  
                       __pintcodelo 0018                           _bufferLen 0052  
            ToMainHigh_recvmsg@data 019C                __end_of_uart_lthread 1CB6  
                          ?_in_main 0186                   WriteTimer0@timer0 00B6  
                _timer0_int_handler 14EC                   WriteTimer1@timer1 0001  
               uart_lthread@msgtype 018D               ToMainLow_sendmsg@data 0018  
        uart_retrieve_buffer@length 0182                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 1F50                    uart_lthread@uptr 018B  
            __end_of_init_uart_recv 1E94                 __end_of_init_queues 18D0  
             i2c_master_recv@length 0182                            _LATBbits 000F8A  
            ??_i2c_configure_master 0182                     i2check_msg@qptr 00B6  
                        ?_check_msg 0182                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                           _msgbuffer 0100  
                     ?i2_in_low_int 00B8                            i2u261_45 09F8  
                          i2u264_45 0812                            _PIR1bits 000F9E  
            ?_uart_send_int_handler 0001              ToMainHigh_sendmsg@data 0199  
                          _RCONbits 000FD0      uart_recv_int_handler@bufLength 001E  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 00D3  
              __size_of_i2c_lthread 00D8               i2c_master_send@length 018A  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                timer0_lthread@length 0186  
                _timer1_int_handler 1E36                            i1_memcpy 1C3A  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 1A04                timer0_lthread@msgval 018A  
          FromMainHigh_recvmsg@data 00D0                         _in_high_int 1F74  
                      send_msg@data 0190                        send_msg@qmsg 0196  
                      send_msg@slot 0195                        send_msg@qptr 018C  
                        _ADCBuffer0 003E                          _ADCBuffer1 0043  
      __end_ofi2_ToMainHigh_sendmsg 1E00               uart_lthread@msgbuffer 0191  
               ?_timer1_int_handler 0001                     ?_init_uart_recv 0182  
                       ??_OpenUSART 0184                     OpenUSART@config 0187  
                    ??i2_in_low_int 00BA                            __Hparam0 0000  
             _uart_recv_int_handler 0418                        ??_in_low_int 0186  
                          __Lparam0 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 00D2              ??_FromMainHigh_sendmsg 019B  
              ??_timer1_int_handler 001B       __size_ofi1_ToMainHigh_sendmsg 0026  
          __size_of_i2c_int_handler 006C                         _length_flag 005D  
                ??_enter_sleep_mode 00B6            __size_of_i2c_master_recv 00E2  
          __size_of_i2c_master_send 01A4                    __size_of___lwmod 008A  
                      ??_init_queue 0184                        ?_WriteTimer0 00B6  
                      ?_WriteTimer1 0001            FromMainHigh_sendmsg@data 0199  
           ToMainLow_sendmsg@length 001A                   main@t0thread_data 01B2  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 00C3         ToMainHigh_recvmsg@maxlength 019E  
                 i2send_msg@tlength 00C7             init_timer1_lthread@tptr 0182  
                       _init_queues 1862                  __end_of_in_low_int 1AA8  
              _sendToSensorPIC_flag 0062                            __ptext10 1776  
                          __ptext11 15F8                            __ptext20 1AEE  
                          __ptext12 11B4                            __ptext21 1A62  
                          __ptext13 0ABA                            __ptext30 1CF0  
                          __ptext22 1F74                            __ptext14 10D2  
                          __ptext31 1E94                            __ptext23 1D94  
                          __ptext15 1D5E                            __ptext40 1EE4  
                          __ptext24 1F26                            __ptext16 0ECA  
                          __ptext41 128C                            __ptext33 1678  
                          __ptext25 1B74                            __ptext17 1B32  
                          __ptext50 0D94                            __ptext42 1C3A  
                          __ptext34 1F3C                            __ptext26 1BB6  
                          __ptext18 1FCE                            __ptext51 1A04  
                          __ptext43 1F98                            __ptext35 0418  
                          __ptext27 0C5E                            __ptext19 16F8  
                          __ptext52 18D0                            __ptext36 1EBE  
                          __ptext28 19A6                            __ptext53 06E0  
                          __ptext45 14EC                            __ptext37 1F08  
                          __ptext29 13D0                            __ptext54 08FE  
                          __ptext46 1DCA                            __ptext38 1E36  
                          __ptext55 193C                            __ptext47 0FCE  
                          __ptext39 1F86                            __ptext56 1AA8  
                          __ptext48 1FAA                            __ptext57 1FBC  
                          __ptext49 1BF8                            __ptext58 1E00  
                          __ptext59 1FD6                        _SSP1CON2bits 000FC5  
                    i1send_msg@data 000F      i2c_configure_master@slave_addr 0182  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                  uart_lthread@length 018F  
          timer0_int_handler@length 00D4                        _sent_i2c_msg 0063  
                          _init_i2c 15F8                 _init_timer1_lthread 1F62  
                     __size_of_main 0354                       ??i2_check_msg 00B8  
                 main@t1thread_data 01B9                         ??_check_msg 0184  
                __end_of_init_queue 17F0                __size_of_SleepIfOkay 006A  
                          _recv_msg 0C5E                            _msg_flag 005E  
                          _send_msg 0ECA                            _uartData 0064  
                    init_queue@qptr 0182               __size_of_uart_lthread 003C  
                    i2recv_msg@data 00C5                      i2recv_msg@qmsg 00CC  
                     ??_Delay1KTCYx 0182                      i2recv_msg@slot 00C9  
                    i2recv_msg@qptr 00C0        __end_of_uart_retrieve_buffer 13D0  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0182  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                main@i2cthread_data 01B7                      OpenUSART@spbrg 0182  
                          memcpy@d1 0182                            memcpy@s1 0184  
             __end_ofi2_in_high_int 1FCE                    i2send_msg@length 00C2  
                          intlevel1 0000                            intlevel2 0000  
                      _msgtype_flag 0060                ?_InterruptHandlerLow 0001  
                  ___lwmod@dividend 0182              ?_uart_recv_int_handler 0001  
                      _uart_lthread 1C7A               _block_on_To_msgqueues 16F8  
                  ??_timer0_lthread 018A         __size_of_ToMainHigh_recvmsg 0042  
       __size_of_ToMainHigh_sendmsg 0036                       _previousValue 0056  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 01A4  
       i2ToMainHigh_sendmsg@msgtype 00CC            ToMainHigh_sendmsg@length 019B  
               __end_ofi2_check_msg 1E36                i2_ToMainHigh_sendmsg 1DCA  
             ??_init_timer1_lthread 0184              ??_InterruptHandlerHigh 00DA  
                 _ToMainLow_recvmsg 1B74                   _ToMainLow_sendmsg 1EE4  
                   ___lwmod@divisor 0184                __end_ofi2_in_low_int 1AEE  
                ?_ToMainLow_recvmsg 019A                 __end_of_Delay1KTCYx 1F3C  
                 ??_i2c_int_handler 00BA                     ___lwmod@counter 0187  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_recv 0182  
                 ??_i2c_master_send 0184                  i2c_master_send@msg 0182  
                       _SSPCON2bits 000FC5          ?_i2c_int_handler_master_rx 0001  
        ?_i2c_int_handler_master_tx 0001                i2c_lthread@msgbuffer 01A2  
                    i2send_msg@data 00C4               ??_InterruptHandlerLow 0023  
               ??_ToMainLow_recvmsg 019E                      i2send_msg@qmsg 00CA  
                    i2send_msg@slot 00C9                      i2send_msg@qptr 00C0  
               ??_ToMainLow_sendmsg 001A          i1ToMainHigh_sendmsg@length 001A  
           ??_uart_send_int_handler 0002                    i2c_master_send@i 018B  
                      _USART_Status 0059  
