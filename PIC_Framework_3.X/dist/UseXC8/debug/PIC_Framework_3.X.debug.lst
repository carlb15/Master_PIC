

Microchip Technology PIC18 LITE Macro Assembler V1.30 build 55553 
                                                                                               Sat Mar 15 23:17:01 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	18F45J10
     2                           	fnconf	param0,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    60                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	text56,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    77                           	psect	param0,global,class=BANK0,space=1,delta=1
    78  0000                     _BAUDCONbits	set	4024
    79  0000                     _INTCONbits	set	4082
    80  0000                     _IPR1bits	set	3999
    81  0000                     _LATB	set	3978
    82  0000                     _LATBbits	set	3978
    83  0000                     _OSCCON	set	4051
    84  0000                     _OSCCONbits	set	4051
    85  0000                     _OSCTUNEbits	set	3995
    86  0000                     _PIE1bits	set	3997
    87  0000                     _PIR1bits	set	3998
    88  0000                     _RCONbits	set	4048
    89  0000                     _RCREG	set	4014
    90  0000                     _RCSTA	set	4011
    91  0000                     _RCSTAbits	set	4011
    92  0000                     _SPBRG	set	4015
    93  0000                     _SPBRGH	set	4016
    94  0000                     _SSP1CON2bits	set	4037
    95  0000                     _SSPADD	set	4040
    96  0000                     _SSPBUF	set	4041
    97  0000                     _SSPCON1	set	4038
    98  0000                     _SSPCON2bits	set	4037
    99  0000                     _T0CON	set	4053
   100  0000                     _T0CONbits	set	4053
   101  0000                     _T1CON	set	4045
   102  0000                     _T1CONbits	set	4045
   103  0000                     _TMR0H	set	4055
   104  0000                     _TMR0L	set	4054
   105  0000                     _TMR1H	set	4047
   106  0000                     _TMR1L	set	4046
   107  0000                     _TRISB	set	3987
   108  0000                     _TRISCbits	set	3988
   109  0000                     _TXREG	set	4013
   110  0000                     _TXSTA	set	4012
   111  0000                     _TXSTAbits	set	4012
   112                           
   113                           	psect	nvCOMRAM
   114  000065                     __pnvCOMRAM:
   115                           	opt stack 0
   116  000065                     _uc_ptr:
   117                           	opt stack 0
   118  000065                     	ds	2
   119                           
   120                           	psect	nvBANK0
   121  0000E8                     __pnvBANK0:
   122                           	opt stack 0
   123  0000E8                     _ic_ptr:
   124                           	opt stack 0
   125  0000E8                     	ds	2
   126                           
   127                           ; #config settings
   128  0000                     
   129                           	psect	cinit
   130  001CEC                     __pcinit:
   131                           	opt stack 0
   132  001CEC                     start_initialization:
   133                           	opt stack 0
   134  001CEC                     __initialization:
   135                           	opt stack 0
   136                           
   137                           ; Clear objects allocated to BANK2 (54 bytes)
   138  001CEC  EE02  F000         	lfsr	0,__pbssBANK2
   139  001CF0  0E36               	movlw	54
   140  001CF2                     clear_0:
   141  001CF2  6AEE               	clrf	postinc0,c
   142  001CF4  06E8               	decf	wreg,f,c
   143  001CF6  E1FD               	bnz	clear_0
   144                           
   145                           ; Clear objects allocated to BANK1 (130 bytes)
   146  001CF8  EE01  F000         	lfsr	0,__pbssBANK1
   147  001CFC  0E82               	movlw	130
   148  001CFE                     clear_1:
   149  001CFE  6AEE               	clrf	postinc0,c
   150  001D00  06E8               	decf	wreg,f,c
   151  001D02  E1FD               	bnz	clear_1
   152                           
   153                           ; Clear objects allocated to BANK0 (54 bytes)
   154  001D04  EE00  F080         	lfsr	0,__pbssBANK0
   155  001D08  0E36               	movlw	54
   156  001D0A                     clear_2:
   157  001D0A  6AEE               	clrf	postinc0,c
   158  001D0C  06E8               	decf	wreg,f,c
   159  001D0E  E1FD               	bnz	clear_2
   160                           
   161                           ; Clear objects allocated to COMRAM (49 bytes)
   162  001D10  EE00  F034         	lfsr	0,__pbssCOMRAM
   163  001D14  0E31               	movlw	49
   164  001D16                     clear_3:
   165  001D16  6AEE               	clrf	postinc0,c
   166  001D18  06E8               	decf	wreg,f,c
   167  001D1A  E1FD               	bnz	clear_3
   168  001D1C                     end_of_initialization:
   169                           	opt stack 0
   170  001D1C                     __end_of__initialization:
   171                           	opt stack 0
   172  001D1C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   173  001D1E  6EF8               	movwf	tblptru,c
   174  001D20  0100               	movlb	0
   175  001D22  EF62  F000         	goto	_main	;jump to C main() function
   176                           tblptru	equ	0xFF8
   177                           postinc0	equ	0xFEE
   178                           wreg	equ	0xFE8
   179                           
   180                           	psect	bssCOMRAM
   181  000034                     __pbssCOMRAM:
   182                           	opt stack 0
   183  000034                     _buf:
   184                           	opt stack 0
   185  000034                     	ds	10
   186  00003E                     _ADCBuffer0:
   187                           	opt stack 0
   188  00003E                     	ds	5
   189  000043                     _ADCBuffer1:
   190                           	opt stack 0
   191  000043                     	ds	5
   192  000048                     _buff:
   193                           	opt stack 0
   194  000048                     	ds	5
   195  00004D                     _voltage:
   196                           	opt stack 0
   197  00004D                     	ds	3
   198  000050                     _ADCResult:
   199                           	opt stack 0
   200  000050                     	ds	2
   201  000052                     _bufferLen:
   202                           	opt stack 0
   203  000052                     	ds	2
   204  000054                     _length:
   205                           	opt stack 0
   206  000054                     	ds	2
   207  000056                     _previousValue:
   208                           	opt stack 0
   209  000056                     	ds	2
   210  000058                     _MQ_Main_Willing_to_block:
   211                           	opt stack 0
   212  000058                     	ds	1
   213  000059                     _USART_Status:
   214                           	opt stack 0
   215  000059                     	ds	1
   216  00005A                     _checksum_flag:
   217                           	opt stack 0
   218  00005A                     	ds	1
   219  00005B                     _count:
   220                           	opt stack 0
   221  00005B                     	ds	1
   222  00005C                     _last_reg_recvd:
   223                           	opt stack 0
   224  00005C                     	ds	1
   225  00005D                     _length_flag:
   226                           	opt stack 0
   227  00005D                     	ds	1
   228  00005E                     _msg_flag:
   229                           	opt stack 0
   230  00005E                     	ds	1
   231  00005F                     _msgtype:
   232                           	opt stack 0
   233  00005F                     	ds	1
   234  000060                     _msgtype_flag:
   235                           	opt stack 0
   236  000060                     	ds	1
   237  000061                     _sendToMotorPIC_flag:
   238                           	opt stack 0
   239  000061                     	ds	1
   240  000062                     _sendToSensorPIC_flag:
   241                           	opt stack 0
   242  000062                     	ds	1
   243  000063                     _sent_i2c_msg:
   244                           	opt stack 0
   245  000063                     	ds	1
   246  000064                     _uartData:
   247                           	opt stack 0
   248  000064                     	ds	1
   249                           tblptru	equ	0xFF8
   250                           postinc0	equ	0xFEE
   251                           wreg	equ	0xFE8
   252                           
   253                           	psect	bssBANK0
   254  000080                     __pbssBANK0:
   255                           	opt stack 0
   256  000080                     _ToMainHigh_MQ:
   257                           	opt stack 0
   258  000080                     	ds	54
   259                           tblptru	equ	0xFF8
   260                           postinc0	equ	0xFEE
   261                           wreg	equ	0xFE8
   262                           
   263                           	psect	bssBANK1
   264  000100                     __pbssBANK1:
   265                           	opt stack 0
   266  000100                     _msgbuffer:
   267                           	opt stack 0
   268  000100                     	ds	20
   269  000114                     _bufferFlag:
   270                           	opt stack 0
   271  000114                     	ds	2
   272  000116                     _FromMainLow_MQ:
   273                           	opt stack 0
   274  000116                     	ds	54
   275  00014C                     _ToMainLow_MQ:
   276                           	opt stack 0
   277  00014C                     	ds	54
   278                           tblptru	equ	0xFF8
   279                           postinc0	equ	0xFEE
   280                           wreg	equ	0xFE8
   281                           
   282                           	psect	bssBANK2
   283  000200                     __pbssBANK2:
   284                           	opt stack 0
   285  000200                     _FromMainHigh_MQ:
   286                           	opt stack 0
   287  000200                     	ds	54
   288                           tblptru	equ	0xFF8
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           
   292                           	psect	cstackBANK1
   293  000182                     __pcstackBANK1:
   294                           	opt stack 0
   295  000182                     ?_in_high_int:
   296                           	opt stack 0
   297  000182                     ?___lwmod:
   298                           	opt stack 0
   299  000182                     i2c_configure_master@slave_addr:
   300                           	opt stack 0
   301  000182                     i2c_master_recv@length:
   302                           	opt stack 0
   303  000182                     OpenTimer0@config:
   304                           	opt stack 0
   305  000182                     OpenTimer1@config:
   306                           	opt stack 0
   307  000182                     Delay1KTCYx@unit:
   308                           	opt stack 0
   309  000182                     init_queue@qptr:
   310                           	opt stack 0
   311  000182                     check_msg@qptr:
   312                           	opt stack 0
   313  000182                     i2c_master_send@msg:
   314                           	opt stack 0
   315  000182                     init_i2c@ic:
   316                           	opt stack 0
   317  000182                     init_uart_recv@uc:
   318                           	opt stack 0
   319  000182                     uart_retrieve_buffer@length:
   320                           	opt stack 0
   321  000182                     timer0_lthread@tptr:
   322                           	opt stack 0
   323  000182                     init_timer1_lthread@tptr:
   324                           	opt stack 0
   325  000182                     OpenUSART@spbrg:
   326                           	opt stack 0
   327  000182                     ___lwmod@dividend:
   328                           	opt stack 0
   329  000182                     memcpy@d1:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x0
   333  000182                     	ds	2
   334  000184                     ??_OpenUSART:
   335  000184                     ??_init_queue:
   336  000184                     ??_check_msg:
   337  000184                     ??_i2c_master_send:
   338  000184                     ?_in_low_int:
   339                           	opt stack 0
   340  000184                     uart_retrieve_buffer@msgbuffer:
   341                           	opt stack 0
   342  000184                     timer0_lthread@msgtype:
   343                           	opt stack 0
   344  000184                     ___lwmod@divisor:
   345                           	opt stack 0
   346  000184                     memcpy@s1:
   347                           	opt stack 0
   348                           
   349                           ; 2 bytes @ 0x2
   350  000184                     	ds	1
   351  000185                     init_queue@i:
   352                           	opt stack 0
   353                           
   354                           ; 1 bytes @ 0x3
   355  000185                     	ds	1
   356  000186                     ??_init_queues:
   357  000186                     ??_uart_retrieve_buffer:
   358  000186                     ??___lwmod:
   359  000186                     ?_in_main:
   360                           	opt stack 0
   361  000186                     timer0_lthread@length:
   362                           	opt stack 0
   363  000186                     memcpy@n:
   364                           	opt stack 0
   365                           
   366                           ; 2 bytes @ 0x4
   367  000186                     	ds	1
   368  000187                     OpenUSART@config:
   369                           	opt stack 0
   370  000187                     ___lwmod@counter:
   371                           	opt stack 0
   372                           
   373                           ; 1 bytes @ 0x5
   374  000187                     	ds	1
   375  000188                     ??_block_on_To_msgqueues:
   376  000188                     timer0_lthread@msgbuffer:
   377                           	opt stack 0
   378  000188                     memcpy@d:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x6
   382  000188                     	ds	1
   383  000189                     uart_retrieve_buffer@i:
   384                           	opt stack 0
   385                           
   386                           ; 2 bytes @ 0x7
   387  000189                     	ds	1
   388  00018A                     i2c_master_send@length:
   389                           	opt stack 0
   390  00018A                     timer0_lthread@msgval:
   391                           	opt stack 0
   392  00018A                     memcpy@s:
   393                           	opt stack 0
   394                           
   395                           ; 2 bytes @ 0x8
   396  00018A                     	ds	1
   397  00018B                     i2c_master_send@i:
   398                           	opt stack 0
   399  00018B                     uart_lthread@uptr:
   400                           	opt stack 0
   401                           
   402                           ; 2 bytes @ 0x9
   403  00018B                     	ds	1
   404  00018C                     send_msg@qptr:
   405                           	opt stack 0
   406  00018C                     recv_msg@qptr:
   407                           	opt stack 0
   408                           
   409                           ; 2 bytes @ 0xA
   410  00018C                     	ds	1
   411  00018D                     uart_lthread@msgtype:
   412                           	opt stack 0
   413                           
   414                           ; 2 bytes @ 0xB
   415  00018D                     	ds	1
   416  00018E                     send_msg@length:
   417                           	opt stack 0
   418  00018E                     recv_msg@maxlength:
   419                           	opt stack 0
   420                           
   421                           ; 1 bytes @ 0xC
   422  00018E                     	ds	1
   423  00018F                     send_msg@msgtype:
   424                           	opt stack 0
   425  00018F                     recv_msg@msgtype:
   426                           	opt stack 0
   427  00018F                     uart_lthread@length:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0xD
   431  00018F                     	ds	1
   432  000190                     send_msg@data:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0xE
   436  000190                     	ds	1
   437  000191                     recv_msg@data:
   438                           	opt stack 0
   439  000191                     uart_lthread@msgbuffer:
   440                           	opt stack 0
   441                           
   442                           ; 2 bytes @ 0xF
   443  000191                     	ds	1
   444  000192                     ??_send_msg:
   445                           
   446                           ; 0 bytes @ 0x10
   447  000192                     	ds	1
   448  000193                     ??_recv_msg:
   449  000193                     send_msg@tlength:
   450                           	opt stack 0
   451                           
   452                           ; 2 bytes @ 0x11
   453  000193                     	ds	2
   454  000195                     send_msg@slot:
   455                           	opt stack 0
   456  000195                     recv_msg@slot:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x13
   460  000195                     	ds	1
   461  000196                     send_msg@qmsg:
   462                           	opt stack 0
   463  000196                     recv_msg@tlength:
   464                           	opt stack 0
   465                           
   466                           ; 2 bytes @ 0x14
   467  000196                     	ds	2
   468  000198                     ToMainHigh_sendmsg@msgtype:
   469                           	opt stack 0
   470  000198                     FromMainHigh_sendmsg@msgtype:
   471                           	opt stack 0
   472  000198                     recv_msg@qmsg:
   473                           	opt stack 0
   474                           
   475                           ; 2 bytes @ 0x16
   476  000198                     	ds	1
   477  000199                     ToMainHigh_sendmsg@data:
   478                           	opt stack 0
   479  000199                     FromMainHigh_sendmsg@data:
   480                           	opt stack 0
   481                           
   482                           ; 2 bytes @ 0x17
   483  000199                     	ds	1
   484  00019A                     ToMainLow_recvmsg@msgtype:
   485                           	opt stack 0
   486  00019A                     ToMainHigh_recvmsg@msgtype:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x18
   490  00019A                     	ds	1
   491  00019B                     ToMainHigh_sendmsg@length:
   492                           	opt stack 0
   493  00019B                     FromMainHigh_sendmsg@length:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x19
   497  00019B                     	ds	1
   498  00019C                     ToMainLow_recvmsg@data:
   499                           	opt stack 0
   500  00019C                     ToMainHigh_recvmsg@data:
   501                           	opt stack 0
   502  00019C                     timer1_lthread@tptr:
   503                           	opt stack 0
   504  00019C                     i2c_lthread@i2cptr:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x1A
   508  00019C                     	ds	2
   509  00019E                     ToMainLow_recvmsg@maxlength:
   510                           	opt stack 0
   511  00019E                     ToMainHigh_recvmsg@maxlength:
   512                           	opt stack 0
   513  00019E                     timer1_lthread@msgtype:
   514                           	opt stack 0
   515  00019E                     i2c_lthread@msgtype:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x1C
   519  00019E                     	ds	2
   520  0001A0                     timer1_lthread@length:
   521                           	opt stack 0
   522  0001A0                     i2c_lthread@length:
   523                           	opt stack 0
   524                           
   525                           ; 2 bytes @ 0x1E
   526  0001A0                     	ds	2
   527  0001A2                     timer1_lthread@msgbuffer:
   528                           	opt stack 0
   529  0001A2                     i2c_lthread@msgbuffer:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x20
   533  0001A2                     	ds	2
   534  0001A4                     ??_i2c_lthread:
   535  0001A4                     ??_timer1_lthread:
   536                           
   537                           ; 0 bytes @ 0x22
   538  0001A4                     	ds	1
   539  0001A5                     timer1_lthread@retval:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x23
   543  0001A5                     	ds	1
   544  0001A6                     ??_main:
   545                           
   546                           ; 0 bytes @ 0x24
   547  0001A6                     	ds	1
   548  0001A7                     main@msgbuffer:
   549                           	opt stack 0
   550                           
   551                           ; 11 bytes @ 0x25
   552  0001A7                     	ds	11
   553  0001B2                     main@t0thread_data:
   554                           	opt stack 0
   555                           
   556                           ; 2 bytes @ 0x30
   557  0001B2                     	ds	2
   558  0001B4                     main@slave_address:
   559                           	opt stack 0
   560                           
   561                           ; 1 bytes @ 0x32
   562  0001B4                     	ds	1
   563  0001B5                     main@uthread_data:
   564                           	opt stack 0
   565                           
   566                           ; 2 bytes @ 0x33
   567  0001B5                     	ds	2
   568  0001B7                     main@i2cthread_data:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x35
   572  0001B7                     	ds	2
   573  0001B9                     main@t1thread_data:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0x37
   577  0001B9                     	ds	2
   578  0001BB                     main@length:
   579                           	opt stack 0
   580                           
   581                           ; 1 bytes @ 0x39
   582  0001BB                     	ds	1
   583  0001BC                     main@msgtype:
   584                           	opt stack 0
   585                           
   586                           ; 1 bytes @ 0x3A
   587  0001BC                     	ds	1
   588  0001BD                     main@uc:
   589                           	opt stack 0
   590                           
   591                           ; 23 bytes @ 0x3B
   592  0001BD                     	ds	23
   593  0001D4                     main@ic:
   594                           	opt stack 0
   595                           
   596                           ; 35 bytes @ 0x52
   597  0001D4                     	ds	35
   598                           tblptru	equ	0xFF8
   599                           postinc0	equ	0xFEE
   600                           wreg	equ	0xFE8
   601                           
   602                           	psect	cstackBANK0
   603  0000B6                     __pcstackBANK0:
   604                           	opt stack 0
   605  0000B6                     ??_i2c_int_handler_master_rx:
   606  0000B6                     ??_i2c_int_handler_master_tx:
   607  0000B6                     ?i2_in_high_int:
   608                           	opt stack 0
   609  0000B6                     WriteTimer0@timer0:
   610                           	opt stack 0
   611  0000B6                     i2check_msg@qptr:
   612                           	opt stack 0
   613  0000B6                     i2memcpy@d1:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x0
   617  0000B6                     	ds	2
   618  0000B8                     ??i2_check_msg:
   619  0000B8                     ?i2_in_low_int:
   620                           	opt stack 0
   621  0000B8                     WriteTimer0@timer:
   622                           	opt stack 0
   623  0000B8                     i2memcpy@s1:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x2
   627  0000B8                     	ds	2
   628  0000BA                     i2memcpy@n:
   629                           	opt stack 0
   630                           
   631                           ; 2 bytes @ 0x4
   632  0000BA                     	ds	2
   633  0000BC                     i2memcpy@d:
   634                           	opt stack 0
   635                           
   636                           ; 2 bytes @ 0x6
   637  0000BC                     	ds	2
   638  0000BE                     i2memcpy@s:
   639                           	opt stack 0
   640                           
   641                           ; 2 bytes @ 0x8
   642  0000BE                     	ds	2
   643  0000C0                     i2send_msg@qptr:
   644                           	opt stack 0
   645  0000C0                     i2recv_msg@qptr:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0xA
   649  0000C0                     	ds	2
   650  0000C2                     i2send_msg@length:
   651                           	opt stack 0
   652  0000C2                     i2recv_msg@maxlength:
   653                           	opt stack 0
   654                           
   655                           ; 1 bytes @ 0xC
   656  0000C2                     	ds	1
   657  0000C3                     i2send_msg@msgtype:
   658                           	opt stack 0
   659  0000C3                     i2recv_msg@msgtype:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0xD
   663  0000C3                     	ds	1
   664  0000C4                     i2send_msg@data:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0xE
   668  0000C4                     	ds	1
   669  0000C5                     i2recv_msg@data:
   670                           	opt stack 0
   671                           
   672                           ; 2 bytes @ 0xF
   673  0000C5                     	ds	1
   674  0000C6                     ??i2_send_msg:
   675                           
   676                           ; 0 bytes @ 0x10
   677  0000C6                     	ds	1
   678  0000C7                     ??i2_recv_msg:
   679  0000C7                     i2send_msg@tlength:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x11
   683  0000C7                     	ds	2
   684  0000C9                     i2send_msg@slot:
   685                           	opt stack 0
   686  0000C9                     i2recv_msg@slot:
   687                           	opt stack 0
   688                           
   689                           ; 1 bytes @ 0x13
   690  0000C9                     	ds	1
   691  0000CA                     i2send_msg@qmsg:
   692                           	opt stack 0
   693  0000CA                     i2recv_msg@tlength:
   694                           	opt stack 0
   695                           
   696                           ; 2 bytes @ 0x14
   697  0000CA                     	ds	2
   698  0000CC                     i2ToMainHigh_sendmsg@msgtype:
   699                           	opt stack 0
   700  0000CC                     i2recv_msg@qmsg:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x16
   704  0000CC                     	ds	1
   705  0000CD                     i2ToMainHigh_sendmsg@data:
   706                           	opt stack 0
   707                           
   708                           ; 2 bytes @ 0x17
   709  0000CD                     	ds	1
   710  0000CE                     FromMainHigh_recvmsg@msgtype:
   711                           	opt stack 0
   712                           
   713                           ; 2 bytes @ 0x18
   714  0000CE                     	ds	1
   715  0000CF                     i2ToMainHigh_sendmsg@length:
   716                           	opt stack 0
   717                           
   718                           ; 1 bytes @ 0x19
   719  0000CF                     	ds	1
   720  0000D0                     FromMainHigh_recvmsg@data:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x1A
   724  0000D0                     	ds	2
   725  0000D2                     FromMainHigh_recvmsg@maxlength:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x1C
   729  0000D2                     	ds	1
   730  0000D3                     ??_timer0_int_handler:
   731                           
   732                           ; 0 bytes @ 0x1D
   733  0000D3                     	ds	1
   734  0000D4                     timer0_int_handler@length:
   735                           	opt stack 0
   736                           
   737                           ; 2 bytes @ 0x1E
   738  0000D4                     	ds	2
   739  0000D6                     timer0_int_handler@msgtype:
   740                           	opt stack 0
   741                           
   742                           ; 2 bytes @ 0x20
   743  0000D6                     	ds	2
   744  0000D8                     timer0_int_handler@val:
   745                           	opt stack 0
   746                           
   747                           ; 2 bytes @ 0x22
   748  0000D8                     	ds	2
   749  0000DA                     ??_InterruptHandlerHigh:
   750                           
   751                           ; 0 bytes @ 0x24
   752  0000DA                     	ds	14
   753                           tblptru	equ	0xFF8
   754                           postinc0	equ	0xFEE
   755                           wreg	equ	0xFE8
   756                           
   757                           	psect	cstackCOMRAM
   758  000001                     __pcstackCOMRAM:
   759                           	opt stack 0
   760  000001                     ?_ReadTimer1:
   761                           	opt stack 0
   762  000001                     ReadUSART@data:
   763                           	opt stack 0
   764  000001                     WriteUSART@data:
   765                           	opt stack 0
   766  000001                     WriteTimer1@timer1:
   767                           	opt stack 0
   768  000001                     i1memcpy@d1:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x0
   772  000001                     	ds	1
   773  000002                     ??_uart_send_int_handler:
   774                           
   775                           ; 0 bytes @ 0x1
   776  000002                     	ds	1
   777  000003                     ReadTimer1@timer:
   778                           	opt stack 0
   779  000003                     WriteTimer1@timer:
   780                           	opt stack 0
   781  000003                     i1memcpy@s1:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x2
   785  000003                     	ds	2
   786  000005                     i1memcpy@n:
   787                           	opt stack 0
   788                           
   789                           ; 2 bytes @ 0x4
   790  000005                     	ds	2
   791  000007                     i1memcpy@d:
   792                           	opt stack 0
   793                           
   794                           ; 2 bytes @ 0x6
   795  000007                     	ds	2
   796  000009                     i1memcpy@s:
   797                           	opt stack 0
   798                           
   799                           ; 2 bytes @ 0x8
   800  000009                     	ds	2
   801  00000B                     i1send_msg@qptr:
   802                           	opt stack 0
   803                           
   804                           ; 2 bytes @ 0xA
   805  00000B                     	ds	2
   806  00000D                     i1send_msg@length:
   807                           	opt stack 0
   808                           
   809                           ; 1 bytes @ 0xC
   810  00000D                     	ds	1
   811  00000E                     i1send_msg@msgtype:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0xD
   815  00000E                     	ds	1
   816  00000F                     i1send_msg@data:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0xE
   820  00000F                     	ds	2
   821  000011                     ??i1_send_msg:
   822                           
   823                           ; 0 bytes @ 0x10
   824  000011                     	ds	1
   825  000012                     i1send_msg@tlength:
   826                           	opt stack 0
   827                           
   828                           ; 2 bytes @ 0x11
   829  000012                     	ds	2
   830  000014                     i1send_msg@slot:
   831                           	opt stack 0
   832                           
   833                           ; 1 bytes @ 0x13
   834  000014                     	ds	1
   835  000015                     i1send_msg@qmsg:
   836                           	opt stack 0
   837                           
   838                           ; 2 bytes @ 0x14
   839  000015                     	ds	2
   840  000017                     ToMainLow_sendmsg@msgtype:
   841                           	opt stack 0
   842  000017                     i1ToMainHigh_sendmsg@msgtype:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0x16
   846  000017                     	ds	1
   847  000018                     ToMainLow_sendmsg@data:
   848                           	opt stack 0
   849  000018                     i1ToMainHigh_sendmsg@data:
   850                           	opt stack 0
   851                           
   852                           ; 2 bytes @ 0x17
   853  000018                     	ds	2
   854  00001A                     ToMainLow_sendmsg@length:
   855                           	opt stack 0
   856  00001A                     i1ToMainHigh_sendmsg@length:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x19
   860  00001A                     	ds	1
   861  00001B                     ??_timer1_int_handler:
   862  00001B                     ??_uart_recv_int_handler:
   863                           
   864                           ; 0 bytes @ 0x1A
   865  00001B                     	ds	1
   866  00001C                     timer1_int_handler@result:
   867                           	opt stack 0
   868                           
   869                           ; 2 bytes @ 0x1B
   870  00001C                     	ds	2
   871  00001E                     uart_recv_int_handler@bufLength:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x1D
   875  00001E                     	ds	1
   876  00001F                     uart_recv_int_handler@checkSum:
   877                           	opt stack 0
   878                           
   879                           ; 1 bytes @ 0x1E
   880  00001F                     	ds	1
   881  000020                     uart_recv_int_handler@i:
   882                           	opt stack 0
   883                           
   884                           ; 2 bytes @ 0x1F
   885  000020                     	ds	2
   886  000022                     uart_recv_int_handler@data:
   887                           	opt stack 0
   888                           
   889                           ; 1 bytes @ 0x21
   890  000022                     	ds	1
   891  000023                     ??_InterruptHandlerLow:
   892                           
   893                           ; 0 bytes @ 0x22
   894  000023                     	ds	17
   895                           tblptru	equ	0xFF8
   896                           postinc0	equ	0xFEE
   897                           wreg	equ	0xFE8
   898                           
   899 ;;
   900 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   901 ;;
   902 ;; *************** function _main *****************
   903 ;; Defined at:
   904 ;;		line 189 in file "../src/main.c"
   905 ;; Parameters:    Size  Location     Type
   906 ;;		None
   907 ;; Auto vars:     Size  Location     Type
   908 ;;  ic             35   82[BANK1 ] struct __i2c_comm
   909 ;;  uc             23   59[BANK1 ] struct __uart_comm
   910 ;;  msgbuffer      11   37[BANK1 ] unsigned char [11]
   911 ;;  t1thread_dat    2   55[BANK1 ] struct __timer1_thread_s
   912 ;;  i2cthread_da    2   53[BANK1 ] struct __i2c_thread_stru
   913 ;;  uthread_data    2   51[BANK1 ] struct __uart_thread_str
   914 ;;  t0thread_dat    2   48[BANK1 ] struct __timer0_thread_s
   915 ;;  msgtype         1   58[BANK1 ] unsigned char 
   916 ;;  length          1   57[BANK1 ] char 
   917 ;;  slave_addres    1   50[BANK1 ] unsigned char 
   918 ;;  i               1    0        unsigned char 
   919 ;;  last_reg_rec    1    0        unsigned char 
   920 ;;  c               1    0        unsigned char 
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, btemp, btemp+1, btemp+2, bt
      +emp+3, btemp+4, btemp+5, btemp+6, btemp+7, btemp+8, btemp+9, btemp+10, btemp+11, tosl, structret, tblptrl, tblptrh, tblp
      +tru, prodl, prodh, bsr, cstack
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
   930 ;;      Params:         0       0       0       0       0
   931 ;;      Locals:         0       0      80       0       0
   932 ;;      Temps:          0       0       1       0       0
   933 ;;      Totals:         0       0      81       0       0
   934 ;;Total ram usage:       81 bytes
   935 ;; Hardware stack levels required when called:   14
   936 ;; This function calls:
   937 ;;		_OpenTimer0
   938 ;;		_OpenTimer1
   939 ;;		_OpenUSART
   940 ;;		_ToMainHigh_recvmsg
   941 ;;		_ToMainLow_recvmsg
   942 ;;		_block_on_To_msgqueues
   943 ;;		_enable_interrupts
   944 ;;		_i2c_configure_master
   945 ;;		_i2c_lthread
   946 ;;		_init_i2c
   947 ;;		_init_queues
   948 ;;		_init_timer1_lthread
   949 ;;		_init_uart_recv
   950 ;;		_timer0_lthread
   951 ;;		_timer1_lthread
   952 ;;		_uart_lthread
   953 ;; This function is called by:
   954 ;;		Startup code after reset
   955 ;; This function uses a non-reentrant model
   956 ;;
   957                           
   958                           	psect	text0
   959  0000C4                     __ptext0:
   960                           	opt stack 0
   961  0000C4                     _main:
   962                           	opt stack 16
   963                           
   964                           ;main.c: 190: char c;
   965                           ;main.c: 191: signed char length;
   966                           ;main.c: 192: unsigned char msgtype;
   967                           ;main.c: 193: unsigned char last_reg_recvd;
   968                           ;main.c: 194: uart_comm uc;
   969                           ;main.c: 195: i2c_comm ic;
   970                           ;main.c: 196: unsigned char msgbuffer[10 + 1];
   971                           ;main.c: 197: unsigned char i;
   972                           ;main.c: 198: uart_thread_struct uthread_data;
   973                           ;main.c: 199: timer1_thread_struct t1thread_data;
   974                           ;main.c: 200: timer0_thread_struct t0thread_data;
   975                           ;main.c: 201: i2c_thread_struct i2cthread_data;
   976                           ;main.c: 209: OSCCON = 0x82;
   977                           
   978                           ;incstack = 0
   979  0000C4  0E82               	movlw	130
   980  0000C6  6ED3               	movwf	4051,c	;volatile
   981                           
   982                           ;main.c: 210: OSCTUNEbits.PLLEN = 1;
   983  0000C8  8C9B               	bsf	3995,6,c	;volatile
   984                           
   985                           ;main.c: 229: init_uart_recv(&uc);
   986  0000CA  0101               	movlb	1	; () banked
   987  0000CC  0E01               	movlw	high main@uc
   988  0000CE  0101               	movlb	1	; () banked
   989  0000D0  0101               	movlb	1	; () banked
   990  0000D2  6F83               	movwf	(init_uart_recv@uc+1)& (0+255),b
   991  0000D4  0101               	movlb	1	; () banked
   992  0000D6  0EBD               	movlw	low main@uc
   993  0000D8  0101               	movlb	1	; () banked
   994  0000DA  0101               	movlb	1	; () banked
   995  0000DC  6F82               	movwf	init_uart_recv@uc& (0+255),b
   996  0000DE  EC39  F00E         	call	_init_uart_recv	;wreg free
   997                           
   998                           ;main.c: 232: init_i2c(&ic);
   999  0000E2  0101               	movlb	1	; () banked
  1000  0000E4  0E01               	movlw	high main@ic
  1001  0000E6  0101               	movlb	1	; () banked
  1002  0000E8  0101               	movlb	1	; () banked
  1003  0000EA  6F83               	movwf	(init_i2c@ic+1)& (0+255),b
  1004  0000EC  0101               	movlb	1	; () banked
  1005  0000EE  0ED4               	movlw	low main@ic
  1006  0000F0  0101               	movlb	1	; () banked
  1007  0000F2  0101               	movlb	1	; () banked
  1008  0000F4  6F82               	movwf	init_i2c@ic& (0+255),b
  1009  0000F6  EC04  F00B         	call	_init_i2c	;wreg free
  1010                           
  1011                           ;main.c: 235: init_timer1_lthread(&t1thread_data);
  1012  0000FA  0101               	movlb	1	; () banked
  1013  0000FC  0E01               	movlw	high main@t1thread_data
  1014  0000FE  0101               	movlb	1	; () banked
  1015  000100  0101               	movlb	1	; () banked
  1016  000102  6F83               	movwf	(init_timer1_lthread@tptr+1)& (0+255),b
  1017  000104  0101               	movlb	1	; () banked
  1018  000106  0EB9               	movlw	low main@t1thread_data
  1019  000108  0101               	movlb	1	; () banked
  1020  00010A  0101               	movlb	1	; () banked
  1021  00010C  6F82               	movwf	init_timer1_lthread@tptr& (0+255),b
  1022  00010E  ECB5  F00F         	call	_init_timer1_lthread	;wreg free
  1023                           
  1024                           ;main.c: 238: init_queues();
  1025  000112  ECF9  F00B         	call	_init_queues	;wreg free
  1026                           
  1027                           ;main.c: 242: TRISB = 0x0;
  1028  000116  0E00               	movlw	0
  1029  000118  6E93               	movwf	3987,c	;volatile
  1030                           
  1031                           ;main.c: 243: LATB = 0x0;
  1032  00011A  0E00               	movlw	0
  1033  00011C  6E8A               	movwf	3978,c	;volatile
  1034                           
  1035                           ;main.c: 256: OpenTimer0(0b11111111 & 0b11111111 & 0b11011111 & 0b11110011);
  1036  00011E  0ED3               	movlw	211
  1037  000120  EC4E  F00F         	call	_OpenTimer0
  1038                           
  1039                           ;main.c: 268: OpenTimer1(0b11111111 & 0b11111111 & 0b11111111 & 0b11111101 & 0b11110111 
      +                          & 0b11111111);
  1040  000124  0EF5               	movlw	245
  1041  000126  EC93  F00E         	call	_OpenTimer1
  1042                           
  1043                           ;main.c: 275: IPR1bits.TMR1IP = 0;
  1044  00012A  909F               	bcf	3999,0,c	;volatile
  1045                           
  1046                           ;main.c: 277: IPR1bits.RCIP = 0;
  1047  00012C  9A9F               	bcf	3999,5,c	;volatile
  1048                           
  1049                           ;main.c: 279: IPR1bits.TXIP = 0;
  1050  00012E  989F               	bcf	3999,4,c	;volatile
  1051                           
  1052                           ;main.c: 281: IPR1bits.SSPIP = 1;
  1053  000130  869F               	bsf	3999,3,c	;volatile
  1054                           
  1055                           ;main.c: 286: unsigned char slave_address = 0x9E;
  1056  000132  0101               	movlb	1	; () banked
  1057  000134  6FA6               	movwf	??_main& (0+255),b
  1058  000136  0E9E               	movlw	158
  1059  000138  0101               	movlb	1	; () banked
  1060  00013A  0101               	movlb	1	; () banked
  1061  00013C  6FB4               	movwf	main@slave_address& (0+255),b
  1062  00013E  0101               	movlb	1	; () banked
  1063  000140  51A6               	movf	??_main& (0+255),w,b
  1064                           
  1065                           ; BSR set to: 1
  1066                           ;main.c: 287: i2c_configure_master(slave_address);
  1067  000142  0101               	movlb	1	; () banked
  1068  000144  0101               	movlb	1	; () banked
  1069  000146  51B4               	movf	main@slave_address& (0+255),w,b
  1070  000148  EC95  F00D         	call	_i2c_configure_master
  1071                           
  1072                           ;main.c: 302: PIE1bits.SSPIE = 1;
  1073  00014C  869D               	bsf	3997,3,c	;volatile
  1074                           
  1075                           ;main.c: 318: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 &
  1076                           ;main.c: 319: 0b11111111 & 0b11111111, 155);
  1077  00014E  0E00               	movlw	0
  1078  000150  0101               	movlb	1	; () banked
  1079  000152  0101               	movlb	1	; () banked
  1080  000154  6F83               	movwf	(OpenUSART@spbrg+1)& (0+255),b
  1081  000156  0E9B               	movlw	155
  1082  000158  0101               	movlb	1	; () banked
  1083  00015A  6F82               	movwf	OpenUSART@spbrg& (0+255),b
  1084  00015C  0E7C               	movlw	124
  1085  00015E  ECF0  F009         	call	_OpenUSART
  1086                           
  1087                           ;main.c: 320: BAUDCONbits.BRG16 = 0;
  1088  000162  96B8               	bcf	4024,3,c	;volatile
  1089                           
  1090                           ;main.c: 321: RCSTAbits.SPEN = 1;
  1091  000164  8EAB               	bsf	4011,7,c	;volatile
  1092                           
  1093                           ;main.c: 322: RCSTAbits.CREN = 1;
  1094  000166  88AB               	bsf	4011,4,c	;volatile
  1095                           
  1096                           ;main.c: 327: bufferFlag = 0x0;
  1097  000168  0E00               	movlw	0
  1098  00016A  0101               	movlb	1	; () banked
  1099  00016C  0101               	movlb	1	; () banked
  1100  00016E  6F15               	movwf	(_bufferFlag+1)& (0+255),b
  1101  000170  0E00               	movlw	0
  1102  000172  0101               	movlb	1	; () banked
  1103  000174  6F14               	movwf	_bufferFlag& (0+255),b
  1104                           
  1105                           ; BSR set to: 1
  1106                           ;main.c: 330: enable_interrupts();
  1107  000176  ECEB  F00F         	call	_enable_interrupts	;wreg free
  1108  00017A                     l3369:
  1109                           
  1110                           ;main.c: 341: block_on_To_msgqueues();
  1111  00017A  EC44  F00B         	call	_block_on_To_msgqueues	;wreg free
  1112                           
  1113                           ;main.c: 349: length = ToMainHigh_recvmsg(10, &msgtype, (void *) msgbuffer);
  1114  00017E  0101               	movlb	1	; () banked
  1115  000180  0E01               	movlw	high main@msgtype
  1116  000182  0101               	movlb	1	; () banked
  1117  000184  0101               	movlb	1	; () banked
  1118  000186  6F9B               	movwf	(ToMainHigh_recvmsg@msgtype+1)& (0+255),b
  1119  000188  0101               	movlb	1	; () banked
  1120  00018A  0EBC               	movlw	low main@msgtype
  1121  00018C  0101               	movlb	1	; () banked
  1122  00018E  0101               	movlb	1	; () banked
  1123  000190  6F9A               	movwf	ToMainHigh_recvmsg@msgtype& (0+255),b
  1124  000192  0101               	movlb	1	; () banked
  1125  000194  0E01               	movlw	high main@msgbuffer
  1126  000196  0101               	movlb	1	; () banked
  1127  000198  0101               	movlb	1	; () banked
  1128  00019A  6F9D               	movwf	(ToMainHigh_recvmsg@data+1)& (0+255),b
  1129  00019C  0101               	movlb	1	; () banked
  1130  00019E  0EA7               	movlw	low main@msgbuffer
  1131  0001A0  0101               	movlb	1	; () banked
  1132  0001A2  0101               	movlb	1	; () banked
  1133  0001A4  6F9C               	movwf	ToMainHigh_recvmsg@data& (0+255),b
  1134  0001A6  0E0A               	movlw	10
  1135  0001A8  ECD7  F00D         	call	_ToMainHigh_recvmsg
  1136  0001AC  0101               	movlb	1	; () banked
  1137  0001AE  0101               	movlb	1	; () banked
  1138  0001B0  6FBB               	movwf	main@length& (0+255),b
  1139                           
  1140                           ; BSR set to: 1
  1141                           ;main.c: 351: if (length < 0) {
  1142  0001B2  0101               	movlb	1	; () banked
  1143  0001B4  0101               	movlb	1	; () banked
  1144  0001B6  BFBB               	btfsc	main@length& (0+255),7,b
  1145  0001B8  D088               	goto	l3387
  1146  0001BA  D07B               	goto	l3385
  1147  0001BC                     l3377:
  1148                           
  1149                           ; BSR set to: 1
  1150                           ;main.c: 359: {
  1151                           ;main.c: 360: timer0_lthread(&t0thread_data, msgtype, length, msgbuffer);
  1152  0001BC  0101               	movlb	1	; () banked
  1153  0001BE  0E01               	movlw	high main@t0thread_data
  1154  0001C0  0101               	movlb	1	; () banked
  1155  0001C2  0101               	movlb	1	; () banked
  1156  0001C4  6F83               	movwf	(timer0_lthread@tptr+1)& (0+255),b
  1157  0001C6  0101               	movlb	1	; () banked
  1158  0001C8  0EB2               	movlw	low main@t0thread_data
  1159  0001CA  0101               	movlb	1	; () banked
  1160  0001CC  0101               	movlb	1	; () banked
  1161  0001CE  6F82               	movwf	timer0_lthread@tptr& (0+255),b
  1162  0001D0  0101               	movlb	1	; () banked
  1163  0001D2  0101               	movlb	1	; () banked
  1164  0001D4  C1BC  F184         	movff	main@msgtype,timer0_lthread@msgtype
  1165  0001D8  0101               	movlb	1	; () banked
  1166  0001DA  0101               	movlb	1	; () banked
  1167  0001DC  6B85               	clrf	(timer0_lthread@msgtype+1)& (0+255),b
  1168  0001DE  0101               	movlb	1	; () banked
  1169  0001E0  0101               	movlb	1	; () banked
  1170  0001E2  51BB               	movf	main@length& (0+255),w,b
  1171  0001E4  0101               	movlb	1	; () banked
  1172  0001E6  0101               	movlb	1	; () banked
  1173  0001E8  6F86               	movwf	timer0_lthread@length& (0+255),b
  1174  0001EA  0101               	movlb	1	; () banked
  1175  0001EC  6B87               	clrf	(timer0_lthread@length+1)& (0+255),b
  1176  0001EE  0101               	movlb	1	; () banked
  1177  0001F0  BF86               	btfsc	timer0_lthread@length& (0+255),7,b
  1178  0001F2  0787               	decf	(timer0_lthread@length+1)& (0+255),f,b
  1179  0001F4  0101               	movlb	1	; () banked
  1180  0001F6  0E01               	movlw	high main@msgbuffer
  1181  0001F8  0101               	movlb	1	; () banked
  1182  0001FA  0101               	movlb	1	; () banked
  1183  0001FC  6F89               	movwf	(timer0_lthread@msgbuffer+1)& (0+255),b
  1184  0001FE  0101               	movlb	1	; () banked
  1185  000200  0EA7               	movlw	low main@msgbuffer
  1186  000202  0101               	movlb	1	; () banked
  1187  000204  0101               	movlb	1	; () banked
  1188  000206  6F88               	movwf	timer0_lthread@msgbuffer& (0+255),b
  1189  000208  ECAC  F00F         	call	_timer0_lthread	;wreg free
  1190                           
  1191                           ;main.c: 361: break;
  1192  00020C  D05E               	goto	l3387
  1193  00020E                     l3379:
  1194                           
  1195                           ;main.c: 364: {
  1196                           ;main.c: 365: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1197  00020E  0101               	movlb	1	; () banked
  1198  000210  0E01               	movlw	high main@i2cthread_data
  1199  000212  0101               	movlb	1	; () banked
  1200  000214  0101               	movlb	1	; () banked
  1201  000216  6F9D               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1202  000218  0101               	movlb	1	; () banked
  1203  00021A  0EB7               	movlw	low main@i2cthread_data
  1204  00021C  0101               	movlb	1	; () banked
  1205  00021E  0101               	movlb	1	; () banked
  1206  000220  6F9C               	movwf	i2c_lthread@i2cptr& (0+255),b
  1207  000222  0101               	movlb	1	; () banked
  1208  000224  0101               	movlb	1	; () banked
  1209  000226  C1BC  F19E         	movff	main@msgtype,i2c_lthread@msgtype
  1210  00022A  0101               	movlb	1	; () banked
  1211  00022C  0101               	movlb	1	; () banked
  1212  00022E  6B9F               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1213  000230  0101               	movlb	1	; () banked
  1214  000232  0101               	movlb	1	; () banked
  1215  000234  51BB               	movf	main@length& (0+255),w,b
  1216  000236  0101               	movlb	1	; () banked
  1217  000238  0101               	movlb	1	; () banked
  1218  00023A  6FA0               	movwf	i2c_lthread@length& (0+255),b
  1219  00023C  0101               	movlb	1	; () banked
  1220  00023E  6BA1               	clrf	(i2c_lthread@length+1)& (0+255),b
  1221  000240  0101               	movlb	1	; () banked
  1222  000242  BFA0               	btfsc	i2c_lthread@length& (0+255),7,b
  1223  000244  07A1               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1224  000246  0101               	movlb	1	; () banked
  1225  000248  0E01               	movlw	high main@msgbuffer
  1226  00024A  0101               	movlb	1	; () banked
  1227  00024C  0101               	movlb	1	; () banked
  1228  00024E  6FA3               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1229  000250  0101               	movlb	1	; () banked
  1230  000252  0EA7               	movlw	low main@msgbuffer
  1231  000254  0101               	movlb	1	; () banked
  1232  000256  0101               	movlb	1	; () banked
  1233  000258  6FA2               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1234  00025A  ECDA  F008         	call	_i2c_lthread	;wreg free
  1235                           
  1236                           ;main.c: 366: break;
  1237  00025E  D035               	goto	l3387
  1238  000260                     l3381:
  1239                           
  1240                           ;main.c: 369: {
  1241                           ;main.c: 370: i2c_lthread(&i2cthread_data, msgtype, length, msgbuffer);
  1242  000260  0101               	movlb	1	; () banked
  1243  000262  0E01               	movlw	high main@i2cthread_data
  1244  000264  0101               	movlb	1	; () banked
  1245  000266  0101               	movlb	1	; () banked
  1246  000268  6F9D               	movwf	(i2c_lthread@i2cptr+1)& (0+255),b
  1247  00026A  0101               	movlb	1	; () banked
  1248  00026C  0EB7               	movlw	low main@i2cthread_data
  1249  00026E  0101               	movlb	1	; () banked
  1250  000270  0101               	movlb	1	; () banked
  1251  000272  6F9C               	movwf	i2c_lthread@i2cptr& (0+255),b
  1252  000274  0101               	movlb	1	; () banked
  1253  000276  0101               	movlb	1	; () banked
  1254  000278  C1BC  F19E         	movff	main@msgtype,i2c_lthread@msgtype
  1255  00027C  0101               	movlb	1	; () banked
  1256  00027E  0101               	movlb	1	; () banked
  1257  000280  6B9F               	clrf	(i2c_lthread@msgtype+1)& (0+255),b
  1258  000282  0101               	movlb	1	; () banked
  1259  000284  0101               	movlb	1	; () banked
  1260  000286  51BB               	movf	main@length& (0+255),w,b
  1261  000288  0101               	movlb	1	; () banked
  1262  00028A  0101               	movlb	1	; () banked
  1263  00028C  6FA0               	movwf	i2c_lthread@length& (0+255),b
  1264  00028E  0101               	movlb	1	; () banked
  1265  000290  6BA1               	clrf	(i2c_lthread@length+1)& (0+255),b
  1266  000292  0101               	movlb	1	; () banked
  1267  000294  BFA0               	btfsc	i2c_lthread@length& (0+255),7,b
  1268  000296  07A1               	decf	(i2c_lthread@length+1)& (0+255),f,b
  1269  000298  0101               	movlb	1	; () banked
  1270  00029A  0E01               	movlw	high main@msgbuffer
  1271  00029C  0101               	movlb	1	; () banked
  1272  00029E  0101               	movlb	1	; () banked
  1273  0002A0  6FA3               	movwf	(i2c_lthread@msgbuffer+1)& (0+255),b
  1274  0002A2  0101               	movlb	1	; () banked
  1275  0002A4  0EA7               	movlw	low main@msgbuffer
  1276  0002A6  0101               	movlb	1	; () banked
  1277  0002A8  0101               	movlb	1	; () banked
  1278  0002AA  6FA2               	movwf	i2c_lthread@msgbuffer& (0+255),b
  1279  0002AC  ECDA  F008         	call	_i2c_lthread	;wreg free
  1280                           
  1281                           ;main.c: 371: break;
  1282  0002B0  D00C               	goto	l3387
  1283  0002B2                     l3385:
  1284  0002B2  0101               	movlb	1	; () banked
  1285  0002B4  0101               	movlb	1	; () banked
  1286  0002B6  51BC               	movf	main@msgtype& (0+255),w,b
  1287                           
  1288                           ; Switch size 1, requested type "space"
  1289                           ; Number of cases is 3, Range of values is 10 to 40
  1290                           ; switch strategies available:
  1291                           ; Name         Instructions Cycles
  1292                           ; simple_byte           10     6 (average)
  1293                           ;	Chosen strategy is simple_byte
  1294  0002B8  0A0A               	xorlw	10	; case 10
  1295  0002BA  B4D8               	btfsc	status,2,c
  1296  0002BC  D77F               	goto	l3377
  1297  0002BE  0A2D               	xorlw	45	; case 39
  1298  0002C0  B4D8               	btfsc	status,2,c
  1299  0002C2  D7CE               	goto	l3381
  1300  0002C4  0A0F               	xorlw	15	; case 40
  1301  0002C6  B4D8               	btfsc	status,2,c
  1302  0002C8  D7A2               	goto	l3379
  1303  0002CA                     l3387:
  1304                           
  1305                           ;main.c: 379: }
  1306                           ;main.c: 382: length = ToMainLow_recvmsg(10, &msgtype, (void *) msgbuffer);
  1307  0002CA  0101               	movlb	1	; () banked
  1308  0002CC  0E01               	movlw	high main@msgtype
  1309  0002CE  0101               	movlb	1	; () banked
  1310  0002D0  0101               	movlb	1	; () banked
  1311  0002D2  6F9B               	movwf	(ToMainLow_recvmsg@msgtype+1)& (0+255),b
  1312  0002D4  0101               	movlb	1	; () banked
  1313  0002D6  0EBC               	movlw	low main@msgtype
  1314  0002D8  0101               	movlb	1	; () banked
  1315  0002DA  0101               	movlb	1	; () banked
  1316  0002DC  6F9A               	movwf	ToMainLow_recvmsg@msgtype& (0+255),b
  1317  0002DE  0101               	movlb	1	; () banked
  1318  0002E0  0E01               	movlw	high main@msgbuffer
  1319  0002E2  0101               	movlb	1	; () banked
  1320  0002E4  0101               	movlb	1	; () banked
  1321  0002E6  6F9D               	movwf	(ToMainLow_recvmsg@data+1)& (0+255),b
  1322  0002E8  0101               	movlb	1	; () banked
  1323  0002EA  0EA7               	movlw	low main@msgbuffer
  1324  0002EC  0101               	movlb	1	; () banked
  1325  0002EE  0101               	movlb	1	; () banked
  1326  0002F0  6F9C               	movwf	ToMainLow_recvmsg@data& (0+255),b
  1327  0002F2  0E0A               	movlw	10
  1328  0002F4  ECB6  F00D         	call	_ToMainLow_recvmsg
  1329  0002F8  0101               	movlb	1	; () banked
  1330  0002FA  0101               	movlb	1	; () banked
  1331  0002FC  6FBB               	movwf	main@length& (0+255),b
  1332                           
  1333                           ; BSR set to: 1
  1334                           ;main.c: 383: if (length < 0) {
  1335  0002FE  0101               	movlb	1	; () banked
  1336  000300  0101               	movlb	1	; () banked
  1337  000302  BFBB               	btfsc	main@length& (0+255),7,b
  1338  000304  D73A               	goto	l3369
  1339  000306  D07B               	goto	l3401
  1340  000308                     l3393:
  1341                           
  1342                           ; BSR set to: 1
  1343                           ;main.c: 391: {
  1344                           ;main.c: 392: timer1_lthread(&t1thread_data, msgtype, length, msgbuffer);
  1345  000308  0101               	movlb	1	; () banked
  1346  00030A  0E01               	movlw	high main@t1thread_data
  1347  00030C  0101               	movlb	1	; () banked
  1348  00030E  0101               	movlb	1	; () banked
  1349  000310  6F9D               	movwf	(timer1_lthread@tptr+1)& (0+255),b
  1350  000312  0101               	movlb	1	; () banked
  1351  000314  0EB9               	movlw	low main@t1thread_data
  1352  000316  0101               	movlb	1	; () banked
  1353  000318  0101               	movlb	1	; () banked
  1354  00031A  6F9C               	movwf	timer1_lthread@tptr& (0+255),b
  1355  00031C  0101               	movlb	1	; () banked
  1356  00031E  0101               	movlb	1	; () banked
  1357  000320  C1BC  F19E         	movff	main@msgtype,timer1_lthread@msgtype
  1358  000324  0101               	movlb	1	; () banked
  1359  000326  0101               	movlb	1	; () banked
  1360  000328  6B9F               	clrf	(timer1_lthread@msgtype+1)& (0+255),b
  1361  00032A  0101               	movlb	1	; () banked
  1362  00032C  0101               	movlb	1	; () banked
  1363  00032E  51BB               	movf	main@length& (0+255),w,b
  1364  000330  0101               	movlb	1	; () banked
  1365  000332  0101               	movlb	1	; () banked
  1366  000334  6FA0               	movwf	timer1_lthread@length& (0+255),b
  1367  000336  0101               	movlb	1	; () banked
  1368  000338  6BA1               	clrf	(timer1_lthread@length+1)& (0+255),b
  1369  00033A  0101               	movlb	1	; () banked
  1370  00033C  BFA0               	btfsc	timer1_lthread@length& (0+255),7,b
  1371  00033E  07A1               	decf	(timer1_lthread@length+1)& (0+255),f,b
  1372  000340  0101               	movlb	1	; () banked
  1373  000342  0E01               	movlw	high main@msgbuffer
  1374  000344  0101               	movlb	1	; () banked
  1375  000346  0101               	movlb	1	; () banked
  1376  000348  6FA3               	movwf	(timer1_lthread@msgbuffer+1)& (0+255),b
  1377  00034A  0101               	movlb	1	; () banked
  1378  00034C  0EA7               	movlw	low main@msgbuffer
  1379  00034E  0101               	movlb	1	; () banked
  1380  000350  0101               	movlb	1	; () banked
  1381  000352  6FA2               	movwf	timer1_lthread@msgbuffer& (0+255),b
  1382  000354  ECC0  F00B         	call	_timer1_lthread	;wreg free
  1383                           
  1384                           ;main.c: 393: break;
  1385  000358  D710               	goto	l3369
  1386  00035A                     l3395:
  1387                           
  1388                           ;main.c: 396: {
  1389                           ;main.c: 397: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1390  00035A  0101               	movlb	1	; () banked
  1391  00035C  0E01               	movlw	high main@uthread_data
  1392  00035E  0101               	movlb	1	; () banked
  1393  000360  0101               	movlb	1	; () banked
  1394  000362  6F8C               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1395  000364  0101               	movlb	1	; () banked
  1396  000366  0EB5               	movlw	low main@uthread_data
  1397  000368  0101               	movlb	1	; () banked
  1398  00036A  0101               	movlb	1	; () banked
  1399  00036C  6F8B               	movwf	uart_lthread@uptr& (0+255),b
  1400  00036E  0101               	movlb	1	; () banked
  1401  000370  0101               	movlb	1	; () banked
  1402  000372  C1BC  F18D         	movff	main@msgtype,uart_lthread@msgtype
  1403  000376  0101               	movlb	1	; () banked
  1404  000378  0101               	movlb	1	; () banked
  1405  00037A  6B8E               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1406  00037C  0101               	movlb	1	; () banked
  1407  00037E  0101               	movlb	1	; () banked
  1408  000380  51BB               	movf	main@length& (0+255),w,b
  1409  000382  0101               	movlb	1	; () banked
  1410  000384  0101               	movlb	1	; () banked
  1411  000386  6F8F               	movwf	uart_lthread@length& (0+255),b
  1412  000388  0101               	movlb	1	; () banked
  1413  00038A  6B90               	clrf	(uart_lthread@length+1)& (0+255),b
  1414  00038C  0101               	movlb	1	; () banked
  1415  00038E  BF8F               	btfsc	uart_lthread@length& (0+255),7,b
  1416  000390  0790               	decf	(uart_lthread@length+1)& (0+255),f,b
  1417  000392  0101               	movlb	1	; () banked
  1418  000394  0E01               	movlw	high main@msgbuffer
  1419  000396  0101               	movlb	1	; () banked
  1420  000398  0101               	movlb	1	; () banked
  1421  00039A  6F92               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1422  00039C  0101               	movlb	1	; () banked
  1423  00039E  0EA7               	movlw	low main@msgbuffer
  1424  0003A0  0101               	movlb	1	; () banked
  1425  0003A2  0101               	movlb	1	; () banked
  1426  0003A4  6F91               	movwf	uart_lthread@msgbuffer& (0+255),b
  1427  0003A6  EC58  F00E         	call	_uart_lthread	;wreg free
  1428                           
  1429                           ;main.c: 398: break;
  1430  0003AA  D6E7               	goto	l3369
  1431  0003AC                     l3397:
  1432                           
  1433                           ;main.c: 401: {
  1434                           ;main.c: 402: uart_lthread(&uthread_data, msgtype, length, msgbuffer);
  1435  0003AC  0101               	movlb	1	; () banked
  1436  0003AE  0E01               	movlw	high main@uthread_data
  1437  0003B0  0101               	movlb	1	; () banked
  1438  0003B2  0101               	movlb	1	; () banked
  1439  0003B4  6F8C               	movwf	(uart_lthread@uptr+1)& (0+255),b
  1440  0003B6  0101               	movlb	1	; () banked
  1441  0003B8  0EB5               	movlw	low main@uthread_data
  1442  0003BA  0101               	movlb	1	; () banked
  1443  0003BC  0101               	movlb	1	; () banked
  1444  0003BE  6F8B               	movwf	uart_lthread@uptr& (0+255),b
  1445  0003C0  0101               	movlb	1	; () banked
  1446  0003C2  0101               	movlb	1	; () banked
  1447  0003C4  C1BC  F18D         	movff	main@msgtype,uart_lthread@msgtype
  1448  0003C8  0101               	movlb	1	; () banked
  1449  0003CA  0101               	movlb	1	; () banked
  1450  0003CC  6B8E               	clrf	(uart_lthread@msgtype+1)& (0+255),b
  1451  0003CE  0101               	movlb	1	; () banked
  1452  0003D0  0101               	movlb	1	; () banked
  1453  0003D2  51BB               	movf	main@length& (0+255),w,b
  1454  0003D4  0101               	movlb	1	; () banked
  1455  0003D6  0101               	movlb	1	; () banked
  1456  0003D8  6F8F               	movwf	uart_lthread@length& (0+255),b
  1457  0003DA  0101               	movlb	1	; () banked
  1458  0003DC  6B90               	clrf	(uart_lthread@length+1)& (0+255),b
  1459  0003DE  0101               	movlb	1	; () banked
  1460  0003E0  BF8F               	btfsc	uart_lthread@length& (0+255),7,b
  1461  0003E2  0790               	decf	(uart_lthread@length+1)& (0+255),f,b
  1462  0003E4  0101               	movlb	1	; () banked
  1463  0003E6  0E01               	movlw	high main@msgbuffer
  1464  0003E8  0101               	movlb	1	; () banked
  1465  0003EA  0101               	movlb	1	; () banked
  1466  0003EC  6F92               	movwf	(uart_lthread@msgbuffer+1)& (0+255),b
  1467  0003EE  0101               	movlb	1	; () banked
  1468  0003F0  0EA7               	movlw	low main@msgbuffer
  1469  0003F2  0101               	movlb	1	; () banked
  1470  0003F4  0101               	movlb	1	; () banked
  1471  0003F6  6F91               	movwf	uart_lthread@msgbuffer& (0+255),b
  1472  0003F8  EC58  F00E         	call	_uart_lthread	;wreg free
  1473                           
  1474                           ;main.c: 403: break;
  1475  0003FC  D6BE               	goto	l3369
  1476  0003FE                     l3401:
  1477  0003FE  0101               	movlb	1	; () banked
  1478  000400  0101               	movlb	1	; () banked
  1479  000402  51BC               	movf	main@msgtype& (0+255),w,b
  1480                           
  1481                           ; Switch size 1, requested type "space"
  1482                           ; Number of cases is 3, Range of values is 11 to 32
  1483                           ; switch strategies available:
  1484                           ; Name         Instructions Cycles
  1485                           ; simple_byte           10     6 (average)
  1486                           ;	Chosen strategy is simple_byte
  1487  000404  0A0B               	xorlw	11	; case 11
  1488  000406  B4D8               	btfsc	status,2,c
  1489  000408  D77F               	goto	l3393
  1490  00040A  0A15               	xorlw	21	; case 30
  1491  00040C  B4D8               	btfsc	status,2,c
  1492  00040E  D7A5               	goto	l3395
  1493  000410  0A3E               	xorlw	62	; case 32
  1494  000412  B4D8               	btfsc	status,2,c
  1495  000414  D7CB               	goto	l3397
  1496  000416  D6B1               	goto	l3369
  1497  000418                     __end_of_main:
  1498                           	opt stack 0
  1499                           tblptru	equ	0xFF8
  1500                           postinc0	equ	0xFEE
  1501                           wreg	equ	0xFE8
  1502                           status	equ	0xFD8
  1503                           
  1504 ;; *************** function _uart_lthread *****************
  1505 ;; Defined at:
  1506 ;;		line 12 in file "../src/uart_thread.c"
  1507 ;; Parameters:    Size  Location     Type
  1508 ;;  uptr            2    9[BANK1 ] PTR struct __uart_thread
  1509 ;;		 -> main@uthread_data(2), 
  1510 ;;  msgtype         2   11[BANK1 ] int 
  1511 ;;  length          2   13[BANK1 ] int 
  1512 ;;  msgbuffer       2   15[BANK1 ] PTR unsigned char 
  1513 ;;		 -> main@msgbuffer(11), 
  1514 ;; Auto vars:     Size  Location     Type
  1515 ;;		None
  1516 ;; Return value:  Size  Location     Type
  1517 ;;                  2    9[BANK1 ] int 
  1518 ;; Registers used:
  1519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1520 ;; Tracked objects:
  1521 ;;		On entry : 0/0
  1522 ;;		On exit  : 0/0
  1523 ;;		Unchanged: 0/0
  1524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1525 ;;      Params:         0       0       8       0       0
  1526 ;;      Locals:         0       0       0       0       0
  1527 ;;      Temps:          0       0       0       0       0
  1528 ;;      Totals:         0       0       8       0       0
  1529 ;;Total ram usage:        8 bytes
  1530 ;; Hardware stack levels used:    1
  1531 ;; Hardware stack levels required when called:   11
  1532 ;; This function calls:
  1533 ;;		_uart_retrieve_buffer
  1534 ;; This function is called by:
  1535 ;;		_main
  1536 ;; This function uses a non-reentrant model
  1537 ;;
  1538                           
  1539                           	psect	text1
  1540  001CB0                     __ptext1:
  1541                           	opt stack 0
  1542  001CB0                     _uart_lthread:
  1543                           	opt stack 18
  1544                           
  1545                           ;uart_thread.c: 13: if (msgtype == 30) {
  1546                           
  1547                           ; BSR set to: 1
  1548                           ;incstack = 0
  1549  001CB0  0101               	movlb	1	; () banked
  1550  001CB2  0101               	movlb	1	; () banked
  1551  001CB4  518D               	movf	uart_lthread@msgtype& (0+255),w,b
  1552  001CB6  0A1E               	xorlw	30
  1553  001CB8  118E               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1554  001CBA  B4D8               	btfsc	status,2,c
  1555  001CBC  0012               	return	
  1556                           
  1557                           ; BSR set to: 1
  1558                           
  1559                           ; BSR set to: 1
  1560                           
  1561                           ; BSR set to: 1
  1562                           ;uart_thread.c: 15: } else if (msgtype == 32) {
  1563  001CBE  0101               	movlb	1	; () banked
  1564  001CC0  0101               	movlb	1	; () banked
  1565  001CC2  518D               	movf	uart_lthread@msgtype& (0+255),w,b
  1566  001CC4  0A20               	xorlw	32
  1567  001CC6  118E               	iorwf	(uart_lthread@msgtype+1)& (0+255),w,b
  1568  001CC8  A4D8               	btfss	status,2,c
  1569  001CCA  0012               	return	
  1570                           
  1571                           ; BSR set to: 1
  1572                           ;uart_thread.c: 17: uart_retrieve_buffer(length, msgbuffer);
  1573  001CCC  C18F  F182         	movff	uart_lthread@length,uart_retrieve_buffer@length
  1574  001CD0  C190  F183         	movff	uart_lthread@length+1,uart_retrieve_buffer@length+1
  1575  001CD4  0101               	movlb	1	; () banked
  1576  001CD6  0101               	movlb	1	; () banked
  1577  001CD8  C192  F185         	movff	uart_lthread@msgbuffer+1,uart_retrieve_buffer@msgbuffer+1
  1578  001CDC  0101               	movlb	1	; () banked
  1579  001CDE  0101               	movlb	1	; () banked
  1580  001CE0  C191  F184         	movff	uart_lthread@msgbuffer,uart_retrieve_buffer@msgbuffer
  1581  001CE4  EC46  F009         	call	_uart_retrieve_buffer	;wreg free
  1582                           
  1583                           ;uart_thread.c: 19: PIE1bits.TX1IE = 0x1;
  1584  001CE8  889D               	bsf	3997,4,c	;volatile
  1585  001CEA  0012               	return	
  1586  001CEC                     __end_of_uart_lthread:
  1587                           	opt stack 0
  1588                           tblptru	equ	0xFF8
  1589                           postinc0	equ	0xFEE
  1590                           wreg	equ	0xFE8
  1591                           status	equ	0xFD8
  1592                           
  1593 ;; *************** function _uart_retrieve_buffer *****************
  1594 ;; Defined at:
  1595 ;;		line 259 in file "../src/my_uart.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;  length          2    0[BANK1 ] int 
  1598 ;;  msgbuffer       2    2[BANK1 ] PTR unsigned char 
  1599 ;;		 -> main@msgbuffer(11), 
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;  i               2    7[BANK1 ] int 
  1602 ;; Return value:  Size  Location     Type
  1603 ;;		None               void
  1604 ;; Registers used:
  1605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1611 ;;      Params:         0       0       4       0       0
  1612 ;;      Locals:         0       0       2       0       0
  1613 ;;      Temps:          0       0       3       0       0
  1614 ;;      Totals:         0       0       9       0       0
  1615 ;;Total ram usage:        9 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; Hardware stack levels required when called:   10
  1618 ;; This function calls:
  1619 ;;		Nothing
  1620 ;; This function is called by:
  1621 ;;		_uart_lthread
  1622 ;; This function uses a non-reentrant model
  1623 ;;
  1624                           
  1625                           	psect	text2
  1626  00128C                     __ptext2:
  1627                           	opt stack 0
  1628  00128C                     _uart_retrieve_buffer:
  1629                           	opt stack 18
  1630                           
  1631                           ;my_uart.c: 261: uc_ptr->Tx_buflen = 0;
  1632                           
  1633                           ;incstack = 0
  1634  00128C  EE20 F014          	lfsr	2,20
  1635  001290  5065               	movf	_uc_ptr,w,c
  1636  001292  26D9               	addwf	fsr2l,f,c
  1637  001294  5066               	movf	_uc_ptr+1,w,c
  1638  001296  22DA               	addwfc	fsr2h,f,c
  1639  001298  0E00               	movlw	0
  1640  00129A  6EDF               	movwf	indf2,c
  1641                           
  1642                           ;my_uart.c: 262: uc_ptr->msg_length = length;
  1643  00129C  EE20 F016          	lfsr	2,22
  1644  0012A0  5065               	movf	_uc_ptr,w,c
  1645  0012A2  26D9               	addwf	fsr2l,f,c
  1646  0012A4  5066               	movf	_uc_ptr+1,w,c
  1647  0012A6  22DA               	addwfc	fsr2h,f,c
  1648  0012A8  0101               	movlb	1	; () banked
  1649  0012AA  C182  FFDF         	movff	uart_retrieve_buffer@length,indf2
  1650                           
  1651                           ; BSR set to: 1
  1652                           ;my_uart.c: 264: int i = 0;
  1653  0012AE  0E00               	movlw	0
  1654  0012B0  0101               	movlb	1	; () banked
  1655  0012B2  0101               	movlb	1	; () banked
  1656  0012B4  6F8A               	movwf	(uart_retrieve_buffer@i+1)& (0+255),b
  1657  0012B6  0E00               	movlw	0
  1658  0012B8  0101               	movlb	1	; () banked
  1659  0012BA  6F89               	movwf	uart_retrieve_buffer@i& (0+255),b
  1660                           
  1661                           ;my_uart.c: 265: for (; i < length + 1; i++) {
  1662  0012BC  D01E               	goto	l3823
  1663  0012BE                     l3819:
  1664                           
  1665                           ; BSR set to: 1
  1666                           ;my_uart.c: 266: uc_ptr->Tx_buffer[i] = msgbuffer[i];
  1667  0012BE  0101               	movlb	1	; () banked
  1668  0012C0  0101               	movlb	1	; () banked
  1669  0012C2  5189               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1670  0012C4  0101               	movlb	1	; () banked
  1671  0012C6  0101               	movlb	1	; () banked
  1672  0012C8  2584               	addwf	uart_retrieve_buffer@msgbuffer& (0+255),w,b
  1673  0012CA  6ED9               	movwf	fsr2l,c
  1674  0012CC  0101               	movlb	1	; () banked
  1675  0012CE  0101               	movlb	1	; () banked
  1676  0012D0  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1677  0012D2  0101               	movlb	1	; () banked
  1678  0012D4  0101               	movlb	1	; () banked
  1679  0012D6  2185               	addwfc	(uart_retrieve_buffer@msgbuffer+1)& (0+255),w,b
  1680  0012D8  6EDA               	movwf	fsr2h,c
  1681  0012DA  0101               	movlb	1	; () banked
  1682  0012DC  0101               	movlb	1	; () banked
  1683  0012DE  5189               	movf	uart_retrieve_buffer@i& (0+255),w,b
  1684  0012E0  2465               	addwf	_uc_ptr,w,c
  1685  0012E2  6EE1               	movwf	fsr1l,c
  1686  0012E4  0101               	movlb	1	; () banked
  1687  0012E6  0101               	movlb	1	; () banked
  1688  0012E8  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1689  0012EA  2066               	addwfc	_uc_ptr+1,w,c
  1690  0012EC  6EE2               	movwf	fsr1h,c
  1691  0012EE  CFDF FFE7          	movff	indf2,indf1
  1692                           
  1693                           ; BSR set to: 1
  1694  0012F2  0101               	movlb	1	; () banked
  1695  0012F4  0101               	movlb	1	; () banked
  1696  0012F6  4B89               	infsnz	uart_retrieve_buffer@i& (0+255),f,b
  1697  0012F8  2B8A               	incf	(uart_retrieve_buffer@i+1)& (0+255),f,b
  1698  0012FA                     l3823:
  1699                           
  1700                           ; BSR set to: 1
  1701  0012FA  0E01               	movlw	1
  1702  0012FC  0101               	movlb	1	; () banked
  1703  0012FE  0101               	movlb	1	; () banked
  1704  001300  2582               	addwf	uart_retrieve_buffer@length& (0+255),w,b
  1705  001302  0101               	movlb	1	; () banked
  1706  001304  6F86               	movwf	??_uart_retrieve_buffer& (0+255),b
  1707  001306  0E00               	movlw	0
  1708  001308  0101               	movlb	1	; () banked
  1709  00130A  0101               	movlb	1	; () banked
  1710  00130C  2183               	addwfc	(uart_retrieve_buffer@length+1)& (0+255),w,b
  1711  00130E  0101               	movlb	1	; () banked
  1712  001310  6F87               	movwf	(??_uart_retrieve_buffer+1)& (0+255),b
  1713  001312  0101               	movlb	1	; () banked
  1714  001314  0101               	movlb	1	; () banked
  1715  001316  518A               	movf	(uart_retrieve_buffer@i+1)& (0+255),w,b
  1716  001318  0A80               	xorlw	128
  1717  00131A  0101               	movlb	1	; () banked
  1718  00131C  6F88               	movwf	(??_uart_retrieve_buffer+2)& (0+255),b
  1719  00131E  5186               	movf	??_uart_retrieve_buffer& (0+255),w,b
  1720  001320  0101               	movlb	1	; () banked
  1721  001322  0101               	movlb	1	; () banked
  1722  001324  5D89               	subwf	uart_retrieve_buffer@i& (0+255),w,b
  1723  001326  0101               	movlb	1	; () banked
  1724  001328  5187               	movf	(??_uart_retrieve_buffer+1)& (0+255),w,b
  1725  00132A  0A80               	xorlw	128
  1726  00132C  0101               	movlb	1	; () banked
  1727  00132E  5988               	subwfb	(??_uart_retrieve_buffer+2)& (0+255),w,b
  1728  001330  B0D8               	btfsc	status,0,c
  1729                           
  1730                           ; BSR set to: 1
  1731                           
  1732                           ; BSR set to: 1
  1733  001332  0012               	return	
  1734  001334  D7C4               	goto	l3819
  1735  001336                     __end_of_uart_retrieve_buffer:
  1736                           	opt stack 0
  1737                           tblptru	equ	0xFF8
  1738                           postinc0	equ	0xFEE
  1739                           wreg	equ	0xFE8
  1740                           indf1	equ	0xFE7
  1741                           fsr1h	equ	0xFE2
  1742                           fsr1l	equ	0xFE1
  1743                           indf2	equ	0xFDF
  1744                           fsr2h	equ	0xFDA
  1745                           fsr2l	equ	0xFD9
  1746                           status	equ	0xFD8
  1747                           
  1748 ;; *************** function _timer1_lthread *****************
  1749 ;; Defined at:
  1750 ;;		line 14 in file "../src/timer1_thread.c"
  1751 ;; Parameters:    Size  Location     Type
  1752 ;;  tptr            2   26[BANK1 ] PTR struct __timer1_thre
  1753 ;;		 -> main@t1thread_data(2), 
  1754 ;;  msgtype         2   28[BANK1 ] int 
  1755 ;;  length          2   30[BANK1 ] int 
  1756 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  1757 ;;		 -> main@msgbuffer(11), 
  1758 ;; Auto vars:     Size  Location     Type
  1759 ;;  retval          1   35[BANK1 ] char 
  1760 ;; Return value:  Size  Location     Type
  1761 ;;                  2   26[BANK1 ] int 
  1762 ;; Registers used:
  1763 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1764 ;; Tracked objects:
  1765 ;;		On entry : 0/0
  1766 ;;		On exit  : 0/0
  1767 ;;		Unchanged: 0/0
  1768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1769 ;;      Params:         0       0       8       0       0
  1770 ;;      Locals:         0       0       1       0       0
  1771 ;;      Temps:          0       0       1       0       0
  1772 ;;      Totals:         0       0      10       0       0
  1773 ;;Total ram usage:       10 bytes
  1774 ;; Hardware stack levels used:    1
  1775 ;; Hardware stack levels required when called:   13
  1776 ;; This function calls:
  1777 ;;		_FromMainHigh_sendmsg
  1778 ;;		___lwmod
  1779 ;; This function is called by:
  1780 ;;		_main
  1781 ;; This function uses a non-reentrant model
  1782 ;;
  1783                           
  1784                           	psect	text3
  1785  001780                     __ptext3:
  1786                           	opt stack 0
  1787  001780                     _timer1_lthread:
  1788                           	opt stack 16
  1789                           
  1790                           ;timer1_thread.c: 15: signed char retval;
  1791                           ;timer1_thread.c: 17: tptr->msgcount++;
  1792                           
  1793                           ; BSR set to: 1
  1794                           ;incstack = 0
  1795  001780  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1796  001784  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1797  001788  2ADE               	incf	postinc2,f,c
  1798  00178A  0E00               	movlw	0
  1799  00178C  22DD               	addwfc	postdec2,f,c
  1800                           
  1801                           ;timer1_thread.c: 20: if ((tptr->msgcount % 10) == 9) {
  1802  00178E  C19C  FFD9         	movff	timer1_lthread@tptr,fsr2l
  1803  001792  C19D  FFDA         	movff	timer1_lthread@tptr+1,fsr2h
  1804  001796  0101               	movlb	1	; () banked
  1805  001798  CFDE F182          	movff	postinc2,___lwmod@dividend
  1806  00179C  0101               	movlb	1	; () banked
  1807  00179E  CFDD F183          	movff	postdec2,___lwmod@dividend+1
  1808  0017A2  0E00               	movlw	0
  1809  0017A4  0101               	movlb	1	; () banked
  1810  0017A6  0101               	movlb	1	; () banked
  1811  0017A8  6F85               	movwf	(___lwmod@divisor+1)& (0+255),b
  1812  0017AA  0E0A               	movlw	10
  1813  0017AC  0101               	movlb	1	; () banked
  1814  0017AE  6F84               	movwf	___lwmod@divisor& (0+255),b
  1815  0017B0  EC39  F00A         	call	___lwmod	;wreg free
  1816  0017B4  0101               	movlb	1	; () banked
  1817  0017B6  0101               	movlb	1	; () banked
  1818  0017B8  5182               	movf	?___lwmod& (0+255),w,b
  1819  0017BA  0A09               	xorlw	9
  1820  0017BC  0101               	movlb	1	; () banked
  1821  0017BE  1183               	iorwf	(?___lwmod+1)& (0+255),w,b
  1822  0017C0  A4D8               	btfss	status,2,c
  1823  0017C2  0012               	return	
  1824                           
  1825                           ; BSR set to: 1
  1826                           ;timer1_thread.c: 21: retval = FromMainHigh_sendmsg(sizeof (tptr->msgcount), 20, (void *
      +                          ) &(tptr->msgcount));
  1827  0017C4  0101               	movlb	1	; () banked
  1828  0017C6  6FA4               	movwf	??_timer1_lthread& (0+255),b
  1829  0017C8  0E14               	movlw	20
  1830  0017CA  0101               	movlb	1	; () banked
  1831  0017CC  0101               	movlb	1	; () banked
  1832  0017CE  6F98               	movwf	FromMainHigh_sendmsg@msgtype& (0+255),b
  1833  0017D0  0101               	movlb	1	; () banked
  1834  0017D2  51A4               	movf	??_timer1_lthread& (0+255),w,b
  1835  0017D4  0101               	movlb	1	; () banked
  1836  0017D6  0101               	movlb	1	; () banked
  1837  0017D8  C19D  F19A         	movff	timer1_lthread@tptr+1,FromMainHigh_sendmsg@data+1
  1838  0017DC  0101               	movlb	1	; () banked
  1839  0017DE  0101               	movlb	1	; () banked
  1840  0017E0  C19C  F199         	movff	timer1_lthread@tptr,FromMainHigh_sendmsg@data
  1841  0017E4  0E02               	movlw	2
  1842  0017E6  ECAF  F00E         	call	_FromMainHigh_sendmsg
  1843  0017EA  0101               	movlb	1	; () banked
  1844  0017EC  0101               	movlb	1	; () banked
  1845  0017EE  6FA5               	movwf	timer1_lthread@retval& (0+255),b
  1846  0017F0  0012               	return	
  1847  0017F2                     __end_of_timer1_lthread:
  1848                           	opt stack 0
  1849                           tblptru	equ	0xFF8
  1850                           postinc0	equ	0xFEE
  1851                           wreg	equ	0xFE8
  1852                           indf1	equ	0xFE7
  1853                           fsr1h	equ	0xFE2
  1854                           fsr1l	equ	0xFE1
  1855                           indf2	equ	0xFDF
  1856                           postinc2	equ	0xFDE
  1857                           postdec2	equ	0xFDD
  1858                           fsr2h	equ	0xFDA
  1859                           fsr2l	equ	0xFD9
  1860                           status	equ	0xFD8
  1861                           
  1862 ;; *************** function ___lwmod *****************
  1863 ;; Defined at:
  1864 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;  dividend        2    0[BANK1 ] unsigned int 
  1867 ;;  divisor         2    2[BANK1 ] unsigned int 
  1868 ;; Auto vars:     Size  Location     Type
  1869 ;;  counter         1    5[BANK1 ] unsigned char 
  1870 ;; Return value:  Size  Location     Type
  1871 ;;                  2    0[BANK1 ] unsigned int 
  1872 ;; Registers used:
  1873 ;;		wreg, status,2, status,0
  1874 ;; Tracked objects:
  1875 ;;		On entry : 0/0
  1876 ;;		On exit  : 0/0
  1877 ;;		Unchanged: 0/0
  1878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  1879 ;;      Params:         0       0       4       0       0
  1880 ;;      Locals:         0       0       1       0       0
  1881 ;;      Temps:          0       0       1       0       0
  1882 ;;      Totals:         0       0       6       0       0
  1883 ;;Total ram usage:        6 bytes
  1884 ;; Hardware stack levels used:    1
  1885 ;; Hardware stack levels required when called:   10
  1886 ;; This function calls:
  1887 ;;		Nothing
  1888 ;; This function is called by:
  1889 ;;		_timer1_lthread
  1890 ;; This function uses a non-reentrant model
  1891 ;;
  1892                           
  1893                           	psect	text4
  1894  001472                     __ptext4:
  1895                           	opt stack 0
  1896  001472                     ___lwmod:
  1897                           	opt stack 18
  1898                           
  1899                           ; BSR set to: 1
  1900                           ;incstack = 0
  1901  001472  0101               	movlb	1	; () banked
  1902  001474  0101               	movlb	1	; () banked
  1903  001476  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1904  001478  1184               	iorwf	___lwmod@divisor& (0+255),w,b
  1905  00147A  B4D8               	btfsc	status,2,c
  1906  00147C  D03A               	goto	l1189
  1907                           
  1908                           ; BSR set to: 1
  1909  00147E  0101               	movlb	1	; () banked
  1910  001480  6F86               	movwf	??___lwmod& (0+255),b
  1911  001482  0E01               	movlw	1
  1912  001484  0101               	movlb	1	; () banked
  1913  001486  0101               	movlb	1	; () banked
  1914  001488  6F87               	movwf	___lwmod@counter& (0+255),b
  1915  00148A  0101               	movlb	1	; () banked
  1916  00148C  5186               	movf	??___lwmod& (0+255),w,b
  1917  00148E  D009               	goto	l3833
  1918  001490                     l3831:
  1919                           
  1920                           ; BSR set to: 1
  1921  001490  0101               	movlb	1	; () banked
  1922  001492  0101               	movlb	1	; () banked
  1923  001494  0101               	movlb	1	; () banked
  1924  001496  90D8               	bcf	status,0,c
  1925  001498  3784               	rlcf	___lwmod@divisor& (0+255),f,b
  1926  00149A  3785               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  1927  00149C  0101               	movlb	1	; () banked
  1928  00149E  0101               	movlb	1	; () banked
  1929  0014A0  2B87               	incf	___lwmod@counter& (0+255),f,b
  1930  0014A2                     l3833:
  1931                           
  1932                           ; BSR set to: 1
  1933  0014A2  0101               	movlb	1	; () banked
  1934  0014A4  0101               	movlb	1	; () banked
  1935  0014A6  AF85               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  1936  0014A8  D7F3               	goto	l3831
  1937  0014AA                     l3835:
  1938                           
  1939                           ; BSR set to: 1
  1940  0014AA  0101               	movlb	1	; () banked
  1941  0014AC  0101               	movlb	1	; () banked
  1942  0014AE  5184               	movf	___lwmod@divisor& (0+255),w,b
  1943  0014B0  0101               	movlb	1	; () banked
  1944  0014B2  0101               	movlb	1	; () banked
  1945  0014B4  5D82               	subwf	___lwmod@dividend& (0+255),w,b
  1946  0014B6  0101               	movlb	1	; () banked
  1947  0014B8  0101               	movlb	1	; () banked
  1948  0014BA  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1949  0014BC  0101               	movlb	1	; () banked
  1950  0014BE  0101               	movlb	1	; () banked
  1951  0014C0  5983               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  1952  0014C2  A0D8               	btfss	status,0,c
  1953  0014C4  D00C               	goto	l3839
  1954                           
  1955                           ; BSR set to: 1
  1956  0014C6  0101               	movlb	1	; () banked
  1957  0014C8  0101               	movlb	1	; () banked
  1958  0014CA  5184               	movf	___lwmod@divisor& (0+255),w,b
  1959  0014CC  0101               	movlb	1	; () banked
  1960  0014CE  0101               	movlb	1	; () banked
  1961  0014D0  5F82               	subwf	___lwmod@dividend& (0+255),f,b
  1962  0014D2  0101               	movlb	1	; () banked
  1963  0014D4  0101               	movlb	1	; () banked
  1964  0014D6  5185               	movf	(___lwmod@divisor+1)& (0+255),w,b
  1965  0014D8  0101               	movlb	1	; () banked
  1966  0014DA  0101               	movlb	1	; () banked
  1967  0014DC  5B83               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  1968  0014DE                     l3839:
  1969                           
  1970                           ; BSR set to: 1
  1971  0014DE  0101               	movlb	1	; () banked
  1972  0014E0  0101               	movlb	1	; () banked
  1973  0014E2  0101               	movlb	1	; () banked
  1974  0014E4  90D8               	bcf	status,0,c
  1975  0014E6  3385               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  1976  0014E8  3384               	rrcf	___lwmod@divisor& (0+255),f,b
  1977                           
  1978                           ; BSR set to: 1
  1979  0014EA  0101               	movlb	1	; () banked
  1980  0014EC  0101               	movlb	1	; () banked
  1981  0014EE  2F87               	decfsz	___lwmod@counter& (0+255),f,b
  1982  0014F0  D7DC               	goto	l3835
  1983  0014F2                     l1189:
  1984                           
  1985                           ; BSR set to: 1
  1986  0014F2  C182  F182         	movff	___lwmod@dividend,?___lwmod
  1987  0014F6  C183  F183         	movff	___lwmod@dividend+1,?___lwmod+1
  1988                           
  1989                           ; BSR set to: 1
  1990  0014FA  0012               	return	
  1991  0014FC                     __end_of___lwmod:
  1992                           	opt stack 0
  1993                           tblptru	equ	0xFF8
  1994                           postinc0	equ	0xFEE
  1995                           wreg	equ	0xFE8
  1996                           indf1	equ	0xFE7
  1997                           fsr1h	equ	0xFE2
  1998                           fsr1l	equ	0xFE1
  1999                           indf2	equ	0xFDF
  2000                           postinc2	equ	0xFDE
  2001                           postdec2	equ	0xFDD
  2002                           fsr2h	equ	0xFDA
  2003                           fsr2l	equ	0xFD9
  2004                           status	equ	0xFD8
  2005                           
  2006 ;; *************** function _FromMainHigh_sendmsg *****************
  2007 ;; Defined at:
  2008 ;;		line 174 in file "../src/messages.c"
  2009 ;; Parameters:    Size  Location     Type
  2010 ;;  length          1    wreg     unsigned char 
  2011 ;;  msgtype         1   22[BANK1 ] unsigned char 
  2012 ;;  data            2   23[BANK1 ] PTR void 
  2013 ;;		 -> main@t1thread_data(2), 
  2014 ;; Auto vars:     Size  Location     Type
  2015 ;;  length          1   25[BANK1 ] unsigned char 
  2016 ;; Return value:  Size  Location     Type
  2017 ;;                  1    wreg      char 
  2018 ;; Registers used:
  2019 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2020 ;; Tracked objects:
  2021 ;;		On entry : 0/0
  2022 ;;		On exit  : 0/0
  2023 ;;		Unchanged: 0/0
  2024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2025 ;;      Params:         0       0       3       0       0
  2026 ;;      Locals:         0       0       1       0       0
  2027 ;;      Temps:          0       0       0       0       0
  2028 ;;      Totals:         0       0       4       0       0
  2029 ;;Total ram usage:        4 bytes
  2030 ;; Hardware stack levels used:    1
  2031 ;; Hardware stack levels required when called:   12
  2032 ;; This function calls:
  2033 ;;		_send_msg
  2034 ;; This function is called by:
  2035 ;;		_timer1_lthread
  2036 ;; This function uses a non-reentrant model
  2037 ;;
  2038                           
  2039                           	psect	text5
  2040  001D5E                     __ptext5:
  2041                           	opt stack 0
  2042  001D5E                     _FromMainHigh_sendmsg:
  2043                           	opt stack 16
  2044                           
  2045                           ; BSR set to: 1
  2046                           ;incstack = 0
  2047                           ;FromMainHigh_sendmsg@length stored from wreg
  2048  001D5E  CFE8 F19B          	movff	wreg,FromMainHigh_sendmsg@length
  2049                           
  2050                           ;messages.c: 180: return (send_msg(&FromMainHigh_MQ, length, msgtype, data));
  2051  001D62  0102               	movlb	2	; () banked
  2052  001D64  0E02               	movlw	high _FromMainHigh_MQ
  2053  001D66  0101               	movlb	1	; () banked
  2054  001D68  0101               	movlb	1	; () banked
  2055  001D6A  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  2056  001D6C  0102               	movlb	2	; () banked
  2057  001D6E  0E00               	movlw	low _FromMainHigh_MQ
  2058  001D70  0101               	movlb	1	; () banked
  2059  001D72  0101               	movlb	1	; () banked
  2060  001D74  6F8C               	movwf	send_msg@qptr& (0+255),b
  2061  001D76  C19B  F18E         	movff	FromMainHigh_sendmsg@length,send_msg@length
  2062  001D7A  C198  F18F         	movff	FromMainHigh_sendmsg@msgtype,send_msg@msgtype
  2063  001D7E  0101               	movlb	1	; () banked
  2064  001D80  0101               	movlb	1	; () banked
  2065  001D82  C19A  F191         	movff	FromMainHigh_sendmsg@data+1,send_msg@data+1
  2066  001D86  0101               	movlb	1	; () banked
  2067  001D88  0101               	movlb	1	; () banked
  2068  001D8A  C199  F190         	movff	FromMainHigh_sendmsg@data,send_msg@data
  2069  001D8E  EC65  F007         	call	_send_msg	;wreg free
  2070  001D92  0012               	return	
  2071  001D94                     __end_of_FromMainHigh_sendmsg:
  2072                           	opt stack 0
  2073                           tblptru	equ	0xFF8
  2074                           postinc0	equ	0xFEE
  2075                           wreg	equ	0xFE8
  2076                           indf1	equ	0xFE7
  2077                           fsr1h	equ	0xFE2
  2078                           fsr1l	equ	0xFE1
  2079                           indf2	equ	0xFDF
  2080                           postinc2	equ	0xFDE
  2081                           postdec2	equ	0xFDD
  2082                           fsr2h	equ	0xFDA
  2083                           fsr2l	equ	0xFD9
  2084                           status	equ	0xFD8
  2085                           
  2086 ;; *************** function _timer0_lthread *****************
  2087 ;; Defined at:
  2088 ;;		line 9 in file "../src/timer0_thread.c"
  2089 ;; Parameters:    Size  Location     Type
  2090 ;;  tptr            2    0[BANK1 ] PTR struct __timer0_thre
  2091 ;;		 -> main@t0thread_data(2), 
  2092 ;;  msgtype         2    2[BANK1 ] int 
  2093 ;;  length          2    4[BANK1 ] int 
  2094 ;;  msgbuffer       2    6[BANK1 ] PTR unsigned char 
  2095 ;;		 -> main@msgbuffer(11), 
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;  msgval          2    8[BANK1 ] PTR unsigned int 
  2098 ;;		 -> main@msgbuffer(11), 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  2    0[BANK1 ] int 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2108 ;;      Params:         0       0       8       0       0
  2109 ;;      Locals:         0       0       2       0       0
  2110 ;;      Temps:          0       0       0       0       0
  2111 ;;      Totals:         0       0      10       0       0
  2112 ;;Total ram usage:       10 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:   10
  2115 ;; This function calls:
  2116 ;;		Nothing
  2117 ;; This function is called by:
  2118 ;;		_main
  2119 ;; This function uses a non-reentrant model
  2120 ;;
  2121                           
  2122                           	psect	text6
  2123  001F58                     __ptext6:
  2124                           	opt stack 0
  2125  001F58                     _timer0_lthread:
  2126                           	opt stack 19
  2127                           
  2128                           ;timer0_thread.c: 10: unsigned int *msgval;
  2129                           ;timer0_thread.c: 12: msgval = (unsigned int *) msgbuffer;
  2130                           
  2131                           ;incstack = 0
  2132  001F58  0101               	movlb	1	; () banked
  2133  001F5A  0101               	movlb	1	; () banked
  2134  001F5C  C189  F18B         	movff	timer0_lthread@msgbuffer+1,timer0_lthread@msgval+1
  2135  001F60  0101               	movlb	1	; () banked
  2136  001F62  0101               	movlb	1	; () banked
  2137  001F64  C188  F18A         	movff	timer0_lthread@msgbuffer,timer0_lthread@msgval
  2138                           
  2139                           ; BSR set to: 1
  2140  001F68  0012               	return	
  2141  001F6A                     __end_of_timer0_lthread:
  2142                           	opt stack 0
  2143                           tblptru	equ	0xFF8
  2144                           postinc0	equ	0xFEE
  2145                           wreg	equ	0xFE8
  2146                           indf1	equ	0xFE7
  2147                           fsr1h	equ	0xFE2
  2148                           fsr1l	equ	0xFE1
  2149                           indf2	equ	0xFDF
  2150                           postinc2	equ	0xFDE
  2151                           postdec2	equ	0xFDD
  2152                           fsr2h	equ	0xFDA
  2153                           fsr2l	equ	0xFD9
  2154                           status	equ	0xFD8
  2155                           
  2156 ;; *************** function _init_uart_recv *****************
  2157 ;; Defined at:
  2158 ;;		line 252 in file "../src/my_uart.c"
  2159 ;; Parameters:    Size  Location     Type
  2160 ;;  uc              2    0[BANK1 ] PTR struct __uart_comm
  2161 ;;		 -> main@uc(23), 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;		None
  2164 ;; Return value:  Size  Location     Type
  2165 ;;		None               void
  2166 ;; Registers used:
  2167 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2173 ;;      Params:         0       0       2       0       0
  2174 ;;      Locals:         0       0       0       0       0
  2175 ;;      Temps:          0       0       0       0       0
  2176 ;;      Totals:         0       0       2       0       0
  2177 ;;Total ram usage:        2 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:   10
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_main
  2184 ;; This function uses a non-reentrant model
  2185 ;;
  2186                           
  2187                           	psect	text7
  2188  001C72                     __ptext7:
  2189                           	opt stack 0
  2190  001C72                     _init_uart_recv:
  2191                           	opt stack 19
  2192                           
  2193                           ;my_uart.c: 253: uc_ptr = uc;
  2194                           
  2195                           ; BSR set to: 1
  2196                           ;incstack = 0
  2197  001C72  0101               	movlb	1	; () banked
  2198  001C74  C183  F066         	movff	init_uart_recv@uc+1,_uc_ptr+1
  2199  001C78  0101               	movlb	1	; () banked
  2200  001C7A  C182  F065         	movff	init_uart_recv@uc,_uc_ptr
  2201                           
  2202                           ; BSR set to: 1
  2203                           ;my_uart.c: 254: uc_ptr->Tx_buflen = 0;
  2204  001C7E  EE20 F014          	lfsr	2,20
  2205  001C82  5065               	movf	_uc_ptr,w,c
  2206  001C84  26D9               	addwf	fsr2l,f,c
  2207  001C86  5066               	movf	_uc_ptr+1,w,c
  2208  001C88  22DA               	addwfc	fsr2h,f,c
  2209  001C8A  0E00               	movlw	0
  2210  001C8C  6EDF               	movwf	indf2,c
  2211                           
  2212                           ; BSR set to: 1
  2213                           ;my_uart.c: 255: uc_ptr->Rx_buflen = 0;
  2214  001C8E  EE20 F015          	lfsr	2,21
  2215  001C92  5065               	movf	_uc_ptr,w,c
  2216  001C94  26D9               	addwf	fsr2l,f,c
  2217  001C96  5066               	movf	_uc_ptr+1,w,c
  2218  001C98  22DA               	addwfc	fsr2h,f,c
  2219  001C9A  0E00               	movlw	0
  2220  001C9C  6EDF               	movwf	indf2,c
  2221                           
  2222                           ; BSR set to: 1
  2223                           ;my_uart.c: 256: uc_ptr->msg_length = 0;
  2224  001C9E  EE20 F016          	lfsr	2,22
  2225  001CA2  5065               	movf	_uc_ptr,w,c
  2226  001CA4  26D9               	addwf	fsr2l,f,c
  2227  001CA6  5066               	movf	_uc_ptr+1,w,c
  2228  001CA8  22DA               	addwfc	fsr2h,f,c
  2229  001CAA  0E00               	movlw	0
  2230  001CAC  6EDF               	movwf	indf2,c
  2231                           
  2232                           ; BSR set to: 1
  2233  001CAE  0012               	return	
  2234  001CB0                     __end_of_init_uart_recv:
  2235                           	opt stack 0
  2236                           tblptru	equ	0xFF8
  2237                           postinc0	equ	0xFEE
  2238                           wreg	equ	0xFE8
  2239                           indf1	equ	0xFE7
  2240                           fsr1h	equ	0xFE2
  2241                           fsr1l	equ	0xFE1
  2242                           indf2	equ	0xFDF
  2243                           postinc2	equ	0xFDE
  2244                           postdec2	equ	0xFDD
  2245                           fsr2h	equ	0xFDA
  2246                           fsr2l	equ	0xFD9
  2247                           status	equ	0xFD8
  2248                           
  2249 ;; *************** function _init_timer1_lthread *****************
  2250 ;; Defined at:
  2251 ;;		line 6 in file "../src/timer1_thread.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;  tptr            2    0[BANK1 ] PTR struct __timer1_thre
  2254 ;;		 -> main@t1thread_data(2), 
  2255 ;; Auto vars:     Size  Location     Type
  2256 ;;		None
  2257 ;; Return value:  Size  Location     Type
  2258 ;;		None               void
  2259 ;; Registers used:
  2260 ;;		wreg, fsr2l, fsr2h
  2261 ;; Tracked objects:
  2262 ;;		On entry : 0/0
  2263 ;;		On exit  : 0/0
  2264 ;;		Unchanged: 0/0
  2265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2266 ;;      Params:         0       0       2       0       0
  2267 ;;      Locals:         0       0       0       0       0
  2268 ;;      Temps:          0       0       0       0       0
  2269 ;;      Totals:         0       0       2       0       0
  2270 ;;Total ram usage:        2 bytes
  2271 ;; Hardware stack levels used:    1
  2272 ;; Hardware stack levels required when called:   10
  2273 ;; This function calls:
  2274 ;;		Nothing
  2275 ;; This function is called by:
  2276 ;;		_main
  2277 ;; This function uses a non-reentrant model
  2278 ;;
  2279                           
  2280                           	psect	text8
  2281  001F6A                     __ptext8:
  2282                           	opt stack 0
  2283  001F6A                     _init_timer1_lthread:
  2284                           	opt stack 19
  2285                           
  2286                           ;timer1_thread.c: 7: tptr->msgcount = 0;
  2287                           
  2288                           ; BSR set to: 1
  2289                           ;incstack = 0
  2290  001F6A  C182  FFD9         	movff	init_timer1_lthread@tptr,fsr2l
  2291  001F6E  C183  FFDA         	movff	init_timer1_lthread@tptr+1,fsr2h
  2292  001F72  0E00               	movlw	0
  2293  001F74  6EDE               	movwf	postinc2,c
  2294  001F76  0E00               	movlw	0
  2295  001F78  6EDD               	movwf	postdec2,c
  2296  001F7A  0012               	return	
  2297  001F7C                     __end_of_init_timer1_lthread:
  2298                           	opt stack 0
  2299                           tblptru	equ	0xFF8
  2300                           postinc0	equ	0xFEE
  2301                           wreg	equ	0xFE8
  2302                           indf1	equ	0xFE7
  2303                           fsr1h	equ	0xFE2
  2304                           fsr1l	equ	0xFE1
  2305                           indf2	equ	0xFDF
  2306                           postinc2	equ	0xFDE
  2307                           postdec2	equ	0xFDD
  2308                           fsr2h	equ	0xFDA
  2309                           fsr2l	equ	0xFD9
  2310                           status	equ	0xFD8
  2311                           
  2312 ;; *************** function _init_queues *****************
  2313 ;; Defined at:
  2314 ;;		line 194 in file "../src/messages.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;		None               void
  2321 ;; Registers used:
  2322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2328 ;;      Params:         0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0
  2330 ;;      Temps:          0       0       1       0       0
  2331 ;;      Totals:         0       0       1       0       0
  2332 ;;Total ram usage:        1 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; Hardware stack levels required when called:   11
  2335 ;; This function calls:
  2336 ;;		_init_queue
  2337 ;; This function is called by:
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           	psect	text9
  2343  0017F2                     __ptext9:
  2344                           	opt stack 0
  2345  0017F2                     _init_queues:
  2346                           	opt stack 18
  2347                           
  2348                           ;messages.c: 195: MQ_Main_Willing_to_block = 0;
  2349                           
  2350                           ;incstack = 0
  2351  0017F2  0101               	movlb	1	; () banked
  2352  0017F4  6F86               	movwf	??_init_queues& (0+255),b
  2353  0017F6  0E00               	movlw	0
  2354  0017F8  6E58               	movwf	_MQ_Main_Willing_to_block,c
  2355  0017FA  0101               	movlb	1	; () banked
  2356  0017FC  5186               	movf	??_init_queues& (0+255),w,b
  2357                           
  2358                           ; BSR set to: 1
  2359                           ;messages.c: 196: init_queue(&ToMainLow_MQ);
  2360  0017FE  0101               	movlb	1	; () banked
  2361  001800  0E01               	movlw	high _ToMainLow_MQ
  2362  001802  0101               	movlb	1	; () banked
  2363  001804  0101               	movlb	1	; () banked
  2364  001806  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2365  001808  0101               	movlb	1	; () banked
  2366  00180A  0E4C               	movlw	low _ToMainLow_MQ
  2367  00180C  0101               	movlb	1	; () banked
  2368  00180E  0101               	movlb	1	; () banked
  2369  001810  6F82               	movwf	init_queue@qptr& (0+255),b
  2370  001812  EC83  F00B         	call	_init_queue	;wreg free
  2371                           
  2372                           ;messages.c: 197: init_queue(&ToMainHigh_MQ);
  2373  001816  0100               	movlb	0	; () banked
  2374  001818  0E00               	movlw	high _ToMainHigh_MQ
  2375  00181A  0101               	movlb	1	; () banked
  2376  00181C  0101               	movlb	1	; () banked
  2377  00181E  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2378  001820  0100               	movlb	0	; () banked
  2379  001822  0E80               	movlw	low _ToMainHigh_MQ
  2380  001824  0101               	movlb	1	; () banked
  2381  001826  0101               	movlb	1	; () banked
  2382  001828  6F82               	movwf	init_queue@qptr& (0+255),b
  2383  00182A  EC83  F00B         	call	_init_queue	;wreg free
  2384                           
  2385                           ;messages.c: 198: init_queue(&FromMainLow_MQ);
  2386  00182E  0101               	movlb	1	; () banked
  2387  001830  0E01               	movlw	high _FromMainLow_MQ
  2388  001832  0101               	movlb	1	; () banked
  2389  001834  0101               	movlb	1	; () banked
  2390  001836  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2391  001838  0101               	movlb	1	; () banked
  2392  00183A  0E16               	movlw	low _FromMainLow_MQ
  2393  00183C  0101               	movlb	1	; () banked
  2394  00183E  0101               	movlb	1	; () banked
  2395  001840  6F82               	movwf	init_queue@qptr& (0+255),b
  2396  001842  EC83  F00B         	call	_init_queue	;wreg free
  2397                           
  2398                           ;messages.c: 199: init_queue(&FromMainHigh_MQ);
  2399  001846  0102               	movlb	2	; () banked
  2400  001848  0E02               	movlw	high _FromMainHigh_MQ
  2401  00184A  0101               	movlb	1	; () banked
  2402  00184C  0101               	movlb	1	; () banked
  2403  00184E  6F83               	movwf	(init_queue@qptr+1)& (0+255),b
  2404  001850  0102               	movlb	2	; () banked
  2405  001852  0E00               	movlw	low _FromMainHigh_MQ
  2406  001854  0101               	movlb	1	; () banked
  2407  001856  0101               	movlb	1	; () banked
  2408  001858  6F82               	movwf	init_queue@qptr& (0+255),b
  2409  00185A  EC83  F00B         	call	_init_queue	;wreg free
  2410  00185E  0012               	return	
  2411  001860                     __end_of_init_queues:
  2412                           	opt stack 0
  2413                           tblptru	equ	0xFF8
  2414                           postinc0	equ	0xFEE
  2415                           wreg	equ	0xFE8
  2416                           indf1	equ	0xFE7
  2417                           fsr1h	equ	0xFE2
  2418                           fsr1l	equ	0xFE1
  2419                           indf2	equ	0xFDF
  2420                           postinc2	equ	0xFDE
  2421                           postdec2	equ	0xFDD
  2422                           fsr2h	equ	0xFDA
  2423                           fsr2l	equ	0xFD9
  2424                           status	equ	0xFD8
  2425                           
  2426 ;; *************** function _init_queue *****************
  2427 ;; Defined at:
  2428 ;;		line 14 in file "../src/messages.c"
  2429 ;; Parameters:    Size  Location     Type
  2430 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  2431 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  2432 ;; Auto vars:     Size  Location     Type
  2433 ;;  i               1    3[BANK1 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;		None               void
  2436 ;; Registers used:
  2437 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2443 ;;      Params:         0       0       2       0       0
  2444 ;;      Locals:         0       0       1       0       0
  2445 ;;      Temps:          0       0       1       0       0
  2446 ;;      Totals:         0       0       4       0       0
  2447 ;;Total ram usage:        4 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:   10
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_init_queues
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           	psect	text10
  2458  001706                     __ptext10:
  2459                           	opt stack 0
  2460  001706                     _init_queue:
  2461                           	opt stack 18
  2462                           
  2463                           ;messages.c: 15: unsigned char i;
  2464                           ;messages.c: 17: qptr->cur_write_ind = 0;
  2465                           
  2466                           ;incstack = 0
  2467  001706  0101               	movlb	1	; () banked
  2468  001708  EE20 F034          	lfsr	2,52
  2469  00170C  0101               	movlb	1	; () banked
  2470  00170E  5182               	movf	init_queue@qptr& (0+255),w,b
  2471  001710  26D9               	addwf	fsr2l,f,c
  2472  001712  0101               	movlb	1	; () banked
  2473  001714  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  2474  001716  22DA               	addwfc	fsr2h,f,c
  2475  001718  0E00               	movlw	0
  2476  00171A  6EDF               	movwf	indf2,c
  2477                           
  2478                           ;messages.c: 18: qptr->cur_read_ind = 0;
  2479  00171C  0101               	movlb	1	; () banked
  2480  00171E  EE20 F035          	lfsr	2,53
  2481  001722  0101               	movlb	1	; () banked
  2482  001724  5182               	movf	init_queue@qptr& (0+255),w,b
  2483  001726  26D9               	addwf	fsr2l,f,c
  2484  001728  0101               	movlb	1	; () banked
  2485  00172A  5183               	movf	(init_queue@qptr+1)& (0+255),w,b
  2486  00172C  22DA               	addwfc	fsr2h,f,c
  2487  00172E  0E00               	movlw	0
  2488  001730  6EDF               	movwf	indf2,c
  2489                           
  2490                           ; BSR set to: 1
  2491                           ;messages.c: 19: for (i = 0; i < 4; i++) {
  2492  001732  0101               	movlb	1	; () banked
  2493  001734  6F84               	movwf	??_init_queue& (0+255),b
  2494  001736  0E00               	movlw	0
  2495  001738  0101               	movlb	1	; () banked
  2496  00173A  0101               	movlb	1	; () banked
  2497  00173C  6F85               	movwf	init_queue@i& (0+255),b
  2498  00173E  0101               	movlb	1	; () banked
  2499  001740  5184               	movf	??_init_queue& (0+255),w,b
  2500                           
  2501                           ; BSR set to: 1
  2502  001742  0E03               	movlw	3
  2503  001744  0101               	movlb	1	; () banked
  2504  001746  0101               	movlb	1	; () banked
  2505  001748  6585               	cpfsgt	init_queue@i& (0+255),b
  2506  00174A  D001               	goto	l3597
  2507  00174C  0012               	return	
  2508  00174E                     l3597:
  2509                           
  2510                           ; BSR set to: 1
  2511                           ;messages.c: 20: qptr->queue[i].full = 0;
  2512  00174E  0101               	movlb	1	; () banked
  2513  001750  0101               	movlb	1	; () banked
  2514  001752  5185               	movf	init_queue@i& (0+255),w,b
  2515  001754  0D0D               	mullw	13
  2516  001756  50F3               	movf	prodl,w,c
  2517  001758  0101               	movlb	1	; () banked
  2518  00175A  0101               	movlb	1	; () banked
  2519  00175C  2582               	addwf	init_queue@qptr& (0+255),w,b
  2520  00175E  6ED9               	movwf	fsr2l,c
  2521  001760  50F4               	movf	prodh,w,c
  2522  001762  0101               	movlb	1	; () banked
  2523  001764  0101               	movlb	1	; () banked
  2524  001766  2183               	addwfc	(init_queue@qptr+1)& (0+255),w,b
  2525  001768  6EDA               	movwf	fsr2h,c
  2526  00176A  0E00               	movlw	0
  2527  00176C  6EDF               	movwf	indf2,c
  2528                           
  2529                           ; BSR set to: 1
  2530  00176E  0101               	movlb	1	; () banked
  2531  001770  0101               	movlb	1	; () banked
  2532  001772  2B85               	incf	init_queue@i& (0+255),f,b
  2533                           
  2534                           ; BSR set to: 1
  2535  001774  0E03               	movlw	3
  2536  001776  0101               	movlb	1	; () banked
  2537  001778  0101               	movlb	1	; () banked
  2538  00177A  6585               	cpfsgt	init_queue@i& (0+255),b
  2539  00177C  D7E8               	goto	l3597
  2540  00177E  0012               	return	
  2541  001780                     __end_of_init_queue:
  2542                           	opt stack 0
  2543                           tblptru	equ	0xFF8
  2544                           prodh	equ	0xFF4
  2545                           prodl	equ	0xFF3
  2546                           postinc0	equ	0xFEE
  2547                           wreg	equ	0xFE8
  2548                           indf1	equ	0xFE7
  2549                           fsr1h	equ	0xFE2
  2550                           fsr1l	equ	0xFE1
  2551                           indf2	equ	0xFDF
  2552                           postinc2	equ	0xFDE
  2553                           postdec2	equ	0xFDD
  2554                           fsr2h	equ	0xFDA
  2555                           fsr2l	equ	0xFD9
  2556                           status	equ	0xFD8
  2557                           
  2558 ;; *************** function _init_i2c *****************
  2559 ;; Defined at:
  2560 ;;		line 304 in file "../src/my_i2c.c"
  2561 ;; Parameters:    Size  Location     Type
  2562 ;;  ic              2    0[BANK1 ] PTR struct __i2c_comm
  2563 ;;		 -> main@ic(35), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;		None               void
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2575 ;;      Params:         0       0       2       0       0
  2576 ;;      Locals:         0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0
  2578 ;;      Totals:         0       0       2       0       0
  2579 ;;Total ram usage:        2 bytes
  2580 ;; Hardware stack levels used:    1
  2581 ;; Hardware stack levels required when called:   10
  2582 ;; This function calls:
  2583 ;;		Nothing
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text11
  2590  001608                     __ptext11:
  2591                           	opt stack 0
  2592  001608                     _init_i2c:
  2593                           	opt stack 19
  2594                           
  2595                           ;my_i2c.c: 305: ic_ptr = ic;
  2596                           
  2597                           ; BSR set to: 1
  2598                           ;incstack = 0
  2599  001608  0101               	movlb	1	; () banked
  2600  00160A  0100               	movlb	0	; () banked
  2601  00160C  C183  F0E9         	movff	init_i2c@ic+1,_ic_ptr+1
  2602  001610  0101               	movlb	1	; () banked
  2603  001612  0100               	movlb	0	; () banked
  2604  001614  C182  F0E8         	movff	init_i2c@ic,_ic_ptr
  2605                           
  2606                           ; BSR set to: 0
  2607                           ;my_i2c.c: 306: ic_ptr->buflen = 0;
  2608  001618  0100               	movlb	0	; () banked
  2609  00161A  EE20 F00A          	lfsr	2,10
  2610  00161E  0100               	movlb	0	; () banked
  2611  001620  51E8               	movf	_ic_ptr& (0+255),w,b
  2612  001622  26D9               	addwf	fsr2l,f,c
  2613  001624  0100               	movlb	0	; () banked
  2614  001626  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2615  001628  22DA               	addwfc	fsr2h,f,c
  2616  00162A  0E00               	movlw	0
  2617  00162C  6EDF               	movwf	indf2,c
  2618                           
  2619                           ; BSR set to: 0
  2620                           ;my_i2c.c: 307: ic_ptr->event_count = 0;
  2621  00162E  0100               	movlb	0	; () banked
  2622  001630  EE20 F00B          	lfsr	2,11
  2623  001634  0100               	movlb	0	; () banked
  2624  001636  51E8               	movf	_ic_ptr& (0+255),w,b
  2625  001638  26D9               	addwf	fsr2l,f,c
  2626  00163A  0100               	movlb	0	; () banked
  2627  00163C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2628  00163E  22DA               	addwfc	fsr2h,f,c
  2629  001640  0E00               	movlw	0
  2630  001642  6EDF               	movwf	indf2,c
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;my_i2c.c: 308: ic_ptr->status = 0x3;
  2634  001644  0100               	movlb	0	; () banked
  2635  001646  EE20 F00C          	lfsr	2,12
  2636  00164A  0100               	movlb	0	; () banked
  2637  00164C  51E8               	movf	_ic_ptr& (0+255),w,b
  2638  00164E  26D9               	addwf	fsr2l,f,c
  2639  001650  0100               	movlb	0	; () banked
  2640  001652  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2641  001654  22DA               	addwfc	fsr2h,f,c
  2642  001656  0E03               	movlw	3
  2643  001658  6EDF               	movwf	indf2,c
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;my_i2c.c: 309: ic_ptr->error_count = 0;
  2647  00165A  0100               	movlb	0	; () banked
  2648  00165C  EE20 F00E          	lfsr	2,14
  2649  001660  0100               	movlb	0	; () banked
  2650  001662  51E8               	movf	_ic_ptr& (0+255),w,b
  2651  001664  26D9               	addwf	fsr2l,f,c
  2652  001666  0100               	movlb	0	; () banked
  2653  001668  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2654  00166A  22DA               	addwfc	fsr2h,f,c
  2655  00166C  0E00               	movlw	0
  2656  00166E  6EDF               	movwf	indf2,c
  2657                           
  2658                           ; BSR set to: 0
  2659                           ;my_i2c.c: 310: ic_ptr->outbufind = 0;
  2660  001670  0100               	movlb	0	; () banked
  2661  001672  EE20 F01A          	lfsr	2,26
  2662  001676  0100               	movlb	0	; () banked
  2663  001678  51E8               	movf	_ic_ptr& (0+255),w,b
  2664  00167A  26D9               	addwf	fsr2l,f,c
  2665  00167C  0100               	movlb	0	; () banked
  2666  00167E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2667  001680  22DA               	addwfc	fsr2h,f,c
  2668  001682  0E00               	movlw	0
  2669  001684  6EDF               	movwf	indf2,c
  2670                           
  2671                           ; BSR set to: 0
  2672  001686  0012               	return	
  2673  001688                     __end_of_init_i2c:
  2674                           	opt stack 0
  2675                           tblptru	equ	0xFF8
  2676                           prodh	equ	0xFF4
  2677                           prodl	equ	0xFF3
  2678                           postinc0	equ	0xFEE
  2679                           wreg	equ	0xFE8
  2680                           indf1	equ	0xFE7
  2681                           fsr1h	equ	0xFE2
  2682                           fsr1l	equ	0xFE1
  2683                           indf2	equ	0xFDF
  2684                           postinc2	equ	0xFDE
  2685                           postdec2	equ	0xFDD
  2686                           fsr2h	equ	0xFDA
  2687                           fsr2l	equ	0xFD9
  2688                           status	equ	0xFD8
  2689                           
  2690 ;; *************** function _i2c_lthread *****************
  2691 ;; Defined at:
  2692 ;;		line 12 in file "../src/i2c_thread.c"
  2693 ;; Parameters:    Size  Location     Type
  2694 ;;  i2cptr          2   26[BANK1 ] PTR struct __i2c_thread_
  2695 ;;		 -> main@i2cthread_data(2), 
  2696 ;;  msgtype         2   28[BANK1 ] int 
  2697 ;;  length          2   30[BANK1 ] int 
  2698 ;;  msgbuffer       2   32[BANK1 ] PTR unsigned char 
  2699 ;;		 -> main@msgbuffer(11), 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  2   26[BANK1 ] int 
  2704 ;; Registers used:
  2705 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2711 ;;      Params:         0       0       8       0       0
  2712 ;;      Locals:         0       0       0       0       0
  2713 ;;      Temps:          0       0       1       0       0
  2714 ;;      Totals:         0       0       9       0       0
  2715 ;;Total ram usage:        9 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; Hardware stack levels required when called:   13
  2718 ;; This function calls:
  2719 ;;		_ToMainHigh_sendmsg
  2720 ;;		_i2c_master_recv
  2721 ;;		_i2c_master_send
  2722 ;; This function is called by:
  2723 ;;		_main
  2724 ;; This function uses a non-reentrant model
  2725 ;;
  2726                           
  2727                           	psect	text12
  2728  0011B4                     __ptext12:
  2729                           	opt stack 0
  2730  0011B4                     _i2c_lthread:
  2731                           	opt stack 16
  2732                           
  2733                           ;i2c_thread.c: 16: if (msgtype == 40) {
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;incstack = 0
  2737  0011B4  0101               	movlb	1	; () banked
  2738  0011B6  0101               	movlb	1	; () banked
  2739  0011B8  519E               	movf	i2c_lthread@msgtype& (0+255),w,b
  2740  0011BA  0A28               	xorlw	40
  2741  0011BC  119F               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  2742  0011BE  A4D8               	btfss	status,2,c
  2743  0011C0  D038               	goto	l3557
  2744                           
  2745                           ; BSR set to: 1
  2746                           ;i2c_thread.c: 18: { LATBbits.LATB1 = 1; };
  2747  0011C2  828A               	bsf	3978,1,c	;volatile
  2748                           
  2749                           ;i2c_thread.c: 19: { LATBbits.LATB1 = 0; };
  2750  0011C4  928A               	bcf	3978,1,c	;volatile
  2751                           
  2752                           ; BSR set to: 1
  2753                           ;i2c_thread.c: 22: if (i2c_master_send(length, msgbuffer) == 0) {
  2754  0011C6  0101               	movlb	1	; () banked
  2755  0011C8  0101               	movlb	1	; () banked
  2756  0011CA  C1A3  F183         	movff	i2c_lthread@msgbuffer+1,i2c_master_send@msg+1
  2757  0011CE  0101               	movlb	1	; () banked
  2758  0011D0  0101               	movlb	1	; () banked
  2759  0011D2  C1A2  F182         	movff	i2c_lthread@msgbuffer,i2c_master_send@msg
  2760  0011D6  0101               	movlb	1	; () banked
  2761  0011D8  0101               	movlb	1	; () banked
  2762  0011DA  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2763  0011DC  EC5D  F005         	call	_i2c_master_send
  2764  0011E0  0900               	iorlw	0
  2765  0011E2  A4D8               	btfss	status,2,c
  2766  0011E4  D010               	goto	l3555
  2767                           
  2768                           ;i2c_thread.c: 23: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  2769  0011E6  C19E  F198         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  2770  0011EA  0101               	movlb	1	; () banked
  2771  0011EC  0101               	movlb	1	; () banked
  2772  0011EE  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2773  0011F2  0101               	movlb	1	; () banked
  2774  0011F4  0101               	movlb	1	; () banked
  2775  0011F6  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2776  0011FA  0101               	movlb	1	; () banked
  2777  0011FC  0101               	movlb	1	; () banked
  2778  0011FE  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2779  001200  ECCA  F00E         	call	_ToMainHigh_sendmsg
  2780                           
  2781                           ;i2c_thread.c: 24: } else {
  2782  001204  0012               	return	
  2783  001206                     l3555:
  2784                           
  2785                           ;i2c_thread.c: 26: ToMainHigh_sendmsg(length, 39, (void *) msgbuffer);
  2786  001206  0101               	movlb	1	; () banked
  2787  001208  6FA4               	movwf	??_i2c_lthread& (0+255),b
  2788  00120A  0E27               	movlw	39
  2789  00120C  0101               	movlb	1	; () banked
  2790  00120E  0101               	movlb	1	; () banked
  2791  001210  6F98               	movwf	ToMainHigh_sendmsg@msgtype& (0+255),b
  2792  001212  0101               	movlb	1	; () banked
  2793  001214  51A4               	movf	??_i2c_lthread& (0+255),w,b
  2794  001216  0101               	movlb	1	; () banked
  2795  001218  0101               	movlb	1	; () banked
  2796  00121A  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2797  00121E  0101               	movlb	1	; () banked
  2798  001220  0101               	movlb	1	; () banked
  2799  001222  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2800  001226  0101               	movlb	1	; () banked
  2801  001228  0101               	movlb	1	; () banked
  2802  00122A  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2803  00122C  ECCA  F00E         	call	_ToMainHigh_sendmsg
  2804  001230  0012               	return	
  2805  001232                     l3557:
  2806  001232  0101               	movlb	1	; () banked
  2807  001234  0101               	movlb	1	; () banked
  2808  001236  519E               	movf	i2c_lthread@msgtype& (0+255),w,b
  2809  001238  0A27               	xorlw	39
  2810  00123A  119F               	iorwf	(i2c_lthread@msgtype+1)& (0+255),w,b
  2811  00123C  A4D8               	btfss	status,2,c
  2812  00123E  0012               	return	
  2813                           
  2814                           ; BSR set to: 1
  2815                           ;i2c_thread.c: 31: if (msgbuffer[0] == 0xaa) {
  2816  001240  0EAA               	movlw	170
  2817  001242  C1A2  FFD9         	movff	i2c_lthread@msgbuffer,fsr2l
  2818  001246  C1A3  FFDA         	movff	i2c_lthread@msgbuffer+1,fsr2h
  2819  00124A  62DF               	cpfseq	indf2,c
  2820  00124C  D007               	goto	l3563
  2821                           
  2822                           ; BSR set to: 1
  2823                           ;i2c_thread.c: 32: length = 5;
  2824  00124E  0E00               	movlw	0
  2825  001250  0101               	movlb	1	; () banked
  2826  001252  0101               	movlb	1	; () banked
  2827  001254  6FA1               	movwf	(i2c_lthread@length+1)& (0+255),b
  2828  001256  0E05               	movlw	5
  2829  001258  0101               	movlb	1	; () banked
  2830  00125A  6FA0               	movwf	i2c_lthread@length& (0+255),b
  2831  00125C                     l3563:
  2832                           
  2833                           ; BSR set to: 1
  2834                           ;i2c_thread.c: 33: }
  2835                           ;i2c_thread.c: 35: if (i2c_master_recv(length) == 0) {
  2836  00125C  0101               	movlb	1	; () banked
  2837  00125E  0101               	movlb	1	; () banked
  2838  001260  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2839  001262  EC69  F008         	call	_i2c_master_recv
  2840  001266  0900               	iorlw	0
  2841  001268  A4D8               	btfss	status,2,c
  2842  00126A  0012               	return	
  2843                           
  2844                           ;i2c_thread.c: 36: ToMainHigh_sendmsg(length, msgtype, (void *) msgbuffer);
  2845  00126C  C19E  F198         	movff	i2c_lthread@msgtype,ToMainHigh_sendmsg@msgtype
  2846  001270  0101               	movlb	1	; () banked
  2847  001272  0101               	movlb	1	; () banked
  2848  001274  C1A3  F19A         	movff	i2c_lthread@msgbuffer+1,ToMainHigh_sendmsg@data+1
  2849  001278  0101               	movlb	1	; () banked
  2850  00127A  0101               	movlb	1	; () banked
  2851  00127C  C1A2  F199         	movff	i2c_lthread@msgbuffer,ToMainHigh_sendmsg@data
  2852  001280  0101               	movlb	1	; () banked
  2853  001282  0101               	movlb	1	; () banked
  2854  001284  51A0               	movf	i2c_lthread@length& (0+255),w,b
  2855  001286  ECCA  F00E         	call	_ToMainHigh_sendmsg
  2856  00128A  0012               	return	
  2857  00128C                     __end_of_i2c_lthread:
  2858                           	opt stack 0
  2859                           tblptru	equ	0xFF8
  2860                           prodh	equ	0xFF4
  2861                           prodl	equ	0xFF3
  2862                           postinc0	equ	0xFEE
  2863                           wreg	equ	0xFE8
  2864                           indf1	equ	0xFE7
  2865                           fsr1h	equ	0xFE2
  2866                           fsr1l	equ	0xFE1
  2867                           indf2	equ	0xFDF
  2868                           postinc2	equ	0xFDE
  2869                           postdec2	equ	0xFDD
  2870                           fsr2h	equ	0xFDA
  2871                           fsr2l	equ	0xFD9
  2872                           status	equ	0xFD8
  2873                           
  2874 ;; *************** function _i2c_master_send *****************
  2875 ;; Defined at:
  2876 ;;		line 77 in file "../src/my_i2c.c"
  2877 ;; Parameters:    Size  Location     Type
  2878 ;;  length          1    wreg     unsigned char 
  2879 ;;  msg             2    0[BANK1 ] PTR unsigned char 
  2880 ;;		 -> main@msgbuffer(11), 
  2881 ;; Auto vars:     Size  Location     Type
  2882 ;;  length          1    8[BANK1 ] unsigned char 
  2883 ;;  i               2    9[BANK1 ] int 
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      unsigned char 
  2886 ;; Registers used:
  2887 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  2893 ;;      Params:         0       0       2       0       0
  2894 ;;      Locals:         0       0       3       0       0
  2895 ;;      Temps:          0       0       6       0       0
  2896 ;;      Totals:         0       0      11       0       0
  2897 ;;Total ram usage:       11 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:   10
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_i2c_lthread
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text13
  2908  000ABA                     __ptext13:
  2909                           	opt stack 0
  2910  000ABA                     _i2c_master_send:
  2911                           	opt stack 18
  2912                           
  2913                           ;incstack = 0
  2914                           ;i2c_master_send@length stored from wreg
  2915  000ABA  CFE8 F18A          	movff	wreg,i2c_master_send@length
  2916                           
  2917                           ;my_i2c.c: 80: if (ic_ptr->status != 0x3) {
  2918  000ABE  0100               	movlb	0	; () banked
  2919  000AC0  EE20 F00C          	lfsr	2,12
  2920  000AC4  0100               	movlb	0	; () banked
  2921  000AC6  51E8               	movf	_ic_ptr& (0+255),w,b
  2922  000AC8  26D9               	addwf	fsr2l,f,c
  2923  000ACA  0100               	movlb	0	; () banked
  2924  000ACC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2925  000ACE  22DA               	addwfc	fsr2h,f,c
  2926  000AD0  50DF               	movf	indf2,w,c
  2927  000AD2  0A03               	xorlw	3
  2928  000AD4  B4D8               	btfsc	status,2,c
  2929  000AD6  D002               	goto	l3707
  2930                           
  2931                           ; BSR set to: 0
  2932                           ;my_i2c.c: 81: return 0;
  2933  000AD8  0E00               	movlw	0
  2934  000ADA  0012               	return	
  2935  000ADC                     l3707:
  2936                           
  2937                           ; BSR set to: 0
  2938  000ADC  0100               	movlb	0	; () banked
  2939  000ADE  EE20 F00C          	lfsr	2,12
  2940  000AE2  0100               	movlb	0	; () banked
  2941  000AE4  51E8               	movf	_ic_ptr& (0+255),w,b
  2942  000AE6  26D9               	addwf	fsr2l,f,c
  2943  000AE8  0100               	movlb	0	; () banked
  2944  000AEA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2945  000AEC  22DA               	addwfc	fsr2h,f,c
  2946  000AEE  0E03               	movlw	3
  2947  000AF0  62DF               	cpfseq	indf2,c
  2948  000AF2  0012               	return	
  2949                           
  2950                           ; BSR set to: 0
  2951                           ;my_i2c.c: 87: ic_ptr->bufferCounterSend = 1;
  2952  000AF4  0100               	movlb	0	; () banked
  2953  000AF6  EE20 F01C          	lfsr	2,28
  2954  000AFA  0100               	movlb	0	; () banked
  2955  000AFC  51E8               	movf	_ic_ptr& (0+255),w,b
  2956  000AFE  26D9               	addwf	fsr2l,f,c
  2957  000B00  0100               	movlb	0	; () banked
  2958  000B02  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2959  000B04  22DA               	addwfc	fsr2h,f,c
  2960  000B06  0E01               	movlw	1
  2961  000B08  6EDE               	movwf	postinc2,c
  2962  000B0A  0E00               	movlw	0
  2963  000B0C  6EDD               	movwf	postdec2,c
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;my_i2c.c: 88: ic_ptr->outbuffer[0] = ic_ptr->slave_addr;
  2967  000B0E  0100               	movlb	0	; () banked
  2968  000B10  EE20 F01B          	lfsr	2,27
  2969  000B14  0100               	movlb	0	; () banked
  2970  000B16  51E8               	movf	_ic_ptr& (0+255),w,b
  2971  000B18  26D9               	addwf	fsr2l,f,c
  2972  000B1A  0100               	movlb	0	; () banked
  2973  000B1C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2974  000B1E  22DA               	addwfc	fsr2h,f,c
  2975  000B20  0100               	movlb	0	; () banked
  2976  000B22  EE10 F00F          	lfsr	1,15
  2977  000B26  0100               	movlb	0	; () banked
  2978  000B28  51E8               	movf	_ic_ptr& (0+255),w,b
  2979  000B2A  26E1               	addwf	fsr1l,f,c
  2980  000B2C  0100               	movlb	0	; () banked
  2981  000B2E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2982  000B30  22E2               	addwfc	fsr1h,f,c
  2983  000B32  CFDF FFE7          	movff	indf2,indf1
  2984                           
  2985                           ; BSR set to: 0
  2986                           ;my_i2c.c: 90: ic_ptr->outbuflen = length + 1;
  2987  000B36  0100               	movlb	0	; () banked
  2988  000B38  EE20 F019          	lfsr	2,25
  2989  000B3C  0100               	movlb	0	; () banked
  2990  000B3E  51E8               	movf	_ic_ptr& (0+255),w,b
  2991  000B40  26D9               	addwf	fsr2l,f,c
  2992  000B42  0100               	movlb	0	; () banked
  2993  000B44  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  2994  000B46  22DA               	addwfc	fsr2h,f,c
  2995  000B48  0101               	movlb	1	; () banked
  2996  000B4A  0101               	movlb	1	; () banked
  2997  000B4C  298A               	incf	i2c_master_send@length& (0+255),w,b
  2998  000B4E  6EDF               	movwf	indf2,c
  2999                           
  3000                           ; BSR set to: 1
  3001                           ;my_i2c.c: 92: int i = 1;
  3002  000B50  0E00               	movlw	0
  3003  000B52  0101               	movlb	1	; () banked
  3004  000B54  0101               	movlb	1	; () banked
  3005  000B56  6F8C               	movwf	(i2c_master_send@i+1)& (0+255),b
  3006  000B58  0E01               	movlw	1
  3007  000B5A  0101               	movlb	1	; () banked
  3008  000B5C  6F8B               	movwf	i2c_master_send@i& (0+255),b
  3009  000B5E  D03D               	goto	l3721
  3010  000B60                     l3717:
  3011                           
  3012                           ; BSR set to: 1
  3013                           ;my_i2c.c: 94: ic_ptr->outbuffer[i] = msg[i - 1];
  3014  000B60  0EFF               	movlw	255
  3015  000B62  0101               	movlb	1	; () banked
  3016  000B64  6F84               	movwf	??_i2c_master_send& (0+255),b
  3017  000B66  0EFF               	movlw	255
  3018  000B68  6F85               	movwf	(??_i2c_master_send+1)& (0+255),b
  3019  000B6A  0101               	movlb	1	; () banked
  3020  000B6C  C18B  F186         	movff	i2c_master_send@i,??_i2c_master_send+2
  3021  000B70  0101               	movlb	1	; () banked
  3022  000B72  C18C  F187         	movff	i2c_master_send@i+1,??_i2c_master_send+3
  3023  000B76  0101               	movlb	1	; () banked
  3024  000B78  5184               	movf	??_i2c_master_send& (0+255),w,b
  3025  000B7A  0101               	movlb	1	; () banked
  3026  000B7C  2786               	addwf	(??_i2c_master_send+2)& (0+255),f,b
  3027  000B7E  0101               	movlb	1	; () banked
  3028  000B80  5185               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3029  000B82  0101               	movlb	1	; () banked
  3030  000B84  2387               	addwfc	(??_i2c_master_send+3)& (0+255),f,b
  3031  000B86  0101               	movlb	1	; () banked
  3032  000B88  5186               	movf	(??_i2c_master_send+2)& (0+255),w,b
  3033  000B8A  0101               	movlb	1	; () banked
  3034  000B8C  0101               	movlb	1	; () banked
  3035  000B8E  2582               	addwf	i2c_master_send@msg& (0+255),w,b
  3036  000B90  6ED9               	movwf	fsr2l,c
  3037  000B92  0101               	movlb	1	; () banked
  3038  000B94  5187               	movf	(??_i2c_master_send+3)& (0+255),w,b
  3039  000B96  0101               	movlb	1	; () banked
  3040  000B98  0101               	movlb	1	; () banked
  3041  000B9A  2183               	addwfc	(i2c_master_send@msg+1)& (0+255),w,b
  3042  000B9C  6EDA               	movwf	fsr2h,c
  3043  000B9E  0E0F               	movlw	15
  3044  000BA0  0101               	movlb	1	; () banked
  3045  000BA2  0101               	movlb	1	; () banked
  3046  000BA4  258B               	addwf	i2c_master_send@i& (0+255),w,b
  3047  000BA6  0101               	movlb	1	; () banked
  3048  000BA8  6F88               	movwf	(??_i2c_master_send+4)& (0+255),b
  3049  000BAA  0E00               	movlw	0
  3050  000BAC  0101               	movlb	1	; () banked
  3051  000BAE  0101               	movlb	1	; () banked
  3052  000BB0  218C               	addwfc	(i2c_master_send@i+1)& (0+255),w,b
  3053  000BB2  0101               	movlb	1	; () banked
  3054  000BB4  6F89               	movwf	(??_i2c_master_send+5)& (0+255),b
  3055  000BB6  0101               	movlb	1	; () banked
  3056  000BB8  5188               	movf	(??_i2c_master_send+4)& (0+255),w,b
  3057  000BBA  0100               	movlb	0	; () banked
  3058  000BBC  0100               	movlb	0	; () banked
  3059  000BBE  25E8               	addwf	_ic_ptr& (0+255),w,b
  3060  000BC0  6EE1               	movwf	fsr1l,c
  3061  000BC2  0101               	movlb	1	; () banked
  3062  000BC4  5189               	movf	(??_i2c_master_send+5)& (0+255),w,b
  3063  000BC6  0100               	movlb	0	; () banked
  3064  000BC8  0100               	movlb	0	; () banked
  3065  000BCA  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  3066  000BCC  6EE2               	movwf	fsr1h,c
  3067  000BCE  CFDF FFE7          	movff	indf2,indf1
  3068                           
  3069                           ; BSR set to: 0
  3070  000BD2  0101               	movlb	1	; () banked
  3071  000BD4  0101               	movlb	1	; () banked
  3072  000BD6  4B8B               	infsnz	i2c_master_send@i& (0+255),f,b
  3073  000BD8  2B8C               	incf	(i2c_master_send@i+1)& (0+255),f,b
  3074  000BDA                     l3721:
  3075                           
  3076                           ; BSR set to: 1
  3077  000BDA  0101               	movlb	1	; () banked
  3078  000BDC  0101               	movlb	1	; () banked
  3079  000BDE  518A               	movf	i2c_master_send@length& (0+255),w,b
  3080  000BE0  0101               	movlb	1	; () banked
  3081  000BE2  6F84               	movwf	??_i2c_master_send& (0+255),b
  3082  000BE4  6B85               	clrf	(??_i2c_master_send+1)& (0+255),b
  3083  000BE6  0E01               	movlw	1
  3084  000BE8  0101               	movlb	1	; () banked
  3085  000BEA  2784               	addwf	??_i2c_master_send& (0+255),f,b
  3086  000BEC  0E00               	movlw	0
  3087  000BEE  2385               	addwfc	(??_i2c_master_send+1)& (0+255),f,b
  3088  000BF0  0101               	movlb	1	; () banked
  3089  000BF2  0101               	movlb	1	; () banked
  3090  000BF4  518C               	movf	(i2c_master_send@i+1)& (0+255),w,b
  3091  000BF6  0A80               	xorlw	128
  3092  000BF8  0101               	movlb	1	; () banked
  3093  000BFA  6F86               	movwf	(??_i2c_master_send+2)& (0+255),b
  3094  000BFC  5184               	movf	??_i2c_master_send& (0+255),w,b
  3095  000BFE  0101               	movlb	1	; () banked
  3096  000C00  0101               	movlb	1	; () banked
  3097  000C02  5D8B               	subwf	i2c_master_send@i& (0+255),w,b
  3098  000C04  0101               	movlb	1	; () banked
  3099  000C06  5185               	movf	(??_i2c_master_send+1)& (0+255),w,b
  3100  000C08  0A80               	xorlw	128
  3101  000C0A  0101               	movlb	1	; () banked
  3102  000C0C  5986               	subwfb	(??_i2c_master_send+2)& (0+255),w,b
  3103  000C0E  A0D8               	btfss	status,0,c
  3104  000C10  D7A7               	goto	l3717
  3105                           
  3106                           ; BSR set to: 1
  3107                           ;my_i2c.c: 95: }
  3108                           ;my_i2c.c: 97: ic_ptr->tx_i2c = 0x1;
  3109                           
  3110                           ; BSR set to: 1
  3111  000C12  0100               	movlb	0	; () banked
  3112  000C14  EE20 F020          	lfsr	2,32
  3113  000C18  0100               	movlb	0	; () banked
  3114  000C1A  51E8               	movf	_ic_ptr& (0+255),w,b
  3115  000C1C  26D9               	addwf	fsr2l,f,c
  3116  000C1E  0100               	movlb	0	; () banked
  3117  000C20  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3118  000C22  22DA               	addwfc	fsr2h,f,c
  3119  000C24  0E01               	movlw	1
  3120  000C26  6EDF               	movwf	indf2,c
  3121                           
  3122                           ;my_i2c.c: 98: ic_ptr->rx_i2c = 0x0;
  3123  000C28  0100               	movlb	0	; () banked
  3124  000C2A  EE20 F021          	lfsr	2,33
  3125  000C2E  0100               	movlb	0	; () banked
  3126  000C30  51E8               	movf	_ic_ptr& (0+255),w,b
  3127  000C32  26D9               	addwf	fsr2l,f,c
  3128  000C34  0100               	movlb	0	; () banked
  3129  000C36  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3130  000C38  22DA               	addwfc	fsr2h,f,c
  3131  000C3A  0E00               	movlw	0
  3132  000C3C  6EDF               	movwf	indf2,c
  3133                           
  3134                           ;my_i2c.c: 100: ic_ptr->status = 0x5;
  3135  000C3E  0100               	movlb	0	; () banked
  3136  000C40  EE20 F00C          	lfsr	2,12
  3137  000C44  0100               	movlb	0	; () banked
  3138  000C46  51E8               	movf	_ic_ptr& (0+255),w,b
  3139  000C48  26D9               	addwf	fsr2l,f,c
  3140  000C4A  0100               	movlb	0	; () banked
  3141  000C4C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3142  000C4E  22DA               	addwfc	fsr2h,f,c
  3143  000C50  0E05               	movlw	5
  3144  000C52  6EDF               	movwf	indf2,c
  3145                           
  3146                           ; BSR set to: 0
  3147                           ;my_i2c.c: 102: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3148  000C54  80C5               	bsf	4037,0,c	;volatile
  3149  000C56                     l306:
  3150  000C56  B0C5               	btfsc	4037,0,c	;volatile
  3151  000C58  D7FE               	goto	l306
  3152                           
  3153                           ;my_i2c.c: 104: return 1;
  3154  000C5A  0E01               	movlw	1
  3155  000C5C  0012               	return	
  3156  000C5E                     __end_of_i2c_master_send:
  3157                           	opt stack 0
  3158                           tblptru	equ	0xFF8
  3159                           prodh	equ	0xFF4
  3160                           prodl	equ	0xFF3
  3161                           postinc0	equ	0xFEE
  3162                           wreg	equ	0xFE8
  3163                           indf1	equ	0xFE7
  3164                           fsr1h	equ	0xFE2
  3165                           fsr1l	equ	0xFE1
  3166                           indf2	equ	0xFDF
  3167                           postinc2	equ	0xFDE
  3168                           postdec2	equ	0xFDD
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function _i2c_master_recv *****************
  3174 ;; Defined at:
  3175 ;;		line 121 in file "../src/my_i2c.c"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;  length          1    wreg     unsigned char 
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  length          1    0[BANK1 ] unsigned char 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      unsigned char 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3189 ;;      Params:         0       0       0       0       0
  3190 ;;      Locals:         0       0       1       0       0
  3191 ;;      Temps:          0       0       0       0       0
  3192 ;;      Totals:         0       0       1       0       0
  3193 ;;Total ram usage:        1 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:   10
  3196 ;; This function calls:
  3197 ;;		Nothing
  3198 ;; This function is called by:
  3199 ;;		_i2c_lthread
  3200 ;; This function uses a non-reentrant model
  3201 ;;
  3202                           
  3203                           	psect	text14
  3204  0010D2                     __ptext14:
  3205                           	opt stack 0
  3206  0010D2                     _i2c_master_recv:
  3207                           	opt stack 18
  3208                           
  3209                           ;incstack = 0
  3210                           ;i2c_master_recv@length stored from wreg
  3211  0010D2  CFE8 F182          	movff	wreg,i2c_master_recv@length
  3212                           
  3213                           ;my_i2c.c: 123: if (ic_ptr->status != 0x3) {
  3214  0010D6  0100               	movlb	0	; () banked
  3215  0010D8  EE20 F00C          	lfsr	2,12
  3216  0010DC  0100               	movlb	0	; () banked
  3217  0010DE  51E8               	movf	_ic_ptr& (0+255),w,b
  3218  0010E0  26D9               	addwf	fsr2l,f,c
  3219  0010E2  0100               	movlb	0	; () banked
  3220  0010E4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3221  0010E6  22DA               	addwfc	fsr2h,f,c
  3222  0010E8  50DF               	movf	indf2,w,c
  3223  0010EA  0A03               	xorlw	3
  3224  0010EC  B4D8               	btfsc	status,2,c
  3225  0010EE  D002               	goto	l3739
  3226                           
  3227                           ; BSR set to: 0
  3228                           ;my_i2c.c: 124: return 0;
  3229  0010F0  0E00               	movlw	0
  3230  0010F2  0012               	return	
  3231  0010F4                     l3739:
  3232                           
  3233                           ; BSR set to: 0
  3234  0010F4  0100               	movlb	0	; () banked
  3235  0010F6  EE20 F00C          	lfsr	2,12
  3236  0010FA  0100               	movlb	0	; () banked
  3237  0010FC  51E8               	movf	_ic_ptr& (0+255),w,b
  3238  0010FE  26D9               	addwf	fsr2l,f,c
  3239  001100  0100               	movlb	0	; () banked
  3240  001102  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3241  001104  22DA               	addwfc	fsr2h,f,c
  3242  001106  0E03               	movlw	3
  3243  001108  62DF               	cpfseq	indf2,c
  3244  00110A  0012               	return	
  3245                           
  3246                           ; BSR set to: 0
  3247                           ;my_i2c.c: 127: ic_ptr->rx_i2c = 0x1;
  3248  00110C  0100               	movlb	0	; () banked
  3249  00110E  EE20 F021          	lfsr	2,33
  3250  001112  0100               	movlb	0	; () banked
  3251  001114  51E8               	movf	_ic_ptr& (0+255),w,b
  3252  001116  26D9               	addwf	fsr2l,f,c
  3253  001118  0100               	movlb	0	; () banked
  3254  00111A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3255  00111C  22DA               	addwfc	fsr2h,f,c
  3256  00111E  0E01               	movlw	1
  3257  001120  6EDF               	movwf	indf2,c
  3258                           
  3259                           ;my_i2c.c: 128: ic_ptr->tx_i2c = 0x0;
  3260  001122  0100               	movlb	0	; () banked
  3261  001124  EE20 F020          	lfsr	2,32
  3262  001128  0100               	movlb	0	; () banked
  3263  00112A  51E8               	movf	_ic_ptr& (0+255),w,b
  3264  00112C  26D9               	addwf	fsr2l,f,c
  3265  00112E  0100               	movlb	0	; () banked
  3266  001130  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3267  001132  22DA               	addwfc	fsr2h,f,c
  3268  001134  0E00               	movlw	0
  3269  001136  6EDF               	movwf	indf2,c
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;my_i2c.c: 130: ic_ptr->slave_addr_rc = ((ic_ptr->slave_addr) | 0b00000001);
  3273  001138  0100               	movlb	0	; () banked
  3274  00113A  EE20 F022          	lfsr	2,34
  3275  00113E  0100               	movlb	0	; () banked
  3276  001140  51E8               	movf	_ic_ptr& (0+255),w,b
  3277  001142  26D9               	addwf	fsr2l,f,c
  3278  001144  0100               	movlb	0	; () banked
  3279  001146  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3280  001148  22DA               	addwfc	fsr2h,f,c
  3281  00114A  0100               	movlb	0	; () banked
  3282  00114C  EE10 F01B          	lfsr	1,27
  3283  001150  0100               	movlb	0	; () banked
  3284  001152  51E8               	movf	_ic_ptr& (0+255),w,b
  3285  001154  26E1               	addwf	fsr1l,f,c
  3286  001156  0100               	movlb	0	; () banked
  3287  001158  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3288  00115A  22E2               	addwfc	fsr1h,f,c
  3289  00115C  50E7               	movf	indf1,w,c
  3290  00115E  0901               	iorlw	1
  3291  001160  6EDF               	movwf	indf2,c
  3292                           
  3293                           ; BSR set to: 0
  3294                           ;my_i2c.c: 132: ic_ptr->buflen = length;
  3295  001162  0100               	movlb	0	; () banked
  3296  001164  EE20 F00A          	lfsr	2,10
  3297  001168  0100               	movlb	0	; () banked
  3298  00116A  51E8               	movf	_ic_ptr& (0+255),w,b
  3299  00116C  26D9               	addwf	fsr2l,f,c
  3300  00116E  0100               	movlb	0	; () banked
  3301  001170  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3302  001172  22DA               	addwfc	fsr2h,f,c
  3303  001174  0101               	movlb	1	; () banked
  3304  001176  C182  FFDF         	movff	i2c_master_recv@length,indf2
  3305                           
  3306                           ; BSR set to: 1
  3307                           ;my_i2c.c: 134: ic_ptr->status = 0xC;
  3308  00117A  0100               	movlb	0	; () banked
  3309  00117C  EE20 F00C          	lfsr	2,12
  3310  001180  0100               	movlb	0	; () banked
  3311  001182  51E8               	movf	_ic_ptr& (0+255),w,b
  3312  001184  26D9               	addwf	fsr2l,f,c
  3313  001186  0100               	movlb	0	; () banked
  3314  001188  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3315  00118A  22DA               	addwfc	fsr2h,f,c
  3316  00118C  0E0C               	movlw	12
  3317  00118E  6EDF               	movwf	indf2,c
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;my_i2c.c: 136: ic_ptr->bufferCounterRx = 0;
  3321  001190  0100               	movlb	0	; () banked
  3322  001192  EE20 F01E          	lfsr	2,30
  3323  001196  0100               	movlb	0	; () banked
  3324  001198  51E8               	movf	_ic_ptr& (0+255),w,b
  3325  00119A  26D9               	addwf	fsr2l,f,c
  3326  00119C  0100               	movlb	0	; () banked
  3327  00119E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3328  0011A0  22DA               	addwfc	fsr2h,f,c
  3329  0011A2  0E00               	movlw	0
  3330  0011A4  6EDE               	movwf	postinc2,c
  3331  0011A6  0E00               	movlw	0
  3332  0011A8  6EDD               	movwf	postdec2,c
  3333                           
  3334                           ; BSR set to: 0
  3335                           ;my_i2c.c: 138: SSP1CON2bits.SEN=1;while(SSP1CON2bits.SEN);
  3336  0011AA  80C5               	bsf	4037,0,c	;volatile
  3337  0011AC                     l315:
  3338  0011AC  B0C5               	btfsc	4037,0,c	;volatile
  3339  0011AE  D7FE               	goto	l315
  3340                           
  3341                           ;my_i2c.c: 140: return 1;
  3342  0011B0  0E01               	movlw	1
  3343  0011B2  0012               	return	
  3344  0011B4                     __end_of_i2c_master_recv:
  3345                           	opt stack 0
  3346                           tblptru	equ	0xFF8
  3347                           prodh	equ	0xFF4
  3348                           prodl	equ	0xFF3
  3349                           postinc0	equ	0xFEE
  3350                           wreg	equ	0xFE8
  3351                           indf1	equ	0xFE7
  3352                           fsr1h	equ	0xFE2
  3353                           fsr1l	equ	0xFE1
  3354                           indf2	equ	0xFDF
  3355                           postinc2	equ	0xFDE
  3356                           postdec2	equ	0xFDD
  3357                           fsr2h	equ	0xFDA
  3358                           fsr2l	equ	0xFD9
  3359                           status	equ	0xFD8
  3360                           
  3361 ;; *************** function _ToMainHigh_sendmsg *****************
  3362 ;; Defined at:
  3363 ;;		line 126 in file "../src/messages.c"
  3364 ;; Parameters:    Size  Location     Type
  3365 ;;  length          1    wreg     unsigned char 
  3366 ;;  msgtype         1   22[BANK1 ] unsigned char 
  3367 ;;  data            2   23[BANK1 ] PTR void 
  3368 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  3369 ;; Auto vars:     Size  Location     Type
  3370 ;;  length          1   25[BANK1 ] unsigned char 
  3371 ;; Return value:  Size  Location     Type
  3372 ;;                  1    wreg      char 
  3373 ;; Registers used:
  3374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3375 ;; Tracked objects:
  3376 ;;		On entry : 0/0
  3377 ;;		On exit  : 0/0
  3378 ;;		Unchanged: 0/0
  3379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3380 ;;      Params:         0       0       3       0       0
  3381 ;;      Locals:         0       0       1       0       0
  3382 ;;      Temps:          0       0       0       0       0
  3383 ;;      Totals:         0       0       4       0       0
  3384 ;;Total ram usage:        4 bytes
  3385 ;; Hardware stack levels used:    1
  3386 ;; Hardware stack levels required when called:   12
  3387 ;; This function calls:
  3388 ;;		_send_msg
  3389 ;; This function is called by:
  3390 ;;		_i2c_lthread
  3391 ;; This function uses a non-reentrant model
  3392 ;;
  3393                           
  3394                           	psect	text15
  3395  001D94                     __ptext15:
  3396                           	opt stack 0
  3397  001D94                     _ToMainHigh_sendmsg:
  3398                           	opt stack 16
  3399                           
  3400                           ;incstack = 0
  3401                           ;ToMainHigh_sendmsg@length stored from wreg
  3402  001D94  CFE8 F19B          	movff	wreg,ToMainHigh_sendmsg@length
  3403                           
  3404                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  3405                           ;	Return value of _ToMainHigh_sendmsg is never used
  3406  001D98  0100               	movlb	0	; () banked
  3407  001D9A  0E00               	movlw	high _ToMainHigh_MQ
  3408  001D9C  0101               	movlb	1	; () banked
  3409  001D9E  0101               	movlb	1	; () banked
  3410  001DA0  6F8D               	movwf	(send_msg@qptr+1)& (0+255),b
  3411  001DA2  0100               	movlb	0	; () banked
  3412  001DA4  0E80               	movlw	low _ToMainHigh_MQ
  3413  001DA6  0101               	movlb	1	; () banked
  3414  001DA8  0101               	movlb	1	; () banked
  3415  001DAA  6F8C               	movwf	send_msg@qptr& (0+255),b
  3416  001DAC  C19B  F18E         	movff	ToMainHigh_sendmsg@length,send_msg@length
  3417  001DB0  C198  F18F         	movff	ToMainHigh_sendmsg@msgtype,send_msg@msgtype
  3418  001DB4  0101               	movlb	1	; () banked
  3419  001DB6  0101               	movlb	1	; () banked
  3420  001DB8  C19A  F191         	movff	ToMainHigh_sendmsg@data+1,send_msg@data+1
  3421  001DBC  0101               	movlb	1	; () banked
  3422  001DBE  0101               	movlb	1	; () banked
  3423  001DC0  C199  F190         	movff	ToMainHigh_sendmsg@data,send_msg@data
  3424  001DC4  EC65  F007         	call	_send_msg	;wreg free
  3425  001DC8  0012               	return	
  3426  001DCA                     __end_of_ToMainHigh_sendmsg:
  3427                           	opt stack 0
  3428                           tblptru	equ	0xFF8
  3429                           prodh	equ	0xFF4
  3430                           prodl	equ	0xFF3
  3431                           postinc0	equ	0xFEE
  3432                           wreg	equ	0xFE8
  3433                           indf1	equ	0xFE7
  3434                           fsr1h	equ	0xFE2
  3435                           fsr1l	equ	0xFE1
  3436                           indf2	equ	0xFDF
  3437                           postinc2	equ	0xFDE
  3438                           postdec2	equ	0xFDD
  3439                           fsr2h	equ	0xFDA
  3440                           fsr2l	equ	0xFD9
  3441                           status	equ	0xFD8
  3442                           
  3443 ;; *************** function _send_msg *****************
  3444 ;; Defined at:
  3445 ;;		line 24 in file "../src/messages.c"
  3446 ;; Parameters:    Size  Location     Type
  3447 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  3448 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3449 ;;  length          1   12[BANK1 ] unsigned char 
  3450 ;;  msgtype         1   13[BANK1 ] unsigned char 
  3451 ;;  data            2   14[BANK1 ] PTR void 
  3452 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  3453 ;;		 -> main@uc(23), 
  3454 ;; Auto vars:     Size  Location     Type
  3455 ;;  qmsg            2   20[BANK1 ] PTR struct __msg
  3456 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  3457 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  3458 ;;  tlength         2   17[BANK1 ] unsigned int 
  3459 ;;  slot            1   19[BANK1 ] unsigned char 
  3460 ;; Return value:  Size  Location     Type
  3461 ;;                  1    wreg      char 
  3462 ;; Registers used:
  3463 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3464 ;; Tracked objects:
  3465 ;;		On entry : 0/0
  3466 ;;		On exit  : 0/0
  3467 ;;		Unchanged: 0/0
  3468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3469 ;;      Params:         0       0       6       0       0
  3470 ;;      Locals:         0       0       5       0       0
  3471 ;;      Temps:          0       0       1       0       0
  3472 ;;      Totals:         0       0      12       0       0
  3473 ;;Total ram usage:       12 bytes
  3474 ;; Hardware stack levels used:    1
  3475 ;; Hardware stack levels required when called:   11
  3476 ;; This function calls:
  3477 ;;		_memcpy
  3478 ;; This function is called by:
  3479 ;;		_ToMainHigh_sendmsg
  3480 ;;		_FromMainHigh_sendmsg
  3481 ;;		_FromMainLow_sendmsg
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           
  3485                           	psect	text16
  3486  000ECA                     __ptext16:
  3487                           	opt stack 0
  3488  000ECA                     _send_msg:
  3489                           	opt stack 16
  3490                           
  3491                           ;messages.c: 25: unsigned char slot;
  3492                           ;messages.c: 27: msg *qmsg;
  3493                           ;messages.c: 28: size_t tlength = length;
  3494                           
  3495                           ;incstack = 0
  3496  000ECA  0101               	movlb	1	; () banked
  3497  000ECC  0101               	movlb	1	; () banked
  3498  000ECE  C18E  F193         	movff	send_msg@length,send_msg@tlength
  3499  000ED2  0101               	movlb	1	; () banked
  3500  000ED4  0101               	movlb	1	; () banked
  3501  000ED6  6B94               	clrf	(send_msg@tlength+1)& (0+255),b
  3502                           
  3503                           ; BSR set to: 1
  3504                           ;messages.c: 38: slot = qptr->cur_write_ind;
  3505  000ED8  0101               	movlb	1	; () banked
  3506  000EDA  EE20 F034          	lfsr	2,52
  3507  000EDE  0101               	movlb	1	; () banked
  3508  000EE0  518C               	movf	send_msg@qptr& (0+255),w,b
  3509  000EE2  26D9               	addwf	fsr2l,f,c
  3510  000EE4  0101               	movlb	1	; () banked
  3511  000EE6  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3512  000EE8  22DA               	addwfc	fsr2h,f,c
  3513  000EEA  50DF               	movf	indf2,w,c
  3514  000EEC  0101               	movlb	1	; () banked
  3515  000EEE  0101               	movlb	1	; () banked
  3516  000EF0  6F95               	movwf	send_msg@slot& (0+255),b
  3517                           
  3518                           ; BSR set to: 1
  3519                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  3520  000EF2  0101               	movlb	1	; () banked
  3521  000EF4  0101               	movlb	1	; () banked
  3522  000EF6  5195               	movf	send_msg@slot& (0+255),w,b
  3523  000EF8  0D0D               	mullw	13
  3524  000EFA  50F3               	movf	prodl,w,c
  3525  000EFC  0101               	movlb	1	; () banked
  3526  000EFE  0101               	movlb	1	; () banked
  3527  000F00  258C               	addwf	send_msg@qptr& (0+255),w,b
  3528  000F02  0101               	movlb	1	; () banked
  3529  000F04  0101               	movlb	1	; () banked
  3530  000F06  6F96               	movwf	send_msg@qmsg& (0+255),b
  3531  000F08  50F4               	movf	prodh,w,c
  3532  000F0A  0101               	movlb	1	; () banked
  3533  000F0C  0101               	movlb	1	; () banked
  3534  000F0E  218D               	addwfc	(send_msg@qptr+1)& (0+255),w,b
  3535  000F10  0101               	movlb	1	; () banked
  3536  000F12  6F97               	movwf	(send_msg@qmsg+1)& (0+255),b
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;messages.c: 41: if (qmsg->full != 0) {
  3540  000F14  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  3541  000F18  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3542  000F1C  50DF               	movf	indf2,w,c
  3543  000F1E  B4D8               	btfsc	status,2,c
  3544  000F20  D002               	goto	l3615
  3545                           
  3546                           ; BSR set to: 1
  3547                           ;messages.c: 42: return (-1);
  3548  000F22  0EFF               	movlw	255
  3549  000F24  0012               	return	
  3550  000F26                     l3615:
  3551                           
  3552                           ; BSR set to: 1
  3553                           ;messages.c: 43: }
  3554                           ;messages.c: 46: qmsg->length = length;
  3555  000F26  0101               	movlb	1	; () banked
  3556  000F28  EE20 F001          	lfsr	2,1
  3557  000F2C  0101               	movlb	1	; () banked
  3558  000F2E  5196               	movf	send_msg@qmsg& (0+255),w,b
  3559  000F30  26D9               	addwf	fsr2l,f,c
  3560  000F32  0101               	movlb	1	; () banked
  3561  000F34  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3562  000F36  22DA               	addwfc	fsr2h,f,c
  3563  000F38  0101               	movlb	1	; () banked
  3564  000F3A  C18E  FFDF         	movff	send_msg@length,indf2
  3565                           
  3566                           ;messages.c: 47: qmsg->msgtype = msgtype;
  3567  000F3E  0101               	movlb	1	; () banked
  3568  000F40  EE20 F002          	lfsr	2,2
  3569  000F44  0101               	movlb	1	; () banked
  3570  000F46  5196               	movf	send_msg@qmsg& (0+255),w,b
  3571  000F48  26D9               	addwf	fsr2l,f,c
  3572  000F4A  0101               	movlb	1	; () banked
  3573  000F4C  5197               	movf	(send_msg@qmsg+1)& (0+255),w,b
  3574  000F4E  22DA               	addwfc	fsr2h,f,c
  3575  000F50  0101               	movlb	1	; () banked
  3576  000F52  C18F  FFDF         	movff	send_msg@msgtype,indf2
  3577                           
  3578                           ; BSR set to: 1
  3579                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  3580  000F56  0E03               	movlw	3
  3581  000F58  0101               	movlb	1	; () banked
  3582  000F5A  0101               	movlb	1	; () banked
  3583  000F5C  2596               	addwf	send_msg@qmsg& (0+255),w,b
  3584  000F5E  0101               	movlb	1	; () banked
  3585  000F60  0101               	movlb	1	; () banked
  3586  000F62  6F82               	movwf	memcpy@d1& (0+255),b
  3587  000F64  0E00               	movlw	0
  3588  000F66  0101               	movlb	1	; () banked
  3589  000F68  0101               	movlb	1	; () banked
  3590  000F6A  2197               	addwfc	(send_msg@qmsg+1)& (0+255),w,b
  3591  000F6C  0101               	movlb	1	; () banked
  3592  000F6E  6F83               	movwf	(memcpy@d1+1)& (0+255),b
  3593  000F70  0101               	movlb	1	; () banked
  3594  000F72  0101               	movlb	1	; () banked
  3595  000F74  C191  F185         	movff	send_msg@data+1,memcpy@s1+1
  3596  000F78  0101               	movlb	1	; () banked
  3597  000F7A  0101               	movlb	1	; () banked
  3598  000F7C  C190  F184         	movff	send_msg@data,memcpy@s1
  3599  000F80  C193  F186         	movff	send_msg@tlength,memcpy@n
  3600  000F84  C194  F187         	movff	send_msg@tlength+1,memcpy@n+1
  3601  000F88  ECCF  F00C         	call	_memcpy	;wreg free
  3602                           
  3603                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  3604  000F8C  0101               	movlb	1	; () banked
  3605  000F8E  EE20 F034          	lfsr	2,52
  3606  000F92  0101               	movlb	1	; () banked
  3607  000F94  518C               	movf	send_msg@qptr& (0+255),w,b
  3608  000F96  26D9               	addwf	fsr2l,f,c
  3609  000F98  0101               	movlb	1	; () banked
  3610  000F9A  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3611  000F9C  22DA               	addwfc	fsr2h,f,c
  3612  000F9E  0101               	movlb	1	; () banked
  3613  000FA0  EE10 F034          	lfsr	1,52
  3614  000FA4  0101               	movlb	1	; () banked
  3615  000FA6  518C               	movf	send_msg@qptr& (0+255),w,b
  3616  000FA8  26E1               	addwf	fsr1l,f,c
  3617  000FAA  0101               	movlb	1	; () banked
  3618  000FAC  518D               	movf	(send_msg@qptr+1)& (0+255),w,b
  3619  000FAE  22E2               	addwfc	fsr1h,f,c
  3620  000FB0  50E7               	movf	indf1,w,c
  3621  000FB2  0101               	movlb	1	; () banked
  3622  000FB4  6F92               	movwf	??_send_msg& (0+255),b
  3623  000FB6  0101               	movlb	1	; () banked
  3624  000FB8  2992               	incf	??_send_msg& (0+255),w,b
  3625  000FBA  0B03               	andlw	3
  3626  000FBC  6EDF               	movwf	indf2,c
  3627                           
  3628                           ; BSR set to: 1
  3629                           ;messages.c: 59: qmsg->full = 1;
  3630  000FBE  C196  FFD9         	movff	send_msg@qmsg,fsr2l
  3631  000FC2  C197  FFDA         	movff	send_msg@qmsg+1,fsr2h
  3632  000FC6  0E01               	movlw	1
  3633  000FC8  6EDF               	movwf	indf2,c
  3634                           
  3635                           ; BSR set to: 1
  3636                           ;messages.c: 60: return (1);
  3637  000FCA  0E01               	movlw	1
  3638  000FCC  0012               	return	
  3639  000FCE                     __end_of_send_msg:
  3640                           	opt stack 0
  3641                           tblptru	equ	0xFF8
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           postinc0	equ	0xFEE
  3645                           wreg	equ	0xFE8
  3646                           indf1	equ	0xFE7
  3647                           fsr1h	equ	0xFE2
  3648                           fsr1l	equ	0xFE1
  3649                           indf2	equ	0xFDF
  3650                           postinc2	equ	0xFDE
  3651                           postdec2	equ	0xFDD
  3652                           fsr2h	equ	0xFDA
  3653                           fsr2l	equ	0xFD9
  3654                           status	equ	0xFD8
  3655                           
  3656 ;; *************** function _i2c_configure_master *****************
  3657 ;; Defined at:
  3658 ;;		line 50 in file "../src/my_i2c.c"
  3659 ;; Parameters:    Size  Location     Type
  3660 ;;  slave_addr      1    wreg     unsigned char 
  3661 ;; Auto vars:     Size  Location     Type
  3662 ;;  slave_addr      1    0[BANK1 ] unsigned char 
  3663 ;; Return value:  Size  Location     Type
  3664 ;;		None               void
  3665 ;; Registers used:
  3666 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3667 ;; Tracked objects:
  3668 ;;		On entry : 0/0
  3669 ;;		On exit  : 0/0
  3670 ;;		Unchanged: 0/0
  3671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3672 ;;      Params:         0       0       0       0       0
  3673 ;;      Locals:         0       0       1       0       0
  3674 ;;      Temps:          0       0       0       0       0
  3675 ;;      Totals:         0       0       1       0       0
  3676 ;;Total ram usage:        1 bytes
  3677 ;; Hardware stack levels used:    1
  3678 ;; Hardware stack levels required when called:   10
  3679 ;; This function calls:
  3680 ;;		Nothing
  3681 ;; This function is called by:
  3682 ;;		_main
  3683 ;; This function uses a non-reentrant model
  3684 ;;
  3685                           
  3686                           	psect	text17
  3687  001B2A                     __ptext17:
  3688                           	opt stack 0
  3689  001B2A                     _i2c_configure_master:
  3690                           	opt stack 19
  3691                           
  3692                           ; BSR set to: 1
  3693                           ;incstack = 0
  3694                           ;i2c_configure_master@slave_addr stored from wreg
  3695  001B2A  CFE8 F182          	movff	wreg,i2c_configure_master@slave_addr
  3696                           
  3697                           ;my_i2c.c: 52: ic_ptr->slave_addr = slave_addr;
  3698  001B2E  0100               	movlb	0	; () banked
  3699  001B30  EE20 F01B          	lfsr	2,27
  3700  001B34  0100               	movlb	0	; () banked
  3701  001B36  51E8               	movf	_ic_ptr& (0+255),w,b
  3702  001B38  26D9               	addwf	fsr2l,f,c
  3703  001B3A  0100               	movlb	0	; () banked
  3704  001B3C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3705  001B3E  22DA               	addwfc	fsr2h,f,c
  3706  001B40  0101               	movlb	1	; () banked
  3707  001B42  C182  FFDF         	movff	i2c_configure_master@slave_addr,indf2
  3708                           
  3709                           ; BSR set to: 1
  3710                           ;my_i2c.c: 54: SSPCON1 = 0b00001000;
  3711  001B46  0E08               	movlw	8
  3712  001B48  6EC6               	movwf	4038,c	;volatile
  3713                           
  3714                           ; BSR set to: 1
  3715                           ;my_i2c.c: 56: SSPCON1 |= 0b00100000;
  3716  001B4A  8AC6               	bsf	4038,5,c	;volatile
  3717                           
  3718                           ; BSR set to: 1
  3719                           ;my_i2c.c: 58: SSPADD = 0x77;
  3720  001B4C  0E77               	movlw	119
  3721  001B4E  6EC8               	movwf	4040,c	;volatile
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;my_i2c.c: 61: ic_ptr->bufferCounterSend = 1;
  3725  001B50  0100               	movlb	0	; () banked
  3726  001B52  EE20 F01C          	lfsr	2,28
  3727  001B56  0100               	movlb	0	; () banked
  3728  001B58  51E8               	movf	_ic_ptr& (0+255),w,b
  3729  001B5A  26D9               	addwf	fsr2l,f,c
  3730  001B5C  0100               	movlb	0	; () banked
  3731  001B5E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  3732  001B60  22DA               	addwfc	fsr2h,f,c
  3733  001B62  0E01               	movlw	1
  3734  001B64  6EDE               	movwf	postinc2,c
  3735  001B66  0E00               	movlw	0
  3736  001B68  6EDD               	movwf	postdec2,c
  3737                           
  3738                           ; BSR set to: 0
  3739  001B6A  0012               	return	
  3740  001B6C                     __end_of_i2c_configure_master:
  3741                           	opt stack 0
  3742                           tblptru	equ	0xFF8
  3743                           prodh	equ	0xFF4
  3744                           prodl	equ	0xFF3
  3745                           postinc0	equ	0xFEE
  3746                           wreg	equ	0xFE8
  3747                           indf1	equ	0xFE7
  3748                           fsr1h	equ	0xFE2
  3749                           fsr1l	equ	0xFE1
  3750                           indf2	equ	0xFDF
  3751                           postinc2	equ	0xFDE
  3752                           postdec2	equ	0xFDD
  3753                           fsr2h	equ	0xFDA
  3754                           fsr2l	equ	0xFD9
  3755                           status	equ	0xFD8
  3756                           
  3757 ;; *************** function _enable_interrupts *****************
  3758 ;; Defined at:
  3759 ;;		line 16 in file "../src/interrupts.c"
  3760 ;; Parameters:    Size  Location     Type
  3761 ;;		None
  3762 ;; Auto vars:     Size  Location     Type
  3763 ;;		None
  3764 ;; Return value:  Size  Location     Type
  3765 ;;		None               void
  3766 ;; Registers used:
  3767 ;;		None
  3768 ;; Tracked objects:
  3769 ;;		On entry : 0/0
  3770 ;;		On exit  : 0/0
  3771 ;;		Unchanged: 0/0
  3772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3773 ;;      Params:         0       0       0       0       0
  3774 ;;      Locals:         0       0       0       0       0
  3775 ;;      Temps:          0       0       0       0       0
  3776 ;;      Totals:         0       0       0       0       0
  3777 ;;Total ram usage:        0 bytes
  3778 ;; Hardware stack levels used:    1
  3779 ;; Hardware stack levels required when called:   10
  3780 ;; This function calls:
  3781 ;;		Nothing
  3782 ;; This function is called by:
  3783 ;;		_main
  3784 ;; This function uses a non-reentrant model
  3785 ;;
  3786                           
  3787                           	psect	text18
  3788  001FD6                     __ptext18:
  3789                           	opt stack 0
  3790  001FD6                     _enable_interrupts:
  3791                           	opt stack 19
  3792                           
  3793                           ;interrupts.c: 19: RCONbits.IPEN = 1;
  3794                           
  3795                           ; BSR set to: 0
  3796                           ;incstack = 0
  3797  001FD6  8ED0               	bsf	4048,7,c	;volatile
  3798                           
  3799                           ;interrupts.c: 20: INTCONbits.GIEH = 1;
  3800  001FD8  8EF2               	bsf	intcon,7,c	;volatile
  3801                           
  3802                           ;interrupts.c: 21: INTCONbits.GIEL = 1;
  3803  001FDA  8CF2               	bsf	intcon,6,c	;volatile
  3804  001FDC  0012               	return	
  3805  001FDE                     __end_of_enable_interrupts:
  3806                           	opt stack 0
  3807                           tblptru	equ	0xFF8
  3808                           prodh	equ	0xFF4
  3809                           prodl	equ	0xFF3
  3810                           intcon	equ	0xFF2
  3811                           postinc0	equ	0xFEE
  3812                           wreg	equ	0xFE8
  3813                           indf1	equ	0xFE7
  3814                           fsr1h	equ	0xFE2
  3815                           fsr1l	equ	0xFE1
  3816                           indf2	equ	0xFDF
  3817                           postinc2	equ	0xFDE
  3818                           postdec2	equ	0xFDD
  3819                           fsr2h	equ	0xFDA
  3820                           fsr2l	equ	0xFD9
  3821                           status	equ	0xFD8
  3822                           
  3823 ;; *************** function _block_on_To_msgqueues *****************
  3824 ;; Defined at:
  3825 ;;		line 258 in file "../src/messages.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;		None               void
  3832 ;; Registers used:
  3833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3839 ;;      Params:         0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0
  3841 ;;      Temps:          0       0       1       0       0
  3842 ;;      Totals:         0       0       1       0       0
  3843 ;;Total ram usage:        1 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:   13
  3846 ;; This function calls:
  3847 ;;		_Delay1KTCYx
  3848 ;;		_check_msg
  3849 ;;		_in_main
  3850 ;; This function is called by:
  3851 ;;		_main
  3852 ;; This function uses a non-reentrant model
  3853 ;;
  3854                           
  3855                           	psect	text19
  3856  001688                     __ptext19:
  3857                           	opt stack 0
  3858  001688                     _block_on_To_msgqueues:
  3859                           	opt stack 16
  3860                           
  3861                           ;messages.c: 259: if (!in_main()) {
  3862                           
  3863                           ;incstack = 0
  3864  001688  EC73  F00D         	call	_in_main	;wreg free
  3865  00168C  0101               	movlb	1	; () banked
  3866  00168E  0101               	movlb	1	; () banked
  3867  001690  5187               	movf	(?_in_main+1)& (0+255),w,b
  3868  001692  0101               	movlb	1	; () banked
  3869  001694  1186               	iorwf	?_in_main& (0+255),w,b
  3870  001696  B4D8               	btfsc	status,2,c
  3871  001698  0012               	return	
  3872                           
  3873                           ; BSR set to: 1
  3874                           ;messages.c: 261: }
  3875                           ;messages.c: 263: MQ_Main_Willing_to_block = 1;
  3876                           
  3877                           ; BSR set to: 1
  3878                           
  3879                           ; BSR set to: 1
  3880                           ;messages.c: 260: return;
  3881  00169A  0101               	movlb	1	; () banked
  3882  00169C  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3883  00169E  0E01               	movlw	1
  3884  0016A0  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3885  0016A2  0101               	movlb	1	; () banked
  3886  0016A4  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3887  0016A6                     l3527:
  3888                           
  3889                           ;messages.c: 265: if (check_msg(&ToMainHigh_MQ)) {
  3890  0016A6  0100               	movlb	0	; () banked
  3891  0016A8  0E00               	movlw	high _ToMainHigh_MQ
  3892  0016AA  0101               	movlb	1	; () banked
  3893  0016AC  0101               	movlb	1	; () banked
  3894  0016AE  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  3895  0016B0  0100               	movlb	0	; () banked
  3896  0016B2  0E80               	movlw	low _ToMainHigh_MQ
  3897  0016B4  0101               	movlb	1	; () banked
  3898  0016B6  0101               	movlb	1	; () banked
  3899  0016B8  6F82               	movwf	check_msg@qptr& (0+255),b
  3900  0016BA  ECE5  F00E         	call	_check_msg	;wreg free
  3901  0016BE  0900               	iorlw	0
  3902  0016C0  B4D8               	btfsc	status,2,c
  3903  0016C2  D007               	goto	l3533
  3904                           
  3905                           ;messages.c: 266: MQ_Main_Willing_to_block = 0;
  3906  0016C4  0101               	movlb	1	; () banked
  3907  0016C6  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3908  0016C8  0E00               	movlw	0
  3909  0016CA  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3910  0016CC  0101               	movlb	1	; () banked
  3911  0016CE  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3912  0016D0  0012               	return	
  3913  0016D2                     l3533:
  3914                           
  3915                           ;messages.c: 271: }
  3916                           ;messages.c: 272: if (check_msg(&ToMainLow_MQ)) {
  3917  0016D2  0101               	movlb	1	; () banked
  3918  0016D4  0E01               	movlw	high _ToMainLow_MQ
  3919  0016D6  0101               	movlb	1	; () banked
  3920  0016D8  0101               	movlb	1	; () banked
  3921  0016DA  6F83               	movwf	(check_msg@qptr+1)& (0+255),b
  3922  0016DC  0101               	movlb	1	; () banked
  3923  0016DE  0E4C               	movlw	low _ToMainLow_MQ
  3924  0016E0  0101               	movlb	1	; () banked
  3925  0016E2  0101               	movlb	1	; () banked
  3926  0016E4  6F82               	movwf	check_msg@qptr& (0+255),b
  3927  0016E6  ECE5  F00E         	call	_check_msg	;wreg free
  3928  0016EA  0900               	iorlw	0
  3929  0016EC  B4D8               	btfsc	status,2,c
  3930  0016EE  D007               	goto	l3539
  3931                           
  3932                           ;messages.c: 273: MQ_Main_Willing_to_block = 0;
  3933  0016F0  0101               	movlb	1	; () banked
  3934  0016F2  6F88               	movwf	??_block_on_To_msgqueues& (0+255),b
  3935  0016F4  0E00               	movlw	0
  3936  0016F6  6E58               	movwf	_MQ_Main_Willing_to_block,c
  3937  0016F8  0101               	movlb	1	; () banked
  3938  0016FA  5188               	movf	??_block_on_To_msgqueues& (0+255),w,b
  3939  0016FC  0012               	return	
  3940  0016FE                     l3539:
  3941                           
  3942                           ;messages.c: 278: }
  3943                           ;messages.c: 279: Delay1KTCYx(10);
  3944  0016FE  0E0A               	movlw	10
  3945  001700  EC97  F00F         	call	_Delay1KTCYx
  3946  001704  D7D0               	goto	l3527
  3947  001706                     __end_of_block_on_To_msgqueues:
  3948                           	opt stack 0
  3949                           tblptru	equ	0xFF8
  3950                           prodh	equ	0xFF4
  3951                           prodl	equ	0xFF3
  3952                           intcon	equ	0xFF2
  3953                           postinc0	equ	0xFEE
  3954                           wreg	equ	0xFE8
  3955                           indf1	equ	0xFE7
  3956                           fsr1h	equ	0xFE2
  3957                           fsr1l	equ	0xFE1
  3958                           indf2	equ	0xFDF
  3959                           postinc2	equ	0xFDE
  3960                           postdec2	equ	0xFDD
  3961                           fsr2h	equ	0xFDA
  3962                           fsr2l	equ	0xFD9
  3963                           status	equ	0xFD8
  3964                           
  3965 ;; *************** function _in_main *****************
  3966 ;; Defined at:
  3967 ;;		line 44 in file "../src/interrupts.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;		None
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;		None
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  2    4[BANK1 ] int 
  3974 ;; Registers used:
  3975 ;;		wreg, status,2, status,0, cstack
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  3981 ;;      Params:         0       0       2       0       0
  3982 ;;      Locals:         0       0       0       0       0
  3983 ;;      Temps:          0       0       0       0       0
  3984 ;;      Totals:         0       0       2       0       0
  3985 ;;Total ram usage:        2 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; Hardware stack levels required when called:   12
  3988 ;; This function calls:
  3989 ;;		_in_high_int
  3990 ;;		_in_low_int
  3991 ;; This function is called by:
  3992 ;;		_block_on_To_msgqueues
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           
  3996                           	psect	text20
  3997  001AE6                     __ptext20:
  3998                           	opt stack 0
  3999  001AE6                     _in_main:
  4000                           	opt stack 16
  4001                           
  4002                           ;interrupts.c: 45: if ((!in_low_int()) && (!in_high_int())) {
  4003                           
  4004                           ;incstack = 0
  4005  001AE6  EC2D  F00D         	call	_in_low_int	;wreg free
  4006  001AEA  0101               	movlb	1	; () banked
  4007  001AEC  0101               	movlb	1	; () banked
  4008  001AEE  5185               	movf	(?_in_low_int+1)& (0+255),w,b
  4009  001AF0  0101               	movlb	1	; () banked
  4010  001AF2  1184               	iorwf	?_in_low_int& (0+255),w,b
  4011  001AF4  A4D8               	btfss	status,2,c
  4012  001AF6  D011               	goto	l3263
  4013                           
  4014                           ; BSR set to: 1
  4015  001AF8  ECBE  F00F         	call	_in_high_int	;wreg free
  4016  001AFC  0101               	movlb	1	; () banked
  4017  001AFE  0101               	movlb	1	; () banked
  4018  001B00  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4019  001B02  0101               	movlb	1	; () banked
  4020  001B04  1182               	iorwf	?_in_high_int& (0+255),w,b
  4021  001B06  A4D8               	btfss	status,2,c
  4022  001B08  D008               	goto	l3263
  4023                           
  4024                           ; BSR set to: 1
  4025                           ;interrupts.c: 46: return (1);
  4026  001B0A  0E00               	movlw	0
  4027  001B0C  0101               	movlb	1	; () banked
  4028  001B0E  0101               	movlb	1	; () banked
  4029  001B10  6F87               	movwf	(?_in_main+1)& (0+255),b
  4030  001B12  0E01               	movlw	1
  4031  001B14  0101               	movlb	1	; () banked
  4032  001B16  6F86               	movwf	?_in_main& (0+255),b
  4033  001B18  0012               	return	
  4034  001B1A                     l3263:
  4035                           
  4036                           ; BSR set to: 1
  4037                           ;interrupts.c: 48: return (0);
  4038  001B1A  0E00               	movlw	0
  4039  001B1C  0101               	movlb	1	; () banked
  4040  001B1E  0101               	movlb	1	; () banked
  4041  001B20  6F87               	movwf	(?_in_main+1)& (0+255),b
  4042  001B22  0E00               	movlw	0
  4043  001B24  0101               	movlb	1	; () banked
  4044  001B26  6F86               	movwf	?_in_main& (0+255),b
  4045  001B28  0012               	return	
  4046  001B2A                     __end_of_in_main:
  4047                           	opt stack 0
  4048                           tblptru	equ	0xFF8
  4049                           prodh	equ	0xFF4
  4050                           prodl	equ	0xFF3
  4051                           intcon	equ	0xFF2
  4052                           postinc0	equ	0xFEE
  4053                           wreg	equ	0xFE8
  4054                           indf1	equ	0xFE7
  4055                           fsr1h	equ	0xFE2
  4056                           fsr1l	equ	0xFE1
  4057                           indf2	equ	0xFDF
  4058                           postinc2	equ	0xFDE
  4059                           postdec2	equ	0xFDD
  4060                           fsr2h	equ	0xFDA
  4061                           fsr2l	equ	0xFD9
  4062                           status	equ	0xFD8
  4063                           
  4064 ;; *************** function _in_low_int *****************
  4065 ;; Defined at:
  4066 ;;		line 33 in file "../src/interrupts.c"
  4067 ;; Parameters:    Size  Location     Type
  4068 ;;		None
  4069 ;; Auto vars:     Size  Location     Type
  4070 ;;		None
  4071 ;; Return value:  Size  Location     Type
  4072 ;;                  2    2[BANK1 ] int 
  4073 ;; Registers used:
  4074 ;;		wreg, status,2, status,0, cstack
  4075 ;; Tracked objects:
  4076 ;;		On entry : 0/0
  4077 ;;		On exit  : 0/0
  4078 ;;		Unchanged: 0/0
  4079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4080 ;;      Params:         0       0       2       0       0
  4081 ;;      Locals:         0       0       0       0       0
  4082 ;;      Temps:          0       0       0       0       0
  4083 ;;      Totals:         0       0       2       0       0
  4084 ;;Total ram usage:        2 bytes
  4085 ;; Hardware stack levels used:    1
  4086 ;; Hardware stack levels required when called:   11
  4087 ;; This function calls:
  4088 ;;		_in_high_int
  4089 ;; This function is called by:
  4090 ;;		_in_main
  4091 ;; This function uses a non-reentrant model
  4092 ;;
  4093                           
  4094                           	psect	text21
  4095  001A5A                     __ptext21:
  4096                           	opt stack 0
  4097  001A5A                     _in_low_int:
  4098                           	opt stack 16
  4099                           
  4100                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  4101                           
  4102                           ; BSR set to: 1
  4103                           ;incstack = 0
  4104  001A5A  ACF2               	btfss	intcon,6,c	;volatile
  4105  001A5C  D008               	goto	l3241
  4106                           
  4107                           ;interrupts.c: 36: return (0);
  4108  001A5E  0E00               	movlw	0
  4109  001A60  0101               	movlb	1	; () banked
  4110  001A62  0101               	movlb	1	; () banked
  4111  001A64  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4112  001A66  0E00               	movlw	0
  4113  001A68  0101               	movlb	1	; () banked
  4114  001A6A  6F84               	movwf	?_in_low_int& (0+255),b
  4115  001A6C  0012               	return	
  4116  001A6E                     l3241:
  4117  001A6E  ECBE  F00F         	call	_in_high_int	;wreg free
  4118  001A72  0101               	movlb	1	; () banked
  4119  001A74  0101               	movlb	1	; () banked
  4120  001A76  5183               	movf	(?_in_high_int+1)& (0+255),w,b
  4121  001A78  0101               	movlb	1	; () banked
  4122  001A7A  1182               	iorwf	?_in_high_int& (0+255),w,b
  4123  001A7C  B4D8               	btfsc	status,2,c
  4124  001A7E  D008               	goto	l3249
  4125                           
  4126                           ; BSR set to: 1
  4127                           ;interrupts.c: 38: return (0);
  4128  001A80  0E00               	movlw	0
  4129  001A82  0101               	movlb	1	; () banked
  4130  001A84  0101               	movlb	1	; () banked
  4131  001A86  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4132  001A88  0E00               	movlw	0
  4133  001A8A  0101               	movlb	1	; () banked
  4134  001A8C  6F84               	movwf	?_in_low_int& (0+255),b
  4135  001A8E  0012               	return	
  4136  001A90                     l3249:
  4137                           
  4138                           ; BSR set to: 1
  4139                           ;interrupts.c: 40: return (1);
  4140  001A90  0E00               	movlw	0
  4141  001A92  0101               	movlb	1	; () banked
  4142  001A94  0101               	movlb	1	; () banked
  4143  001A96  6F85               	movwf	(?_in_low_int+1)& (0+255),b
  4144  001A98  0E01               	movlw	1
  4145  001A9A  0101               	movlb	1	; () banked
  4146  001A9C  6F84               	movwf	?_in_low_int& (0+255),b
  4147  001A9E  0012               	return	
  4148  001AA0                     __end_of_in_low_int:
  4149                           	opt stack 0
  4150                           tblptru	equ	0xFF8
  4151                           prodh	equ	0xFF4
  4152                           prodl	equ	0xFF3
  4153                           intcon	equ	0xFF2
  4154                           postinc0	equ	0xFEE
  4155                           wreg	equ	0xFE8
  4156                           indf1	equ	0xFE7
  4157                           fsr1h	equ	0xFE2
  4158                           fsr1l	equ	0xFE1
  4159                           indf2	equ	0xFDF
  4160                           postinc2	equ	0xFDE
  4161                           postdec2	equ	0xFDD
  4162                           fsr2h	equ	0xFDA
  4163                           fsr2l	equ	0xFD9
  4164                           status	equ	0xFD8
  4165                           
  4166 ;; *************** function _in_high_int *****************
  4167 ;; Defined at:
  4168 ;;		line 24 in file "../src/interrupts.c"
  4169 ;; Parameters:    Size  Location     Type
  4170 ;;		None
  4171 ;; Auto vars:     Size  Location     Type
  4172 ;;		None
  4173 ;; Return value:  Size  Location     Type
  4174 ;;                  2    0[BANK1 ] int 
  4175 ;; Registers used:
  4176 ;;		wreg, status,2
  4177 ;; Tracked objects:
  4178 ;;		On entry : 0/0
  4179 ;;		On exit  : 0/0
  4180 ;;		Unchanged: 0/0
  4181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4182 ;;      Params:         0       0       2       0       0
  4183 ;;      Locals:         0       0       0       0       0
  4184 ;;      Temps:          0       0       0       0       0
  4185 ;;      Totals:         0       0       2       0       0
  4186 ;;Total ram usage:        2 bytes
  4187 ;; Hardware stack levels used:    1
  4188 ;; Hardware stack levels required when called:   10
  4189 ;; This function calls:
  4190 ;;		Nothing
  4191 ;; This function is called by:
  4192 ;;		_in_low_int
  4193 ;;		_in_main
  4194 ;; This function uses a non-reentrant model
  4195 ;;
  4196                           
  4197                           	psect	text22
  4198  001F7C                     __ptext22:
  4199                           	opt stack 0
  4200  001F7C                     _in_high_int:
  4201                           	opt stack 16
  4202                           
  4203                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  4204                           
  4205                           ; BSR set to: 1
  4206                           ;incstack = 0
  4207  001F7C  0E00               	movlw	0
  4208  001F7E  AEF2               	btfss	intcon,7,c	;volatile
  4209  001F80  0E01               	movlw	1
  4210  001F82  0101               	movlb	1	; () banked
  4211  001F84  0101               	movlb	1	; () banked
  4212  001F86  6F82               	movwf	?_in_high_int& (0+255),b
  4213  001F88  0101               	movlb	1	; () banked
  4214  001F8A  6B83               	clrf	(?_in_high_int+1)& (0+255),b
  4215  001F8C  0012               	return	
  4216  001F8E                     __end_of_in_high_int:
  4217                           	opt stack 0
  4218                           tblptru	equ	0xFF8
  4219                           prodh	equ	0xFF4
  4220                           prodl	equ	0xFF3
  4221                           intcon	equ	0xFF2
  4222                           postinc0	equ	0xFEE
  4223                           wreg	equ	0xFE8
  4224                           indf1	equ	0xFE7
  4225                           fsr1h	equ	0xFE2
  4226                           fsr1l	equ	0xFE1
  4227                           indf2	equ	0xFDF
  4228                           postinc2	equ	0xFDE
  4229                           postdec2	equ	0xFDD
  4230                           fsr2h	equ	0xFDA
  4231                           fsr2l	equ	0xFD9
  4232                           status	equ	0xFD8
  4233                           
  4234 ;; *************** function _check_msg *****************
  4235 ;; Defined at:
  4236 ;;		line 222 in file "../src/messages.c"
  4237 ;; Parameters:    Size  Location     Type
  4238 ;;  qptr            2    0[BANK1 ] PTR struct __msg_queue
  4239 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;		None
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      unsigned char 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4251 ;;      Params:         0       0       2       0       0
  4252 ;;      Locals:         0       0       0       0       0
  4253 ;;      Temps:          0       0       1       0       0
  4254 ;;      Totals:         0       0       3       0       0
  4255 ;;Total ram usage:        3 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:   10
  4258 ;; This function calls:
  4259 ;;		Nothing
  4260 ;; This function is called by:
  4261 ;;		_block_on_To_msgqueues
  4262 ;; This function uses a non-reentrant model
  4263 ;;
  4264                           
  4265                           	psect	text23
  4266  001DCA                     __ptext23:
  4267                           	opt stack 0
  4268  001DCA                     _check_msg:
  4269                           	opt stack 18
  4270                           
  4271                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  4272                           
  4273                           ; BSR set to: 1
  4274                           ;incstack = 0
  4275  001DCA  0101               	movlb	1	; () banked
  4276  001DCC  EE20 F035          	lfsr	2,53
  4277  001DD0  0101               	movlb	1	; () banked
  4278  001DD2  5182               	movf	check_msg@qptr& (0+255),w,b
  4279  001DD4  26D9               	addwf	fsr2l,f,c
  4280  001DD6  0101               	movlb	1	; () banked
  4281  001DD8  5183               	movf	(check_msg@qptr+1)& (0+255),w,b
  4282  001DDA  22DA               	addwfc	fsr2h,f,c
  4283  001DDC  50DF               	movf	indf2,w,c
  4284  001DDE  0101               	movlb	1	; () banked
  4285  001DE0  6F84               	movwf	??_check_msg& (0+255),b
  4286  001DE2  0101               	movlb	1	; () banked
  4287  001DE4  5184               	movf	??_check_msg& (0+255),w,b
  4288  001DE6  0D0D               	mullw	13
  4289  001DE8  50F3               	movf	prodl,w,c
  4290  001DEA  0101               	movlb	1	; () banked
  4291  001DEC  0101               	movlb	1	; () banked
  4292  001DEE  2582               	addwf	check_msg@qptr& (0+255),w,b
  4293  001DF0  6ED9               	movwf	fsr2l,c
  4294  001DF2  50F4               	movf	prodh,w,c
  4295  001DF4  0101               	movlb	1	; () banked
  4296  001DF6  0101               	movlb	1	; () banked
  4297  001DF8  2183               	addwfc	(check_msg@qptr+1)& (0+255),w,b
  4298  001DFA  6EDA               	movwf	fsr2h,c
  4299  001DFC  50DF               	movf	indf2,w,c
  4300  001DFE  0012               	return	
  4301  001E00                     __end_of_check_msg:
  4302                           	opt stack 0
  4303                           tblptru	equ	0xFF8
  4304                           prodh	equ	0xFF4
  4305                           prodl	equ	0xFF3
  4306                           intcon	equ	0xFF2
  4307                           postinc0	equ	0xFEE
  4308                           wreg	equ	0xFE8
  4309                           indf1	equ	0xFE7
  4310                           fsr1h	equ	0xFE2
  4311                           fsr1l	equ	0xFE1
  4312                           indf2	equ	0xFDF
  4313                           postinc2	equ	0xFDE
  4314                           postdec2	equ	0xFDD
  4315                           fsr2h	equ	0xFDA
  4316                           fsr2l	equ	0xFD9
  4317                           status	equ	0xFD8
  4318                           
  4319 ;; *************** function _Delay1KTCYx *****************
  4320 ;; Defined at:
  4321 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\d1ktcyx.c"
  4322 ;; Parameters:    Size  Location     Type
  4323 ;;  unit            1    wreg     unsigned char 
  4324 ;; Auto vars:     Size  Location     Type
  4325 ;;  unit            1    0[BANK1 ] unsigned char 
  4326 ;; Return value:  Size  Location     Type
  4327 ;;		None               void
  4328 ;; Registers used:
  4329 ;;		wreg
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4335 ;;      Params:         0       0       0       0       0
  4336 ;;      Locals:         0       0       1       0       0
  4337 ;;      Temps:          0       0       0       0       0
  4338 ;;      Totals:         0       0       1       0       0
  4339 ;;Total ram usage:        1 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:   10
  4342 ;; This function calls:
  4343 ;;		Nothing
  4344 ;; This function is called by:
  4345 ;;		_block_on_To_msgqueues
  4346 ;; This function uses a non-reentrant model
  4347 ;;
  4348                           
  4349                           	psect	text24
  4350  001F2E                     __ptext24:
  4351                           	opt stack 0
  4352  001F2E                     _Delay1KTCYx:
  4353                           	opt stack 18
  4354                           
  4355                           ; BSR set to: 1
  4356                           ;incstack = 0
  4357                           ;Delay1KTCYx@unit stored from wreg
  4358  001F2E  CFE8 F182          	movff	wreg,Delay1KTCYx@unit
  4359  001F32                     l877:
  4360  001F32  0EFA               	movlw	250
  4361  001F34                     u2737:
  4362  001F34  F000               	nop	
  4363  001F36  2EE8               	decfsz	wreg,f,c
  4364  001F38  D7FD               	goto	u2737
  4365  001F3A  0101               	movlb	1	; () banked
  4366  001F3C  0101               	movlb	1	; () banked
  4367  001F3E  2F82               	decfsz	Delay1KTCYx@unit& (0+255),f,b
  4368  001F40  D7F8               	goto	l877
  4369  001F42  0012               	return	
  4370  001F44                     __end_of_Delay1KTCYx:
  4371                           	opt stack 0
  4372                           tblptru	equ	0xFF8
  4373                           prodh	equ	0xFF4
  4374                           prodl	equ	0xFF3
  4375                           intcon	equ	0xFF2
  4376                           postinc0	equ	0xFEE
  4377                           wreg	equ	0xFE8
  4378                           indf1	equ	0xFE7
  4379                           fsr1h	equ	0xFE2
  4380                           fsr1l	equ	0xFE1
  4381                           indf2	equ	0xFDF
  4382                           postinc2	equ	0xFDE
  4383                           postdec2	equ	0xFDD
  4384                           fsr2h	equ	0xFDA
  4385                           fsr2l	equ	0xFD9
  4386                           status	equ	0xFD8
  4387                           
  4388 ;; *************** function _ToMainLow_recvmsg *****************
  4389 ;; Defined at:
  4390 ;;		line 112 in file "../src/messages.c"
  4391 ;; Parameters:    Size  Location     Type
  4392 ;;  maxlength       1    wreg     unsigned char 
  4393 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4394 ;;		 -> main@msgtype(1), 
  4395 ;;  data            2   26[BANK1 ] PTR void 
  4396 ;;		 -> main@msgbuffer(11), 
  4397 ;; Auto vars:     Size  Location     Type
  4398 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4399 ;; Return value:  Size  Location     Type
  4400 ;;                  1    wreg      char 
  4401 ;; Registers used:
  4402 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4403 ;; Tracked objects:
  4404 ;;		On entry : 0/0
  4405 ;;		On exit  : 0/0
  4406 ;;		Unchanged: 0/0
  4407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4408 ;;      Params:         0       0       4       0       0
  4409 ;;      Locals:         0       0       1       0       0
  4410 ;;      Temps:          0       0       0       0       0
  4411 ;;      Totals:         0       0       5       0       0
  4412 ;;Total ram usage:        5 bytes
  4413 ;; Hardware stack levels used:    1
  4414 ;; Hardware stack levels required when called:   12
  4415 ;; This function calls:
  4416 ;;		_recv_msg
  4417 ;; This function is called by:
  4418 ;;		_main
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text25
  4423  001B6C                     __ptext25:
  4424                           	opt stack 0
  4425  001B6C                     _ToMainLow_recvmsg:
  4426                           	opt stack 17
  4427                           
  4428                           ; BSR set to: 1
  4429                           ;incstack = 0
  4430                           ;ToMainLow_recvmsg@maxlength stored from wreg
  4431  001B6C  CFE8 F19E          	movff	wreg,ToMainLow_recvmsg@maxlength
  4432                           
  4433                           ;messages.c: 118: return (recv_msg(&ToMainLow_MQ, maxlength, msgtype, data));
  4434  001B70  0101               	movlb	1	; () banked
  4435  001B72  0E01               	movlw	high _ToMainLow_MQ
  4436  001B74  0101               	movlb	1	; () banked
  4437  001B76  0101               	movlb	1	; () banked
  4438  001B78  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  4439  001B7A  0101               	movlb	1	; () banked
  4440  001B7C  0E4C               	movlw	low _ToMainLow_MQ
  4441  001B7E  0101               	movlb	1	; () banked
  4442  001B80  0101               	movlb	1	; () banked
  4443  001B82  6F8C               	movwf	recv_msg@qptr& (0+255),b
  4444  001B84  C19E  F18E         	movff	ToMainLow_recvmsg@maxlength,recv_msg@maxlength
  4445  001B88  0101               	movlb	1	; () banked
  4446  001B8A  0101               	movlb	1	; () banked
  4447  001B8C  C19B  F190         	movff	ToMainLow_recvmsg@msgtype+1,recv_msg@msgtype+1
  4448  001B90  0101               	movlb	1	; () banked
  4449  001B92  0101               	movlb	1	; () banked
  4450  001B94  C19A  F18F         	movff	ToMainLow_recvmsg@msgtype,recv_msg@msgtype
  4451  001B98  0101               	movlb	1	; () banked
  4452  001B9A  0101               	movlb	1	; () banked
  4453  001B9C  C19D  F192         	movff	ToMainLow_recvmsg@data+1,recv_msg@data+1
  4454  001BA0  0101               	movlb	1	; () banked
  4455  001BA2  0101               	movlb	1	; () banked
  4456  001BA4  C19C  F191         	movff	ToMainLow_recvmsg@data,recv_msg@data
  4457  001BA8  EC2F  F006         	call	_recv_msg	;wreg free
  4458  001BAC  0012               	return	
  4459  001BAE                     __end_of_ToMainLow_recvmsg:
  4460                           	opt stack 0
  4461                           tblptru	equ	0xFF8
  4462                           prodh	equ	0xFF4
  4463                           prodl	equ	0xFF3
  4464                           intcon	equ	0xFF2
  4465                           postinc0	equ	0xFEE
  4466                           wreg	equ	0xFE8
  4467                           indf1	equ	0xFE7
  4468                           fsr1h	equ	0xFE2
  4469                           fsr1l	equ	0xFE1
  4470                           indf2	equ	0xFDF
  4471                           postinc2	equ	0xFDE
  4472                           postdec2	equ	0xFDD
  4473                           fsr2h	equ	0xFDA
  4474                           fsr2l	equ	0xFD9
  4475                           status	equ	0xFD8
  4476                           
  4477 ;; *************** function _ToMainHigh_recvmsg *****************
  4478 ;; Defined at:
  4479 ;;		line 135 in file "../src/messages.c"
  4480 ;; Parameters:    Size  Location     Type
  4481 ;;  maxlength       1    wreg     unsigned char 
  4482 ;;  msgtype         2   24[BANK1 ] PTR unsigned char 
  4483 ;;		 -> main@msgtype(1), 
  4484 ;;  data            2   26[BANK1 ] PTR void 
  4485 ;;		 -> main@msgbuffer(11), 
  4486 ;; Auto vars:     Size  Location     Type
  4487 ;;  maxlength       1   28[BANK1 ] unsigned char 
  4488 ;; Return value:  Size  Location     Type
  4489 ;;                  1    wreg      char 
  4490 ;; Registers used:
  4491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4492 ;; Tracked objects:
  4493 ;;		On entry : 0/0
  4494 ;;		On exit  : 0/0
  4495 ;;		Unchanged: 0/0
  4496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4497 ;;      Params:         0       0       4       0       0
  4498 ;;      Locals:         0       0       1       0       0
  4499 ;;      Temps:          0       0       0       0       0
  4500 ;;      Totals:         0       0       5       0       0
  4501 ;;Total ram usage:        5 bytes
  4502 ;; Hardware stack levels used:    1
  4503 ;; Hardware stack levels required when called:   12
  4504 ;; This function calls:
  4505 ;;		_recv_msg
  4506 ;; This function is called by:
  4507 ;;		_main
  4508 ;; This function uses a non-reentrant model
  4509 ;;
  4510                           
  4511                           	psect	text26
  4512  001BAE                     __ptext26:
  4513                           	opt stack 0
  4514  001BAE                     _ToMainHigh_recvmsg:
  4515                           	opt stack 17
  4516                           
  4517                           ;incstack = 0
  4518                           ;ToMainHigh_recvmsg@maxlength stored from wreg
  4519  001BAE  CFE8 F19E          	movff	wreg,ToMainHigh_recvmsg@maxlength
  4520                           
  4521                           ;messages.c: 141: return (recv_msg(&ToMainHigh_MQ, maxlength, msgtype, data));
  4522  001BB2  0100               	movlb	0	; () banked
  4523  001BB4  0E00               	movlw	high _ToMainHigh_MQ
  4524  001BB6  0101               	movlb	1	; () banked
  4525  001BB8  0101               	movlb	1	; () banked
  4526  001BBA  6F8D               	movwf	(recv_msg@qptr+1)& (0+255),b
  4527  001BBC  0100               	movlb	0	; () banked
  4528  001BBE  0E80               	movlw	low _ToMainHigh_MQ
  4529  001BC0  0101               	movlb	1	; () banked
  4530  001BC2  0101               	movlb	1	; () banked
  4531  001BC4  6F8C               	movwf	recv_msg@qptr& (0+255),b
  4532  001BC6  C19E  F18E         	movff	ToMainHigh_recvmsg@maxlength,recv_msg@maxlength
  4533  001BCA  0101               	movlb	1	; () banked
  4534  001BCC  0101               	movlb	1	; () banked
  4535  001BCE  C19B  F190         	movff	ToMainHigh_recvmsg@msgtype+1,recv_msg@msgtype+1
  4536  001BD2  0101               	movlb	1	; () banked
  4537  001BD4  0101               	movlb	1	; () banked
  4538  001BD6  C19A  F18F         	movff	ToMainHigh_recvmsg@msgtype,recv_msg@msgtype
  4539  001BDA  0101               	movlb	1	; () banked
  4540  001BDC  0101               	movlb	1	; () banked
  4541  001BDE  C19D  F192         	movff	ToMainHigh_recvmsg@data+1,recv_msg@data+1
  4542  001BE2  0101               	movlb	1	; () banked
  4543  001BE4  0101               	movlb	1	; () banked
  4544  001BE6  C19C  F191         	movff	ToMainHigh_recvmsg@data,recv_msg@data
  4545  001BEA  EC2F  F006         	call	_recv_msg	;wreg free
  4546  001BEE  0012               	return	
  4547  001BF0                     __end_of_ToMainHigh_recvmsg:
  4548                           	opt stack 0
  4549                           tblptru	equ	0xFF8
  4550                           prodh	equ	0xFF4
  4551                           prodl	equ	0xFF3
  4552                           intcon	equ	0xFF2
  4553                           postinc0	equ	0xFEE
  4554                           wreg	equ	0xFE8
  4555                           indf1	equ	0xFE7
  4556                           fsr1h	equ	0xFE2
  4557                           fsr1l	equ	0xFE1
  4558                           indf2	equ	0xFDF
  4559                           postinc2	equ	0xFDE
  4560                           postdec2	equ	0xFDD
  4561                           fsr2h	equ	0xFDA
  4562                           fsr2l	equ	0xFD9
  4563                           status	equ	0xFD8
  4564                           
  4565 ;; *************** function _recv_msg *****************
  4566 ;; Defined at:
  4567 ;;		line 63 in file "../src/messages.c"
  4568 ;; Parameters:    Size  Location     Type
  4569 ;;  qptr            2   10[BANK1 ] PTR struct __msg_queue
  4570 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4571 ;;  maxlength       1   12[BANK1 ] unsigned char 
  4572 ;;  msgtype         2   13[BANK1 ] PTR unsigned char 
  4573 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  4574 ;;  data            2   15[BANK1 ] PTR void 
  4575 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  4576 ;; Auto vars:     Size  Location     Type
  4577 ;;  qmsg            2   22[BANK1 ] PTR struct __msg
  4578 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4579 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  4580 ;;  tlength         2   20[BANK1 ] unsigned int 
  4581 ;;  slot            1   19[BANK1 ] unsigned char 
  4582 ;; Return value:  Size  Location     Type
  4583 ;;                  1    wreg      char 
  4584 ;; Registers used:
  4585 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4586 ;; Tracked objects:
  4587 ;;		On entry : 0/0
  4588 ;;		On exit  : 0/0
  4589 ;;		Unchanged: 0/0
  4590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4591 ;;      Params:         0       0       7       0       0
  4592 ;;      Locals:         0       0       5       0       0
  4593 ;;      Temps:          0       0       2       0       0
  4594 ;;      Totals:         0       0      14       0       0
  4595 ;;Total ram usage:       14 bytes
  4596 ;; Hardware stack levels used:    1
  4597 ;; Hardware stack levels required when called:   11
  4598 ;; This function calls:
  4599 ;;		_memcpy
  4600 ;; This function is called by:
  4601 ;;		_ToMainLow_recvmsg
  4602 ;;		_ToMainHigh_recvmsg
  4603 ;;		_FromMainLow_recvmsg
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text27
  4608  000C5E                     __ptext27:
  4609                           	opt stack 0
  4610  000C5E                     _recv_msg:
  4611                           	opt stack 17
  4612                           
  4613                           ;messages.c: 64: unsigned char slot;
  4614                           ;messages.c: 68: msg *qmsg;
  4615                           ;messages.c: 69: size_t tlength;
  4616                           ;messages.c: 72: slot = qptr->cur_read_ind;
  4617                           
  4618                           ;incstack = 0
  4619  000C5E  0101               	movlb	1	; () banked
  4620  000C60  EE20 F035          	lfsr	2,53
  4621  000C64  0101               	movlb	1	; () banked
  4622  000C66  518C               	movf	recv_msg@qptr& (0+255),w,b
  4623  000C68  26D9               	addwf	fsr2l,f,c
  4624  000C6A  0101               	movlb	1	; () banked
  4625  000C6C  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4626  000C6E  22DA               	addwfc	fsr2h,f,c
  4627  000C70  50DF               	movf	indf2,w,c
  4628  000C72  0101               	movlb	1	; () banked
  4629  000C74  0101               	movlb	1	; () banked
  4630  000C76  6F95               	movwf	recv_msg@slot& (0+255),b
  4631                           
  4632                           ; BSR set to: 1
  4633                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  4634  000C78  0101               	movlb	1	; () banked
  4635  000C7A  0101               	movlb	1	; () banked
  4636  000C7C  5195               	movf	recv_msg@slot& (0+255),w,b
  4637  000C7E  0D0D               	mullw	13
  4638  000C80  50F3               	movf	prodl,w,c
  4639  000C82  0101               	movlb	1	; () banked
  4640  000C84  0101               	movlb	1	; () banked
  4641  000C86  258C               	addwf	recv_msg@qptr& (0+255),w,b
  4642  000C88  0101               	movlb	1	; () banked
  4643  000C8A  0101               	movlb	1	; () banked
  4644  000C8C  6F98               	movwf	recv_msg@qmsg& (0+255),b
  4645  000C8E  50F4               	movf	prodh,w,c
  4646  000C90  0101               	movlb	1	; () banked
  4647  000C92  0101               	movlb	1	; () banked
  4648  000C94  218D               	addwfc	(recv_msg@qptr+1)& (0+255),w,b
  4649  000C96  0101               	movlb	1	; () banked
  4650  000C98  6F99               	movwf	(recv_msg@qmsg+1)& (0+255),b
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;messages.c: 74: if (qmsg->full == 1) {
  4654  000C9A  0E01               	movlw	1
  4655  000C9C  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  4656  000CA0  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4657  000CA4  62DF               	cpfseq	indf2,c
  4658  000CA6  D074               	goto	l3665
  4659                           
  4660                           ; BSR set to: 1
  4661                           ;messages.c: 76: if (qmsg->length > maxlength) {
  4662  000CA8  0101               	movlb	1	; () banked
  4663  000CAA  EE20 F001          	lfsr	2,1
  4664  000CAE  0101               	movlb	1	; () banked
  4665  000CB0  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4666  000CB2  26D9               	addwf	fsr2l,f,c
  4667  000CB4  0101               	movlb	1	; () banked
  4668  000CB6  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4669  000CB8  22DA               	addwfc	fsr2h,f,c
  4670  000CBA  50DF               	movf	indf2,w,c
  4671  000CBC  0101               	movlb	1	; () banked
  4672  000CBE  0101               	movlb	1	; () banked
  4673  000CC0  5D8E               	subwf	recv_msg@maxlength& (0+255),w,b
  4674  000CC2  B0D8               	btfsc	status,0,c
  4675  000CC4  D002               	goto	l3649
  4676                           
  4677                           ; BSR set to: 1
  4678                           ;messages.c: 77: return (-3);
  4679  000CC6  0EFD               	movlw	253
  4680  000CC8  0012               	return	
  4681  000CCA                     l3649:
  4682                           
  4683                           ; BSR set to: 1
  4684                           ;messages.c: 78: }
  4685                           ;messages.c: 80: tlength = qmsg->length;
  4686  000CCA  0101               	movlb	1	; () banked
  4687  000CCC  EE20 F001          	lfsr	2,1
  4688  000CD0  0101               	movlb	1	; () banked
  4689  000CD2  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4690  000CD4  26D9               	addwf	fsr2l,f,c
  4691  000CD6  0101               	movlb	1	; () banked
  4692  000CD8  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4693  000CDA  22DA               	addwfc	fsr2h,f,c
  4694  000CDC  50DF               	movf	indf2,w,c
  4695  000CDE  0101               	movlb	1	; () banked
  4696  000CE0  6F93               	movwf	??_recv_msg& (0+255),b
  4697  000CE2  0101               	movlb	1	; () banked
  4698  000CE4  5193               	movf	??_recv_msg& (0+255),w,b
  4699  000CE6  0101               	movlb	1	; () banked
  4700  000CE8  0101               	movlb	1	; () banked
  4701  000CEA  6F96               	movwf	recv_msg@tlength& (0+255),b
  4702  000CEC  0101               	movlb	1	; () banked
  4703  000CEE  6B97               	clrf	(recv_msg@tlength+1)& (0+255),b
  4704                           
  4705                           ; BSR set to: 1
  4706                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  4707  000CF0  0101               	movlb	1	; () banked
  4708  000CF2  0101               	movlb	1	; () banked
  4709  000CF4  C192  F183         	movff	recv_msg@data+1,memcpy@d1+1
  4710  000CF8  0101               	movlb	1	; () banked
  4711  000CFA  0101               	movlb	1	; () banked
  4712  000CFC  C191  F182         	movff	recv_msg@data,memcpy@d1
  4713  000D00  0E03               	movlw	3
  4714  000D02  0101               	movlb	1	; () banked
  4715  000D04  0101               	movlb	1	; () banked
  4716  000D06  2598               	addwf	recv_msg@qmsg& (0+255),w,b
  4717  000D08  0101               	movlb	1	; () banked
  4718  000D0A  6F93               	movwf	??_recv_msg& (0+255),b
  4719  000D0C  0E00               	movlw	0
  4720  000D0E  0101               	movlb	1	; () banked
  4721  000D10  0101               	movlb	1	; () banked
  4722  000D12  2199               	addwfc	(recv_msg@qmsg+1)& (0+255),w,b
  4723  000D14  0101               	movlb	1	; () banked
  4724  000D16  6F94               	movwf	(??_recv_msg+1)& (0+255),b
  4725  000D18  C193  F184         	movff	??_recv_msg,memcpy@s1
  4726  000D1C  C194  F185         	movff	??_recv_msg+1,memcpy@s1+1
  4727  000D20  C196  F186         	movff	recv_msg@tlength,memcpy@n
  4728  000D24  C197  F187         	movff	recv_msg@tlength+1,memcpy@n+1
  4729  000D28  ECCF  F00C         	call	_memcpy	;wreg free
  4730                           
  4731                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  4732  000D2C  0101               	movlb	1	; () banked
  4733  000D2E  EE20 F035          	lfsr	2,53
  4734  000D32  0101               	movlb	1	; () banked
  4735  000D34  518C               	movf	recv_msg@qptr& (0+255),w,b
  4736  000D36  26D9               	addwf	fsr2l,f,c
  4737  000D38  0101               	movlb	1	; () banked
  4738  000D3A  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4739  000D3C  22DA               	addwfc	fsr2h,f,c
  4740  000D3E  0101               	movlb	1	; () banked
  4741  000D40  EE10 F035          	lfsr	1,53
  4742  000D44  0101               	movlb	1	; () banked
  4743  000D46  518C               	movf	recv_msg@qptr& (0+255),w,b
  4744  000D48  26E1               	addwf	fsr1l,f,c
  4745  000D4A  0101               	movlb	1	; () banked
  4746  000D4C  518D               	movf	(recv_msg@qptr+1)& (0+255),w,b
  4747  000D4E  22E2               	addwfc	fsr1h,f,c
  4748  000D50  50E7               	movf	indf1,w,c
  4749  000D52  0101               	movlb	1	; () banked
  4750  000D54  6F93               	movwf	??_recv_msg& (0+255),b
  4751  000D56  0101               	movlb	1	; () banked
  4752  000D58  2993               	incf	??_recv_msg& (0+255),w,b
  4753  000D5A  0B03               	andlw	3
  4754  000D5C  6EDF               	movwf	indf2,c
  4755                           
  4756                           ; BSR set to: 1
  4757                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  4758  000D5E  0101               	movlb	1	; () banked
  4759  000D60  EE20 F002          	lfsr	2,2
  4760  000D64  0101               	movlb	1	; () banked
  4761  000D66  5198               	movf	recv_msg@qmsg& (0+255),w,b
  4762  000D68  26D9               	addwf	fsr2l,f,c
  4763  000D6A  0101               	movlb	1	; () banked
  4764  000D6C  5199               	movf	(recv_msg@qmsg+1)& (0+255),w,b
  4765  000D6E  22DA               	addwfc	fsr2h,f,c
  4766  000D70  C18F  FFE1         	movff	recv_msg@msgtype,fsr1l
  4767  000D74  C190  FFE2         	movff	recv_msg@msgtype+1,fsr1h
  4768  000D78  CFDF FFE7          	movff	indf2,indf1
  4769                           
  4770                           ; BSR set to: 1
  4771                           ;messages.c: 91: qmsg->full = 0;
  4772  000D7C  C198  FFD9         	movff	recv_msg@qmsg,fsr2l
  4773  000D80  C199  FFDA         	movff	recv_msg@qmsg+1,fsr2h
  4774  000D84  0E00               	movlw	0
  4775  000D86  6EDF               	movwf	indf2,c
  4776                           
  4777                           ; BSR set to: 1
  4778                           ;messages.c: 92: return (tlength);
  4779  000D88  0101               	movlb	1	; () banked
  4780  000D8A  0101               	movlb	1	; () banked
  4781  000D8C  5196               	movf	recv_msg@tlength& (0+255),w,b
  4782  000D8E  0012               	return	
  4783  000D90                     l3665:
  4784                           
  4785                           ; BSR set to: 1
  4786                           ;messages.c: 94: return (-4);
  4787  000D90  0EFC               	movlw	252
  4788  000D92  0012               	return	
  4789  000D94                     __end_of_recv_msg:
  4790                           	opt stack 0
  4791                           tblptru	equ	0xFF8
  4792                           prodh	equ	0xFF4
  4793                           prodl	equ	0xFF3
  4794                           intcon	equ	0xFF2
  4795                           postinc0	equ	0xFEE
  4796                           wreg	equ	0xFE8
  4797                           indf1	equ	0xFE7
  4798                           fsr1h	equ	0xFE2
  4799                           fsr1l	equ	0xFE1
  4800                           indf2	equ	0xFDF
  4801                           postinc2	equ	0xFDE
  4802                           postdec2	equ	0xFDD
  4803                           fsr2h	equ	0xFDA
  4804                           fsr2l	equ	0xFD9
  4805                           status	equ	0xFD8
  4806                           
  4807 ;; *************** function _memcpy *****************
  4808 ;; Defined at:
  4809 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  4810 ;; Parameters:    Size  Location     Type
  4811 ;;  d1              2    0[BANK1 ] PTR void 
  4812 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4813 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4814 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4815 ;;  s1              2    2[BANK1 ] PTR const void 
  4816 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4817 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4818 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4819 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4820 ;;		 -> main@uc(23), 
  4821 ;;  n               2    4[BANK1 ] unsigned int 
  4822 ;; Auto vars:     Size  Location     Type
  4823 ;;  s               2    8[BANK1 ] PTR const unsigned char 
  4824 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  4825 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  4826 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  4827 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  4828 ;;		 -> main@uc(23), 
  4829 ;;  d               2    6[BANK1 ] PTR unsigned char 
  4830 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  4831 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  4832 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  4833 ;; Return value:  Size  Location     Type
  4834 ;;                  2    0[BANK1 ] PTR void 
  4835 ;; Registers used:
  4836 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4837 ;; Tracked objects:
  4838 ;;		On entry : 0/0
  4839 ;;		On exit  : 0/0
  4840 ;;		Unchanged: 0/0
  4841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4842 ;;      Params:         0       0       6       0       0
  4843 ;;      Locals:         0       0       4       0       0
  4844 ;;      Temps:          0       0       0       0       0
  4845 ;;      Totals:         0       0      10       0       0
  4846 ;;Total ram usage:       10 bytes
  4847 ;; Hardware stack levels used:    1
  4848 ;; Hardware stack levels required when called:   10
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_send_msg
  4853 ;;		_recv_msg
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text28
  4858  00199E                     __ptext28:
  4859                           	opt stack 0
  4860  00199E                     _memcpy:
  4861                           	opt stack 16
  4862                           
  4863                           ; BSR set to: 1
  4864                           ;incstack = 0
  4865  00199E  0101               	movlb	1	; () banked
  4866  0019A0  0101               	movlb	1	; () banked
  4867  0019A2  C185  F18B         	movff	memcpy@s1+1,memcpy@s+1
  4868  0019A6  0101               	movlb	1	; () banked
  4869  0019A8  0101               	movlb	1	; () banked
  4870  0019AA  C184  F18A         	movff	memcpy@s1,memcpy@s
  4871  0019AE  0101               	movlb	1	; () banked
  4872  0019B0  0101               	movlb	1	; () banked
  4873  0019B2  C183  F189         	movff	memcpy@d1+1,memcpy@d+1
  4874  0019B6  0101               	movlb	1	; () banked
  4875  0019B8  0101               	movlb	1	; () banked
  4876  0019BA  C182  F188         	movff	memcpy@d1,memcpy@d
  4877  0019BE  D012               	goto	l3635
  4878  0019C0                     l3629:
  4879                           
  4880                           ; BSR set to: 1
  4881  0019C0  C18A  FFD9         	movff	memcpy@s,fsr2l
  4882  0019C4  C18B  FFDA         	movff	memcpy@s+1,fsr2h
  4883  0019C8  C188  FFE1         	movff	memcpy@d,fsr1l
  4884  0019CC  C189  FFE2         	movff	memcpy@d+1,fsr1h
  4885  0019D0  CFDF FFE7          	movff	indf2,indf1
  4886                           
  4887                           ; BSR set to: 1
  4888  0019D4  0101               	movlb	1	; () banked
  4889  0019D6  0101               	movlb	1	; () banked
  4890  0019D8  4B8A               	infsnz	memcpy@s& (0+255),f,b
  4891  0019DA  2B8B               	incf	(memcpy@s+1)& (0+255),f,b
  4892                           
  4893                           ; BSR set to: 1
  4894  0019DC  0101               	movlb	1	; () banked
  4895  0019DE  0101               	movlb	1	; () banked
  4896  0019E0  4B88               	infsnz	memcpy@d& (0+255),f,b
  4897  0019E2  2B89               	incf	(memcpy@d+1)& (0+255),f,b
  4898  0019E4                     l3635:
  4899                           
  4900                           ; BSR set to: 1
  4901  0019E4  0101               	movlb	1	; () banked
  4902  0019E6  0101               	movlb	1	; () banked
  4903  0019E8  0786               	decf	memcpy@n& (0+255),f,b
  4904  0019EA  A0D8               	btfss	status,0,c
  4905  0019EC  0787               	decf	(memcpy@n+1)& (0+255),f,b
  4906  0019EE  0101               	movlb	1	; () banked
  4907  0019F0  2986               	incf	memcpy@n& (0+255),w,b
  4908  0019F2  B4D8               	btfsc	status,2,c
  4909  0019F4  2987               	incf	(memcpy@n+1)& (0+255),w,b
  4910  0019F6  B4D8               	btfsc	status,2,c
  4911                           
  4912                           ; BSR set to: 1
  4913                           
  4914                           ; BSR set to: 1
  4915                           ;	Return value of _memcpy is never used
  4916  0019F8  0012               	return	
  4917  0019FA  D7E2               	goto	l3629
  4918  0019FC                     __end_of_memcpy:
  4919                           	opt stack 0
  4920                           tblptru	equ	0xFF8
  4921                           prodh	equ	0xFF4
  4922                           prodl	equ	0xFF3
  4923                           intcon	equ	0xFF2
  4924                           postinc0	equ	0xFEE
  4925                           wreg	equ	0xFE8
  4926                           indf1	equ	0xFE7
  4927                           fsr1h	equ	0xFE2
  4928                           fsr1l	equ	0xFE1
  4929                           indf2	equ	0xFDF
  4930                           postinc2	equ	0xFDE
  4931                           postdec2	equ	0xFDD
  4932                           fsr2h	equ	0xFDA
  4933                           fsr2l	equ	0xFD9
  4934                           status	equ	0xFD8
  4935                           
  4936 ;; *************** function _OpenUSART *****************
  4937 ;; Defined at:
  4938 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uopen.c"
  4939 ;; Parameters:    Size  Location     Type
  4940 ;;  config          1    wreg     unsigned char 
  4941 ;;  spbrg           2    0[BANK1 ] unsigned int 
  4942 ;; Auto vars:     Size  Location     Type
  4943 ;;  config          1    5[BANK1 ] unsigned char 
  4944 ;; Return value:  Size  Location     Type
  4945 ;;		None               void
  4946 ;; Registers used:
  4947 ;;		wreg, status,2
  4948 ;; Tracked objects:
  4949 ;;		On entry : 0/0
  4950 ;;		On exit  : 0/0
  4951 ;;		Unchanged: 0/0
  4952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  4953 ;;      Params:         0       0       2       0       0
  4954 ;;      Locals:         0       0       1       0       0
  4955 ;;      Temps:          0       0       3       0       0
  4956 ;;      Totals:         0       0       6       0       0
  4957 ;;Total ram usage:        6 bytes
  4958 ;; Hardware stack levels used:    1
  4959 ;; Hardware stack levels required when called:   10
  4960 ;; This function calls:
  4961 ;;		Nothing
  4962 ;; This function is called by:
  4963 ;;		_main
  4964 ;; This function uses a non-reentrant model
  4965 ;;
  4966                           
  4967                           	psect	text29
  4968  0013E0                     __ptext29:
  4969                           	opt stack 0
  4970  0013E0                     _OpenUSART:
  4971                           	opt stack 19
  4972                           
  4973                           ; BSR set to: 1
  4974                           ;incstack = 0
  4975                           ;OpenUSART@config stored from wreg
  4976  0013E0  CFE8 F187          	movff	wreg,OpenUSART@config
  4977  0013E4  0E00               	movlw	0
  4978  0013E6  6EAC               	movwf	4012,c	;volatile
  4979  0013E8  0E00               	movlw	0
  4980  0013EA  6EAB               	movwf	4011,c	;volatile
  4981  0013EC  0101               	movlb	1	; () banked
  4982  0013EE  0101               	movlb	1	; () banked
  4983  0013F0  B187               	btfsc	OpenUSART@config& (0+255),0,b
  4984                           
  4985                           ; BSR set to: 1
  4986  0013F2  88AC               	bsf	4012,4,c	;volatile
  4987                           
  4988                           ; BSR set to: 1
  4989                           
  4990                           ; BSR set to: 1
  4991  0013F4  0101               	movlb	1	; () banked
  4992  0013F6  0101               	movlb	1	; () banked
  4993  0013F8  A387               	btfss	OpenUSART@config& (0+255),1,b
  4994  0013FA  D002               	goto	l3481
  4995                           
  4996                           ; BSR set to: 1
  4997  0013FC  8CAC               	bsf	4012,6,c	;volatile
  4998  0013FE  8CAB               	bsf	4011,6,c	;volatile
  4999  001400                     l3481:
  5000                           
  5001                           ; BSR set to: 1
  5002  001400  0101               	movlb	1	; () banked
  5003  001402  0101               	movlb	1	; () banked
  5004  001404  B587               	btfsc	OpenUSART@config& (0+255),2,b
  5005                           
  5006                           ; BSR set to: 1
  5007  001406  8EAC               	bsf	4012,7,c	;volatile
  5008                           
  5009                           ; BSR set to: 1
  5010                           
  5011                           ; BSR set to: 1
  5012  001408  0101               	movlb	1	; () banked
  5013  00140A  0101               	movlb	1	; () banked
  5014  00140C  A787               	btfss	OpenUSART@config& (0+255),3,b
  5015  00140E  D002               	goto	l633
  5016                           
  5017                           ; BSR set to: 1
  5018  001410  88AB               	bsf	4011,4,c	;volatile
  5019  001412  D001               	goto	l3489
  5020  001414                     l633:
  5021                           
  5022                           ; BSR set to: 1
  5023  001414  8AAB               	bsf	4011,5,c	;volatile
  5024  001416                     l3489:
  5025                           
  5026                           ; BSR set to: 1
  5027  001416  0101               	movlb	1	; () banked
  5028  001418  0101               	movlb	1	; () banked
  5029  00141A  B987               	btfsc	OpenUSART@config& (0+255),4,b
  5030                           
  5031                           ; BSR set to: 1
  5032  00141C  84AC               	bsf	4012,2,c	;volatile
  5033                           
  5034                           ; BSR set to: 1
  5035  00141E  989E               	bcf	3998,4,c	;volatile
  5036                           
  5037                           ; BSR set to: 1
  5038  001420  0101               	movlb	1	; () banked
  5039  001422  0101               	movlb	1	; () banked
  5040  001424  BB87               	btfsc	OpenUSART@config& (0+255),5,b
  5041                           
  5042                           ; BSR set to: 1
  5043  001426  86AB               	bsf	4011,3,c	;volatile
  5044                           
  5045                           ; BSR set to: 1
  5046                           
  5047                           ; BSR set to: 1
  5048  001428  0101               	movlb	1	; () banked
  5049  00142A  0101               	movlb	1	; () banked
  5050  00142C  AD87               	btfss	OpenUSART@config& (0+255),6,b
  5051  00142E  D002               	goto	l637
  5052                           
  5053                           ; BSR set to: 1
  5054  001430  8A9D               	bsf	3997,5,c	;volatile
  5055  001432  D001               	goto	l638
  5056  001434                     l637:
  5057                           
  5058                           ; BSR set to: 1
  5059  001434  9A9D               	bcf	3997,5,c	;volatile
  5060  001436                     l638:
  5061                           
  5062                           ; BSR set to: 1
  5063  001436  9A9E               	bcf	3998,5,c	;volatile
  5064                           
  5065                           ; BSR set to: 1
  5066  001438  0101               	movlb	1	; () banked
  5067  00143A  0101               	movlb	1	; () banked
  5068  00143C  AF87               	btfss	OpenUSART@config& (0+255),7,b
  5069  00143E  D002               	goto	l639
  5070                           
  5071                           ; BSR set to: 1
  5072  001440  889D               	bsf	3997,4,c	;volatile
  5073  001442  D001               	goto	l640
  5074  001444                     l639:
  5075                           
  5076                           ; BSR set to: 1
  5077  001444  989D               	bcf	3997,4,c	;volatile
  5078  001446                     l640:
  5079                           
  5080                           ; BSR set to: 1
  5081  001446  C182  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  5082                           
  5083                           ; BSR set to: 1
  5084  00144A  0101               	movlb	1	; () banked
  5085  00144C  C183  F184         	movff	OpenUSART@spbrg+1,??_OpenUSART
  5086  001450  C184  F185         	movff	??_OpenUSART,??_OpenUSART+1
  5087  001454  0101               	movlb	1	; () banked
  5088  001456  6B86               	clrf	(??_OpenUSART+2)& (0+255),b
  5089  001458  0101               	movlb	1	; () banked
  5090  00145A  5185               	movf	(??_OpenUSART+1)& (0+255),w,b
  5091  00145C  6EB0               	movwf	4016,c	;volatile
  5092                           
  5093                           ; BSR set to: 1
  5094  00145E  8AAC               	bsf	4012,5,c	;volatile
  5095                           
  5096                           ; BSR set to: 1
  5097  001460  8EAB               	bsf	4011,7,c	;volatile
  5098                           
  5099                           ; BSR set to: 1
  5100  001462  9C94               	bcf	3988,6,c	;volatile
  5101                           
  5102                           ; BSR set to: 1
  5103  001464  8E94               	bsf	3988,7,c	;volatile
  5104                           
  5105                           ; BSR set to: 1
  5106  001466  A8AC               	btfss	4012,4,c	;volatile
  5107  001468  0012               	return	
  5108                           
  5109                           ; BSR set to: 1
  5110  00146A  BEAC               	btfsc	4012,7,c	;volatile
  5111  00146C  0012               	return	
  5112                           
  5113                           ; BSR set to: 1
  5114  00146E  8C94               	bsf	3988,6,c	;volatile
  5115  001470  0012               	return	
  5116  001472                     __end_of_OpenUSART:
  5117                           	opt stack 0
  5118                           tblptru	equ	0xFF8
  5119                           prodh	equ	0xFF4
  5120                           prodl	equ	0xFF3
  5121                           intcon	equ	0xFF2
  5122                           postinc0	equ	0xFEE
  5123                           wreg	equ	0xFE8
  5124                           indf1	equ	0xFE7
  5125                           fsr1h	equ	0xFE2
  5126                           fsr1l	equ	0xFE1
  5127                           indf2	equ	0xFDF
  5128                           postinc2	equ	0xFDE
  5129                           postdec2	equ	0xFDD
  5130                           fsr2h	equ	0xFDA
  5131                           fsr2l	equ	0xFD9
  5132                           status	equ	0xFD8
  5133                           
  5134 ;; *************** function _OpenTimer1 *****************
  5135 ;; Defined at:
  5136 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1open.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  config          1    wreg     unsigned char 
  5139 ;; Auto vars:     Size  Location     Type
  5140 ;;  config          1    0[BANK1 ] unsigned char 
  5141 ;; Return value:  Size  Location     Type
  5142 ;;		None               void
  5143 ;; Registers used:
  5144 ;;		wreg, status,2, status,0
  5145 ;; Tracked objects:
  5146 ;;		On entry : 0/0
  5147 ;;		On exit  : 0/0
  5148 ;;		Unchanged: 0/0
  5149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5150 ;;      Params:         0       0       0       0       0
  5151 ;;      Locals:         0       0       1       0       0
  5152 ;;      Temps:          0       0       0       0       0
  5153 ;;      Totals:         0       0       1       0       0
  5154 ;;Total ram usage:        1 bytes
  5155 ;; Hardware stack levels used:    1
  5156 ;; Hardware stack levels required when called:   10
  5157 ;; This function calls:
  5158 ;;		Nothing
  5159 ;; This function is called by:
  5160 ;;		_main
  5161 ;; This function uses a non-reentrant model
  5162 ;;
  5163                           
  5164                           	psect	text30
  5165  001D26                     __ptext30:
  5166                           	opt stack 0
  5167  001D26                     _OpenTimer1:
  5168                           	opt stack 19
  5169                           
  5170                           ; BSR set to: 1
  5171                           ;incstack = 0
  5172                           ;OpenTimer1@config stored from wreg
  5173  001D26  CFE8 F182          	movff	wreg,OpenTimer1@config
  5174  001D2A  0101               	movlb	1	; () banked
  5175  001D2C  0101               	movlb	1	; () banked
  5176  001D2E  5182               	movf	OpenTimer1@config& (0+255),w,b
  5177  001D30  0B7E               	andlw	126
  5178  001D32  6ECD               	movwf	4045,c	;volatile
  5179                           
  5180                           ; BSR set to: 1
  5181  001D34  0101               	movlb	1	; () banked
  5182  001D36  0101               	movlb	1	; () banked
  5183  001D38  AD82               	btfss	OpenTimer1@config& (0+255),6,b
  5184  001D3A  D002               	goto	l589
  5185                           
  5186                           ; BSR set to: 1
  5187  001D3C  8ECD               	bsf	4045,7,c	;volatile
  5188  001D3E  D001               	goto	l3453
  5189  001D40                     l589:
  5190                           
  5191                           ; BSR set to: 1
  5192  001D40  9ECD               	bcf	4045,7,c	;volatile
  5193  001D42                     l3453:
  5194                           
  5195                           ; BSR set to: 1
  5196  001D42  0E00               	movlw	0
  5197  001D44  6ECF               	movwf	4047,c	;volatile
  5198  001D46  0E00               	movlw	0
  5199  001D48  6ECE               	movwf	4046,c	;volatile
  5200                           
  5201                           ; BSR set to: 1
  5202  001D4A  909E               	bcf	3998,0,c	;volatile
  5203                           
  5204                           ; BSR set to: 1
  5205  001D4C  0101               	movlb	1	; () banked
  5206  001D4E  0101               	movlb	1	; () banked
  5207  001D50  AF82               	btfss	OpenTimer1@config& (0+255),7,b
  5208  001D52  D002               	goto	l591
  5209                           
  5210                           ; BSR set to: 1
  5211  001D54  809D               	bsf	3997,0,c	;volatile
  5212  001D56  D001               	goto	l592
  5213  001D58                     l591:
  5214                           
  5215                           ; BSR set to: 1
  5216  001D58  909D               	bcf	3997,0,c	;volatile
  5217  001D5A                     l592:
  5218                           
  5219                           ; BSR set to: 1
  5220  001D5A  80CD               	bsf	4045,0,c	;volatile
  5221                           
  5222                           ; BSR set to: 1
  5223  001D5C  0012               	return	
  5224  001D5E                     __end_of_OpenTimer1:
  5225                           	opt stack 0
  5226                           tblptru	equ	0xFF8
  5227                           prodh	equ	0xFF4
  5228                           prodl	equ	0xFF3
  5229                           intcon	equ	0xFF2
  5230                           postinc0	equ	0xFEE
  5231                           wreg	equ	0xFE8
  5232                           indf1	equ	0xFE7
  5233                           fsr1h	equ	0xFE2
  5234                           fsr1l	equ	0xFE1
  5235                           indf2	equ	0xFDF
  5236                           postinc2	equ	0xFDE
  5237                           postdec2	equ	0xFDD
  5238                           fsr2h	equ	0xFDA
  5239                           fsr2l	equ	0xFD9
  5240                           status	equ	0xFD8
  5241                           
  5242 ;; *************** function _OpenTimer0 *****************
  5243 ;; Defined at:
  5244 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0open.c"
  5245 ;; Parameters:    Size  Location     Type
  5246 ;;  config          1    wreg     unsigned char 
  5247 ;; Auto vars:     Size  Location     Type
  5248 ;;  config          1    0[BANK1 ] unsigned char 
  5249 ;; Return value:  Size  Location     Type
  5250 ;;		None               void
  5251 ;; Registers used:
  5252 ;;		wreg, status,2, status,0
  5253 ;; Tracked objects:
  5254 ;;		On entry : 0/0
  5255 ;;		On exit  : 0/0
  5256 ;;		Unchanged: 0/0
  5257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5258 ;;      Params:         0       0       0       0       0
  5259 ;;      Locals:         0       0       1       0       0
  5260 ;;      Temps:          0       0       0       0       0
  5261 ;;      Totals:         0       0       1       0       0
  5262 ;;Total ram usage:        1 bytes
  5263 ;; Hardware stack levels used:    1
  5264 ;; Hardware stack levels required when called:   10
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_main
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text31
  5273  001E9C                     __ptext31:
  5274                           	opt stack 0
  5275  001E9C                     _OpenTimer0:
  5276                           	opt stack 19
  5277                           
  5278                           ; BSR set to: 1
  5279                           ;incstack = 0
  5280                           ;OpenTimer0@config stored from wreg
  5281  001E9C  CFE8 F182          	movff	wreg,OpenTimer0@config
  5282  001EA0  0101               	movlb	1	; () banked
  5283  001EA2  0101               	movlb	1	; () banked
  5284  001EA4  5182               	movf	OpenTimer0@config& (0+255),w,b
  5285  001EA6  0B7F               	andlw	127
  5286  001EA8  6ED5               	movwf	4053,c	;volatile
  5287                           
  5288                           ; BSR set to: 1
  5289  001EAA  0E00               	movlw	0
  5290  001EAC  6ED7               	movwf	4055,c	;volatile
  5291                           
  5292                           ; BSR set to: 1
  5293  001EAE  0E00               	movlw	0
  5294  001EB0  6ED6               	movwf	4054,c	;volatile
  5295                           
  5296                           ; BSR set to: 1
  5297  001EB2  94F2               	bcf	intcon,2,c	;volatile
  5298                           
  5299                           ; BSR set to: 1
  5300  001EB4  0101               	movlb	1	; () banked
  5301  001EB6  0101               	movlb	1	; () banked
  5302  001EB8  AF82               	btfss	OpenTimer0@config& (0+255),7,b
  5303  001EBA  D002               	goto	l565
  5304                           
  5305                           ; BSR set to: 1
  5306  001EBC  8AF2               	bsf	intcon,5,c	;volatile
  5307  001EBE  D001               	goto	l566
  5308  001EC0                     l565:
  5309                           
  5310                           ; BSR set to: 1
  5311  001EC0  9AF2               	bcf	intcon,5,c	;volatile
  5312  001EC2                     l566:
  5313                           
  5314                           ; BSR set to: 1
  5315  001EC2  8ED5               	bsf	4053,7,c	;volatile
  5316                           
  5317                           ; BSR set to: 1
  5318  001EC4  0012               	return	
  5319  001EC6                     __end_of_OpenTimer0:
  5320                           	opt stack 0
  5321                           tblptru	equ	0xFF8
  5322                           prodh	equ	0xFF4
  5323                           prodl	equ	0xFF3
  5324                           intcon	equ	0xFF2
  5325                           postinc0	equ	0xFEE
  5326                           wreg	equ	0xFE8
  5327                           indf1	equ	0xFE7
  5328                           fsr1h	equ	0xFE2
  5329                           fsr1l	equ	0xFE1
  5330                           indf2	equ	0xFDF
  5331                           postinc2	equ	0xFDE
  5332                           postdec2	equ	0xFDD
  5333                           fsr2h	equ	0xFDA
  5334                           fsr2l	equ	0xFD9
  5335                           status	equ	0xFD8
  5336                           
  5337 ;; *************** function _InterruptHandlerLow *****************
  5338 ;; Defined at:
  5339 ;;		line 129 in file "../src/interrupts.c"
  5340 ;; Parameters:    Size  Location     Type
  5341 ;;		None
  5342 ;; Auto vars:     Size  Location     Type
  5343 ;;		None
  5344 ;; Return value:  Size  Location     Type
  5345 ;;		None               void
  5346 ;; Registers used:
  5347 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5348 ;; Tracked objects:
  5349 ;;		On entry : 0/0
  5350 ;;		On exit  : 0/0
  5351 ;;		Unchanged: 0/0
  5352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5353 ;;      Params:         0       0       0       0       0
  5354 ;;      Locals:         0       0       0       0       0
  5355 ;;      Temps:         17       0       0       0       0
  5356 ;;      Totals:        17       0       0       0       0
  5357 ;;Total ram usage:       17 bytes
  5358 ;; Hardware stack levels used:    1
  5359 ;; Hardware stack levels required when called:    9
  5360 ;; This function calls:
  5361 ;;		_timer1_int_handler
  5362 ;;		_uart_recv_int_handler
  5363 ;;		_uart_send_int_handler
  5364 ;; This function is called by:
  5365 ;;		Interrupt level 1
  5366 ;; This function uses a non-reentrant model
  5367 ;;
  5368                           
  5369                           	psect	intcodelo
  5370  000018                     __pintcodelo:
  5371                           	opt stack 0
  5372  000018                     _InterruptHandlerLow:
  5373                           	opt stack 16
  5374                           
  5375                           ; BSR set to: 1
  5376                           ;incstack = 0
  5377  000018  CFD8 F023          	movff	status,??_InterruptHandlerLow
  5378  00001C  CFE8 F024          	movff	wreg,??_InterruptHandlerLow+1
  5379  000020  CFE0 F025          	movff	bsr,??_InterruptHandlerLow+2
  5380  000024  CFFA F026          	movff	pclath,??_InterruptHandlerLow+3
  5381  000028  CFFB F027          	movff	pclatu,??_InterruptHandlerLow+4
  5382  00002C  CFE9 F028          	movff	fsr0l,??_InterruptHandlerLow+5
  5383  000030  CFEA F029          	movff	fsr0h,??_InterruptHandlerLow+6
  5384  000034  CFE1 F02A          	movff	fsr1l,??_InterruptHandlerLow+7
  5385  000038  CFE2 F02B          	movff	fsr1h,??_InterruptHandlerLow+8
  5386  00003C  CFD9 F02C          	movff	fsr2l,??_InterruptHandlerLow+9
  5387  000040  CFDA F02D          	movff	fsr2h,??_InterruptHandlerLow+10
  5388  000044  CFF3 F02E          	movff	prodl,??_InterruptHandlerLow+11
  5389  000048  CFF4 F02F          	movff	prodh,??_InterruptHandlerLow+12
  5390  00004C  CFF6 F030          	movff	tblptrl,??_InterruptHandlerLow+13
  5391  000050  CFF7 F031          	movff	tblptrh,??_InterruptHandlerLow+14
  5392  000054  CFF8 F032          	movff	tblptru,??_InterruptHandlerLow+15
  5393  000058  CFF5 F033          	movff	tablat,??_InterruptHandlerLow+16
  5394                           
  5395                           ;interrupts.c: 132: if (PIR1bits.TMR1IF) {
  5396  00005C  A09E               	btfss	3998,0,c	;volatile
  5397  00005E  D003               	goto	i1l3213
  5398                           
  5399                           ;interrupts.c: 133: PIR1bits.TMR1IF = 0;
  5400  000060  909E               	bcf	3998,0,c	;volatile
  5401                           
  5402                           ;interrupts.c: 134: timer1_int_handler();
  5403  000062  EC36  F00F         	call	_timer1_int_handler	;wreg free
  5404  000066                     i1l3213:
  5405                           
  5406                           ;interrupts.c: 135: }
  5407                           ;interrupts.c: 138: if (PIR1bits.RCIF) {
  5408  000066  AA9E               	btfss	3998,5,c	;volatile
  5409  000068  D003               	goto	i1l3219
  5410                           
  5411                           ;interrupts.c: 139: PIR1bits.RCIF = 0;
  5412  00006A  9A9E               	bcf	3998,5,c	;volatile
  5413                           
  5414                           ;interrupts.c: 140: uart_recv_int_handler();
  5415  00006C  EC0C  F002         	call	_uart_recv_int_handler	;wreg free
  5416  000070                     i1l3219:
  5417                           
  5418                           ;interrupts.c: 141: }
  5419                           ;interrupts.c: 144: if (PIR1bits.TX1IF && PIE1bits.TX1IE) {
  5420  000070  B89E               	btfsc	3998,4,c	;volatile
  5421  000072  A89D               	btfss	3997,4,c	;volatile
  5422  000074  D002               	goto	i1l84
  5423                           
  5424                           ;interrupts.c: 145: uart_send_int_handler();
  5425  000076  EC9B  F00C         	call	_uart_send_int_handler	;wreg free
  5426  00007A                     i1l84:
  5427  00007A  C033  FFF5         	movff	??_InterruptHandlerLow+16,tablat
  5428  00007E  C032  FFF8         	movff	??_InterruptHandlerLow+15,tblptru
  5429  000082  C031  FFF7         	movff	??_InterruptHandlerLow+14,tblptrh
  5430  000086  C030  FFF6         	movff	??_InterruptHandlerLow+13,tblptrl
  5431  00008A  C02F  FFF4         	movff	??_InterruptHandlerLow+12,prodh
  5432  00008E  C02E  FFF3         	movff	??_InterruptHandlerLow+11,prodl
  5433  000092  C02D  FFDA         	movff	??_InterruptHandlerLow+10,fsr2h
  5434  000096  C02C  FFD9         	movff	??_InterruptHandlerLow+9,fsr2l
  5435  00009A  C02B  FFE2         	movff	??_InterruptHandlerLow+8,fsr1h
  5436  00009E  C02A  FFE1         	movff	??_InterruptHandlerLow+7,fsr1l
  5437  0000A2  C029  FFEA         	movff	??_InterruptHandlerLow+6,fsr0h
  5438  0000A6  C028  FFE9         	movff	??_InterruptHandlerLow+5,fsr0l
  5439  0000AA  C027  FFFB         	movff	??_InterruptHandlerLow+4,pclatu
  5440  0000AE  C026  FFFA         	movff	??_InterruptHandlerLow+3,pclath
  5441  0000B2  C025  FFE0         	movff	??_InterruptHandlerLow+2,bsr
  5442  0000B6  C024  FFE8         	movff	??_InterruptHandlerLow+1,wreg
  5443  0000BA  C023  FFD8         	movff	??_InterruptHandlerLow,status
  5444  0000BE  0010               	retfie	
  5445  0000C0                     __end_of_InterruptHandlerLow:
  5446                           	opt stack 0
  5447                           pclatu	equ	0xFFB
  5448                           pclath	equ	0xFFA
  5449                           tblptru	equ	0xFF8
  5450                           tblptrh	equ	0xFF7
  5451                           tblptrl	equ	0xFF6
  5452                           tablat	equ	0xFF5
  5453                           prodh	equ	0xFF4
  5454                           prodl	equ	0xFF3
  5455                           intcon	equ	0xFF2
  5456                           postinc0	equ	0xFEE
  5457                           fsr0h	equ	0xFEA
  5458                           fsr0l	equ	0xFE9
  5459                           wreg	equ	0xFE8
  5460                           indf1	equ	0xFE7
  5461                           fsr1h	equ	0xFE2
  5462                           fsr1l	equ	0xFE1
  5463                           bsr	equ	0xFE0
  5464                           indf2	equ	0xFDF
  5465                           postinc2	equ	0xFDE
  5466                           postdec2	equ	0xFDD
  5467                           fsr2h	equ	0xFDA
  5468                           fsr2l	equ	0xFD9
  5469                           status	equ	0xFD8
  5470                           
  5471 ;; *************** function _uart_send_int_handler *****************
  5472 ;; Defined at:
  5473 ;;		line 241 in file "../src/my_uart.c"
  5474 ;; Parameters:    Size  Location     Type
  5475 ;;		None
  5476 ;; Auto vars:     Size  Location     Type
  5477 ;;		None
  5478 ;; Return value:  Size  Location     Type
  5479 ;;		None               void
  5480 ;; Registers used:
  5481 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5482 ;; Tracked objects:
  5483 ;;		On entry : 0/0
  5484 ;;		On exit  : 0/0
  5485 ;;		Unchanged: 0/0
  5486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5487 ;;      Params:         0       0       0       0       0
  5488 ;;      Locals:         0       0       0       0       0
  5489 ;;      Temps:          1       0       0       0       0
  5490 ;;      Totals:         1       0       0       0       0
  5491 ;;Total ram usage:        1 bytes
  5492 ;; Hardware stack levels used:    1
  5493 ;; Hardware stack levels required when called:    6
  5494 ;; This function calls:
  5495 ;;		_WriteUSART
  5496 ;; This function is called by:
  5497 ;;		_InterruptHandlerLow
  5498 ;; This function uses a non-reentrant model
  5499 ;;
  5500                           
  5501                           	psect	text33
  5502  001936                     __ptext33:
  5503                           	opt stack 0
  5504  001936                     _uart_send_int_handler:
  5505                           	opt stack 18
  5506                           
  5507                           ;my_uart.c: 243: if (uc_ptr->Tx_buflen == uc_ptr->msg_length) {
  5508                           
  5509                           ;incstack = 0
  5510  001936  EE20 F014          	lfsr	2,20
  5511  00193A  5065               	movf	_uc_ptr,w,c
  5512  00193C  26D9               	addwf	fsr2l,f,c
  5513  00193E  5066               	movf	_uc_ptr+1,w,c
  5514  001940  22DA               	addwfc	fsr2h,f,c
  5515  001942  EE10 F016          	lfsr	1,22
  5516  001946  5065               	movf	_uc_ptr,w,c
  5517  001948  26E1               	addwf	fsr1l,f,c
  5518  00194A  5066               	movf	_uc_ptr+1,w,c
  5519  00194C  22E2               	addwfc	fsr1h,f,c
  5520  00194E  50E7               	movf	indf1,w,c
  5521  001950  62DF               	cpfseq	indf2,c
  5522  001952  D00A               	goto	i1l3071
  5523                           
  5524                           ;my_uart.c: 244: PIE1bits.TX1IE = 0;
  5525  001954  989D               	bcf	3997,4,c	;volatile
  5526                           
  5527                           ;my_uart.c: 245: uc_ptr->Tx_buflen = 0;
  5528  001956  EE20 F014          	lfsr	2,20
  5529  00195A  5065               	movf	_uc_ptr,w,c
  5530  00195C  26D9               	addwf	fsr2l,f,c
  5531  00195E  5066               	movf	_uc_ptr+1,w,c
  5532  001960  22DA               	addwfc	fsr2h,f,c
  5533  001962  0E00               	movlw	0
  5534  001964  6EDF               	movwf	indf2,c
  5535                           
  5536                           ;my_uart.c: 246: } else {
  5537  001966  0012               	return	
  5538  001968                     i1l3071:
  5539                           
  5540                           ;my_uart.c: 247: WriteUSART(uc_ptr->Tx_buffer[uc_ptr->Tx_buflen]);
  5541  001968  EE20 F014          	lfsr	2,20
  5542  00196C  5065               	movf	_uc_ptr,w,c
  5543  00196E  26D9               	addwf	fsr2l,f,c
  5544  001970  5066               	movf	_uc_ptr+1,w,c
  5545  001972  22DA               	addwfc	fsr2h,f,c
  5546  001974  50DF               	movf	indf2,w,c
  5547  001976  6E02               	movwf	??_uart_send_int_handler& (0+255),c
  5548  001978  5002               	movf	??_uart_send_int_handler,w,c
  5549  00197A  0D01               	mullw	1
  5550  00197C  50F3               	movf	prodl,w,c
  5551  00197E  2465               	addwf	_uc_ptr,w,c
  5552  001980  6ED9               	movwf	fsr2l,c
  5553  001982  50F4               	movf	prodh,w,c
  5554  001984  2066               	addwfc	_uc_ptr+1,w,c
  5555  001986  6EDA               	movwf	fsr2h,c
  5556  001988  50DF               	movf	indf2,w,c
  5557  00198A  ECA2  F00F         	call	_WriteUSART
  5558                           
  5559                           ;my_uart.c: 248: uc_ptr->Tx_buflen++;
  5560  00198E  EE20 F014          	lfsr	2,20
  5561  001992  5065               	movf	_uc_ptr,w,c
  5562  001994  26D9               	addwf	fsr2l,f,c
  5563  001996  5066               	movf	_uc_ptr+1,w,c
  5564  001998  22DA               	addwfc	fsr2h,f,c
  5565  00199A  2ADF               	incf	indf2,f,c
  5566  00199C  0012               	return	
  5567  00199E                     __end_of_uart_send_int_handler:
  5568                           	opt stack 0
  5569                           pclatu	equ	0xFFB
  5570                           pclath	equ	0xFFA
  5571                           tblptru	equ	0xFF8
  5572                           tblptrh	equ	0xFF7
  5573                           tblptrl	equ	0xFF6
  5574                           tablat	equ	0xFF5
  5575                           prodh	equ	0xFF4
  5576                           prodl	equ	0xFF3
  5577                           intcon	equ	0xFF2
  5578                           postinc0	equ	0xFEE
  5579                           fsr0h	equ	0xFEA
  5580                           fsr0l	equ	0xFE9
  5581                           wreg	equ	0xFE8
  5582                           indf1	equ	0xFE7
  5583                           fsr1h	equ	0xFE2
  5584                           fsr1l	equ	0xFE1
  5585                           bsr	equ	0xFE0
  5586                           indf2	equ	0xFDF
  5587                           postinc2	equ	0xFDE
  5588                           postdec2	equ	0xFDD
  5589                           fsr2h	equ	0xFDA
  5590                           fsr2l	equ	0xFD9
  5591                           status	equ	0xFD8
  5592                           
  5593 ;; *************** function _WriteUSART *****************
  5594 ;; Defined at:
  5595 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uwrite.c"
  5596 ;; Parameters:    Size  Location     Type
  5597 ;;  data            1    wreg     unsigned char 
  5598 ;; Auto vars:     Size  Location     Type
  5599 ;;  data            1    0[COMRAM] unsigned char 
  5600 ;; Return value:  Size  Location     Type
  5601 ;;		None               void
  5602 ;; Registers used:
  5603 ;;		wreg
  5604 ;; Tracked objects:
  5605 ;;		On entry : 0/0
  5606 ;;		On exit  : 0/0
  5607 ;;		Unchanged: 0/0
  5608 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5609 ;;      Params:         0       0       0       0       0
  5610 ;;      Locals:         1       0       0       0       0
  5611 ;;      Temps:          0       0       0       0       0
  5612 ;;      Totals:         1       0       0       0       0
  5613 ;;Total ram usage:        1 bytes
  5614 ;; Hardware stack levels used:    1
  5615 ;; Hardware stack levels required when called:    5
  5616 ;; This function calls:
  5617 ;;		Nothing
  5618 ;; This function is called by:
  5619 ;;		_uart_send_int_handler
  5620 ;; This function uses a non-reentrant model
  5621 ;;
  5622                           
  5623                           	psect	text34
  5624  001F44                     __ptext34:
  5625                           	opt stack 0
  5626  001F44                     _WriteUSART:
  5627                           	opt stack 18
  5628                           
  5629                           ;incstack = 0
  5630                           ;WriteUSART@data stored from wreg
  5631  001F44  CFE8 F001          	movff	wreg,WriteUSART@data
  5632  001F48  ACAC               	btfss	4012,6,c	;volatile
  5633  001F4A  D003               	goto	i1l2927
  5634  001F4C  90AC               	bcf	4012,0,c	;volatile
  5635  001F4E  B259               	btfsc	_USART_Status,1,c
  5636  001F50  80AC               	bsf	4012,0,c	;volatile
  5637  001F52                     i1l2927:
  5638  001F52  C001  FFAD         	movff	WriteUSART@data,4013	;volatile
  5639  001F56  0012               	return	
  5640  001F58                     __end_of_WriteUSART:
  5641                           	opt stack 0
  5642                           pclatu	equ	0xFFB
  5643                           pclath	equ	0xFFA
  5644                           tblptru	equ	0xFF8
  5645                           tblptrh	equ	0xFF7
  5646                           tblptrl	equ	0xFF6
  5647                           tablat	equ	0xFF5
  5648                           prodh	equ	0xFF4
  5649                           prodl	equ	0xFF3
  5650                           intcon	equ	0xFF2
  5651                           postinc0	equ	0xFEE
  5652                           fsr0h	equ	0xFEA
  5653                           fsr0l	equ	0xFE9
  5654                           wreg	equ	0xFE8
  5655                           indf1	equ	0xFE7
  5656                           fsr1h	equ	0xFE2
  5657                           fsr1l	equ	0xFE1
  5658                           bsr	equ	0xFE0
  5659                           indf2	equ	0xFDF
  5660                           postinc2	equ	0xFDE
  5661                           postdec2	equ	0xFDD
  5662                           fsr2h	equ	0xFDA
  5663                           fsr2l	equ	0xFD9
  5664                           status	equ	0xFD8
  5665                           
  5666 ;; *************** function _uart_recv_int_handler *****************
  5667 ;; Defined at:
  5668 ;;		line 14 in file "../src/my_uart.c"
  5669 ;; Parameters:    Size  Location     Type
  5670 ;;		None
  5671 ;; Auto vars:     Size  Location     Type
  5672 ;;  i               2   31[COMRAM] int 
  5673 ;;  checkSum        1   30[COMRAM] unsigned char 
  5674 ;;  bufLength       1   29[COMRAM] unsigned char 
  5675 ;;  data            1   33[COMRAM] unsigned char 
  5676 ;; Return value:  Size  Location     Type
  5677 ;;		None               void
  5678 ;; Registers used:
  5679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5680 ;; Tracked objects:
  5681 ;;		On entry : 0/0
  5682 ;;		On exit  : 0/0
  5683 ;;		Unchanged: 0/0
  5684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  5685 ;;      Params:         0       0       0       0       0
  5686 ;;      Locals:         5       0       0       0       0
  5687 ;;      Temps:          3       0       0       0       0
  5688 ;;      Totals:         8       0       0       0       0
  5689 ;;Total ram usage:        8 bytes
  5690 ;; Hardware stack levels used:    1
  5691 ;; Hardware stack levels required when called:    8
  5692 ;; This function calls:
  5693 ;;		_ReadUSART
  5694 ;;		_ToMainLow_sendmsg
  5695 ;;		i1_ToMainHigh_sendmsg
  5696 ;; This function is called by:
  5697 ;;		_InterruptHandlerLow
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text35
  5702  000418                     __ptext35:
  5703                           	opt stack 0
  5704  000418                     _uart_recv_int_handler:
  5705                           	opt stack 16
  5706                           
  5707                           ;my_uart.c: 28: if ((PIR1bits.RCIF)) {
  5708                           
  5709                           ;incstack = 0
  5710  000418  AA9E               	btfss	3998,5,c	;volatile
  5711  00041A  D152               	goto	i1l397
  5712                           
  5713                           ;my_uart.c: 30: char data = ReadUSART();
  5714  00041C  EC88  F00F         	call	_ReadUSART	;wreg free
  5715  000420  6E22               	movwf	uart_recv_int_handler@data,c
  5716                           
  5717                           ;my_uart.c: 35: if (!msgtype_flag) {
  5718  000422  6660               	tstfsz	_msgtype_flag,c
  5719  000424  D13A               	goto	i1l3201
  5720                           
  5721                           ;my_uart.c: 36: msgtype = 0xaa;
  5722  000426  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5723  000428  0EAA               	movlw	170
  5724  00042A  6E5F               	movwf	_msgtype,c
  5725  00042C  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5726  00042E  D135               	goto	i1l3201
  5727  000430                     i1l400:
  5728                           
  5729                           ;my_uart.c: 42: if (!msgtype_flag) {
  5730  000430  6660               	tstfsz	_msgtype_flag,c
  5731  000432  D146               	goto	i1l397
  5732                           
  5733                           ;my_uart.c: 43: uc_ptr->Rx_buffer[0] = data;
  5734  000434  EE20 F00A          	lfsr	2,10
  5735  000438  5065               	movf	_uc_ptr,w,c
  5736  00043A  26D9               	addwf	fsr2l,f,c
  5737  00043C  5066               	movf	_uc_ptr+1,w,c
  5738  00043E  22DA               	addwfc	fsr2h,f,c
  5739  000440  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5740                           
  5741                           ;my_uart.c: 44: uc_ptr->Rx_buflen++;
  5742  000444  EE20 F015          	lfsr	2,21
  5743  000448  5065               	movf	_uc_ptr,w,c
  5744  00044A  26D9               	addwf	fsr2l,f,c
  5745  00044C  5066               	movf	_uc_ptr+1,w,c
  5746  00044E  22DA               	addwfc	fsr2h,f,c
  5747  000450  2ADF               	incf	indf2,f,c
  5748                           
  5749                           ;my_uart.c: 45: msgtype_flag = 1;
  5750  000452  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5751  000454  0E01               	movlw	1
  5752  000456  6E60               	movwf	_msgtype_flag,c
  5753  000458  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5754                           
  5755                           ;my_uart.c: 46: sendToSensorPIC_flag = 1;
  5756  00045A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5757  00045C  0E01               	movlw	1
  5758  00045E  6E62               	movwf	_sendToSensorPIC_flag,c
  5759  000460  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5760                           
  5761                           ;my_uart.c: 47: msgtype = 0;
  5762  000462  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5763  000464  0E00               	movlw	0
  5764  000466  D029               	goto	L1
  5765  000468                     i1l3129:
  5766                           
  5767                           ;my_uart.c: 52: if (msgtype_flag && sendToSensorPIC_flag) {
  5768  000468  5060               	movf	_msgtype_flag,w,c
  5769  00046A  B4D8               	btfsc	status,2,c
  5770  00046C  D028               	goto	i1l3141
  5771  00046E  5062               	movf	_sendToSensorPIC_flag,w,c
  5772  000470  B4D8               	btfsc	status,2,c
  5773  000472  D025               	goto	i1l3141
  5774                           
  5775                           ;my_uart.c: 53: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5776  000474  EE20 F015          	lfsr	2,21
  5777  000478  5065               	movf	_uc_ptr,w,c
  5778  00047A  26D9               	addwf	fsr2l,f,c
  5779  00047C  5066               	movf	_uc_ptr+1,w,c
  5780  00047E  22DA               	addwfc	fsr2h,f,c
  5781  000480  50DF               	movf	indf2,w,c
  5782  000482  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5783  000484  501B               	movf	??_uart_recv_int_handler,w,c
  5784  000486  0D01               	mullw	1
  5785  000488  0E0A               	movlw	10
  5786  00048A  26F3               	addwf	prodl,f,c
  5787  00048C  0E00               	movlw	0
  5788  00048E  22F4               	addwfc	prodh,f,c
  5789  000490  50F3               	movf	prodl,w,c
  5790  000492  2465               	addwf	_uc_ptr,w,c
  5791  000494  6ED9               	movwf	fsr2l,c
  5792  000496  50F4               	movf	prodh,w,c
  5793  000498  2066               	addwfc	_uc_ptr+1,w,c
  5794  00049A  6EDA               	movwf	fsr2h,c
  5795  00049C  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5796                           
  5797                           ;my_uart.c: 54: uc_ptr->Rx_buflen++;
  5798  0004A0  EE20 F015          	lfsr	2,21
  5799  0004A4  5065               	movf	_uc_ptr,w,c
  5800  0004A6  26D9               	addwf	fsr2l,f,c
  5801  0004A8  5066               	movf	_uc_ptr+1,w,c
  5802  0004AA  22DA               	addwfc	fsr2h,f,c
  5803  0004AC  2ADF               	incf	indf2,f,c
  5804  0004AE                     
  5805                           ;my_uart.c: 55: msg_flag = 1;
  5806  0004AE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5807  0004B0  0E01               	movlw	1
  5808  0004B2  6E5E               	movwf	_msg_flag,c
  5809  0004B4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5810                           
  5811                           ;my_uart.c: 56: msgtype = 5;
  5812  0004B6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5813  0004B8  0E05               	movlw	5
  5814  0004BA                     L1:
  5815  0004BA  6E5F               	movwf	_msgtype,c
  5816  0004BC  D0E9               	goto	L5
  5817  0004BE                     i1l3141:
  5818                           
  5819                           ;my_uart.c: 58: msgtype = 0xaa;
  5820  0004BE  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5821  0004C0  0EAA               	movlw	170
  5822  0004C2  6E5F               	movwf	_msgtype,c
  5823  0004C4  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5824                           
  5825                           ;my_uart.c: 59: msgtype_flag = 0;
  5826  0004C6  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5827  0004C8  0E00               	movlw	0
  5828  0004CA  6E60               	movwf	_msgtype_flag,c
  5829  0004CC  D0E1               	goto	L5
  5830  0004CE                     i1l3143:
  5831                           
  5832                           ;my_uart.c: 65: if (msg_flag) {
  5833  0004CE  505E               	movf	_msg_flag,w,c
  5834  0004D0  B4D8               	btfsc	status,2,c
  5835  0004D2  D0B6               	goto	i1l3187
  5836                           
  5837                           ;my_uart.c: 67: uc_ptr->Rx_buffer[uc_ptr->Rx_buflen] = data;
  5838  0004D4  EE20 F015          	lfsr	2,21
  5839  0004D8  5065               	movf	_uc_ptr,w,c
  5840  0004DA  26D9               	addwf	fsr2l,f,c
  5841  0004DC  5066               	movf	_uc_ptr+1,w,c
  5842  0004DE  22DA               	addwfc	fsr2h,f,c
  5843  0004E0  50DF               	movf	indf2,w,c
  5844  0004E2  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5845  0004E4  501B               	movf	??_uart_recv_int_handler,w,c
  5846  0004E6  0D01               	mullw	1
  5847  0004E8  0E0A               	movlw	10
  5848  0004EA  26F3               	addwf	prodl,f,c
  5849  0004EC  0E00               	movlw	0
  5850  0004EE  22F4               	addwfc	prodh,f,c
  5851  0004F0  50F3               	movf	prodl,w,c
  5852  0004F2  2465               	addwf	_uc_ptr,w,c
  5853  0004F4  6ED9               	movwf	fsr2l,c
  5854  0004F6  50F4               	movf	prodh,w,c
  5855  0004F8  2066               	addwfc	_uc_ptr+1,w,c
  5856  0004FA  6EDA               	movwf	fsr2h,c
  5857  0004FC  C022  FFDF         	movff	uart_recv_int_handler@data,indf2
  5858                           
  5859                           ;my_uart.c: 68: unsigned char checkSum = 0;
  5860  000500  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5861  000502  0E00               	movlw	0
  5862  000504  6E1F               	movwf	uart_recv_int_handler@checkSum,c
  5863  000506  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5864                           
  5865                           ;my_uart.c: 69: unsigned char bufLength = uc_ptr->Rx_buffer[1];
  5866  000508  EE20 F00B          	lfsr	2,11
  5867  00050C  5065               	movf	_uc_ptr,w,c
  5868  00050E  26D9               	addwf	fsr2l,f,c
  5869  000510  5066               	movf	_uc_ptr+1,w,c
  5870  000512  22DA               	addwfc	fsr2h,f,c
  5871  000514  50DF               	movf	indf2,w,c
  5872  000516  6E1E               	movwf	uart_recv_int_handler@bufLength,c
  5873                           
  5874                           ;my_uart.c: 72: if (bufLength == 0 && sendToSensorPIC_flag && uc_ptr->Rx_buffer[2] == 0x
      +                          aa) {
  5875  000518  661E               	tstfsz	uart_recv_int_handler@bufLength,c
  5876  00051A  D011               	goto	i1l3159
  5877  00051C  5062               	movf	_sendToSensorPIC_flag,w,c
  5878  00051E  B4D8               	btfsc	status,2,c
  5879  000520  D00E               	goto	i1l3159
  5880  000522  EE20 F00C          	lfsr	2,12
  5881  000526  5065               	movf	_uc_ptr,w,c
  5882  000528  26D9               	addwf	fsr2l,f,c
  5883  00052A  5066               	movf	_uc_ptr+1,w,c
  5884  00052C  22DA               	addwfc	fsr2h,f,c
  5885  00052E  0EAA               	movlw	170
  5886  000530  62DF               	cpfseq	indf2,c
  5887  000532  D005               	goto	i1l3159
  5888                           
  5889                           ;my_uart.c: 73: checkSum = 0xaa;
  5890  000534  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5891  000536  0EAA               	movlw	170
  5892  000538  6E1F               	movwf	uart_recv_int_handler@checkSum,c
  5893  00053A  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  5894                           
  5895                           ;my_uart.c: 74: } else {
  5896  00053C  D02C               	goto	i1l3167
  5897  00053E                     i1l3159:
  5898                           
  5899                           ;my_uart.c: 76: int i = 2;
  5900  00053E  0E00               	movlw	0
  5901  000540  6E21               	movwf	uart_recv_int_handler@i+1,c
  5902  000542  0E02               	movlw	2
  5903  000544  6E20               	movwf	uart_recv_int_handler@i,c
  5904                           
  5905                           ;my_uart.c: 78: for (; i < uc_ptr->Rx_buffer[1] + 2; i++) {
  5906  000546  D010               	goto	i1l3165
  5907  000548                     i1l3161:
  5908                           
  5909                           ;my_uart.c: 79: checkSum ^= uc_ptr->Rx_buffer[i];
  5910  000548  0E0A               	movlw	10
  5911  00054A  2420               	addwf	uart_recv_int_handler@i,w,c
  5912  00054C  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5913  00054E  0E00               	movlw	0
  5914  000550  2021               	addwfc	uart_recv_int_handler@i+1,w,c
  5915  000552  6E1C               	movwf	(??_uart_recv_int_handler+1)& (0+255),c
  5916  000554  501B               	movf	??_uart_recv_int_handler,w,c
  5917  000556  2465               	addwf	_uc_ptr,w,c
  5918  000558  6ED9               	movwf	fsr2l,c
  5919  00055A  501C               	movf	??_uart_recv_int_handler+1,w,c
  5920  00055C  2066               	addwfc	_uc_ptr+1,w,c
  5921  00055E  6EDA               	movwf	fsr2h,c
  5922  000560  50DF               	movf	indf2,w,c
  5923  000562  1A1F               	xorwf	uart_recv_int_handler@checkSum,f,c
  5924  000564  4A20               	infsnz	uart_recv_int_handler@i,f,c
  5925  000566  2A21               	incf	uart_recv_int_handler@i+1,f,c
  5926  000568                     i1l3165:
  5927  000568  EE20 F00B          	lfsr	2,11
  5928  00056C  5065               	movf	_uc_ptr,w,c
  5929  00056E  26D9               	addwf	fsr2l,f,c
  5930  000570  5066               	movf	_uc_ptr+1,w,c
  5931  000572  22DA               	addwfc	fsr2h,f,c
  5932  000574  50DF               	movf	indf2,w,c
  5933  000576  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5934  000578  6A1C               	clrf	(??_uart_recv_int_handler+1)& (0+255),c
  5935  00057A  0E02               	movlw	2
  5936  00057C  261B               	addwf	??_uart_recv_int_handler,f,c
  5937  00057E  0E00               	movlw	0
  5938  000580  221C               	addwfc	??_uart_recv_int_handler+1,f,c
  5939  000582  5021               	movf	uart_recv_int_handler@i+1,w,c
  5940  000584  0A80               	xorlw	128
  5941  000586  6E1D               	movwf	(??_uart_recv_int_handler+2)& (0+255),c
  5942  000588  501B               	movf	??_uart_recv_int_handler,w,c
  5943  00058A  5C20               	subwf	uart_recv_int_handler@i,w,c
  5944  00058C  501C               	movf	??_uart_recv_int_handler+1,w,c
  5945  00058E  0A80               	xorlw	128
  5946  000590  581D               	subwfb	(??_uart_recv_int_handler+2)& (0+255),w,c
  5947  000592  A0D8               	btfss	status,0,c
  5948  000594  D7D9               	goto	i1l3161
  5949  000596                     i1l3167:
  5950                           
  5951                           ;my_uart.c: 80: }
  5952                           ;my_uart.c: 81: }
  5953                           ;my_uart.c: 84: if (checkSum != uc_ptr->Rx_buffer[uc_ptr->Rx_buflen]) {
  5954  000596  EE20 F015          	lfsr	2,21
  5955  00059A  5065               	movf	_uc_ptr,w,c
  5956  00059C  26D9               	addwf	fsr2l,f,c
  5957  00059E  5066               	movf	_uc_ptr+1,w,c
  5958  0005A0  22DA               	addwfc	fsr2h,f,c
  5959  0005A2  50DF               	movf	indf2,w,c
  5960  0005A4  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  5961  0005A6  501B               	movf	??_uart_recv_int_handler,w,c
  5962  0005A8  0D01               	mullw	1
  5963  0005AA  0E0A               	movlw	10
  5964  0005AC  26F3               	addwf	prodl,f,c
  5965  0005AE  0E00               	movlw	0
  5966  0005B0  22F4               	addwfc	prodh,f,c
  5967  0005B2  50F3               	movf	prodl,w,c
  5968  0005B4  2465               	addwf	_uc_ptr,w,c
  5969  0005B6  6ED9               	movwf	fsr2l,c
  5970  0005B8  50F4               	movf	prodh,w,c
  5971  0005BA  2066               	addwfc	_uc_ptr+1,w,c
  5972  0005BC  6EDA               	movwf	fsr2h,c
  5973  0005BE  50DF               	movf	indf2,w,c
  5974  0005C0  181F               	xorwf	uart_recv_int_handler@checkSum,w,c
  5975  0005C2  B4D8               	btfsc	status,2,c
  5976  0005C4  D009               	goto	i1l3171
  5977                           
  5978                           ;my_uart.c: 86: uc_ptr->Rx_buflen = 0;
  5979  0005C6  EE20 F015          	lfsr	2,21
  5980  0005CA  5065               	movf	_uc_ptr,w,c
  5981  0005CC  26D9               	addwf	fsr2l,f,c
  5982  0005CE  5066               	movf	_uc_ptr+1,w,c
  5983  0005D0  22DA               	addwfc	fsr2h,f,c
  5984  0005D2  0E00               	movlw	0
  5985  0005D4  6EDF               	movwf	indf2,c
  5986                           
  5987                           ;my_uart.c: 89: } else if (sendToSensorPIC_flag) {
  5988  0005D6  D01D               	goto	i1l3177
  5989  0005D8                     i1l3171:
  5990  0005D8  5062               	movf	_sendToSensorPIC_flag,w,c
  5991  0005DA  B4D8               	btfsc	status,2,c
  5992  0005DC  D01A               	goto	i1l3177
  5993                           
  5994                           ;my_uart.c: 90: uc_ptr->Rx_buflen++;
  5995  0005DE  EE20 F015          	lfsr	2,21
  5996  0005E2  5065               	movf	_uc_ptr,w,c
  5997  0005E4  26D9               	addwf	fsr2l,f,c
  5998  0005E6  5066               	movf	_uc_ptr+1,w,c
  5999  0005E8  22DA               	addwfc	fsr2h,f,c
  6000  0005EA  2ADF               	incf	indf2,f,c
  6001                           
  6002                           ;my_uart.c: 92: ToMainHigh_sendmsg(uc_ptr->Rx_buflen, 40, (void *) uc_ptr->Rx_buffer);
  6003  0005EC  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6004  0005EE  0E28               	movlw	40
  6005  0005F0  6E17               	movwf	i1ToMainHigh_sendmsg@msgtype,c
  6006  0005F2  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6007  0005F4  0E0A               	movlw	10
  6008  0005F6  2465               	addwf	_uc_ptr,w,c
  6009  0005F8  6E18               	movwf	i1ToMainHigh_sendmsg@data,c
  6010  0005FA  0E00               	movlw	0
  6011  0005FC  2066               	addwfc	_uc_ptr+1,w,c
  6012  0005FE  6E19               	movwf	i1ToMainHigh_sendmsg@data+1,c
  6013  000600  EE20 F015          	lfsr	2,21
  6014  000604  5065               	movf	_uc_ptr,w,c
  6015  000606  26D9               	addwf	fsr2l,f,c
  6016  000608  5066               	movf	_uc_ptr+1,w,c
  6017  00060A  22DA               	addwfc	fsr2h,f,c
  6018  00060C  50DF               	movf	indf2,w,c
  6019  00060E  EC63  F00F         	call	i1_ToMainHigh_sendmsg
  6020  000612                     i1l3177:
  6021                           
  6022                           ;my_uart.c: 93: }
  6023                           ;my_uart.c: 95: msgtype_flag = 0;
  6024  000612  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6025  000614  0E00               	movlw	0
  6026  000616  6E60               	movwf	_msgtype_flag,c
  6027  000618  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6028                           
  6029                           ;my_uart.c: 96: sendToSensorPIC_flag = 0;
  6030  00061A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6031  00061C  0E00               	movlw	0
  6032  00061E  6E62               	movwf	_sendToSensorPIC_flag,c
  6033  000620  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6034                           
  6035                           ;my_uart.c: 97: uc_ptr->Rx_buflen = 0;
  6036  000622  EE20 F015          	lfsr	2,21
  6037  000626  5065               	movf	_uc_ptr,w,c
  6038  000628  26D9               	addwf	fsr2l,f,c
  6039  00062A  5066               	movf	_uc_ptr+1,w,c
  6040  00062C  22DA               	addwfc	fsr2h,f,c
  6041  00062E  0E00               	movlw	0
  6042  000630  6EDF               	movwf	indf2,c
  6043                           
  6044                           ;my_uart.c: 98: msg_flag = 0;
  6045  000632  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6046  000634  0E00               	movlw	0
  6047  000636  6E5E               	movwf	_msg_flag,c
  6048  000638  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6049                           
  6050                           ;my_uart.c: 99: msgtype = 0xaa;
  6051  00063A  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6052  00063C  0EAA               	movlw	170
  6053  00063E  D73D               	goto	L1
  6054  000640                     i1l3187:
  6055                           
  6056                           ;my_uart.c: 101: msgtype = 0xaa;
  6057  000640  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6058  000642  0EAA               	movlw	170
  6059  000644  6E5F               	movwf	_msgtype,c
  6060  000646  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6061                           
  6062                           ;my_uart.c: 102: msgtype_flag = 0;
  6063  000648  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6064  00064A  0E00               	movlw	0
  6065  00064C  6E60               	movwf	_msgtype_flag,c
  6066  00064E  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6067                           
  6068                           ;my_uart.c: 103: sendToSensorPIC_flag = 0;
  6069  000650  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6070  000652  0E00               	movlw	0
  6071  000654  6E62               	movwf	_sendToSensorPIC_flag,c
  6072  000656  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6073                           
  6074                           ;my_uart.c: 104: uc_ptr->Rx_buflen = 0;
  6075  000658  EE20 F015          	lfsr	2,21
  6076  00065C  5065               	movf	_uc_ptr,w,c
  6077  00065E  26D9               	addwf	fsr2l,f,c
  6078  000660  5066               	movf	_uc_ptr+1,w,c
  6079  000662  22DA               	addwfc	fsr2h,f,c
  6080  000664  0E00               	movlw	0
  6081  000666  6EDF               	movwf	indf2,c
  6082                           
  6083                           ;my_uart.c: 105: msg_flag = 0;
  6084  000668  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6085  00066A  0E00               	movlw	0
  6086  00066C  6E5E               	movwf	_msg_flag,c
  6087  00066E  D010               	goto	L5
  6088  000670                     i1l3193:
  6089                           
  6090                           ;my_uart.c: 110: if (uc_ptr->Rx_buflen == uc_ptr->Rx_buffer[1]) {
  6091  000670  EE20 F015          	lfsr	2,21
  6092  000674  5065               	movf	_uc_ptr,w,c
  6093  000676  26D9               	addwf	fsr2l,f,c
  6094  000678  5066               	movf	_uc_ptr+1,w,c
  6095  00067A  22DA               	addwfc	fsr2h,f,c
  6096  00067C  EE10 F00B          	lfsr	1,11
  6097  000680  5065               	movf	_uc_ptr,w,c
  6098  000682  26E1               	addwf	fsr1l,f,c
  6099  000684  5066               	movf	_uc_ptr+1,w,c
  6100  000686  22E2               	addwfc	fsr1h,f,c
  6101  000688  50E7               	movf	indf1,w,c
  6102  00068A  62DF               	cpfseq	indf2,c
  6103  00068C  D003               	goto	i1l3197
  6104  00068E  D70F               	goto	L8
  6105  000690                     L5:
  6106  000690  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6107                           
  6108                           ;my_uart.c: 113: } else {
  6109  000692  D016               	goto	i1l397
  6110  000694                     i1l3197:
  6111                           
  6112                           ;my_uart.c: 114: msgtype = 4;
  6113  000694  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6114  000696  0E04               	movlw	4
  6115  000698  D710               	goto	L1
  6116  00069A                     i1l3201:
  6117  00069A  505F               	movf	_msgtype,w,c
  6118                           
  6119                           ; Switch size 1, requested type "space"
  6120                           ; Number of cases is 6, Range of values is 0 to 170
  6121                           ; switch strategies available:
  6122                           ; Name         Instructions Cycles
  6123                           ; simple_byte           19    10 (average)
  6124                           ;	Chosen strategy is simple_byte
  6125  00069C  0A00               	xorlw	0	; case 0
  6126  00069E  B4D8               	btfsc	status,2,c
  6127  0006A0  D6E3               	goto	i1l3129
  6128  0006A2  0A01               	xorlw	1	; case 1
  6129  0006A4  B4D8               	btfsc	status,2,c
  6130  0006A6  D00C               	goto	i1l397
  6131  0006A8  0A02               	xorlw	2	; case 3
  6132  0006AA  B4D8               	btfsc	status,2,c
  6133  0006AC  D009               	goto	i1l397
  6134  0006AE  0A07               	xorlw	7	; case 4
  6135  0006B0  B4D8               	btfsc	status,2,c
  6136  0006B2  D7DE               	goto	i1l3193
  6137  0006B4  0A01               	xorlw	1	; case 5
  6138  0006B6  B4D8               	btfsc	status,2,c
  6139  0006B8  D70A               	goto	i1l3143
  6140  0006BA  0AAF               	xorlw	175	; case 170
  6141  0006BC  B4D8               	btfsc	status,2,c
  6142  0006BE  D6B8               	goto	i1l400
  6143  0006C0                     i1l397:
  6144                           
  6145                           ;my_uart.c: 221: }
  6146                           ;my_uart.c: 229: if (USART_Status.OVERRUN_ERROR == 1) {
  6147  0006C0  A659               	btfss	_USART_Status,3,c
  6148  0006C2  0012               	return	
  6149                           
  6150                           ;my_uart.c: 235: RCSTAbits.CREN = 0;
  6151  0006C4  98AB               	bcf	4011,4,c	;volatile
  6152                           
  6153                           ;my_uart.c: 236: RCSTAbits.CREN = 1;
  6154  0006C6  88AB               	bsf	4011,4,c	;volatile
  6155                           
  6156                           ;my_uart.c: 237: ToMainLow_sendmsg(0, 30, (void *) 0);
  6157  0006C8  6E1B               	movwf	??_uart_recv_int_handler& (0+255),c
  6158  0006CA  0E1E               	movlw	30
  6159  0006CC  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6160  0006CE  501B               	movf	??_uart_recv_int_handler& (0+255),w,c
  6161  0006D0  0E00               	movlw	0
  6162  0006D2  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6163  0006D4  0E00               	movlw	0
  6164  0006D6  6E18               	movwf	ToMainLow_sendmsg@data,c
  6165  0006D8  0E00               	movlw	0
  6166  0006DA  EC76  F00F         	call	_ToMainLow_sendmsg
  6167  0006DE  0012               	return	
  6168  0006E0                     __end_of_uart_recv_int_handler:
  6169                           	opt stack 0
  6170                           pclatu	equ	0xFFB
  6171                           pclath	equ	0xFFA
  6172                           tblptru	equ	0xFF8
  6173                           tblptrh	equ	0xFF7
  6174                           tblptrl	equ	0xFF6
  6175                           tablat	equ	0xFF5
  6176                           prodh	equ	0xFF4
  6177                           prodl	equ	0xFF3
  6178                           intcon	equ	0xFF2
  6179                           postinc0	equ	0xFEE
  6180                           fsr0h	equ	0xFEA
  6181                           fsr0l	equ	0xFE9
  6182                           wreg	equ	0xFE8
  6183                           indf1	equ	0xFE7
  6184                           fsr1h	equ	0xFE2
  6185                           fsr1l	equ	0xFE1
  6186                           bsr	equ	0xFE0
  6187                           indf2	equ	0xFDF
  6188                           postinc2	equ	0xFDE
  6189                           postdec2	equ	0xFDD
  6190                           fsr2h	equ	0xFDA
  6191                           fsr2l	equ	0xFD9
  6192                           status	equ	0xFD8
  6193                           
  6194 ;; *************** function i1_ToMainHigh_sendmsg *****************
  6195 ;; Defined at:
  6196 ;;		line 126 in file "../src/messages.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  length          1    wreg     unsigned char 
  6199 ;;  msgtype         1   22[COMRAM] unsigned char 
  6200 ;;  data            2   23[COMRAM] PTR void 
  6201 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  6202 ;; Auto vars:     Size  Location     Type
  6203 ;;  length          1   25[COMRAM] unsigned char 
  6204 ;; Return value:  Size  Location     Type
  6205 ;;                  1    wreg      char 
  6206 ;; Registers used:
  6207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6208 ;; Tracked objects:
  6209 ;;		On entry : 0/0
  6210 ;;		On exit  : 0/0
  6211 ;;		Unchanged: 0/0
  6212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6213 ;;      Params:         3       0       0       0       0
  6214 ;;      Locals:         1       0       0       0       0
  6215 ;;      Temps:          0       0       0       0       0
  6216 ;;      Totals:         4       0       0       0       0
  6217 ;;Total ram usage:        4 bytes
  6218 ;; Hardware stack levels used:    1
  6219 ;; Hardware stack levels required when called:    7
  6220 ;; This function calls:
  6221 ;;		i1_send_msg
  6222 ;; This function is called by:
  6223 ;;		_uart_recv_int_handler
  6224 ;; This function uses a non-reentrant model
  6225 ;;
  6226                           
  6227                           	psect	text36
  6228  001EC6                     __ptext36:
  6229                           	opt stack 0
  6230  001EC6                     i1_ToMainHigh_sendmsg:
  6231                           	opt stack 16
  6232                           
  6233                           ;incstack = 0
  6234                           ;i1ToMainHigh_sendmsg@length stored from wreg
  6235  001EC6  CFE8 F01A          	movff	wreg,i1ToMainHigh_sendmsg@length
  6236                           
  6237                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  6238                           ;	Return value of i1_ToMainHigh_sendmsg is never used
  6239  001ECA  0100               	movlb	0	; () banked
  6240  001ECC  0E00               	movlw	high _ToMainHigh_MQ
  6241  001ECE  6E0C               	movwf	i1send_msg@qptr+1,c
  6242  001ED0  0100               	movlb	0	; () banked
  6243  001ED2  0E80               	movlw	low _ToMainHigh_MQ
  6244  001ED4  6E0B               	movwf	i1send_msg@qptr,c
  6245  001ED6  C01A  F00D         	movff	i1ToMainHigh_sendmsg@length,i1send_msg@length
  6246  001EDA  C017  F00E         	movff	i1ToMainHigh_sendmsg@msgtype,i1send_msg@msgtype
  6247  001EDE  C019  F010         	movff	i1ToMainHigh_sendmsg@data+1,i1send_msg@data+1
  6248  001EE2  C018  F00F         	movff	i1ToMainHigh_sendmsg@data,i1send_msg@data
  6249  001EE6  EC9B  F009         	call	i1_send_msg	;wreg free
  6250  001EEA  0012               	return	
  6251  001EEC                     __end_ofi1_ToMainHigh_sendmsg:
  6252                           	opt stack 0
  6253                           pclatu	equ	0xFFB
  6254                           pclath	equ	0xFFA
  6255                           tblptru	equ	0xFF8
  6256                           tblptrh	equ	0xFF7
  6257                           tblptrl	equ	0xFF6
  6258                           tablat	equ	0xFF5
  6259                           prodh	equ	0xFF4
  6260                           prodl	equ	0xFF3
  6261                           intcon	equ	0xFF2
  6262                           postinc0	equ	0xFEE
  6263                           fsr0h	equ	0xFEA
  6264                           fsr0l	equ	0xFE9
  6265                           wreg	equ	0xFE8
  6266                           indf1	equ	0xFE7
  6267                           fsr1h	equ	0xFE2
  6268                           fsr1l	equ	0xFE1
  6269                           bsr	equ	0xFE0
  6270                           indf2	equ	0xFDF
  6271                           postinc2	equ	0xFDE
  6272                           postdec2	equ	0xFDD
  6273                           fsr2h	equ	0xFDA
  6274                           fsr2l	equ	0xFD9
  6275                           status	equ	0xFD8
  6276                           
  6277 ;; *************** function _ReadUSART *****************
  6278 ;; Defined at:
  6279 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\USART\uread.c"
  6280 ;; Parameters:    Size  Location     Type
  6281 ;;		None
  6282 ;; Auto vars:     Size  Location     Type
  6283 ;;  data            1    0[COMRAM] unsigned char 
  6284 ;; Return value:  Size  Location     Type
  6285 ;;                  1    wreg      unsigned char 
  6286 ;; Registers used:
  6287 ;;		wreg, status,2, status,0
  6288 ;; Tracked objects:
  6289 ;;		On entry : 0/0
  6290 ;;		On exit  : 0/0
  6291 ;;		Unchanged: 0/0
  6292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6293 ;;      Params:         0       0       0       0       0
  6294 ;;      Locals:         1       0       0       0       0
  6295 ;;      Temps:          0       0       0       0       0
  6296 ;;      Totals:         1       0       0       0       0
  6297 ;;Total ram usage:        1 bytes
  6298 ;; Hardware stack levels used:    1
  6299 ;; Hardware stack levels required when called:    5
  6300 ;; This function calls:
  6301 ;;		Nothing
  6302 ;; This function is called by:
  6303 ;;		_uart_recv_int_handler
  6304 ;; This function uses a non-reentrant model
  6305 ;;
  6306                           
  6307                           	psect	text37
  6308  001F10                     __ptext37:
  6309                           	opt stack 0
  6310  001F10                     _ReadUSART:
  6311                           	opt stack 18
  6312                           
  6313                           ;incstack = 0
  6314  001F10  0EF2               	movlw	242
  6315  001F12  1659               	andwf	_USART_Status,f,c
  6316  001F14  ACAB               	btfss	4011,6,c	;volatile
  6317  001F16  D003               	goto	i1l651
  6318  001F18  9059               	bcf	_USART_Status,0,c
  6319  001F1A  B0AB               	btfsc	4011,0,c	;volatile
  6320  001F1C  8059               	bsf	_USART_Status,0,c
  6321  001F1E                     i1l651:
  6322  001F1E  B4AB               	btfsc	4011,2,c	;volatile
  6323  001F20  8459               	bsf	_USART_Status,2,c
  6324  001F22  B2AB               	btfsc	4011,1,c	;volatile
  6325  001F24  8659               	bsf	_USART_Status,3,c
  6326  001F26  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  6327  001F2A  5001               	movf	ReadUSART@data,w,c
  6328  001F2C  0012               	return	
  6329  001F2E                     __end_of_ReadUSART:
  6330                           	opt stack 0
  6331                           pclatu	equ	0xFFB
  6332                           pclath	equ	0xFFA
  6333                           tblptru	equ	0xFF8
  6334                           tblptrh	equ	0xFF7
  6335                           tblptrl	equ	0xFF6
  6336                           tablat	equ	0xFF5
  6337                           prodh	equ	0xFF4
  6338                           prodl	equ	0xFF3
  6339                           intcon	equ	0xFF2
  6340                           postinc0	equ	0xFEE
  6341                           fsr0h	equ	0xFEA
  6342                           fsr0l	equ	0xFE9
  6343                           wreg	equ	0xFE8
  6344                           indf1	equ	0xFE7
  6345                           fsr1h	equ	0xFE2
  6346                           fsr1l	equ	0xFE1
  6347                           bsr	equ	0xFE0
  6348                           indf2	equ	0xFDF
  6349                           postinc2	equ	0xFDE
  6350                           postdec2	equ	0xFDD
  6351                           fsr2h	equ	0xFDA
  6352                           fsr2l	equ	0xFD9
  6353                           status	equ	0xFD8
  6354                           
  6355 ;; *************** function _timer1_int_handler *****************
  6356 ;; Defined at:
  6357 ;;		line 39 in file "../src/user_interrupts.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;		None
  6360 ;; Auto vars:     Size  Location     Type
  6361 ;;  result          2   27[COMRAM] unsigned int 
  6362 ;; Return value:  Size  Location     Type
  6363 ;;		None               void
  6364 ;; Registers used:
  6365 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6366 ;; Tracked objects:
  6367 ;;		On entry : 0/0
  6368 ;;		On exit  : 0/0
  6369 ;;		Unchanged: 0/0
  6370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6371 ;;      Params:         0       0       0       0       0
  6372 ;;      Locals:         2       0       0       0       0
  6373 ;;      Temps:          1       0       0       0       0
  6374 ;;      Totals:         3       0       0       0       0
  6375 ;;Total ram usage:        3 bytes
  6376 ;; Hardware stack levels used:    1
  6377 ;; Hardware stack levels required when called:    8
  6378 ;; This function calls:
  6379 ;;		_ReadTimer1
  6380 ;;		_ToMainLow_sendmsg
  6381 ;;		_WriteTimer1
  6382 ;; This function is called by:
  6383 ;;		_InterruptHandlerLow
  6384 ;; This function uses a non-reentrant model
  6385 ;;
  6386                           
  6387                           	psect	text38
  6388  001E6C                     __ptext38:
  6389                           	opt stack 0
  6390  001E6C                     _timer1_int_handler:
  6391                           	opt stack 16
  6392                           
  6393                           ;user_interrupts.c: 40: unsigned int result;
  6394                           ;user_interrupts.c: 47: result = ReadTimer1();
  6395                           
  6396                           ;incstack = 0
  6397  001E6C  ECD0  F00F         	call	_ReadTimer1	;wreg free
  6398  001E70  C001  F01C         	movff	?_ReadTimer1,timer1_int_handler@result
  6399  001E74  C002  F01D         	movff	?_ReadTimer1+1,timer1_int_handler@result+1
  6400                           
  6401                           ;user_interrupts.c: 48: ToMainLow_sendmsg(0, 11, (void *) 0);
  6402  001E78  6E1B               	movwf	??_timer1_int_handler& (0+255),c
  6403  001E7A  0E0B               	movlw	11
  6404  001E7C  6E17               	movwf	ToMainLow_sendmsg@msgtype,c
  6405  001E7E  501B               	movf	??_timer1_int_handler& (0+255),w,c
  6406  001E80  0E00               	movlw	0
  6407  001E82  6E19               	movwf	ToMainLow_sendmsg@data+1,c
  6408  001E84  0E00               	movlw	0
  6409  001E86  6E18               	movwf	ToMainLow_sendmsg@data,c
  6410  001E88  0E00               	movlw	0
  6411  001E8A  EC76  F00F         	call	_ToMainLow_sendmsg
  6412                           
  6413                           ;user_interrupts.c: 51: WriteTimer1(0);
  6414  001E8E  0E00               	movlw	0
  6415  001E90  6E02               	movwf	WriteTimer1@timer1+1,c
  6416  001E92  0E00               	movlw	0
  6417  001E94  6E01               	movwf	WriteTimer1@timer1,c
  6418  001E96  ECC7  F00F         	call	_WriteTimer1	;wreg free
  6419  001E9A  0012               	return	
  6420  001E9C                     __end_of_timer1_int_handler:
  6421                           	opt stack 0
  6422                           pclatu	equ	0xFFB
  6423                           pclath	equ	0xFFA
  6424                           tblptru	equ	0xFF8
  6425                           tblptrh	equ	0xFF7
  6426                           tblptrl	equ	0xFF6
  6427                           tablat	equ	0xFF5
  6428                           prodh	equ	0xFF4
  6429                           prodl	equ	0xFF3
  6430                           intcon	equ	0xFF2
  6431                           postinc0	equ	0xFEE
  6432                           fsr0h	equ	0xFEA
  6433                           fsr0l	equ	0xFE9
  6434                           wreg	equ	0xFE8
  6435                           indf1	equ	0xFE7
  6436                           fsr1h	equ	0xFE2
  6437                           fsr1l	equ	0xFE1
  6438                           bsr	equ	0xFE0
  6439                           indf2	equ	0xFDF
  6440                           postinc2	equ	0xFDE
  6441                           postdec2	equ	0xFDD
  6442                           fsr2h	equ	0xFDA
  6443                           fsr2l	equ	0xFD9
  6444                           status	equ	0xFD8
  6445                           
  6446 ;; *************** function _WriteTimer1 *****************
  6447 ;; Defined at:
  6448 ;;		line 14 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1write.c"
  6449 ;; Parameters:    Size  Location     Type
  6450 ;;  timer1          2    0[COMRAM] unsigned int 
  6451 ;; Auto vars:     Size  Location     Type
  6452 ;;  timer           2    2[COMRAM] struct Timers
  6453 ;; Return value:  Size  Location     Type
  6454 ;;		None               void
  6455 ;; Registers used:
  6456 ;;		None
  6457 ;; Tracked objects:
  6458 ;;		On entry : 0/0
  6459 ;;		On exit  : 0/0
  6460 ;;		Unchanged: 0/0
  6461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6462 ;;      Params:         2       0       0       0       0
  6463 ;;      Locals:         2       0       0       0       0
  6464 ;;      Temps:          0       0       0       0       0
  6465 ;;      Totals:         4       0       0       0       0
  6466 ;;Total ram usage:        4 bytes
  6467 ;; Hardware stack levels used:    1
  6468 ;; Hardware stack levels required when called:    5
  6469 ;; This function calls:
  6470 ;;		Nothing
  6471 ;; This function is called by:
  6472 ;;		_timer1_int_handler
  6473 ;; This function uses a non-reentrant model
  6474 ;;
  6475                           
  6476                           	psect	text39
  6477  001F8E                     __ptext39:
  6478                           	opt stack 0
  6479  001F8E                     _WriteTimer1:
  6480                           	opt stack 18
  6481                           
  6482                           ;incstack = 0
  6483  001F8E  C001  F003         	movff	WriteTimer1@timer1,WriteTimer1@timer
  6484  001F92  C002  F004         	movff	WriteTimer1@timer1+1,WriteTimer1@timer+1
  6485  001F96  C004  FFCF         	movff	WriteTimer1@timer+1,4047	;volatile
  6486  001F9A  C003  FFCE         	movff	WriteTimer1@timer,4046	;volatile
  6487  001F9E  0012               	return	
  6488  001FA0                     __end_of_WriteTimer1:
  6489                           	opt stack 0
  6490                           pclatu	equ	0xFFB
  6491                           pclath	equ	0xFFA
  6492                           tblptru	equ	0xFF8
  6493                           tblptrh	equ	0xFF7
  6494                           tblptrl	equ	0xFF6
  6495                           tablat	equ	0xFF5
  6496                           prodh	equ	0xFF4
  6497                           prodl	equ	0xFF3
  6498                           intcon	equ	0xFF2
  6499                           postinc0	equ	0xFEE
  6500                           fsr0h	equ	0xFEA
  6501                           fsr0l	equ	0xFE9
  6502                           wreg	equ	0xFE8
  6503                           indf1	equ	0xFE7
  6504                           fsr1h	equ	0xFE2
  6505                           fsr1l	equ	0xFE1
  6506                           bsr	equ	0xFE0
  6507                           indf2	equ	0xFDF
  6508                           postinc2	equ	0xFDE
  6509                           postdec2	equ	0xFDD
  6510                           fsr2h	equ	0xFDA
  6511                           fsr2l	equ	0xFD9
  6512                           status	equ	0xFD8
  6513                           
  6514 ;; *************** function _ToMainLow_sendmsg *****************
  6515 ;; Defined at:
  6516 ;;		line 103 in file "../src/messages.c"
  6517 ;; Parameters:    Size  Location     Type
  6518 ;;  length          1    wreg     unsigned char 
  6519 ;;  msgtype         1   22[COMRAM] unsigned char 
  6520 ;;  data            2   23[COMRAM] PTR void 
  6521 ;;		 -> NULL(0), 
  6522 ;; Auto vars:     Size  Location     Type
  6523 ;;  length          1   25[COMRAM] unsigned char 
  6524 ;; Return value:  Size  Location     Type
  6525 ;;                  1    wreg      char 
  6526 ;; Registers used:
  6527 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6528 ;; Tracked objects:
  6529 ;;		On entry : 0/0
  6530 ;;		On exit  : 0/0
  6531 ;;		Unchanged: 0/0
  6532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6533 ;;      Params:         3       0       0       0       0
  6534 ;;      Locals:         1       0       0       0       0
  6535 ;;      Temps:          0       0       0       0       0
  6536 ;;      Totals:         4       0       0       0       0
  6537 ;;Total ram usage:        4 bytes
  6538 ;; Hardware stack levels used:    1
  6539 ;; Hardware stack levels required when called:    7
  6540 ;; This function calls:
  6541 ;;		i1_send_msg
  6542 ;; This function is called by:
  6543 ;;		_uart_recv_int_handler
  6544 ;;		_timer1_int_handler
  6545 ;; This function uses a non-reentrant model
  6546 ;;
  6547                           
  6548                           	psect	text40
  6549  001EEC                     __ptext40:
  6550                           	opt stack 0
  6551  001EEC                     _ToMainLow_sendmsg:
  6552                           	opt stack 16
  6553                           
  6554                           ;incstack = 0
  6555                           ;ToMainLow_sendmsg@length stored from wreg
  6556  001EEC  CFE8 F01A          	movff	wreg,ToMainLow_sendmsg@length
  6557                           
  6558                           ;messages.c: 109: return (send_msg(&ToMainLow_MQ, length, msgtype, data));
  6559                           ;	Return value of _ToMainLow_sendmsg is never used
  6560  001EF0  0101               	movlb	1	; () banked
  6561  001EF2  0E01               	movlw	high _ToMainLow_MQ
  6562  001EF4  6E0C               	movwf	i1send_msg@qptr+1,c
  6563  001EF6  0101               	movlb	1	; () banked
  6564  001EF8  0E4C               	movlw	low _ToMainLow_MQ
  6565  001EFA  6E0B               	movwf	i1send_msg@qptr,c
  6566  001EFC  C01A  F00D         	movff	ToMainLow_sendmsg@length,i1send_msg@length
  6567  001F00  C017  F00E         	movff	ToMainLow_sendmsg@msgtype,i1send_msg@msgtype
  6568  001F04  6A10               	clrf	i1send_msg@data+1,c
  6569  001F06  C018  F00F         	movff	ToMainLow_sendmsg@data,i1send_msg@data
  6570  001F0A  EC9B  F009         	call	i1_send_msg	;wreg free
  6571  001F0E  0012               	return	
  6572  001F10                     __end_of_ToMainLow_sendmsg:
  6573                           	opt stack 0
  6574                           pclatu	equ	0xFFB
  6575                           pclath	equ	0xFFA
  6576                           tblptru	equ	0xFF8
  6577                           tblptrh	equ	0xFF7
  6578                           tblptrl	equ	0xFF6
  6579                           tablat	equ	0xFF5
  6580                           prodh	equ	0xFF4
  6581                           prodl	equ	0xFF3
  6582                           intcon	equ	0xFF2
  6583                           postinc0	equ	0xFEE
  6584                           fsr0h	equ	0xFEA
  6585                           fsr0l	equ	0xFE9
  6586                           wreg	equ	0xFE8
  6587                           indf1	equ	0xFE7
  6588                           fsr1h	equ	0xFE2
  6589                           fsr1l	equ	0xFE1
  6590                           bsr	equ	0xFE0
  6591                           indf2	equ	0xFDF
  6592                           postinc2	equ	0xFDE
  6593                           postdec2	equ	0xFDD
  6594                           fsr2h	equ	0xFDA
  6595                           fsr2l	equ	0xFD9
  6596                           status	equ	0xFD8
  6597                           
  6598 ;; *************** function i1_send_msg *****************
  6599 ;; Defined at:
  6600 ;;		line 24 in file "../src/messages.c"
  6601 ;; Parameters:    Size  Location     Type
  6602 ;;  qptr            2   10[COMRAM] PTR struct __msg_queue
  6603 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6604 ;;  length          1   12[COMRAM] unsigned char 
  6605 ;;  msgtype         1   13[COMRAM] unsigned char 
  6606 ;;  data            2   14[COMRAM] PTR void 
  6607 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  6608 ;;		 -> main@uc(23), 
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;  send_msg        2   20[COMRAM] PTR struct __msg
  6611 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6612 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  6613 ;;  send_msg        2   17[COMRAM] unsigned int 
  6614 ;;  send_msg        1   19[COMRAM] unsigned char 
  6615 ;; Return value:  Size  Location     Type
  6616 ;;                  1    wreg      char 
  6617 ;; Registers used:
  6618 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6619 ;; Tracked objects:
  6620 ;;		On entry : 0/0
  6621 ;;		On exit  : 0/0
  6622 ;;		Unchanged: 0/0
  6623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6624 ;;      Params:         6       0       0       0       0
  6625 ;;      Locals:         5       0       0       0       0
  6626 ;;      Temps:          1       0       0       0       0
  6627 ;;      Totals:        12       0       0       0       0
  6628 ;;Total ram usage:       12 bytes
  6629 ;; Hardware stack levels used:    1
  6630 ;; Hardware stack levels required when called:    6
  6631 ;; This function calls:
  6632 ;;		i1_memcpy
  6633 ;; This function is called by:
  6634 ;;		_ToMainLow_sendmsg
  6635 ;;		i1_ToMainHigh_sendmsg
  6636 ;; This function uses a non-reentrant model
  6637 ;;
  6638                           
  6639                           	psect	text41
  6640  001336                     __ptext41:
  6641                           	opt stack 0
  6642  001336                     i1_send_msg:
  6643                           	opt stack 16
  6644                           
  6645                           ;messages.c: 25: unsigned char slot;
  6646                           ;messages.c: 27: msg *qmsg;
  6647                           ;messages.c: 28: size_t tlength = length;
  6648                           
  6649                           ;incstack = 0
  6650  001336  C00D  F012         	movff	i1send_msg@length,i1send_msg@tlength
  6651  00133A  6A13               	clrf	i1send_msg@tlength+1,c
  6652                           
  6653                           ;messages.c: 38: slot = qptr->cur_write_ind;
  6654  00133C  EE20 F034          	lfsr	2,52
  6655  001340  500B               	movf	i1send_msg@qptr,w,c
  6656  001342  26D9               	addwf	fsr2l,f,c
  6657  001344  500C               	movf	i1send_msg@qptr+1,w,c
  6658  001346  22DA               	addwfc	fsr2h,f,c
  6659  001348  50DF               	movf	indf2,w,c
  6660  00134A  6E14               	movwf	i1send_msg@slot,c
  6661                           
  6662                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  6663  00134C  5014               	movf	i1send_msg@slot,w,c
  6664  00134E  0D0D               	mullw	13
  6665  001350  50F3               	movf	prodl,w,c
  6666  001352  240B               	addwf	i1send_msg@qptr,w,c
  6667  001354  6E15               	movwf	i1send_msg@qmsg,c
  6668  001356  50F4               	movf	prodh,w,c
  6669  001358  200C               	addwfc	i1send_msg@qptr+1,w,c
  6670  00135A  6E16               	movwf	i1send_msg@qmsg+1,c
  6671                           
  6672                           ;messages.c: 41: if (qmsg->full != 0) {
  6673  00135C  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6674  001360  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6675  001364  50DF               	movf	indf2,w,c
  6676  001366  B4D8               	btfsc	status,2,c
  6677  001368  D002               	goto	i1l3087
  6678                           
  6679                           ;messages.c: 42: return (-1);
  6680  00136A  0EFF               	movlw	255
  6681  00136C  0012               	return	
  6682  00136E                     i1l3087:
  6683                           
  6684                           ;messages.c: 43: }
  6685                           ;messages.c: 46: qmsg->length = length;
  6686  00136E  EE20 F001          	lfsr	2,1
  6687  001372  5015               	movf	i1send_msg@qmsg,w,c
  6688  001374  26D9               	addwf	fsr2l,f,c
  6689  001376  5016               	movf	i1send_msg@qmsg+1,w,c
  6690  001378  22DA               	addwfc	fsr2h,f,c
  6691  00137A  C00D  FFDF         	movff	i1send_msg@length,indf2
  6692                           
  6693                           ;messages.c: 47: qmsg->msgtype = msgtype;
  6694  00137E  EE20 F002          	lfsr	2,2
  6695  001382  5015               	movf	i1send_msg@qmsg,w,c
  6696  001384  26D9               	addwf	fsr2l,f,c
  6697  001386  5016               	movf	i1send_msg@qmsg+1,w,c
  6698  001388  22DA               	addwfc	fsr2h,f,c
  6699  00138A  C00E  FFDF         	movff	i1send_msg@msgtype,indf2
  6700                           
  6701                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  6702  00138E  0E03               	movlw	3
  6703  001390  2415               	addwf	i1send_msg@qmsg,w,c
  6704  001392  6E01               	movwf	i1memcpy@d1,c
  6705  001394  0E00               	movlw	0
  6706  001396  2016               	addwfc	i1send_msg@qmsg+1,w,c
  6707  001398  6E02               	movwf	i1memcpy@d1+1,c
  6708  00139A  C010  F004         	movff	i1send_msg@data+1,i1memcpy@s1+1
  6709  00139E  C00F  F003         	movff	i1send_msg@data,i1memcpy@s1
  6710  0013A2  C012  F005         	movff	i1send_msg@tlength,i1memcpy@n
  6711  0013A6  C013  F006         	movff	i1send_msg@tlength+1,i1memcpy@n+1
  6712  0013AA  EC19  F00E         	call	i1_memcpy	;wreg free
  6713                           
  6714                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  6715  0013AE  EE20 F034          	lfsr	2,52
  6716  0013B2  500B               	movf	i1send_msg@qptr,w,c
  6717  0013B4  26D9               	addwf	fsr2l,f,c
  6718  0013B6  500C               	movf	i1send_msg@qptr+1,w,c
  6719  0013B8  22DA               	addwfc	fsr2h,f,c
  6720  0013BA  EE10 F034          	lfsr	1,52
  6721  0013BE  500B               	movf	i1send_msg@qptr,w,c
  6722  0013C0  26E1               	addwf	fsr1l,f,c
  6723  0013C2  500C               	movf	i1send_msg@qptr+1,w,c
  6724  0013C4  22E2               	addwfc	fsr1h,f,c
  6725  0013C6  50E7               	movf	indf1,w,c
  6726  0013C8  6E11               	movwf	??i1_send_msg& (0+255),c
  6727  0013CA  2811               	incf	??i1_send_msg,w,c
  6728  0013CC  0B03               	andlw	3
  6729  0013CE  6EDF               	movwf	indf2,c
  6730                           
  6731                           ;messages.c: 59: qmsg->full = 1;
  6732  0013D0  C015  FFD9         	movff	i1send_msg@qmsg,fsr2l
  6733  0013D4  C016  FFDA         	movff	i1send_msg@qmsg+1,fsr2h
  6734  0013D8  0E01               	movlw	1
  6735  0013DA  6EDF               	movwf	indf2,c
  6736                           
  6737                           ;messages.c: 60: return (1);
  6738  0013DC  0E01               	movlw	1
  6739  0013DE  0012               	return	
  6740  0013E0                     __end_ofi1_send_msg:
  6741                           	opt stack 0
  6742                           pclatu	equ	0xFFB
  6743                           pclath	equ	0xFFA
  6744                           tblptru	equ	0xFF8
  6745                           tblptrh	equ	0xFF7
  6746                           tblptrl	equ	0xFF6
  6747                           tablat	equ	0xFF5
  6748                           prodh	equ	0xFF4
  6749                           prodl	equ	0xFF3
  6750                           intcon	equ	0xFF2
  6751                           postinc0	equ	0xFEE
  6752                           fsr0h	equ	0xFEA
  6753                           fsr0l	equ	0xFE9
  6754                           wreg	equ	0xFE8
  6755                           indf1	equ	0xFE7
  6756                           fsr1h	equ	0xFE2
  6757                           fsr1l	equ	0xFE1
  6758                           bsr	equ	0xFE0
  6759                           indf2	equ	0xFDF
  6760                           postinc2	equ	0xFDE
  6761                           postdec2	equ	0xFDD
  6762                           fsr2h	equ	0xFDA
  6763                           fsr2l	equ	0xFD9
  6764                           status	equ	0xFD8
  6765                           
  6766 ;; *************** function i1_memcpy *****************
  6767 ;; Defined at:
  6768 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  d1              2    0[COMRAM] PTR void 
  6771 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6772 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6773 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6774 ;;  s1              2    2[COMRAM] PTR const void 
  6775 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6776 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6777 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6778 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6779 ;;		 -> main@uc(23), 
  6780 ;;  n               2    4[COMRAM] unsigned int 
  6781 ;; Auto vars:     Size  Location     Type
  6782 ;;  memcpy          2    8[COMRAM] PTR const unsigned char 
  6783 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  6784 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  6785 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  6786 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  6787 ;;		 -> main@uc(23), 
  6788 ;;  memcpy          2    6[COMRAM] PTR unsigned char 
  6789 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  6790 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  6791 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  6792 ;; Return value:  Size  Location     Type
  6793 ;;                  2    0[COMRAM] PTR void 
  6794 ;; Registers used:
  6795 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6801 ;;      Params:         6       0       0       0       0
  6802 ;;      Locals:         4       0       0       0       0
  6803 ;;      Temps:          0       0       0       0       0
  6804 ;;      Totals:        10       0       0       0       0
  6805 ;;Total ram usage:       10 bytes
  6806 ;; Hardware stack levels used:    1
  6807 ;; Hardware stack levels required when called:    5
  6808 ;; This function calls:
  6809 ;;		Nothing
  6810 ;; This function is called by:
  6811 ;;		i1_send_msg
  6812 ;; This function uses a non-reentrant model
  6813 ;;
  6814                           
  6815                           	psect	text42
  6816  001C32                     __ptext42:
  6817                           	opt stack 0
  6818  001C32                     i1_memcpy:
  6819                           	opt stack 16
  6820                           
  6821                           ;incstack = 0
  6822  001C32  C004  F00A         	movff	i1memcpy@s1+1,i1memcpy@s+1
  6823  001C36  C003  F009         	movff	i1memcpy@s1,i1memcpy@s
  6824  001C3A  C002  F008         	movff	i1memcpy@d1+1,i1memcpy@d+1
  6825  001C3E  C001  F007         	movff	i1memcpy@d1,i1memcpy@d
  6826  001C42  D00E               	goto	i1l3053
  6827  001C44                     i1l3047:
  6828  001C44  C009  FFD9         	movff	i1memcpy@s,fsr2l
  6829  001C48  C00A  FFDA         	movff	i1memcpy@s+1,fsr2h
  6830  001C4C  C007  FFE1         	movff	i1memcpy@d,fsr1l
  6831  001C50  C008  FFE2         	movff	i1memcpy@d+1,fsr1h
  6832  001C54  CFDF FFE7          	movff	indf2,indf1
  6833  001C58  4A09               	infsnz	i1memcpy@s,f,c
  6834  001C5A  2A0A               	incf	i1memcpy@s+1,f,c
  6835  001C5C  4A07               	infsnz	i1memcpy@d,f,c
  6836  001C5E  2A08               	incf	i1memcpy@d+1,f,c
  6837  001C60                     i1l3053:
  6838  001C60  0605               	decf	i1memcpy@n,f,c
  6839  001C62  A0D8               	btfss	status,0,c
  6840  001C64  0606               	decf	i1memcpy@n+1,f,c
  6841  001C66  2805               	incf	i1memcpy@n& (0+255),w,c
  6842  001C68  B4D8               	btfsc	status,2,c
  6843  001C6A  2806               	incf	(i1memcpy@n+1)& (0+255),w,c
  6844  001C6C  B4D8               	btfsc	status,2,c
  6845                           
  6846                           ;	Return value of i1_memcpy is never used
  6847  001C6E  0012               	return	
  6848  001C70  D7E9               	goto	i1l3047
  6849  001C72                     __end_ofi1_memcpy:
  6850                           	opt stack 0
  6851                           pclatu	equ	0xFFB
  6852                           pclath	equ	0xFFA
  6853                           tblptru	equ	0xFF8
  6854                           tblptrh	equ	0xFF7
  6855                           tblptrl	equ	0xFF6
  6856                           tablat	equ	0xFF5
  6857                           prodh	equ	0xFF4
  6858                           prodl	equ	0xFF3
  6859                           intcon	equ	0xFF2
  6860                           postinc0	equ	0xFEE
  6861                           fsr0h	equ	0xFEA
  6862                           fsr0l	equ	0xFE9
  6863                           wreg	equ	0xFE8
  6864                           indf1	equ	0xFE7
  6865                           fsr1h	equ	0xFE2
  6866                           fsr1l	equ	0xFE1
  6867                           bsr	equ	0xFE0
  6868                           indf2	equ	0xFDF
  6869                           postinc2	equ	0xFDE
  6870                           postdec2	equ	0xFDD
  6871                           fsr2h	equ	0xFDA
  6872                           fsr2l	equ	0xFD9
  6873                           status	equ	0xFD8
  6874                           
  6875 ;; *************** function _ReadTimer1 *****************
  6876 ;; Defined at:
  6877 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t1read.c"
  6878 ;; Parameters:    Size  Location     Type
  6879 ;;		None
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;  timer           2    2[COMRAM] struct Timers
  6882 ;; Return value:  Size  Location     Type
  6883 ;;                  2    0[COMRAM] unsigned int 
  6884 ;; Registers used:
  6885 ;;		None
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6891 ;;      Params:         2       0       0       0       0
  6892 ;;      Locals:         2       0       0       0       0
  6893 ;;      Temps:          0       0       0       0       0
  6894 ;;      Totals:         4       0       0       0       0
  6895 ;;Total ram usage:        4 bytes
  6896 ;; Hardware stack levels used:    1
  6897 ;; Hardware stack levels required when called:    5
  6898 ;; This function calls:
  6899 ;;		Nothing
  6900 ;; This function is called by:
  6901 ;;		_timer1_int_handler
  6902 ;; This function uses a non-reentrant model
  6903 ;;
  6904                           
  6905                           	psect	text43
  6906  001FA0                     __ptext43:
  6907                           	opt stack 0
  6908  001FA0                     _ReadTimer1:
  6909                           	opt stack 18
  6910                           
  6911                           ;incstack = 0
  6912  001FA0  CFCE F003          	movff	4046,ReadTimer1@timer	;volatile
  6913  001FA4  CFCF F004          	movff	4047,ReadTimer1@timer+1	;volatile
  6914  001FA8  C003  F001         	movff	ReadTimer1@timer,?_ReadTimer1
  6915  001FAC  C004  F002         	movff	ReadTimer1@timer+1,?_ReadTimer1+1
  6916  001FB0  0012               	return	
  6917  001FB2                     __end_of_ReadTimer1:
  6918                           	opt stack 0
  6919                           pclatu	equ	0xFFB
  6920                           pclath	equ	0xFFA
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           intcon	equ	0xFF2
  6928                           postinc0	equ	0xFEE
  6929                           fsr0h	equ	0xFEA
  6930                           fsr0l	equ	0xFE9
  6931                           wreg	equ	0xFE8
  6932                           indf1	equ	0xFE7
  6933                           fsr1h	equ	0xFE2
  6934                           fsr1l	equ	0xFE1
  6935                           bsr	equ	0xFE0
  6936                           indf2	equ	0xFDF
  6937                           postinc2	equ	0xFDE
  6938                           postdec2	equ	0xFDD
  6939                           fsr2h	equ	0xFDA
  6940                           fsr2l	equ	0xFD9
  6941                           status	equ	0xFD8
  6942                           
  6943 ;; *************** function _InterruptHandlerHigh *****************
  6944 ;; Defined at:
  6945 ;;		line 88 in file "../src/interrupts.c"
  6946 ;; Parameters:    Size  Location     Type
  6947 ;;		None
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;		None
  6950 ;; Return value:  Size  Location     Type
  6951 ;;		None               void
  6952 ;; Registers used:
  6953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6954 ;; Tracked objects:
  6955 ;;		On entry : 0/0
  6956 ;;		On exit  : 0/0
  6957 ;;		Unchanged: 0/0
  6958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  6959 ;;      Params:         0       0       0       0       0
  6960 ;;      Locals:         0       0       0       0       0
  6961 ;;      Temps:          0      14       0       0       0
  6962 ;;      Totals:         0      14       0       0       0
  6963 ;;Total ram usage:       14 bytes
  6964 ;; Hardware stack levels used:    1
  6965 ;; Hardware stack levels required when called:    4
  6966 ;; This function calls:
  6967 ;;		_SleepIfOkay
  6968 ;;		_i2c_int_handler
  6969 ;;		_timer0_int_handler
  6970 ;; This function is called by:
  6971 ;;		Interrupt level 2
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	intcode
  6976  000008                     __pintcode:
  6977                           	opt stack 0
  6978  000008                     _InterruptHandlerHigh:
  6979                           	opt stack 16
  6980                           
  6981                           ;incstack = 0
  6982  000008  CFFA F0DA          	movff	pclath,??_InterruptHandlerHigh
  6983  00000C  CFFB F0DB          	movff	pclatu,??_InterruptHandlerHigh+1
  6984  000010  EFC3  F00A         	goto	int_func
  6985                           pclatu	equ	0xFFB
  6986                           pclath	equ	0xFFA
  6987                           tblptru	equ	0xFF8
  6988                           tblptrh	equ	0xFF7
  6989                           tblptrl	equ	0xFF6
  6990                           tablat	equ	0xFF5
  6991                           prodh	equ	0xFF4
  6992                           prodl	equ	0xFF3
  6993                           intcon	equ	0xFF2
  6994                           postinc0	equ	0xFEE
  6995                           fsr0h	equ	0xFEA
  6996                           fsr0l	equ	0xFE9
  6997                           wreg	equ	0xFE8
  6998                           indf1	equ	0xFE7
  6999                           fsr1h	equ	0xFE2
  7000                           fsr1l	equ	0xFE1
  7001                           bsr	equ	0xFE0
  7002                           indf2	equ	0xFDF
  7003                           postinc2	equ	0xFDE
  7004                           postdec2	equ	0xFDD
  7005                           fsr2h	equ	0xFDA
  7006                           fsr2l	equ	0xFD9
  7007                           status	equ	0xFD8
  7008                           
  7009                           	psect	intcode_body
  7010  001586                     __pintcode_body:
  7011                           	opt stack 16
  7012  001586                     int_func:
  7013                           	opt stack 16
  7014  001586  CFE9 F0DC          	movff	fsr0l,??_InterruptHandlerHigh+2
  7015  00158A  CFEA F0DD          	movff	fsr0h,??_InterruptHandlerHigh+3
  7016  00158E  CFE1 F0DE          	movff	fsr1l,??_InterruptHandlerHigh+4
  7017  001592  CFE2 F0DF          	movff	fsr1h,??_InterruptHandlerHigh+5
  7018  001596  CFD9 F0E0          	movff	fsr2l,??_InterruptHandlerHigh+6
  7019  00159A  CFDA F0E1          	movff	fsr2h,??_InterruptHandlerHigh+7
  7020  00159E  CFF3 F0E2          	movff	prodl,??_InterruptHandlerHigh+8
  7021  0015A2  CFF4 F0E3          	movff	prodh,??_InterruptHandlerHigh+9
  7022  0015A6  CFF6 F0E4          	movff	tblptrl,??_InterruptHandlerHigh+10
  7023  0015AA  CFF7 F0E5          	movff	tblptrh,??_InterruptHandlerHigh+11
  7024  0015AE  CFF8 F0E6          	movff	tblptru,??_InterruptHandlerHigh+12
  7025  0015B2  CFF5 F0E7          	movff	tablat,??_InterruptHandlerHigh+13
  7026                           
  7027                           ;interrupts.c: 93: if (PIR1bits.SSPIF) {
  7028  0015B6  A69E               	btfss	3998,3,c	;volatile
  7029  0015B8  D003               	goto	i2l3273
  7030                           
  7031                           ;interrupts.c: 95: PIR1bits.SSPIF = 0;
  7032  0015BA  969E               	bcf	3998,3,c	;volatile
  7033                           
  7034                           ;interrupts.c: 97: i2c_int_handler();
  7035  0015BC  EC30  F00C         	call	_i2c_int_handler	;wreg free
  7036  0015C0                     i2l3273:
  7037                           
  7038                           ;interrupts.c: 98: }
  7039                           ;interrupts.c: 101: if (INTCONbits.TMR0IF) {
  7040  0015C0  A4F2               	btfss	intcon,2,c	;volatile
  7041  0015C2  D003               	goto	i2l3279
  7042                           
  7043                           ;interrupts.c: 102: INTCONbits.TMR0IF = 0;
  7044  0015C4  94F2               	bcf	intcon,2,c	;volatile
  7045                           
  7046                           ;interrupts.c: 104: timer0_int_handler();
  7047  0015C6  EC7E  F00A         	call	_timer0_int_handler	;wreg free
  7048  0015CA                     i2l3279:
  7049                           
  7050                           ;interrupts.c: 105: }
  7051                           ;interrupts.c: 115: SleepIfOkay();
  7052  0015CA  EC66  F00C         	call	_SleepIfOkay	;wreg free
  7053  0015CE  C0E7  FFF5         	movff	??_InterruptHandlerHigh+13,tablat
  7054  0015D2  C0E6  FFF8         	movff	??_InterruptHandlerHigh+12,tblptru
  7055  0015D6  C0E5  FFF7         	movff	??_InterruptHandlerHigh+11,tblptrh
  7056  0015DA  C0E4  FFF6         	movff	??_InterruptHandlerHigh+10,tblptrl
  7057  0015DE  C0E3  FFF4         	movff	??_InterruptHandlerHigh+9,prodh
  7058  0015E2  C0E2  FFF3         	movff	??_InterruptHandlerHigh+8,prodl
  7059  0015E6  C0E1  FFDA         	movff	??_InterruptHandlerHigh+7,fsr2h
  7060  0015EA  C0E0  FFD9         	movff	??_InterruptHandlerHigh+6,fsr2l
  7061  0015EE  C0DF  FFE2         	movff	??_InterruptHandlerHigh+5,fsr1h
  7062  0015F2  C0DE  FFE1         	movff	??_InterruptHandlerHigh+4,fsr1l
  7063  0015F6  C0DD  FFEA         	movff	??_InterruptHandlerHigh+3,fsr0h
  7064  0015FA  C0DC  FFE9         	movff	??_InterruptHandlerHigh+2,fsr0l
  7065  0015FE  C0DB  FFFB         	movff	??_InterruptHandlerHigh+1,pclatu
  7066  001602  C0DA  FFFA         	movff	??_InterruptHandlerHigh,pclath
  7067  001606  0011               	retfie		f
  7068  001608                     __end_of_InterruptHandlerHigh:
  7069                           	opt stack 0
  7070                           pclatu	equ	0xFFB
  7071                           pclath	equ	0xFFA
  7072                           tblptru	equ	0xFF8
  7073                           tblptrh	equ	0xFF7
  7074                           tblptrl	equ	0xFF6
  7075                           tablat	equ	0xFF5
  7076                           prodh	equ	0xFF4
  7077                           prodl	equ	0xFF3
  7078                           intcon	equ	0xFF2
  7079                           postinc0	equ	0xFEE
  7080                           fsr0h	equ	0xFEA
  7081                           fsr0l	equ	0xFE9
  7082                           wreg	equ	0xFE8
  7083                           indf1	equ	0xFE7
  7084                           fsr1h	equ	0xFE2
  7085                           fsr1l	equ	0xFE1
  7086                           bsr	equ	0xFE0
  7087                           indf2	equ	0xFDF
  7088                           postinc2	equ	0xFDE
  7089                           postdec2	equ	0xFDD
  7090                           fsr2h	equ	0xFDA
  7091                           fsr2l	equ	0xFD9
  7092                           status	equ	0xFD8
  7093                           
  7094 ;; *************** function _timer0_int_handler *****************
  7095 ;; Defined at:
  7096 ;;		line 17 in file "../src/user_interrupts.c"
  7097 ;; Parameters:    Size  Location     Type
  7098 ;;		None
  7099 ;; Auto vars:     Size  Location     Type
  7100 ;;  val             2   34[BANK0 ] unsigned int 
  7101 ;;  msgtype         2   32[BANK0 ] int 
  7102 ;;  length          2   30[BANK0 ] int 
  7103 ;; Return value:  Size  Location     Type
  7104 ;;		None               void
  7105 ;; Registers used:
  7106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7107 ;; Tracked objects:
  7108 ;;		On entry : 0/0
  7109 ;;		On exit  : 0/0
  7110 ;;		Unchanged: 0/0
  7111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7112 ;;      Params:         0       0       0       0       0
  7113 ;;      Locals:         0       6       0       0       0
  7114 ;;      Temps:          0       1       0       0       0
  7115 ;;      Totals:         0       7       0       0       0
  7116 ;;Total ram usage:        7 bytes
  7117 ;; Hardware stack levels used:    1
  7118 ;; Hardware stack levels required when called:    3
  7119 ;; This function calls:
  7120 ;;		_FromMainHigh_recvmsg
  7121 ;;		_WriteTimer0
  7122 ;;		i2_ToMainHigh_sendmsg
  7123 ;; This function is called by:
  7124 ;;		_InterruptHandlerHigh
  7125 ;; This function uses a non-reentrant model
  7126 ;;
  7127                           
  7128                           	psect	text45
  7129  0014FC                     __ptext45:
  7130                           	opt stack 0
  7131  0014FC                     _timer0_int_handler:
  7132                           	opt stack 16
  7133                           
  7134                           ;user_interrupts.c: 18: unsigned int val;
  7135                           ;user_interrupts.c: 19: int length, msgtype;
  7136                           ;user_interrupts.c: 27: WriteTimer0(0);
  7137                           
  7138                           ;incstack = 0
  7139  0014FC  0E00               	movlw	0
  7140  0014FE  0100               	movlb	0	; () banked
  7141  001500  0100               	movlb	0	; () banked
  7142  001502  6FB7               	movwf	(WriteTimer0@timer0+1)& (0+255),b
  7143  001504  0E00               	movlw	0
  7144  001506  0100               	movlb	0	; () banked
  7145  001508  6FB6               	movwf	WriteTimer0@timer0& (0+255),b
  7146  00150A  ECD9  F00F         	call	_WriteTimer0	;wreg free
  7147                           
  7148                           ;user_interrupts.c: 30: length = FromMainHigh_recvmsg(sizeof (val), (unsigned char *) &m
      +                          sgtype, (void *) &val);
  7149  00150E  0100               	movlb	0	; () banked
  7150  001510  0E00               	movlw	high timer0_int_handler@msgtype
  7151  001512  0100               	movlb	0	; () banked
  7152  001514  0100               	movlb	0	; () banked
  7153  001516  6FCF               	movwf	(FromMainHigh_recvmsg@msgtype+1)& (0+255),b
  7154  001518  0100               	movlb	0	; () banked
  7155  00151A  0ED6               	movlw	low timer0_int_handler@msgtype
  7156  00151C  0100               	movlb	0	; () banked
  7157  00151E  0100               	movlb	0	; () banked
  7158  001520  6FCE               	movwf	FromMainHigh_recvmsg@msgtype& (0+255),b
  7159  001522  0100               	movlb	0	; () banked
  7160  001524  0E00               	movlw	high timer0_int_handler@val
  7161  001526  0100               	movlb	0	; () banked
  7162  001528  0100               	movlb	0	; () banked
  7163  00152A  6FD1               	movwf	(FromMainHigh_recvmsg@data+1)& (0+255),b
  7164  00152C  0100               	movlb	0	; () banked
  7165  00152E  0ED8               	movlw	low timer0_int_handler@val
  7166  001530  0100               	movlb	0	; () banked
  7167  001532  0100               	movlb	0	; () banked
  7168  001534  6FD0               	movwf	FromMainHigh_recvmsg@data& (0+255),b
  7169  001536  0E02               	movlw	2
  7170  001538  ECF8  F00D         	call	_FromMainHigh_recvmsg
  7171  00153C  0100               	movlb	0	; () banked
  7172  00153E  0100               	movlb	0	; () banked
  7173  001540  6FD4               	movwf	timer0_int_handler@length& (0+255),b
  7174  001542  0100               	movlb	0	; () banked
  7175  001544  6BD5               	clrf	(timer0_int_handler@length+1)& (0+255),b
  7176  001546  0100               	movlb	0	; () banked
  7177  001548  BFD4               	btfsc	timer0_int_handler@length& (0+255),7,b
  7178  00154A  07D5               	decf	(timer0_int_handler@length+1)& (0+255),f,b
  7179                           
  7180                           ; BSR set to: 0
  7181                           ;user_interrupts.c: 31: if (length == sizeof (val)) {
  7182  00154C  0100               	movlb	0	; () banked
  7183  00154E  0100               	movlb	0	; () banked
  7184  001550  51D4               	movf	timer0_int_handler@length& (0+255),w,b
  7185  001552  0A02               	xorlw	2
  7186  001554  11D5               	iorwf	(timer0_int_handler@length+1)& (0+255),w,b
  7187  001556  A4D8               	btfss	status,2,c
  7188  001558  0012               	return	
  7189                           
  7190                           ; BSR set to: 0
  7191                           ;user_interrupts.c: 32: ToMainHigh_sendmsg(sizeof (val), 10, (void *) &val);
  7192  00155A  0100               	movlb	0	; () banked
  7193  00155C  6FD3               	movwf	??_timer0_int_handler& (0+255),b
  7194  00155E  0E0A               	movlw	10
  7195  001560  0100               	movlb	0	; () banked
  7196  001562  0100               	movlb	0	; () banked
  7197  001564  6FCC               	movwf	i2ToMainHigh_sendmsg@msgtype& (0+255),b
  7198  001566  0100               	movlb	0	; () banked
  7199  001568  51D3               	movf	??_timer0_int_handler& (0+255),w,b
  7200  00156A  0100               	movlb	0	; () banked
  7201  00156C  0E00               	movlw	high timer0_int_handler@val
  7202  00156E  0100               	movlb	0	; () banked
  7203  001570  0100               	movlb	0	; () banked
  7204  001572  6FCE               	movwf	(i2ToMainHigh_sendmsg@data+1)& (0+255),b
  7205  001574  0100               	movlb	0	; () banked
  7206  001576  0ED8               	movlw	low timer0_int_handler@val
  7207  001578  0100               	movlb	0	; () banked
  7208  00157A  0100               	movlb	0	; () banked
  7209  00157C  6FCD               	movwf	i2ToMainHigh_sendmsg@data& (0+255),b
  7210  00157E  0E02               	movlw	2
  7211  001580  EC00  F00F         	call	i2_ToMainHigh_sendmsg
  7212  001584  0012               	return	
  7213  001586                     __end_of_timer0_int_handler:
  7214                           	opt stack 0
  7215                           pclatu	equ	0xFFB
  7216                           pclath	equ	0xFFA
  7217                           tblptru	equ	0xFF8
  7218                           tblptrh	equ	0xFF7
  7219                           tblptrl	equ	0xFF6
  7220                           tablat	equ	0xFF5
  7221                           prodh	equ	0xFF4
  7222                           prodl	equ	0xFF3
  7223                           intcon	equ	0xFF2
  7224                           postinc0	equ	0xFEE
  7225                           fsr0h	equ	0xFEA
  7226                           fsr0l	equ	0xFE9
  7227                           wreg	equ	0xFE8
  7228                           indf1	equ	0xFE7
  7229                           fsr1h	equ	0xFE2
  7230                           fsr1l	equ	0xFE1
  7231                           bsr	equ	0xFE0
  7232                           indf2	equ	0xFDF
  7233                           postinc2	equ	0xFDE
  7234                           postdec2	equ	0xFDD
  7235                           fsr2h	equ	0xFDA
  7236                           fsr2l	equ	0xFD9
  7237                           status	equ	0xFD8
  7238                           
  7239 ;; *************** function i2_ToMainHigh_sendmsg *****************
  7240 ;; Defined at:
  7241 ;;		line 126 in file "../src/messages.c"
  7242 ;; Parameters:    Size  Location     Type
  7243 ;;  length          1    wreg     unsigned char 
  7244 ;;  msgtype         1   22[BANK0 ] unsigned char 
  7245 ;;  data            2   23[BANK0 ] PTR void 
  7246 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@uc(23), 
  7247 ;; Auto vars:     Size  Location     Type
  7248 ;;  length          1   25[BANK0 ] unsigned char 
  7249 ;; Return value:  Size  Location     Type
  7250 ;;                  1    wreg      char 
  7251 ;; Registers used:
  7252 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7253 ;; Tracked objects:
  7254 ;;		On entry : 0/0
  7255 ;;		On exit  : 0/0
  7256 ;;		Unchanged: 0/0
  7257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7258 ;;      Params:         0       3       0       0       0
  7259 ;;      Locals:         0       1       0       0       0
  7260 ;;      Temps:          0       0       0       0       0
  7261 ;;      Totals:         0       4       0       0       0
  7262 ;;Total ram usage:        4 bytes
  7263 ;; Hardware stack levels used:    1
  7264 ;; Hardware stack levels required when called:    2
  7265 ;; This function calls:
  7266 ;;		i2_send_msg
  7267 ;; This function is called by:
  7268 ;;		_timer0_int_handler
  7269 ;; This function uses a non-reentrant model
  7270 ;;
  7271                           
  7272                           	psect	text46
  7273  001E00                     __ptext46:
  7274                           	opt stack 0
  7275  001E00                     i2_ToMainHigh_sendmsg:
  7276                           	opt stack 16
  7277                           
  7278                           ;incstack = 0
  7279                           ;i2ToMainHigh_sendmsg@length stored from wreg
  7280  001E00  CFE8 F0CF          	movff	wreg,i2ToMainHigh_sendmsg@length
  7281                           
  7282                           ;messages.c: 132: return (send_msg(&ToMainHigh_MQ, length, msgtype, data));
  7283                           ;	Return value of i2_ToMainHigh_sendmsg is never used
  7284  001E04  0100               	movlb	0	; () banked
  7285  001E06  0E00               	movlw	high _ToMainHigh_MQ
  7286  001E08  0100               	movlb	0	; () banked
  7287  001E0A  0100               	movlb	0	; () banked
  7288  001E0C  6FC1               	movwf	(i2send_msg@qptr+1)& (0+255),b
  7289  001E0E  0100               	movlb	0	; () banked
  7290  001E10  0E80               	movlw	low _ToMainHigh_MQ
  7291  001E12  0100               	movlb	0	; () banked
  7292  001E14  0100               	movlb	0	; () banked
  7293  001E16  6FC0               	movwf	i2send_msg@qptr& (0+255),b
  7294  001E18  C0CF  F0C2         	movff	i2ToMainHigh_sendmsg@length,i2send_msg@length
  7295  001E1C  C0CC  F0C3         	movff	i2ToMainHigh_sendmsg@msgtype,i2send_msg@msgtype
  7296  001E20  0100               	movlb	0	; () banked
  7297  001E22  0100               	movlb	0	; () banked
  7298  001E24  C0CE  F0C5         	movff	i2ToMainHigh_sendmsg@data+1,i2send_msg@data+1
  7299  001E28  0100               	movlb	0	; () banked
  7300  001E2A  0100               	movlb	0	; () banked
  7301  001E2C  C0CD  F0C4         	movff	i2ToMainHigh_sendmsg@data,i2send_msg@data
  7302  001E30  ECE7  F007         	call	i2_send_msg	;wreg free
  7303  001E34  0012               	return	
  7304  001E36                     __end_ofi2_ToMainHigh_sendmsg:
  7305                           	opt stack 0
  7306                           pclatu	equ	0xFFB
  7307                           pclath	equ	0xFFA
  7308                           tblptru	equ	0xFF8
  7309                           tblptrh	equ	0xFF7
  7310                           tblptrl	equ	0xFF6
  7311                           tablat	equ	0xFF5
  7312                           prodh	equ	0xFF4
  7313                           prodl	equ	0xFF3
  7314                           intcon	equ	0xFF2
  7315                           postinc0	equ	0xFEE
  7316                           fsr0h	equ	0xFEA
  7317                           fsr0l	equ	0xFE9
  7318                           wreg	equ	0xFE8
  7319                           indf1	equ	0xFE7
  7320                           fsr1h	equ	0xFE2
  7321                           fsr1l	equ	0xFE1
  7322                           bsr	equ	0xFE0
  7323                           indf2	equ	0xFDF
  7324                           postinc2	equ	0xFDE
  7325                           postdec2	equ	0xFDD
  7326                           fsr2h	equ	0xFDA
  7327                           fsr2l	equ	0xFD9
  7328                           status	equ	0xFD8
  7329                           
  7330 ;; *************** function i2_send_msg *****************
  7331 ;; Defined at:
  7332 ;;		line 24 in file "../src/messages.c"
  7333 ;; Parameters:    Size  Location     Type
  7334 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7335 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7336 ;;  length          1   12[BANK0 ] unsigned char 
  7337 ;;  msgtype         1   13[BANK0 ] unsigned char 
  7338 ;;  data            2   14[BANK0 ] PTR void 
  7339 ;;		 -> timer0_int_handler@val(2), NULL(0), main@msgbuffer(11), main@t1thread_data(2), 
  7340 ;;		 -> main@uc(23), 
  7341 ;; Auto vars:     Size  Location     Type
  7342 ;;  send_msg        2   20[BANK0 ] PTR struct __msg
  7343 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7344 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7345 ;;  send_msg        2   17[BANK0 ] unsigned int 
  7346 ;;  send_msg        1   19[BANK0 ] unsigned char 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  1    wreg      char 
  7349 ;; Registers used:
  7350 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7356 ;;      Params:         0       6       0       0       0
  7357 ;;      Locals:         0       5       0       0       0
  7358 ;;      Temps:          0       1       0       0       0
  7359 ;;      Totals:         0      12       0       0       0
  7360 ;;Total ram usage:       12 bytes
  7361 ;; Hardware stack levels used:    1
  7362 ;; Hardware stack levels required when called:    1
  7363 ;; This function calls:
  7364 ;;		i2_memcpy
  7365 ;; This function is called by:
  7366 ;;		i2_ToMainHigh_sendmsg
  7367 ;; This function uses a non-reentrant model
  7368 ;;
  7369                           
  7370                           	psect	text47
  7371  000FCE                     __ptext47:
  7372                           	opt stack 0
  7373  000FCE                     i2_send_msg:
  7374                           	opt stack 16
  7375                           
  7376                           ;messages.c: 25: unsigned char slot;
  7377                           ;messages.c: 27: msg *qmsg;
  7378                           ;messages.c: 28: size_t tlength = length;
  7379                           
  7380                           ;incstack = 0
  7381  000FCE  0100               	movlb	0	; () banked
  7382  000FD0  0100               	movlb	0	; () banked
  7383  000FD2  C0C2  F0C7         	movff	i2send_msg@length,i2send_msg@tlength
  7384  000FD6  0100               	movlb	0	; () banked
  7385  000FD8  0100               	movlb	0	; () banked
  7386  000FDA  6BC8               	clrf	(i2send_msg@tlength+1)& (0+255),b
  7387                           
  7388                           ; BSR set to: 0
  7389                           ;messages.c: 38: slot = qptr->cur_write_ind;
  7390  000FDC  0100               	movlb	0	; () banked
  7391  000FDE  EE20 F034          	lfsr	2,52
  7392  000FE2  0100               	movlb	0	; () banked
  7393  000FE4  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7394  000FE6  26D9               	addwf	fsr2l,f,c
  7395  000FE8  0100               	movlb	0	; () banked
  7396  000FEA  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7397  000FEC  22DA               	addwfc	fsr2h,f,c
  7398  000FEE  50DF               	movf	indf2,w,c
  7399  000FF0  0100               	movlb	0	; () banked
  7400  000FF2  0100               	movlb	0	; () banked
  7401  000FF4  6FC9               	movwf	i2send_msg@slot& (0+255),b
  7402                           
  7403                           ; BSR set to: 0
  7404                           ;messages.c: 39: qmsg = &(qptr->queue[slot]);
  7405  000FF6  0100               	movlb	0	; () banked
  7406  000FF8  0100               	movlb	0	; () banked
  7407  000FFA  51C9               	movf	i2send_msg@slot& (0+255),w,b
  7408  000FFC  0D0D               	mullw	13
  7409  000FFE  50F3               	movf	prodl,w,c
  7410  001000  0100               	movlb	0	; () banked
  7411  001002  0100               	movlb	0	; () banked
  7412  001004  25C0               	addwf	i2send_msg@qptr& (0+255),w,b
  7413  001006  0100               	movlb	0	; () banked
  7414  001008  0100               	movlb	0	; () banked
  7415  00100A  6FCA               	movwf	i2send_msg@qmsg& (0+255),b
  7416  00100C  50F4               	movf	prodh,w,c
  7417  00100E  0100               	movlb	0	; () banked
  7418  001010  0100               	movlb	0	; () banked
  7419  001012  21C1               	addwfc	(i2send_msg@qptr+1)& (0+255),w,b
  7420  001014  0100               	movlb	0	; () banked
  7421  001016  6FCB               	movwf	(i2send_msg@qmsg+1)& (0+255),b
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;messages.c: 41: if (qmsg->full != 0) {
  7425  001018  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7426  00101C  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7427  001020  50DF               	movf	indf2,w,c
  7428  001022  B4D8               	btfsc	status,2,c
  7429  001024  D002               	goto	i2l3879
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;messages.c: 42: return (-1);
  7433  001026  0EFF               	movlw	255
  7434  001028  0012               	return	
  7435  00102A                     i2l3879:
  7436                           
  7437                           ; BSR set to: 0
  7438                           ;messages.c: 43: }
  7439                           ;messages.c: 46: qmsg->length = length;
  7440  00102A  0100               	movlb	0	; () banked
  7441  00102C  EE20 F001          	lfsr	2,1
  7442  001030  0100               	movlb	0	; () banked
  7443  001032  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7444  001034  26D9               	addwf	fsr2l,f,c
  7445  001036  0100               	movlb	0	; () banked
  7446  001038  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7447  00103A  22DA               	addwfc	fsr2h,f,c
  7448  00103C  0100               	movlb	0	; () banked
  7449  00103E  C0C2  FFDF         	movff	i2send_msg@length,indf2
  7450                           
  7451                           ;messages.c: 47: qmsg->msgtype = msgtype;
  7452  001042  0100               	movlb	0	; () banked
  7453  001044  EE20 F002          	lfsr	2,2
  7454  001048  0100               	movlb	0	; () banked
  7455  00104A  51CA               	movf	i2send_msg@qmsg& (0+255),w,b
  7456  00104C  26D9               	addwf	fsr2l,f,c
  7457  00104E  0100               	movlb	0	; () banked
  7458  001050  51CB               	movf	(i2send_msg@qmsg+1)& (0+255),w,b
  7459  001052  22DA               	addwfc	fsr2h,f,c
  7460  001054  0100               	movlb	0	; () banked
  7461  001056  C0C3  FFDF         	movff	i2send_msg@msgtype,indf2
  7462                           
  7463                           ; BSR set to: 0
  7464                           ;messages.c: 55: memcpy(qmsg->data, data, tlength);
  7465  00105A  0E03               	movlw	3
  7466  00105C  0100               	movlb	0	; () banked
  7467  00105E  0100               	movlb	0	; () banked
  7468  001060  25CA               	addwf	i2send_msg@qmsg& (0+255),w,b
  7469  001062  0100               	movlb	0	; () banked
  7470  001064  0100               	movlb	0	; () banked
  7471  001066  6FB6               	movwf	i2memcpy@d1& (0+255),b
  7472  001068  0E00               	movlw	0
  7473  00106A  0100               	movlb	0	; () banked
  7474  00106C  0100               	movlb	0	; () banked
  7475  00106E  21CB               	addwfc	(i2send_msg@qmsg+1)& (0+255),w,b
  7476  001070  0100               	movlb	0	; () banked
  7477  001072  6FB7               	movwf	(i2memcpy@d1+1)& (0+255),b
  7478  001074  0100               	movlb	0	; () banked
  7479  001076  0100               	movlb	0	; () banked
  7480  001078  C0C5  F0B9         	movff	i2send_msg@data+1,i2memcpy@s1+1
  7481  00107C  0100               	movlb	0	; () banked
  7482  00107E  0100               	movlb	0	; () banked
  7483  001080  C0C4  F0B8         	movff	i2send_msg@data,i2memcpy@s1
  7484  001084  C0C7  F0BA         	movff	i2send_msg@tlength,i2memcpy@n
  7485  001088  C0C8  F0BB         	movff	i2send_msg@tlength+1,i2memcpy@n+1
  7486  00108C  ECFE  F00C         	call	i2_memcpy	;wreg free
  7487                           
  7488                           ;messages.c: 56: qptr->cur_write_ind = (qptr->cur_write_ind + 1) % 4;
  7489  001090  0100               	movlb	0	; () banked
  7490  001092  EE20 F034          	lfsr	2,52
  7491  001096  0100               	movlb	0	; () banked
  7492  001098  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7493  00109A  26D9               	addwf	fsr2l,f,c
  7494  00109C  0100               	movlb	0	; () banked
  7495  00109E  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7496  0010A0  22DA               	addwfc	fsr2h,f,c
  7497  0010A2  0100               	movlb	0	; () banked
  7498  0010A4  EE10 F034          	lfsr	1,52
  7499  0010A8  0100               	movlb	0	; () banked
  7500  0010AA  51C0               	movf	i2send_msg@qptr& (0+255),w,b
  7501  0010AC  26E1               	addwf	fsr1l,f,c
  7502  0010AE  0100               	movlb	0	; () banked
  7503  0010B0  51C1               	movf	(i2send_msg@qptr+1)& (0+255),w,b
  7504  0010B2  22E2               	addwfc	fsr1h,f,c
  7505  0010B4  50E7               	movf	indf1,w,c
  7506  0010B6  0100               	movlb	0	; () banked
  7507  0010B8  6FC6               	movwf	??i2_send_msg& (0+255),b
  7508  0010BA  0100               	movlb	0	; () banked
  7509  0010BC  29C6               	incf	??i2_send_msg& (0+255),w,b
  7510  0010BE  0B03               	andlw	3
  7511  0010C0  6EDF               	movwf	indf2,c
  7512                           
  7513                           ; BSR set to: 0
  7514                           ;messages.c: 59: qmsg->full = 1;
  7515  0010C2  C0CA  FFD9         	movff	i2send_msg@qmsg,fsr2l
  7516  0010C6  C0CB  FFDA         	movff	i2send_msg@qmsg+1,fsr2h
  7517  0010CA  0E01               	movlw	1
  7518  0010CC  6EDF               	movwf	indf2,c
  7519                           
  7520                           ; BSR set to: 0
  7521                           ;messages.c: 60: return (1);
  7522  0010CE  0E01               	movlw	1
  7523  0010D0  0012               	return	
  7524  0010D2                     __end_ofi2_send_msg:
  7525                           	opt stack 0
  7526                           pclatu	equ	0xFFB
  7527                           pclath	equ	0xFFA
  7528                           tblptru	equ	0xFF8
  7529                           tblptrh	equ	0xFF7
  7530                           tblptrl	equ	0xFF6
  7531                           tablat	equ	0xFF5
  7532                           prodh	equ	0xFF4
  7533                           prodl	equ	0xFF3
  7534                           intcon	equ	0xFF2
  7535                           postinc0	equ	0xFEE
  7536                           fsr0h	equ	0xFEA
  7537                           fsr0l	equ	0xFE9
  7538                           wreg	equ	0xFE8
  7539                           indf1	equ	0xFE7
  7540                           fsr1h	equ	0xFE2
  7541                           fsr1l	equ	0xFE1
  7542                           bsr	equ	0xFE0
  7543                           indf2	equ	0xFDF
  7544                           postinc2	equ	0xFDE
  7545                           postdec2	equ	0xFDD
  7546                           fsr2h	equ	0xFDA
  7547                           fsr2l	equ	0xFD9
  7548                           status	equ	0xFD8
  7549                           
  7550 ;; *************** function _WriteTimer0 *****************
  7551 ;; Defined at:
  7552 ;;		line 16 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\pic18\plib\Timers\t0write.c"
  7553 ;; Parameters:    Size  Location     Type
  7554 ;;  timer0          2    0[BANK0 ] unsigned int 
  7555 ;; Auto vars:     Size  Location     Type
  7556 ;;  timer           2    2[BANK0 ] struct Timers
  7557 ;; Return value:  Size  Location     Type
  7558 ;;		None               void
  7559 ;; Registers used:
  7560 ;;		None
  7561 ;; Tracked objects:
  7562 ;;		On entry : 0/0
  7563 ;;		On exit  : 0/0
  7564 ;;		Unchanged: 0/0
  7565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7566 ;;      Params:         0       2       0       0       0
  7567 ;;      Locals:         0       2       0       0       0
  7568 ;;      Temps:          0       0       0       0       0
  7569 ;;      Totals:         0       4       0       0       0
  7570 ;;Total ram usage:        4 bytes
  7571 ;; Hardware stack levels used:    1
  7572 ;; This function calls:
  7573 ;;		Nothing
  7574 ;; This function is called by:
  7575 ;;		_timer0_int_handler
  7576 ;; This function uses a non-reentrant model
  7577 ;;
  7578                           
  7579                           	psect	text48
  7580  001FB2                     __ptext48:
  7581                           	opt stack 0
  7582  001FB2                     _WriteTimer0:
  7583                           	opt stack 18
  7584                           
  7585                           ; BSR set to: 0
  7586                           ;incstack = 0
  7587  001FB2  C0B6  F0B8         	movff	WriteTimer0@timer0,WriteTimer0@timer
  7588  001FB6  C0B7  F0B9         	movff	WriteTimer0@timer0+1,WriteTimer0@timer+1
  7589  001FBA  C0B9  FFD7         	movff	WriteTimer0@timer+1,4055	;volatile
  7590  001FBE  C0B8  FFD6         	movff	WriteTimer0@timer,4054	;volatile
  7591  001FC2  0012               	return	
  7592  001FC4                     __end_of_WriteTimer0:
  7593                           	opt stack 0
  7594                           pclatu	equ	0xFFB
  7595                           pclath	equ	0xFFA
  7596                           tblptru	equ	0xFF8
  7597                           tblptrh	equ	0xFF7
  7598                           tblptrl	equ	0xFF6
  7599                           tablat	equ	0xFF5
  7600                           prodh	equ	0xFF4
  7601                           prodl	equ	0xFF3
  7602                           intcon	equ	0xFF2
  7603                           postinc0	equ	0xFEE
  7604                           fsr0h	equ	0xFEA
  7605                           fsr0l	equ	0xFE9
  7606                           wreg	equ	0xFE8
  7607                           indf1	equ	0xFE7
  7608                           fsr1h	equ	0xFE2
  7609                           fsr1l	equ	0xFE1
  7610                           bsr	equ	0xFE0
  7611                           indf2	equ	0xFDF
  7612                           postinc2	equ	0xFDE
  7613                           postdec2	equ	0xFDD
  7614                           fsr2h	equ	0xFDA
  7615                           fsr2l	equ	0xFD9
  7616                           status	equ	0xFD8
  7617                           
  7618 ;; *************** function _FromMainHigh_recvmsg *****************
  7619 ;; Defined at:
  7620 ;;		line 183 in file "../src/messages.c"
  7621 ;; Parameters:    Size  Location     Type
  7622 ;;  maxlength       1    wreg     unsigned char 
  7623 ;;  msgtype         2   24[BANK0 ] PTR unsigned char 
  7624 ;;		 -> timer0_int_handler@msgtype(2), 
  7625 ;;  data            2   26[BANK0 ] PTR void 
  7626 ;;		 -> timer0_int_handler@val(2), 
  7627 ;; Auto vars:     Size  Location     Type
  7628 ;;  maxlength       1   28[BANK0 ] unsigned char 
  7629 ;; Return value:  Size  Location     Type
  7630 ;;                  1    wreg      char 
  7631 ;; Registers used:
  7632 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7633 ;; Tracked objects:
  7634 ;;		On entry : 0/0
  7635 ;;		On exit  : 0/0
  7636 ;;		Unchanged: 0/0
  7637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7638 ;;      Params:         0       4       0       0       0
  7639 ;;      Locals:         0       1       0       0       0
  7640 ;;      Temps:          0       0       0       0       0
  7641 ;;      Totals:         0       5       0       0       0
  7642 ;;Total ram usage:        5 bytes
  7643 ;; Hardware stack levels used:    1
  7644 ;; Hardware stack levels required when called:    2
  7645 ;; This function calls:
  7646 ;;		i2_recv_msg
  7647 ;; This function is called by:
  7648 ;;		_timer0_int_handler
  7649 ;; This function uses a non-reentrant model
  7650 ;;
  7651                           
  7652                           	psect	text49
  7653  001BF0                     __ptext49:
  7654                           	opt stack 0
  7655  001BF0                     _FromMainHigh_recvmsg:
  7656                           	opt stack 16
  7657                           
  7658                           ;incstack = 0
  7659                           ;FromMainHigh_recvmsg@maxlength stored from wreg
  7660  001BF0  CFE8 F0D2          	movff	wreg,FromMainHigh_recvmsg@maxlength
  7661                           
  7662                           ;messages.c: 189: return (recv_msg(&FromMainHigh_MQ, maxlength, msgtype, data));
  7663  001BF4  0102               	movlb	2	; () banked
  7664  001BF6  0E02               	movlw	high _FromMainHigh_MQ
  7665  001BF8  0100               	movlb	0	; () banked
  7666  001BFA  0100               	movlb	0	; () banked
  7667  001BFC  6FC1               	movwf	(i2recv_msg@qptr+1)& (0+255),b
  7668  001BFE  0102               	movlb	2	; () banked
  7669  001C00  0E00               	movlw	low _FromMainHigh_MQ
  7670  001C02  0100               	movlb	0	; () banked
  7671  001C04  0100               	movlb	0	; () banked
  7672  001C06  6FC0               	movwf	i2recv_msg@qptr& (0+255),b
  7673  001C08  C0D2  F0C2         	movff	FromMainHigh_recvmsg@maxlength,i2recv_msg@maxlength
  7674  001C0C  0100               	movlb	0	; () banked
  7675  001C0E  0100               	movlb	0	; () banked
  7676  001C10  C0CF  F0C4         	movff	FromMainHigh_recvmsg@msgtype+1,i2recv_msg@msgtype+1
  7677  001C14  0100               	movlb	0	; () banked
  7678  001C16  0100               	movlb	0	; () banked
  7679  001C18  C0CE  F0C3         	movff	FromMainHigh_recvmsg@msgtype,i2recv_msg@msgtype
  7680  001C1C  0100               	movlb	0	; () banked
  7681  001C1E  0100               	movlb	0	; () banked
  7682  001C20  C0D1  F0C6         	movff	FromMainHigh_recvmsg@data+1,i2recv_msg@data+1
  7683  001C24  0100               	movlb	0	; () banked
  7684  001C26  0100               	movlb	0	; () banked
  7685  001C28  C0D0  F0C5         	movff	FromMainHigh_recvmsg@data,i2recv_msg@data
  7686  001C2C  ECCA  F006         	call	i2_recv_msg	;wreg free
  7687  001C30  0012               	return	
  7688  001C32                     __end_of_FromMainHigh_recvmsg:
  7689                           	opt stack 0
  7690                           pclatu	equ	0xFFB
  7691                           pclath	equ	0xFFA
  7692                           tblptru	equ	0xFF8
  7693                           tblptrh	equ	0xFF7
  7694                           tblptrl	equ	0xFF6
  7695                           tablat	equ	0xFF5
  7696                           prodh	equ	0xFF4
  7697                           prodl	equ	0xFF3
  7698                           intcon	equ	0xFF2
  7699                           postinc0	equ	0xFEE
  7700                           fsr0h	equ	0xFEA
  7701                           fsr0l	equ	0xFE9
  7702                           wreg	equ	0xFE8
  7703                           indf1	equ	0xFE7
  7704                           fsr1h	equ	0xFE2
  7705                           fsr1l	equ	0xFE1
  7706                           bsr	equ	0xFE0
  7707                           indf2	equ	0xFDF
  7708                           postinc2	equ	0xFDE
  7709                           postdec2	equ	0xFDD
  7710                           fsr2h	equ	0xFDA
  7711                           fsr2l	equ	0xFD9
  7712                           status	equ	0xFD8
  7713                           
  7714 ;; *************** function i2_recv_msg *****************
  7715 ;; Defined at:
  7716 ;;		line 63 in file "../src/messages.c"
  7717 ;; Parameters:    Size  Location     Type
  7718 ;;  qptr            2   10[BANK0 ] PTR struct __msg_queue
  7719 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7720 ;;  maxlength       1   12[BANK0 ] unsigned char 
  7721 ;;  msgtype         2   13[BANK0 ] PTR unsigned char 
  7722 ;;		 -> timer0_int_handler@msgtype(2), main@msgtype(1), 
  7723 ;;  data            2   15[BANK0 ] PTR void 
  7724 ;;		 -> timer0_int_handler@val(2), main@msgbuffer(11), 
  7725 ;; Auto vars:     Size  Location     Type
  7726 ;;  recv_msg        2   22[BANK0 ] PTR struct __msg
  7727 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7728 ;;		 -> FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  7729 ;;  recv_msg        2   20[BANK0 ] unsigned int 
  7730 ;;  recv_msg        1   19[BANK0 ] unsigned char 
  7731 ;; Return value:  Size  Location     Type
  7732 ;;                  1    wreg      char 
  7733 ;; Registers used:
  7734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7735 ;; Tracked objects:
  7736 ;;		On entry : 0/0
  7737 ;;		On exit  : 0/0
  7738 ;;		Unchanged: 0/0
  7739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7740 ;;      Params:         0       7       0       0       0
  7741 ;;      Locals:         0       5       0       0       0
  7742 ;;      Temps:          0       2       0       0       0
  7743 ;;      Totals:         0      14       0       0       0
  7744 ;;Total ram usage:       14 bytes
  7745 ;; Hardware stack levels used:    1
  7746 ;; Hardware stack levels required when called:    1
  7747 ;; This function calls:
  7748 ;;		i2_memcpy
  7749 ;; This function is called by:
  7750 ;;		_FromMainHigh_recvmsg
  7751 ;; This function uses a non-reentrant model
  7752 ;;
  7753                           
  7754                           	psect	text50
  7755  000D94                     __ptext50:
  7756                           	opt stack 0
  7757  000D94                     i2_recv_msg:
  7758                           	opt stack 16
  7759                           
  7760                           ;messages.c: 64: unsigned char slot;
  7761                           ;messages.c: 68: msg *qmsg;
  7762                           ;messages.c: 69: size_t tlength;
  7763                           ;messages.c: 72: slot = qptr->cur_read_ind;
  7764                           
  7765                           ;incstack = 0
  7766  000D94  0100               	movlb	0	; () banked
  7767  000D96  EE20 F035          	lfsr	2,53
  7768  000D9A  0100               	movlb	0	; () banked
  7769  000D9C  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7770  000D9E  26D9               	addwf	fsr2l,f,c
  7771  000DA0  0100               	movlb	0	; () banked
  7772  000DA2  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7773  000DA4  22DA               	addwfc	fsr2h,f,c
  7774  000DA6  50DF               	movf	indf2,w,c
  7775  000DA8  0100               	movlb	0	; () banked
  7776  000DAA  0100               	movlb	0	; () banked
  7777  000DAC  6FC9               	movwf	i2recv_msg@slot& (0+255),b
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;messages.c: 73: qmsg = &(qptr->queue[slot]);
  7781  000DAE  0100               	movlb	0	; () banked
  7782  000DB0  0100               	movlb	0	; () banked
  7783  000DB2  51C9               	movf	i2recv_msg@slot& (0+255),w,b
  7784  000DB4  0D0D               	mullw	13
  7785  000DB6  50F3               	movf	prodl,w,c
  7786  000DB8  0100               	movlb	0	; () banked
  7787  000DBA  0100               	movlb	0	; () banked
  7788  000DBC  25C0               	addwf	i2recv_msg@qptr& (0+255),w,b
  7789  000DBE  0100               	movlb	0	; () banked
  7790  000DC0  0100               	movlb	0	; () banked
  7791  000DC2  6FCC               	movwf	i2recv_msg@qmsg& (0+255),b
  7792  000DC4  50F4               	movf	prodh,w,c
  7793  000DC6  0100               	movlb	0	; () banked
  7794  000DC8  0100               	movlb	0	; () banked
  7795  000DCA  21C1               	addwfc	(i2recv_msg@qptr+1)& (0+255),w,b
  7796  000DCC  0100               	movlb	0	; () banked
  7797  000DCE  6FCD               	movwf	(i2recv_msg@qmsg+1)& (0+255),b
  7798                           
  7799                           ; BSR set to: 0
  7800                           ;messages.c: 74: if (qmsg->full == 1) {
  7801  000DD0  0E01               	movlw	1
  7802  000DD2  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7803  000DD6  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7804  000DDA  62DF               	cpfseq	indf2,c
  7805  000DDC  D074               	goto	i2l3919
  7806                           
  7807                           ; BSR set to: 0
  7808                           ;messages.c: 76: if (qmsg->length > maxlength) {
  7809  000DDE  0100               	movlb	0	; () banked
  7810  000DE0  EE20 F001          	lfsr	2,1
  7811  000DE4  0100               	movlb	0	; () banked
  7812  000DE6  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7813  000DE8  26D9               	addwf	fsr2l,f,c
  7814  000DEA  0100               	movlb	0	; () banked
  7815  000DEC  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7816  000DEE  22DA               	addwfc	fsr2h,f,c
  7817  000DF0  50DF               	movf	indf2,w,c
  7818  000DF2  0100               	movlb	0	; () banked
  7819  000DF4  0100               	movlb	0	; () banked
  7820  000DF6  5DC2               	subwf	i2recv_msg@maxlength& (0+255),w,b
  7821  000DF8  B0D8               	btfsc	status,0,c
  7822  000DFA  D002               	goto	i2l3903
  7823                           
  7824                           ; BSR set to: 0
  7825                           ;messages.c: 77: return (-3);
  7826  000DFC  0EFD               	movlw	253
  7827  000DFE  0012               	return	
  7828  000E00                     i2l3903:
  7829                           
  7830                           ; BSR set to: 0
  7831                           ;messages.c: 78: }
  7832                           ;messages.c: 80: tlength = qmsg->length;
  7833  000E00  0100               	movlb	0	; () banked
  7834  000E02  EE20 F001          	lfsr	2,1
  7835  000E06  0100               	movlb	0	; () banked
  7836  000E08  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7837  000E0A  26D9               	addwf	fsr2l,f,c
  7838  000E0C  0100               	movlb	0	; () banked
  7839  000E0E  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7840  000E10  22DA               	addwfc	fsr2h,f,c
  7841  000E12  50DF               	movf	indf2,w,c
  7842  000E14  0100               	movlb	0	; () banked
  7843  000E16  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7844  000E18  0100               	movlb	0	; () banked
  7845  000E1A  51C7               	movf	??i2_recv_msg& (0+255),w,b
  7846  000E1C  0100               	movlb	0	; () banked
  7847  000E1E  0100               	movlb	0	; () banked
  7848  000E20  6FCA               	movwf	i2recv_msg@tlength& (0+255),b
  7849  000E22  0100               	movlb	0	; () banked
  7850  000E24  6BCB               	clrf	(i2recv_msg@tlength+1)& (0+255),b
  7851                           
  7852                           ; BSR set to: 0
  7853                           ;messages.c: 81: memcpy(data, qmsg->data, tlength);
  7854  000E26  0100               	movlb	0	; () banked
  7855  000E28  0100               	movlb	0	; () banked
  7856  000E2A  C0C6  F0B7         	movff	i2recv_msg@data+1,i2memcpy@d1+1
  7857  000E2E  0100               	movlb	0	; () banked
  7858  000E30  0100               	movlb	0	; () banked
  7859  000E32  C0C5  F0B6         	movff	i2recv_msg@data,i2memcpy@d1
  7860  000E36  0E03               	movlw	3
  7861  000E38  0100               	movlb	0	; () banked
  7862  000E3A  0100               	movlb	0	; () banked
  7863  000E3C  25CC               	addwf	i2recv_msg@qmsg& (0+255),w,b
  7864  000E3E  0100               	movlb	0	; () banked
  7865  000E40  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7866  000E42  0E00               	movlw	0
  7867  000E44  0100               	movlb	0	; () banked
  7868  000E46  0100               	movlb	0	; () banked
  7869  000E48  21CD               	addwfc	(i2recv_msg@qmsg+1)& (0+255),w,b
  7870  000E4A  0100               	movlb	0	; () banked
  7871  000E4C  6FC8               	movwf	(??i2_recv_msg+1)& (0+255),b
  7872  000E4E  C0C7  F0B8         	movff	??i2_recv_msg,i2memcpy@s1
  7873  000E52  C0C8  F0B9         	movff	??i2_recv_msg+1,i2memcpy@s1+1
  7874  000E56  C0CA  F0BA         	movff	i2recv_msg@tlength,i2memcpy@n
  7875  000E5A  C0CB  F0BB         	movff	i2recv_msg@tlength+1,i2memcpy@n+1
  7876  000E5E  ECFE  F00C         	call	i2_memcpy	;wreg free
  7877                           
  7878                           ;messages.c: 87: qptr->cur_read_ind = (qptr->cur_read_ind + 1) % 4;
  7879  000E62  0100               	movlb	0	; () banked
  7880  000E64  EE20 F035          	lfsr	2,53
  7881  000E68  0100               	movlb	0	; () banked
  7882  000E6A  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7883  000E6C  26D9               	addwf	fsr2l,f,c
  7884  000E6E  0100               	movlb	0	; () banked
  7885  000E70  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7886  000E72  22DA               	addwfc	fsr2h,f,c
  7887  000E74  0100               	movlb	0	; () banked
  7888  000E76  EE10 F035          	lfsr	1,53
  7889  000E7A  0100               	movlb	0	; () banked
  7890  000E7C  51C0               	movf	i2recv_msg@qptr& (0+255),w,b
  7891  000E7E  26E1               	addwf	fsr1l,f,c
  7892  000E80  0100               	movlb	0	; () banked
  7893  000E82  51C1               	movf	(i2recv_msg@qptr+1)& (0+255),w,b
  7894  000E84  22E2               	addwfc	fsr1h,f,c
  7895  000E86  50E7               	movf	indf1,w,c
  7896  000E88  0100               	movlb	0	; () banked
  7897  000E8A  6FC7               	movwf	??i2_recv_msg& (0+255),b
  7898  000E8C  0100               	movlb	0	; () banked
  7899  000E8E  29C7               	incf	??i2_recv_msg& (0+255),w,b
  7900  000E90  0B03               	andlw	3
  7901  000E92  6EDF               	movwf	indf2,c
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;messages.c: 89: (*msgtype) = qmsg->msgtype;
  7905  000E94  0100               	movlb	0	; () banked
  7906  000E96  EE20 F002          	lfsr	2,2
  7907  000E9A  0100               	movlb	0	; () banked
  7908  000E9C  51CC               	movf	i2recv_msg@qmsg& (0+255),w,b
  7909  000E9E  26D9               	addwf	fsr2l,f,c
  7910  000EA0  0100               	movlb	0	; () banked
  7911  000EA2  51CD               	movf	(i2recv_msg@qmsg+1)& (0+255),w,b
  7912  000EA4  22DA               	addwfc	fsr2h,f,c
  7913  000EA6  C0C3  FFE1         	movff	i2recv_msg@msgtype,fsr1l
  7914  000EAA  C0C4  FFE2         	movff	i2recv_msg@msgtype+1,fsr1h
  7915  000EAE  CFDF FFE7          	movff	indf2,indf1
  7916                           
  7917                           ; BSR set to: 0
  7918                           ;messages.c: 91: qmsg->full = 0;
  7919  000EB2  C0CC  FFD9         	movff	i2recv_msg@qmsg,fsr2l
  7920  000EB6  C0CD  FFDA         	movff	i2recv_msg@qmsg+1,fsr2h
  7921  000EBA  0E00               	movlw	0
  7922  000EBC  6EDF               	movwf	indf2,c
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;messages.c: 92: return (tlength);
  7926  000EBE  0100               	movlb	0	; () banked
  7927  000EC0  0100               	movlb	0	; () banked
  7928  000EC2  51CA               	movf	i2recv_msg@tlength& (0+255),w,b
  7929  000EC4  0012               	return	
  7930  000EC6                     i2l3919:
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;messages.c: 94: return (-4);
  7934  000EC6  0EFC               	movlw	252
  7935  000EC8  0012               	return	
  7936  000ECA                     __end_ofi2_recv_msg:
  7937                           	opt stack 0
  7938                           pclatu	equ	0xFFB
  7939                           pclath	equ	0xFFA
  7940                           tblptru	equ	0xFF8
  7941                           tblptrh	equ	0xFF7
  7942                           tblptrl	equ	0xFF6
  7943                           tablat	equ	0xFF5
  7944                           prodh	equ	0xFF4
  7945                           prodl	equ	0xFF3
  7946                           intcon	equ	0xFF2
  7947                           postinc0	equ	0xFEE
  7948                           fsr0h	equ	0xFEA
  7949                           fsr0l	equ	0xFE9
  7950                           wreg	equ	0xFE8
  7951                           indf1	equ	0xFE7
  7952                           fsr1h	equ	0xFE2
  7953                           fsr1l	equ	0xFE1
  7954                           bsr	equ	0xFE0
  7955                           indf2	equ	0xFDF
  7956                           postinc2	equ	0xFDE
  7957                           postdec2	equ	0xFDD
  7958                           fsr2h	equ	0xFDA
  7959                           fsr2l	equ	0xFD9
  7960                           status	equ	0xFD8
  7961                           
  7962 ;; *************** function i2_memcpy *****************
  7963 ;; Defined at:
  7964 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\memcpy.c"
  7965 ;; Parameters:    Size  Location     Type
  7966 ;;  d1              2    0[BANK0 ] PTR void 
  7967 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7968 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7969 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7970 ;;  s1              2    2[BANK0 ] PTR const void 
  7971 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7972 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7973 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7974 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  7975 ;;		 -> main@uc(23), 
  7976 ;;  n               2    4[BANK0 ] unsigned int 
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  memcpy          2    8[BANK0 ] PTR const unsigned char 
  7979 ;;		 -> ToMainLow_MQ.data(10), ToMainHigh_MQ.data(10), FromMainLow_MQ.data(10), FromMainHigh_MQ.data(10), 
  7980 ;;		 -> ToMainLow_MQ.queue.data(10), ToMainHigh_MQ.queue.data(10), FromMainHigh_MQ.queue.data(10), FromMainLow_MQ.queue.
      +data(10), 
  7981 ;;		 -> timer0_int_handler@val(2), NULL(0), FromMainHigh_MQ(54), FromMainLow_MQ(54), 
  7982 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), main@msgbuffer(11), main@t1thread_data(2), 
  7983 ;;		 -> main@uc(23), 
  7984 ;;  memcpy          2    6[BANK0 ] PTR unsigned char 
  7985 ;;		 -> FromMainLow_MQ.queue(52), FromMainHigh_MQ.queue(52), ToMainHigh_MQ.queue(52), ToMainLow_MQ.queue(52), 
  7986 ;;		 -> timer0_int_handler@val(2), FromMainHigh_MQ(54), FromMainLow_MQ(54), ToMainHigh_MQ(54), 
  7987 ;;		 -> ToMainLow_MQ(54), main@msgbuffer(11), 
  7988 ;; Return value:  Size  Location     Type
  7989 ;;                  2    0[BANK0 ] PTR void 
  7990 ;; Registers used:
  7991 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  7992 ;; Tracked objects:
  7993 ;;		On entry : 0/0
  7994 ;;		On exit  : 0/0
  7995 ;;		Unchanged: 0/0
  7996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  7997 ;;      Params:         0       6       0       0       0
  7998 ;;      Locals:         0       4       0       0       0
  7999 ;;      Temps:          0       0       0       0       0
  8000 ;;      Totals:         0      10       0       0       0
  8001 ;;Total ram usage:       10 bytes
  8002 ;; Hardware stack levels used:    1
  8003 ;; This function calls:
  8004 ;;		Nothing
  8005 ;; This function is called by:
  8006 ;;		i2_send_msg
  8007 ;;		i2_recv_msg
  8008 ;; This function uses a non-reentrant model
  8009 ;;
  8010                           
  8011                           	psect	text51
  8012  0019FC                     __ptext51:
  8013                           	opt stack 0
  8014  0019FC                     i2_memcpy:
  8015                           	opt stack 16
  8016                           
  8017                           ; BSR set to: 0
  8018                           ;incstack = 0
  8019  0019FC  0100               	movlb	0	; () banked
  8020  0019FE  0100               	movlb	0	; () banked
  8021  001A00  C0B9  F0BF         	movff	i2memcpy@s1+1,i2memcpy@s+1
  8022  001A04  0100               	movlb	0	; () banked
  8023  001A06  0100               	movlb	0	; () banked
  8024  001A08  C0B8  F0BE         	movff	i2memcpy@s1,i2memcpy@s
  8025  001A0C  0100               	movlb	0	; () banked
  8026  001A0E  0100               	movlb	0	; () banked
  8027  001A10  C0B7  F0BD         	movff	i2memcpy@d1+1,i2memcpy@d+1
  8028  001A14  0100               	movlb	0	; () banked
  8029  001A16  0100               	movlb	0	; () banked
  8030  001A18  C0B6  F0BC         	movff	i2memcpy@d1,i2memcpy@d
  8031  001A1C  D012               	goto	i2l3939
  8032  001A1E                     i2l3933:
  8033                           
  8034                           ; BSR set to: 0
  8035  001A1E  C0BE  FFD9         	movff	i2memcpy@s,fsr2l
  8036  001A22  C0BF  FFDA         	movff	i2memcpy@s+1,fsr2h
  8037  001A26  C0BC  FFE1         	movff	i2memcpy@d,fsr1l
  8038  001A2A  C0BD  FFE2         	movff	i2memcpy@d+1,fsr1h
  8039  001A2E  CFDF FFE7          	movff	indf2,indf1
  8040                           
  8041                           ; BSR set to: 0
  8042  001A32  0100               	movlb	0	; () banked
  8043  001A34  0100               	movlb	0	; () banked
  8044  001A36  4BBE               	infsnz	i2memcpy@s& (0+255),f,b
  8045  001A38  2BBF               	incf	(i2memcpy@s+1)& (0+255),f,b
  8046                           
  8047                           ; BSR set to: 0
  8048  001A3A  0100               	movlb	0	; () banked
  8049  001A3C  0100               	movlb	0	; () banked
  8050  001A3E  4BBC               	infsnz	i2memcpy@d& (0+255),f,b
  8051  001A40  2BBD               	incf	(i2memcpy@d+1)& (0+255),f,b
  8052  001A42                     i2l3939:
  8053                           
  8054                           ; BSR set to: 0
  8055  001A42  0100               	movlb	0	; () banked
  8056  001A44  0100               	movlb	0	; () banked
  8057  001A46  07BA               	decf	i2memcpy@n& (0+255),f,b
  8058  001A48  A0D8               	btfss	status,0,c
  8059  001A4A  07BB               	decf	(i2memcpy@n+1)& (0+255),f,b
  8060  001A4C  0100               	movlb	0	; () banked
  8061  001A4E  29BA               	incf	i2memcpy@n& (0+255),w,b
  8062  001A50  B4D8               	btfsc	status,2,c
  8063  001A52  29BB               	incf	(i2memcpy@n+1)& (0+255),w,b
  8064  001A54  B4D8               	btfsc	status,2,c
  8065                           
  8066                           ; BSR set to: 0
  8067                           
  8068                           ; BSR set to: 0
  8069                           ;	Return value of i2_memcpy is never used
  8070  001A56  0012               	return	
  8071  001A58  D7E2               	goto	i2l3933
  8072  001A5A                     __end_ofi2_memcpy:
  8073                           	opt stack 0
  8074                           pclatu	equ	0xFFB
  8075                           pclath	equ	0xFFA
  8076                           tblptru	equ	0xFF8
  8077                           tblptrh	equ	0xFF7
  8078                           tblptrl	equ	0xFF6
  8079                           tablat	equ	0xFF5
  8080                           prodh	equ	0xFF4
  8081                           prodl	equ	0xFF3
  8082                           intcon	equ	0xFF2
  8083                           postinc0	equ	0xFEE
  8084                           fsr0h	equ	0xFEA
  8085                           fsr0l	equ	0xFE9
  8086                           wreg	equ	0xFE8
  8087                           indf1	equ	0xFE7
  8088                           fsr1h	equ	0xFE2
  8089                           fsr1l	equ	0xFE1
  8090                           bsr	equ	0xFE0
  8091                           indf2	equ	0xFDF
  8092                           postinc2	equ	0xFDE
  8093                           postdec2	equ	0xFDD
  8094                           fsr2h	equ	0xFDA
  8095                           fsr2l	equ	0xFD9
  8096                           status	equ	0xFD8
  8097                           
  8098 ;; *************** function _i2c_int_handler *****************
  8099 ;; Defined at:
  8100 ;;		line 145 in file "../src/my_i2c.c"
  8101 ;; Parameters:    Size  Location     Type
  8102 ;;		None
  8103 ;; Auto vars:     Size  Location     Type
  8104 ;;		None
  8105 ;; Return value:  Size  Location     Type
  8106 ;;		None               void
  8107 ;; Registers used:
  8108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8109 ;; Tracked objects:
  8110 ;;		On entry : 0/0
  8111 ;;		On exit  : 0/0
  8112 ;;		Unchanged: 0/0
  8113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8114 ;;      Params:         0       0       0       0       0
  8115 ;;      Locals:         0       0       0       0       0
  8116 ;;      Temps:          0       0       0       0       0
  8117 ;;      Totals:         0       0       0       0       0
  8118 ;;Total ram usage:        0 bytes
  8119 ;; Hardware stack levels used:    1
  8120 ;; Hardware stack levels required when called:    1
  8121 ;; This function calls:
  8122 ;;		_i2c_int_handler_master_rx
  8123 ;;		_i2c_int_handler_master_tx
  8124 ;; This function is called by:
  8125 ;;		_InterruptHandlerHigh
  8126 ;; This function uses a non-reentrant model
  8127 ;;
  8128                           
  8129                           	psect	text52
  8130  001860                     __ptext52:
  8131                           	opt stack 0
  8132  001860                     _i2c_int_handler:
  8133                           	opt stack 18
  8134                           
  8135                           ;my_i2c.c: 147: if ((ic_ptr->rx_i2c == 1) && (ic_ptr->tx_i2c == 0)) {
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;incstack = 0
  8139  001860  0100               	movlb	0	; () banked
  8140  001862  EE20 F021          	lfsr	2,33
  8141  001866  0100               	movlb	0	; () banked
  8142  001868  51E8               	movf	_ic_ptr& (0+255),w,b
  8143  00186A  26D9               	addwf	fsr2l,f,c
  8144  00186C  0100               	movlb	0	; () banked
  8145  00186E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8146  001870  22DA               	addwfc	fsr2h,f,c
  8147  001872  0E01               	movlw	1
  8148  001874  62DF               	cpfseq	indf2,c
  8149  001876  D00F               	goto	i2l3287
  8150                           
  8151                           ; BSR set to: 0
  8152  001878  0100               	movlb	0	; () banked
  8153  00187A  EE20 F020          	lfsr	2,32
  8154  00187E  0100               	movlb	0	; () banked
  8155  001880  51E8               	movf	_ic_ptr& (0+255),w,b
  8156  001882  26D9               	addwf	fsr2l,f,c
  8157  001884  0100               	movlb	0	; () banked
  8158  001886  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8159  001888  22DA               	addwfc	fsr2h,f,c
  8160  00188A  50DF               	movf	indf2,w,c
  8161  00188C  A4D8               	btfss	status,2,c
  8162  00188E  D003               	goto	i2l3287
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;my_i2c.c: 148: i2c_int_handler_master_rx();
  8166  001890  EC7F  F004         	call	_i2c_int_handler_master_rx	;wreg free
  8167                           
  8168                           ;my_i2c.c: 149: } else if ((ic_ptr->tx_i2c == 1) && (ic_ptr->rx_i2c == 0)) {
  8169  001894  0012               	return	
  8170  001896                     i2l3287:
  8171  001896  0100               	movlb	0	; () banked
  8172  001898  EE20 F020          	lfsr	2,32
  8173  00189C  0100               	movlb	0	; () banked
  8174  00189E  51E8               	movf	_ic_ptr& (0+255),w,b
  8175  0018A0  26D9               	addwf	fsr2l,f,c
  8176  0018A2  0100               	movlb	0	; () banked
  8177  0018A4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8178  0018A6  22DA               	addwfc	fsr2h,f,c
  8179  0018A8  0E01               	movlw	1
  8180  0018AA  62DF               	cpfseq	indf2,c
  8181  0018AC  0012               	return	
  8182                           
  8183                           ; BSR set to: 0
  8184  0018AE  0100               	movlb	0	; () banked
  8185  0018B0  EE20 F021          	lfsr	2,33
  8186  0018B4  0100               	movlb	0	; () banked
  8187  0018B6  51E8               	movf	_ic_ptr& (0+255),w,b
  8188  0018B8  26D9               	addwf	fsr2l,f,c
  8189  0018BA  0100               	movlb	0	; () banked
  8190  0018BC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8191  0018BE  22DA               	addwfc	fsr2h,f,c
  8192  0018C0  50DF               	movf	indf2,w,c
  8193  0018C2  A4D8               	btfss	status,2,c
  8194  0018C4  0012               	return	
  8195                           
  8196                           ; BSR set to: 0
  8197                           ;my_i2c.c: 150: i2c_int_handler_master_tx();
  8198  0018C6  EC70  F003         	call	_i2c_int_handler_master_tx	;wreg free
  8199  0018CA  0012               	return	
  8200  0018CC                     __end_of_i2c_int_handler:
  8201                           	opt stack 0
  8202                           pclatu	equ	0xFFB
  8203                           pclath	equ	0xFFA
  8204                           tblptru	equ	0xFF8
  8205                           tblptrh	equ	0xFF7
  8206                           tblptrl	equ	0xFF6
  8207                           tablat	equ	0xFF5
  8208                           prodh	equ	0xFF4
  8209                           prodl	equ	0xFF3
  8210                           intcon	equ	0xFF2
  8211                           postinc0	equ	0xFEE
  8212                           fsr0h	equ	0xFEA
  8213                           fsr0l	equ	0xFE9
  8214                           wreg	equ	0xFE8
  8215                           indf1	equ	0xFE7
  8216                           fsr1h	equ	0xFE2
  8217                           fsr1l	equ	0xFE1
  8218                           bsr	equ	0xFE0
  8219                           indf2	equ	0xFDF
  8220                           postinc2	equ	0xFDE
  8221                           postdec2	equ	0xFDD
  8222                           fsr2h	equ	0xFDA
  8223                           fsr2l	equ	0xFD9
  8224                           status	equ	0xFD8
  8225                           
  8226 ;; *************** function _i2c_int_handler_master_tx *****************
  8227 ;; Defined at:
  8228 ;;		line 231 in file "../src/my_i2c.c"
  8229 ;; Parameters:    Size  Location     Type
  8230 ;;		None
  8231 ;; Auto vars:     Size  Location     Type
  8232 ;;		None
  8233 ;; Return value:  Size  Location     Type
  8234 ;;		None               void
  8235 ;; Registers used:
  8236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8237 ;; Tracked objects:
  8238 ;;		On entry : 0/0
  8239 ;;		On exit  : 0/0
  8240 ;;		Unchanged: 0/0
  8241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8242 ;;      Params:         0       0       0       0       0
  8243 ;;      Locals:         0       0       0       0       0
  8244 ;;      Temps:          0       4       0       0       0
  8245 ;;      Totals:         0       4       0       0       0
  8246 ;;Total ram usage:        4 bytes
  8247 ;; Hardware stack levels used:    1
  8248 ;; This function calls:
  8249 ;;		Nothing
  8250 ;; This function is called by:
  8251 ;;		_i2c_int_handler
  8252 ;; This function uses a non-reentrant model
  8253 ;;
  8254                           
  8255                           	psect	text53
  8256  0006E0                     __ptext53:
  8257                           	opt stack 0
  8258  0006E0                     _i2c_int_handler_master_tx:
  8259                           	opt stack 18
  8260                           
  8261                           ;my_i2c.c: 234: switch (ic_ptr->status) {
  8262                           
  8263                           ;incstack = 0
  8264  0006E0  D0F7               	goto	i2l3813
  8265  0006E2                     i2l3787:
  8266                           
  8267                           ;my_i2c.c: 238: SSPBUF = ic_ptr->outbuffer[ic_ptr->outbufind];
  8268  0006E2  0100               	movlb	0	; () banked
  8269  0006E4  EE20 F01A          	lfsr	2,26
  8270  0006E8  0100               	movlb	0	; () banked
  8271  0006EA  51E8               	movf	_ic_ptr& (0+255),w,b
  8272  0006EC  26D9               	addwf	fsr2l,f,c
  8273  0006EE  0100               	movlb	0	; () banked
  8274  0006F0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8275  0006F2  22DA               	addwfc	fsr2h,f,c
  8276  0006F4  50DF               	movf	indf2,w,c
  8277  0006F6  0100               	movlb	0	; () banked
  8278  0006F8  6FB6               	movwf	??_i2c_int_handler_master_tx& (0+255),b
  8279  0006FA  0100               	movlb	0	; () banked
  8280  0006FC  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8281  0006FE  0D01               	mullw	1
  8282  000700  0E0F               	movlw	15
  8283  000702  26F3               	addwf	prodl,f,c
  8284  000704  0E00               	movlw	0
  8285  000706  22F4               	addwfc	prodh,f,c
  8286  000708  50F3               	movf	prodl,w,c
  8287  00070A  0100               	movlb	0	; () banked
  8288  00070C  0100               	movlb	0	; () banked
  8289  00070E  25E8               	addwf	_ic_ptr& (0+255),w,b
  8290  000710  6ED9               	movwf	fsr2l,c
  8291  000712  50F4               	movf	prodh,w,c
  8292  000714  0100               	movlb	0	; () banked
  8293  000716  0100               	movlb	0	; () banked
  8294  000718  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8295  00071A  6EDA               	movwf	fsr2h,c
  8296  00071C  50DF               	movf	indf2,w,c
  8297  00071E  6EC9               	movwf	4041,c	;volatile
  8298                           
  8299                           ; BSR set to: 0
  8300                           ;my_i2c.c: 239: ic_ptr->status = 0x6;
  8301  000720  0100               	movlb	0	; () banked
  8302  000722  EE20 F00C          	lfsr	2,12
  8303  000726  0100               	movlb	0	; () banked
  8304  000728  51E8               	movf	_ic_ptr& (0+255),w,b
  8305  00072A  26D9               	addwf	fsr2l,f,c
  8306  00072C  0100               	movlb	0	; () banked
  8307  00072E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8308  000730  22DA               	addwfc	fsr2h,f,c
  8309  000732  0E06               	movlw	6
  8310  000734  6EDF               	movwf	indf2,c
  8311                           
  8312                           ;my_i2c.c: 240: break;
  8313  000736  0012               	return	
  8314  000738                     i2l344:
  8315                           
  8316                           ; BSR set to: 0
  8317                           ;my_i2c.c: 244: if (!SSPCON2bits.ACKSTAT) {
  8318  000738  BCC5               	btfsc	4037,6,c	;volatile
  8319  00073A  D039               	goto	i2l3795
  8320                           
  8321                           ; BSR set to: 0
  8322                           ;my_i2c.c: 246: SSPCON2bits.ACKDT = 1;
  8323  00073C  8AC5               	bsf	4037,5,c	;volatile
  8324                           
  8325                           ; BSR set to: 0
  8326                           ;my_i2c.c: 248: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  8327  00073E  0100               	movlb	0	; () banked
  8328  000740  EE20 F01C          	lfsr	2,28
  8329  000744  0100               	movlb	0	; () banked
  8330  000746  51E8               	movf	_ic_ptr& (0+255),w,b
  8331  000748  26D9               	addwf	fsr2l,f,c
  8332  00074A  0100               	movlb	0	; () banked
  8333  00074C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8334  00074E  22DA               	addwfc	fsr2h,f,c
  8335  000750  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8336  000754  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8337  000758  0E0F               	movlw	15
  8338  00075A  0100               	movlb	0	; () banked
  8339  00075C  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  8340  00075E  0E00               	movlw	0
  8341  000760  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  8342  000762  0100               	movlb	0	; () banked
  8343  000764  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8344  000766  0100               	movlb	0	; () banked
  8345  000768  0100               	movlb	0	; () banked
  8346  00076A  25E8               	addwf	_ic_ptr& (0+255),w,b
  8347  00076C  6ED9               	movwf	fsr2l,c
  8348  00076E  0100               	movlb	0	; () banked
  8349  000770  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8350  000772  0100               	movlb	0	; () banked
  8351  000774  0100               	movlb	0	; () banked
  8352  000776  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8353  000778  6EDA               	movwf	fsr2h,c
  8354  00077A  50DF               	movf	indf2,w,c
  8355  00077C  6EC9               	movwf	4041,c	;volatile
  8356                           
  8357                           ;my_i2c.c: 250: ic_ptr->bufferCounterSend++;
  8358  00077E  0100               	movlb	0	; () banked
  8359  000780  EE20 F01C          	lfsr	2,28
  8360  000784  0100               	movlb	0	; () banked
  8361  000786  51E8               	movf	_ic_ptr& (0+255),w,b
  8362  000788  26D9               	addwf	fsr2l,f,c
  8363  00078A  0100               	movlb	0	; () banked
  8364  00078C  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8365  00078E  22DA               	addwfc	fsr2h,f,c
  8366  000790  2ADE               	incf	postinc2,f,c
  8367  000792  0E00               	movlw	0
  8368  000794  22DD               	addwfc	postdec2,f,c
  8369                           
  8370                           ;my_i2c.c: 251: ic_ptr->status = 0x7;
  8371  000796  0100               	movlb	0	; () banked
  8372  000798  EE20 F00C          	lfsr	2,12
  8373  00079C  0100               	movlb	0	; () banked
  8374  00079E  51E8               	movf	_ic_ptr& (0+255),w,b
  8375  0007A0  26D9               	addwf	fsr2l,f,c
  8376  0007A2  0100               	movlb	0	; () banked
  8377  0007A4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8378  0007A6  22DA               	addwfc	fsr2h,f,c
  8379  0007A8  0E07               	movlw	7
  8380  0007AA  6EDF               	movwf	indf2,c
  8381                           
  8382                           ;my_i2c.c: 254: } else {
  8383  0007AC  0012               	return	
  8384  0007AE                     i2l3795:
  8385                           
  8386                           ; BSR set to: 0
  8387                           ;my_i2c.c: 255: ic_ptr->status = 1;
  8388  0007AE  0100               	movlb	0	; () banked
  8389  0007B0  EE20 F00C          	lfsr	2,12
  8390  0007B4  0100               	movlb	0	; () banked
  8391  0007B6  51E8               	movf	_ic_ptr& (0+255),w,b
  8392  0007B8  26D9               	addwf	fsr2l,f,c
  8393  0007BA  0100               	movlb	0	; () banked
  8394  0007BC  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8395  0007BE  22DA               	addwfc	fsr2h,f,c
  8396  0007C0  0E01               	movlw	1
  8397  0007C2  6EDF               	movwf	indf2,c
  8398  0007C4  0012               	return	
  8399  0007C6                     i2l347:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;my_i2c.c: 261: if (!SSPCON2bits.ACKSTAT) {
  8403  0007C6  BCC5               	btfsc	4037,6,c	;volatile
  8404  0007C8  D06B               	goto	i2l3807
  8405                           
  8406                           ; BSR set to: 0
  8407                           ;my_i2c.c: 265: SSPCON2bits.ACKDT = 1;
  8408  0007CA  8AC5               	bsf	4037,5,c	;volatile
  8409                           
  8410                           ; BSR set to: 0
  8411                           ;my_i2c.c: 267: if (ic_ptr->bufferCounterSend == (ic_ptr->outbuflen)) {
  8412  0007CC  0100               	movlb	0	; () banked
  8413  0007CE  EE20 F01C          	lfsr	2,28
  8414  0007D2  0100               	movlb	0	; () banked
  8415  0007D4  51E8               	movf	_ic_ptr& (0+255),w,b
  8416  0007D6  26D9               	addwf	fsr2l,f,c
  8417  0007D8  0100               	movlb	0	; () banked
  8418  0007DA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8419  0007DC  22DA               	addwfc	fsr2h,f,c
  8420  0007DE  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8421  0007E2  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8422  0007E6  0100               	movlb	0	; () banked
  8423  0007E8  EE20 F019          	lfsr	2,25
  8424  0007EC  0100               	movlb	0	; () banked
  8425  0007EE  51E8               	movf	_ic_ptr& (0+255),w,b
  8426  0007F0  26D9               	addwf	fsr2l,f,c
  8427  0007F2  0100               	movlb	0	; () banked
  8428  0007F4  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8429  0007F6  22DA               	addwfc	fsr2h,f,c
  8430  0007F8  50DF               	movf	indf2,w,c
  8431  0007FA  0100               	movlb	0	; () banked
  8432  0007FC  6FB8               	movwf	(??_i2c_int_handler_master_tx+2)& (0+255),b
  8433  0007FE  6BB9               	clrf	(??_i2c_int_handler_master_tx+3)& (0+255),b
  8434  000800  0100               	movlb	0	; () banked
  8435  000802  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8436  000804  0100               	movlb	0	; () banked
  8437  000806  19B9               	xorwf	(??_i2c_int_handler_master_tx+3)& (0+255),w,b
  8438  000808  E104               	bnz	i2u262_45
  8439  00080A  0100               	movlb	0	; () banked
  8440  00080C  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8441  00080E  0100               	movlb	0	; () banked
  8442  000810  19B8               	xorwf	(??_i2c_int_handler_master_tx+2)& (0+255),w,b
  8443  000812                     i2u262_45:
  8444  000812  A4D8               	btfss	status,2,c
  8445  000814  D00D               	goto	i2l3805
  8446                           
  8447                           ; BSR set to: 0
  8448                           ;my_i2c.c: 268: ic_ptr->status = 0xA;
  8449  000816  0100               	movlb	0	; () banked
  8450  000818  EE20 F00C          	lfsr	2,12
  8451  00081C  0100               	movlb	0	; () banked
  8452  00081E  51E8               	movf	_ic_ptr& (0+255),w,b
  8453  000820  26D9               	addwf	fsr2l,f,c
  8454  000822  0100               	movlb	0	; () banked
  8455  000824  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8456  000826  22DA               	addwfc	fsr2h,f,c
  8457  000828  0E0A               	movlw	10
  8458  00082A  6EDF               	movwf	indf2,c
  8459                           
  8460                           ; BSR set to: 0
  8461                           ;my_i2c.c: 270: SSP1CON2bits.PEN = 1;
  8462  00082C  84C5               	bsf	4037,2,c	;volatile
  8463                           
  8464                           ;my_i2c.c: 272: } else {
  8465  00082E  0012               	return	
  8466  000830                     i2l3805:
  8467                           
  8468                           ; BSR set to: 0
  8469                           ;my_i2c.c: 274: SSPBUF = ic_ptr->outbuffer[ic_ptr->bufferCounterSend];
  8470  000830  0100               	movlb	0	; () banked
  8471  000832  EE20 F01C          	lfsr	2,28
  8472  000836  0100               	movlb	0	; () banked
  8473  000838  51E8               	movf	_ic_ptr& (0+255),w,b
  8474  00083A  26D9               	addwf	fsr2l,f,c
  8475  00083C  0100               	movlb	0	; () banked
  8476  00083E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8477  000840  22DA               	addwfc	fsr2h,f,c
  8478  000842  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_tx
  8479  000846  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_tx+1
  8480  00084A  0E0F               	movlw	15
  8481  00084C  0100               	movlb	0	; () banked
  8482  00084E  27B6               	addwf	??_i2c_int_handler_master_tx& (0+255),f,b
  8483  000850  0E00               	movlw	0
  8484  000852  23B7               	addwfc	(??_i2c_int_handler_master_tx+1)& (0+255),f,b
  8485  000854  0100               	movlb	0	; () banked
  8486  000856  51B6               	movf	??_i2c_int_handler_master_tx& (0+255),w,b
  8487  000858  0100               	movlb	0	; () banked
  8488  00085A  0100               	movlb	0	; () banked
  8489  00085C  25E8               	addwf	_ic_ptr& (0+255),w,b
  8490  00085E  6ED9               	movwf	fsr2l,c
  8491  000860  0100               	movlb	0	; () banked
  8492  000862  51B7               	movf	(??_i2c_int_handler_master_tx+1)& (0+255),w,b
  8493  000864  0100               	movlb	0	; () banked
  8494  000866  0100               	movlb	0	; () banked
  8495  000868  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8496  00086A  6EDA               	movwf	fsr2h,c
  8497  00086C  50DF               	movf	indf2,w,c
  8498  00086E  6EC9               	movwf	4041,c	;volatile
  8499                           
  8500                           ;my_i2c.c: 276: ic_ptr->bufferCounterSend++;
  8501  000870  0100               	movlb	0	; () banked
  8502  000872  EE20 F01C          	lfsr	2,28
  8503  000876  0100               	movlb	0	; () banked
  8504  000878  51E8               	movf	_ic_ptr& (0+255),w,b
  8505  00087A  26D9               	addwf	fsr2l,f,c
  8506  00087C  0100               	movlb	0	; () banked
  8507  00087E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8508  000880  22DA               	addwfc	fsr2h,f,c
  8509  000882  2ADE               	incf	postinc2,f,c
  8510  000884  0E00               	movlw	0
  8511  000886  22DD               	addwfc	postdec2,f,c
  8512                           
  8513                           ;my_i2c.c: 277: ic_ptr->status = 0x7;
  8514  000888  0100               	movlb	0	; () banked
  8515  00088A  EE20 F00C          	lfsr	2,12
  8516  00088E  0100               	movlb	0	; () banked
  8517  000890  51E8               	movf	_ic_ptr& (0+255),w,b
  8518  000892  26D9               	addwf	fsr2l,f,c
  8519  000894  0100               	movlb	0	; () banked
  8520  000896  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8521  000898  22DA               	addwfc	fsr2h,f,c
  8522  00089A  0E07               	movlw	7
  8523  00089C  6EDF               	movwf	indf2,c
  8524  00089E  0012               	return	
  8525  0008A0                     i2l3807:
  8526                           
  8527                           ; BSR set to: 0
  8528                           ;my_i2c.c: 281: ic_ptr->status = 0x9;
  8529  0008A0  0100               	movlb	0	; () banked
  8530  0008A2  EE20 F00C          	lfsr	2,12
  8531  0008A6  0100               	movlb	0	; () banked
  8532  0008A8  51E8               	movf	_ic_ptr& (0+255),w,b
  8533  0008AA  26D9               	addwf	fsr2l,f,c
  8534  0008AC  0100               	movlb	0	; () banked
  8535  0008AE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8536  0008B0  22DA               	addwfc	fsr2h,f,c
  8537  0008B2  0E09               	movlw	9
  8538  0008B4  6EDF               	movwf	indf2,c
  8539  0008B6  0012               	return	
  8540  0008B8                     i2l3809:
  8541                           
  8542                           ; BSR set to: 0
  8543                           ;my_i2c.c: 286: ic_ptr->status = 0x3;
  8544  0008B8  0100               	movlb	0	; () banked
  8545  0008BA  EE20 F00C          	lfsr	2,12
  8546  0008BE  0100               	movlb	0	; () banked
  8547  0008C0  51E8               	movf	_ic_ptr& (0+255),w,b
  8548  0008C2  26D9               	addwf	fsr2l,f,c
  8549  0008C4  0100               	movlb	0	; () banked
  8550  0008C6  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8551  0008C8  22DA               	addwfc	fsr2h,f,c
  8552  0008CA  0E03               	movlw	3
  8553  0008CC  6EDF               	movwf	indf2,c
  8554                           
  8555                           ;my_i2c.c: 289: break;
  8556  0008CE  0012               	return	
  8557  0008D0                     i2l3813:
  8558  0008D0  0100               	movlb	0	; () banked
  8559  0008D2  EE20 F00C          	lfsr	2,12
  8560  0008D6  0100               	movlb	0	; () banked
  8561  0008D8  51E8               	movf	_ic_ptr& (0+255),w,b
  8562  0008DA  26D9               	addwf	fsr2l,f,c
  8563  0008DC  0100               	movlb	0	; () banked
  8564  0008DE  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8565  0008E0  22DA               	addwfc	fsr2h,f,c
  8566  0008E2  50DF               	movf	indf2,w,c
  8567                           
  8568                           ; Switch size 1, requested type "space"
  8569                           ; Number of cases is 4, Range of values is 5 to 10
  8570                           ; switch strategies available:
  8571                           ; Name         Instructions Cycles
  8572                           ; simple_byte           13     7 (average)
  8573                           ;	Chosen strategy is simple_byte
  8574  0008E4  0A05               	xorlw	5	; case 5
  8575  0008E6  B4D8               	btfsc	status,2,c
  8576  0008E8  D6FC               	goto	i2l3787
  8577  0008EA  0A03               	xorlw	3	; case 6
  8578  0008EC  B4D8               	btfsc	status,2,c
  8579  0008EE  D724               	goto	i2l344
  8580  0008F0  0A01               	xorlw	1	; case 7
  8581  0008F2  B4D8               	btfsc	status,2,c
  8582  0008F4  D768               	goto	i2l347
  8583  0008F6  0A0D               	xorlw	13	; case 10
  8584  0008F8  A4D8               	btfss	status,2,c
  8585  0008FA  0012               	return	
  8586  0008FC  D7DD               	goto	i2l3809
  8587  0008FE                     __end_of_i2c_int_handler_master_tx:
  8588                           	opt stack 0
  8589                           pclatu	equ	0xFFB
  8590                           pclath	equ	0xFFA
  8591                           tblptru	equ	0xFF8
  8592                           tblptrh	equ	0xFF7
  8593                           tblptrl	equ	0xFF6
  8594                           tablat	equ	0xFF5
  8595                           prodh	equ	0xFF4
  8596                           prodl	equ	0xFF3
  8597                           intcon	equ	0xFF2
  8598                           postinc0	equ	0xFEE
  8599                           fsr0h	equ	0xFEA
  8600                           fsr0l	equ	0xFE9
  8601                           wreg	equ	0xFE8
  8602                           indf1	equ	0xFE7
  8603                           fsr1h	equ	0xFE2
  8604                           fsr1l	equ	0xFE1
  8605                           bsr	equ	0xFE0
  8606                           indf2	equ	0xFDF
  8607                           postinc2	equ	0xFDE
  8608                           postdec2	equ	0xFDD
  8609                           fsr2h	equ	0xFDA
  8610                           fsr2l	equ	0xFD9
  8611                           status	equ	0xFD8
  8612                           
  8613 ;; *************** function _i2c_int_handler_master_rx *****************
  8614 ;; Defined at:
  8615 ;;		line 154 in file "../src/my_i2c.c"
  8616 ;; Parameters:    Size  Location     Type
  8617 ;;		None
  8618 ;; Auto vars:     Size  Location     Type
  8619 ;;		None
  8620 ;; Return value:  Size  Location     Type
  8621 ;;		None               void
  8622 ;; Registers used:
  8623 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8624 ;; Tracked objects:
  8625 ;;		On entry : 0/0
  8626 ;;		On exit  : 0/0
  8627 ;;		Unchanged: 0/0
  8628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8629 ;;      Params:         0       0       0       0       0
  8630 ;;      Locals:         0       0       0       0       0
  8631 ;;      Temps:          0       4       0       0       0
  8632 ;;      Totals:         0       4       0       0       0
  8633 ;;Total ram usage:        4 bytes
  8634 ;; Hardware stack levels used:    1
  8635 ;; This function calls:
  8636 ;;		Nothing
  8637 ;; This function is called by:
  8638 ;;		_i2c_int_handler
  8639 ;; This function uses a non-reentrant model
  8640 ;;
  8641                           
  8642                           	psect	text54
  8643  0008FE                     __ptext54:
  8644                           	opt stack 0
  8645  0008FE                     _i2c_int_handler_master_rx:
  8646                           	opt stack 18
  8647                           
  8648                           ;my_i2c.c: 155: switch (ic_ptr->status) {
  8649                           
  8650                           ; BSR set to: 0
  8651                           ;incstack = 0
  8652  0008FE  D0C0               	goto	i2l3783
  8653  000900                     i2l3759:
  8654                           
  8655                           ;my_i2c.c: 159: SSPBUF = ic_ptr->slave_addr_rc;
  8656  000900  0100               	movlb	0	; () banked
  8657  000902  EE20 F022          	lfsr	2,34
  8658  000906  0100               	movlb	0	; () banked
  8659  000908  51E8               	movf	_ic_ptr& (0+255),w,b
  8660  00090A  26D9               	addwf	fsr2l,f,c
  8661  00090C  0100               	movlb	0	; () banked
  8662  00090E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8663  000910  22DA               	addwfc	fsr2h,f,c
  8664  000912  50DF               	movf	indf2,w,c
  8665  000914  6EC9               	movwf	4041,c	;volatile
  8666                           
  8667                           ;my_i2c.c: 160: ic_ptr->status = 0xD;
  8668  000916  0100               	movlb	0	; () banked
  8669  000918  EE20 F00C          	lfsr	2,12
  8670  00091C  0100               	movlb	0	; () banked
  8671  00091E  51E8               	movf	_ic_ptr& (0+255),w,b
  8672  000920  26D9               	addwf	fsr2l,f,c
  8673  000922  0100               	movlb	0	; () banked
  8674  000924  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8675  000926  22DA               	addwfc	fsr2h,f,c
  8676  000928  0E0D               	movlw	13
  8677  00092A  6EDF               	movwf	indf2,c
  8678                           
  8679                           ;my_i2c.c: 161: break;
  8680  00092C  0012               	return	
  8681  00092E                     i2l329:
  8682                           
  8683                           ; BSR set to: 0
  8684                           ;my_i2c.c: 165: if (!SSPCON2bits.ACKSTAT) {
  8685  00092E  BCC5               	btfsc	4037,6,c	;volatile
  8686  000930  D00D               	goto	i2l3765
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;my_i2c.c: 167: SSPCON2bits.RCEN = 1;
  8690  000932  86C5               	bsf	4037,3,c	;volatile
  8691                           
  8692                           ; BSR set to: 0
  8693                           ;my_i2c.c: 169: ic_ptr->status = 0xF;
  8694  000934  0100               	movlb	0	; () banked
  8695  000936  EE20 F00C          	lfsr	2,12
  8696  00093A  0100               	movlb	0	; () banked
  8697  00093C  51E8               	movf	_ic_ptr& (0+255),w,b
  8698  00093E  26D9               	addwf	fsr2l,f,c
  8699  000940  0100               	movlb	0	; () banked
  8700  000942  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8701  000944  22DA               	addwfc	fsr2h,f,c
  8702  000946  0E0F               	movlw	15
  8703  000948  6EDF               	movwf	indf2,c
  8704                           
  8705                           ;my_i2c.c: 171: } else {
  8706  00094A  0012               	return	
  8707  00094C                     i2l3765:
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;my_i2c.c: 172: ic_ptr->status = 0xE;
  8711  00094C  0100               	movlb	0	; () banked
  8712  00094E  EE20 F00C          	lfsr	2,12
  8713  000952  0100               	movlb	0	; () banked
  8714  000954  51E8               	movf	_ic_ptr& (0+255),w,b
  8715  000956  26D9               	addwf	fsr2l,f,c
  8716  000958  0100               	movlb	0	; () banked
  8717  00095A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8718  00095C  22DA               	addwfc	fsr2h,f,c
  8719  00095E  0E0E               	movlw	14
  8720  000960  6EDF               	movwf	indf2,c
  8721  000962  0012               	return	
  8722  000964                     i2l3767:
  8723                           
  8724                           ; BSR set to: 0
  8725                           ;my_i2c.c: 178: ic_ptr->buffer[ic_ptr->bufferCounterRx] = SSPBUF;
  8726  000964  0100               	movlb	0	; () banked
  8727  000966  EE20 F01E          	lfsr	2,30
  8728  00096A  0100               	movlb	0	; () banked
  8729  00096C  51E8               	movf	_ic_ptr& (0+255),w,b
  8730  00096E  26D9               	addwf	fsr2l,f,c
  8731  000970  0100               	movlb	0	; () banked
  8732  000972  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8733  000974  22DA               	addwfc	fsr2h,f,c
  8734  000976  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  8735  00097A  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  8736  00097E  0100               	movlb	0	; () banked
  8737  000980  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  8738  000982  0100               	movlb	0	; () banked
  8739  000984  0100               	movlb	0	; () banked
  8740  000986  25E8               	addwf	_ic_ptr& (0+255),w,b
  8741  000988  6ED9               	movwf	fsr2l,c
  8742  00098A  0100               	movlb	0	; () banked
  8743  00098C  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  8744  00098E  0100               	movlb	0	; () banked
  8745  000990  0100               	movlb	0	; () banked
  8746  000992  21E9               	addwfc	(_ic_ptr+1)& (0+255),w,b
  8747  000994  6EDA               	movwf	fsr2h,c
  8748  000996  CFC9 FFDF          	movff	4041,indf2	;volatile
  8749                           
  8750                           ;my_i2c.c: 179: ic_ptr->bufferCounterRx++;
  8751  00099A  0100               	movlb	0	; () banked
  8752  00099C  EE20 F01E          	lfsr	2,30
  8753  0009A0  0100               	movlb	0	; () banked
  8754  0009A2  51E8               	movf	_ic_ptr& (0+255),w,b
  8755  0009A4  26D9               	addwf	fsr2l,f,c
  8756  0009A6  0100               	movlb	0	; () banked
  8757  0009A8  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8758  0009AA  22DA               	addwfc	fsr2h,f,c
  8759  0009AC  2ADE               	incf	postinc2,f,c
  8760  0009AE  0E00               	movlw	0
  8761  0009B0  22DD               	addwfc	postdec2,f,c
  8762                           
  8763                           ;my_i2c.c: 180: if (ic_ptr->buflen == ic_ptr->bufferCounterRx) {
  8764  0009B2  0100               	movlb	0	; () banked
  8765  0009B4  EE20 F01E          	lfsr	2,30
  8766  0009B8  0100               	movlb	0	; () banked
  8767  0009BA  51E8               	movf	_ic_ptr& (0+255),w,b
  8768  0009BC  26D9               	addwf	fsr2l,f,c
  8769  0009BE  0100               	movlb	0	; () banked
  8770  0009C0  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8771  0009C2  22DA               	addwfc	fsr2h,f,c
  8772  0009C4  CFDE F0B6          	movff	postinc2,??_i2c_int_handler_master_rx
  8773  0009C8  CFDD F0B7          	movff	postdec2,??_i2c_int_handler_master_rx+1
  8774  0009CC  0100               	movlb	0	; () banked
  8775  0009CE  EE20 F00A          	lfsr	2,10
  8776  0009D2  0100               	movlb	0	; () banked
  8777  0009D4  51E8               	movf	_ic_ptr& (0+255),w,b
  8778  0009D6  26D9               	addwf	fsr2l,f,c
  8779  0009D8  0100               	movlb	0	; () banked
  8780  0009DA  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8781  0009DC  22DA               	addwfc	fsr2h,f,c
  8782  0009DE  50DF               	movf	indf2,w,c
  8783  0009E0  0100               	movlb	0	; () banked
  8784  0009E2  6FB8               	movwf	(??_i2c_int_handler_master_rx+2)& (0+255),b
  8785  0009E4  6BB9               	clrf	(??_i2c_int_handler_master_rx+3)& (0+255),b
  8786  0009E6  0100               	movlb	0	; () banked
  8787  0009E8  51B7               	movf	(??_i2c_int_handler_master_rx+1)& (0+255),w,b
  8788  0009EA  0100               	movlb	0	; () banked
  8789  0009EC  19B9               	xorwf	(??_i2c_int_handler_master_rx+3)& (0+255),w,b
  8790  0009EE  E104               	bnz	i2u259_45
  8791  0009F0  0100               	movlb	0	; () banked
  8792  0009F2  51B6               	movf	??_i2c_int_handler_master_rx& (0+255),w,b
  8793  0009F4  0100               	movlb	0	; () banked
  8794  0009F6  19B8               	xorwf	(??_i2c_int_handler_master_rx+2)& (0+255),w,b
  8795  0009F8                     i2u259_45:
  8796  0009F8  A4D8               	btfss	status,2,c
  8797  0009FA  D00E               	goto	i2l333
  8798                           
  8799                           ; BSR set to: 0
  8800                           ;my_i2c.c: 181: SSPCON2bits.ACKDT = 1;
  8801  0009FC  8AC5               	bsf	4037,5,c	;volatile
  8802                           
  8803                           ;my_i2c.c: 182: SSPCON2bits.ACKEN = 1;
  8804  0009FE  88C5               	bsf	4037,4,c	;volatile
  8805                           
  8806                           ; BSR set to: 0
  8807                           ;my_i2c.c: 184: ic_ptr->status = 0x11;
  8808  000A00  0100               	movlb	0	; () banked
  8809  000A02  EE20 F00C          	lfsr	2,12
  8810  000A06  0100               	movlb	0	; () banked
  8811  000A08  51E8               	movf	_ic_ptr& (0+255),w,b
  8812  000A0A  26D9               	addwf	fsr2l,f,c
  8813  000A0C  0100               	movlb	0	; () banked
  8814  000A0E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8815  000A10  22DA               	addwfc	fsr2h,f,c
  8816  000A12  0E11               	movlw	17
  8817  000A14  6EDF               	movwf	indf2,c
  8818                           
  8819                           ;my_i2c.c: 185: } else {
  8820  000A16  0012               	return	
  8821  000A18                     i2l333:
  8822                           
  8823                           ; BSR set to: 0
  8824                           ;my_i2c.c: 186: SSPCON2bits.ACKDT = 0;
  8825  000A18  9AC5               	bcf	4037,5,c	;volatile
  8826                           
  8827                           ;my_i2c.c: 187: SSPCON2bits.ACKEN = 1;
  8828  000A1A  88C5               	bsf	4037,4,c	;volatile
  8829                           
  8830                           ; BSR set to: 0
  8831                           ;my_i2c.c: 190: ic_ptr->status = 0x10;
  8832  000A1C  0100               	movlb	0	; () banked
  8833  000A1E  EE20 F00C          	lfsr	2,12
  8834  000A22  0100               	movlb	0	; () banked
  8835  000A24  51E8               	movf	_ic_ptr& (0+255),w,b
  8836  000A26  26D9               	addwf	fsr2l,f,c
  8837  000A28  0100               	movlb	0	; () banked
  8838  000A2A  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8839  000A2C  22DA               	addwfc	fsr2h,f,c
  8840  000A2E  0E10               	movlw	16
  8841  000A30  6EDF               	movwf	indf2,c
  8842  000A32  0012               	return	
  8843  000A34                     i2l335:
  8844                           
  8845                           ; BSR set to: 0
  8846                           ;my_i2c.c: 206: SSPCON2bits.RCEN = 1;
  8847  000A34  86C5               	bsf	4037,3,c	;volatile
  8848                           
  8849                           ; BSR set to: 0
  8850                           ;my_i2c.c: 208: ic_ptr->status = 0xF;
  8851  000A36  0100               	movlb	0	; () banked
  8852  000A38  EE20 F00C          	lfsr	2,12
  8853  000A3C  0100               	movlb	0	; () banked
  8854  000A3E  51E8               	movf	_ic_ptr& (0+255),w,b
  8855  000A40  26D9               	addwf	fsr2l,f,c
  8856  000A42  0100               	movlb	0	; () banked
  8857  000A44  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8858  000A46  22DA               	addwfc	fsr2h,f,c
  8859  000A48  0E0F               	movlw	15
  8860  000A4A  6EDF               	movwf	indf2,c
  8861                           
  8862                           ;my_i2c.c: 210: break;
  8863  000A4C  0012               	return	
  8864  000A4E                     i2l336:
  8865                           
  8866                           ; BSR set to: 0
  8867                           ;my_i2c.c: 212: {
  8868                           ;my_i2c.c: 214: SSPCON2bits.PEN = 1;
  8869  000A4E  84C5               	bsf	4037,2,c	;volatile
  8870                           
  8871                           ; BSR set to: 0
  8872                           ;my_i2c.c: 215: ic_ptr->status = 0x12;
  8873  000A50  0100               	movlb	0	; () banked
  8874  000A52  EE20 F00C          	lfsr	2,12
  8875  000A56  0100               	movlb	0	; () banked
  8876  000A58  51E8               	movf	_ic_ptr& (0+255),w,b
  8877  000A5A  26D9               	addwf	fsr2l,f,c
  8878  000A5C  0100               	movlb	0	; () banked
  8879  000A5E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8880  000A60  22DA               	addwfc	fsr2h,f,c
  8881  000A62  0E12               	movlw	18
  8882  000A64  6EDF               	movwf	indf2,c
  8883                           
  8884                           ;my_i2c.c: 217: }
  8885                           ;my_i2c.c: 218: break;
  8886  000A66  0012               	return	
  8887  000A68                     i2l3779:
  8888                           
  8889                           ; BSR set to: 0
  8890                           ;my_i2c.c: 221: ic_ptr->status = 0x3;
  8891  000A68  0100               	movlb	0	; () banked
  8892  000A6A  EE20 F00C          	lfsr	2,12
  8893  000A6E  0100               	movlb	0	; () banked
  8894  000A70  51E8               	movf	_ic_ptr& (0+255),w,b
  8895  000A72  26D9               	addwf	fsr2l,f,c
  8896  000A74  0100               	movlb	0	; () banked
  8897  000A76  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8898  000A78  22DA               	addwfc	fsr2h,f,c
  8899  000A7A  0E03               	movlw	3
  8900  000A7C  6EDF               	movwf	indf2,c
  8901                           
  8902                           ;my_i2c.c: 224: break;
  8903  000A7E  0012               	return	
  8904  000A80                     i2l3783:
  8905  000A80  0100               	movlb	0	; () banked
  8906  000A82  EE20 F00C          	lfsr	2,12
  8907  000A86  0100               	movlb	0	; () banked
  8908  000A88  51E8               	movf	_ic_ptr& (0+255),w,b
  8909  000A8A  26D9               	addwf	fsr2l,f,c
  8910  000A8C  0100               	movlb	0	; () banked
  8911  000A8E  51E9               	movf	(_ic_ptr+1)& (0+255),w,b
  8912  000A90  22DA               	addwfc	fsr2h,f,c
  8913  000A92  50DF               	movf	indf2,w,c
  8914                           
  8915                           ; Switch size 1, requested type "space"
  8916                           ; Number of cases is 6, Range of values is 12 to 18
  8917                           ; switch strategies available:
  8918                           ; Name         Instructions Cycles
  8919                           ; simple_byte           19    10 (average)
  8920                           ;	Chosen strategy is simple_byte
  8921  000A94  0A0C               	xorlw	12	; case 12
  8922  000A96  B4D8               	btfsc	status,2,c
  8923  000A98  D733               	goto	i2l3759
  8924  000A9A  0A01               	xorlw	1	; case 13
  8925  000A9C  B4D8               	btfsc	status,2,c
  8926  000A9E  D747               	goto	i2l329
  8927  000AA0  0A02               	xorlw	2	; case 15
  8928  000AA2  B4D8               	btfsc	status,2,c
  8929  000AA4  D75F               	goto	i2l3767
  8930  000AA6  0A1F               	xorlw	31	; case 16
  8931  000AA8  B4D8               	btfsc	status,2,c
  8932  000AAA  D7C4               	goto	i2l335
  8933  000AAC  0A01               	xorlw	1	; case 17
  8934  000AAE  B4D8               	btfsc	status,2,c
  8935  000AB0  D7CE               	goto	i2l336
  8936  000AB2  0A03               	xorlw	3	; case 18
  8937  000AB4  A4D8               	btfss	status,2,c
  8938  000AB6  0012               	return	
  8939  000AB8  D7D7               	goto	i2l3779
  8940  000ABA                     __end_of_i2c_int_handler_master_rx:
  8941                           	opt stack 0
  8942                           pclatu	equ	0xFFB
  8943                           pclath	equ	0xFFA
  8944                           tblptru	equ	0xFF8
  8945                           tblptrh	equ	0xFF7
  8946                           tblptrl	equ	0xFF6
  8947                           tablat	equ	0xFF5
  8948                           prodh	equ	0xFF4
  8949                           prodl	equ	0xFF3
  8950                           intcon	equ	0xFF2
  8951                           postinc0	equ	0xFEE
  8952                           fsr0h	equ	0xFEA
  8953                           fsr0l	equ	0xFE9
  8954                           wreg	equ	0xFE8
  8955                           indf1	equ	0xFE7
  8956                           fsr1h	equ	0xFE2
  8957                           fsr1l	equ	0xFE1
  8958                           bsr	equ	0xFE0
  8959                           indf2	equ	0xFDF
  8960                           postinc2	equ	0xFDE
  8961                           postdec2	equ	0xFDD
  8962                           fsr2h	equ	0xFDA
  8963                           fsr2l	equ	0xFD9
  8964                           status	equ	0xFD8
  8965                           
  8966 ;; *************** function _SleepIfOkay *****************
  8967 ;; Defined at:
  8968 ;;		line 228 in file "../src/messages.c"
  8969 ;; Parameters:    Size  Location     Type
  8970 ;;		None
  8971 ;; Auto vars:     Size  Location     Type
  8972 ;;		None
  8973 ;; Return value:  Size  Location     Type
  8974 ;;		None               void
  8975 ;; Registers used:
  8976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8977 ;; Tracked objects:
  8978 ;;		On entry : 0/0
  8979 ;;		On exit  : 0/0
  8980 ;;		Unchanged: 0/0
  8981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  8982 ;;      Params:         0       0       0       0       0
  8983 ;;      Locals:         0       0       0       0       0
  8984 ;;      Temps:          0       0       0       0       0
  8985 ;;      Totals:         0       0       0       0       0
  8986 ;;Total ram usage:        0 bytes
  8987 ;; Hardware stack levels used:    1
  8988 ;; Hardware stack levels required when called:    2
  8989 ;; This function calls:
  8990 ;;		_enter_sleep_mode
  8991 ;;		i2_check_msg
  8992 ;;		i2_in_high_int
  8993 ;;		i2_in_low_int
  8994 ;; This function is called by:
  8995 ;;		_InterruptHandlerHigh
  8996 ;; This function uses a non-reentrant model
  8997 ;;
  8998                           
  8999                           	psect	text55
  9000  0018CC                     __ptext55:
  9001                           	opt stack 0
  9002  0018CC                     _SleepIfOkay:
  9003                           	opt stack 17
  9004                           
  9005                           ;messages.c: 230: if (MQ_Main_Willing_to_block == 0) {
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;incstack = 0
  9009  0018CC  6658               	tstfsz	_MQ_Main_Willing_to_block,c
  9010  0018CE  D001               	goto	i2l3305
  9011  0018D0  0012               	return	
  9012  0018D2                     i2l3305:
  9013                           
  9014                           ;messages.c: 232: }
  9015                           ;messages.c: 235: if (in_low_int()) {
  9016  0018D2  EC50  F00D         	call	i2_in_low_int	;wreg free
  9017  0018D6  0100               	movlb	0	; () banked
  9018  0018D8  0100               	movlb	0	; () banked
  9019  0018DA  51B9               	movf	(?i2_in_low_int+1)& (0+255),w,b
  9020  0018DC  0100               	movlb	0	; () banked
  9021  0018DE  11B8               	iorwf	?i2_in_low_int& (0+255),w,b
  9022  0018E0  A4D8               	btfss	status,2,c
  9023  0018E2  0012               	return	
  9024                           
  9025                           ; BSR set to: 0
  9026                           ;messages.c: 237: }
  9027                           ;messages.c: 240: if (!in_high_int()) {
  9028                           
  9029                           ; BSR set to: 0
  9030                           
  9031                           ; BSR set to: 0
  9032                           ;messages.c: 236: return;
  9033  0018E4  ECE2  F00F         	call	i2_in_high_int	;wreg free
  9034  0018E8  0100               	movlb	0	; () banked
  9035  0018EA  0100               	movlb	0	; () banked
  9036  0018EC  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9037  0018EE  0100               	movlb	0	; () banked
  9038  0018F0  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  9039  0018F2  B4D8               	btfsc	status,2,c
  9040  0018F4  0012               	return	
  9041                           
  9042                           ; BSR set to: 0
  9043                           ;messages.c: 242: }
  9044                           ;messages.c: 247: if (check_msg(&ToMainHigh_MQ)) {
  9045                           
  9046                           ; BSR set to: 0
  9047                           
  9048                           ; BSR set to: 0
  9049                           ;messages.c: 241: return;
  9050  0018F6  0100               	movlb	0	; () banked
  9051  0018F8  0E00               	movlw	high _ToMainHigh_MQ
  9052  0018FA  0100               	movlb	0	; () banked
  9053  0018FC  0100               	movlb	0	; () banked
  9054  0018FE  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9055  001900  0100               	movlb	0	; () banked
  9056  001902  0E80               	movlw	low _ToMainHigh_MQ
  9057  001904  0100               	movlb	0	; () banked
  9058  001906  0100               	movlb	0	; () banked
  9059  001908  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  9060  00190A  EC1B  F00F         	call	i2_check_msg	;wreg free
  9061  00190E  0900               	iorlw	0
  9062  001910  A4D8               	btfss	status,2,c
  9063  001912  0012               	return	
  9064                           
  9065                           ;messages.c: 249: }
  9066                           ;messages.c: 250: if (check_msg(&ToMainLow_MQ)) {
  9067                           
  9068                           ;messages.c: 248: return;
  9069  001914  0101               	movlb	1	; () banked
  9070  001916  0E01               	movlw	high _ToMainLow_MQ
  9071  001918  0100               	movlb	0	; () banked
  9072  00191A  0100               	movlb	0	; () banked
  9073  00191C  6FB7               	movwf	(i2check_msg@qptr+1)& (0+255),b
  9074  00191E  0101               	movlb	1	; () banked
  9075  001920  0E4C               	movlw	low _ToMainLow_MQ
  9076  001922  0100               	movlb	0	; () banked
  9077  001924  0100               	movlb	0	; () banked
  9078  001926  6FB6               	movwf	i2check_msg@qptr& (0+255),b
  9079  001928  EC1B  F00F         	call	i2_check_msg	;wreg free
  9080  00192C  0900               	iorlw	0
  9081  00192E  B4D8               	btfsc	status,2,c
  9082                           
  9083                           ;messages.c: 252: }
  9084                           ;messages.c: 253: enter_sleep_mode();
  9085                           
  9086                           ;messages.c: 251: return;
  9087  001930  ECEF  F00F         	call	_enter_sleep_mode	;wreg free
  9088  001934  0012               	return	
  9089  001936                     __end_of_SleepIfOkay:
  9090                           	opt stack 0
  9091                           pclatu	equ	0xFFB
  9092                           pclath	equ	0xFFA
  9093                           tblptru	equ	0xFF8
  9094                           tblptrh	equ	0xFF7
  9095                           tblptrl	equ	0xFF6
  9096                           tablat	equ	0xFF5
  9097                           prodh	equ	0xFF4
  9098                           prodl	equ	0xFF3
  9099                           intcon	equ	0xFF2
  9100                           postinc0	equ	0xFEE
  9101                           fsr0h	equ	0xFEA
  9102                           fsr0l	equ	0xFE9
  9103                           wreg	equ	0xFE8
  9104                           indf1	equ	0xFE7
  9105                           fsr1h	equ	0xFE2
  9106                           fsr1l	equ	0xFE1
  9107                           bsr	equ	0xFE0
  9108                           indf2	equ	0xFDF
  9109                           postinc2	equ	0xFDE
  9110                           postdec2	equ	0xFDD
  9111                           fsr2h	equ	0xFDA
  9112                           fsr2l	equ	0xFD9
  9113                           status	equ	0xFD8
  9114                           
  9115 ;; *************** function i2_in_low_int *****************
  9116 ;; Defined at:
  9117 ;;		line 33 in file "../src/interrupts.c"
  9118 ;; Parameters:    Size  Location     Type
  9119 ;;		None
  9120 ;; Auto vars:     Size  Location     Type
  9121 ;;		None
  9122 ;; Return value:  Size  Location     Type
  9123 ;;                  2    2[BANK0 ] int 
  9124 ;; Registers used:
  9125 ;;		wreg, status,2, status,0, cstack
  9126 ;; Tracked objects:
  9127 ;;		On entry : 0/0
  9128 ;;		On exit  : 0/0
  9129 ;;		Unchanged: 0/0
  9130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9131 ;;      Params:         0       2       0       0       0
  9132 ;;      Locals:         0       0       0       0       0
  9133 ;;      Temps:          0       0       0       0       0
  9134 ;;      Totals:         0       2       0       0       0
  9135 ;;Total ram usage:        2 bytes
  9136 ;; Hardware stack levels used:    1
  9137 ;; Hardware stack levels required when called:    1
  9138 ;; This function calls:
  9139 ;;		i2_in_high_int
  9140 ;; This function is called by:
  9141 ;;		_SleepIfOkay
  9142 ;; This function uses a non-reentrant model
  9143 ;;
  9144                           
  9145                           	psect	text56
  9146  001AA0                     __ptext56:
  9147                           	opt stack 0
  9148  001AA0                     i2_in_low_int:
  9149                           	opt stack 17
  9150                           
  9151                           ;interrupts.c: 35: if (INTCONbits.GIEL == 1) {
  9152                           
  9153                           ;incstack = 0
  9154  001AA0  ACF2               	btfss	intcon,6,c	;volatile
  9155  001AA2  D008               	goto	i2l3855
  9156                           
  9157                           ;interrupts.c: 36: return (0);
  9158  001AA4  0E00               	movlw	0
  9159  001AA6  0100               	movlb	0	; () banked
  9160  001AA8  0100               	movlb	0	; () banked
  9161  001AAA  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9162  001AAC  0E00               	movlw	0
  9163  001AAE  0100               	movlb	0	; () banked
  9164  001AB0  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9165  001AB2  0012               	return	
  9166  001AB4                     i2l3855:
  9167  001AB4  ECE2  F00F         	call	i2_in_high_int	;wreg free
  9168  001AB8  0100               	movlb	0	; () banked
  9169  001ABA  0100               	movlb	0	; () banked
  9170  001ABC  51B7               	movf	(?i2_in_high_int+1)& (0+255),w,b
  9171  001ABE  0100               	movlb	0	; () banked
  9172  001AC0  11B6               	iorwf	?i2_in_high_int& (0+255),w,b
  9173  001AC2  B4D8               	btfsc	status,2,c
  9174  001AC4  D008               	goto	i2l3863
  9175                           
  9176                           ; BSR set to: 0
  9177                           ;interrupts.c: 38: return (0);
  9178  001AC6  0E00               	movlw	0
  9179  001AC8  0100               	movlb	0	; () banked
  9180  001ACA  0100               	movlb	0	; () banked
  9181  001ACC  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9182  001ACE  0E00               	movlw	0
  9183  001AD0  0100               	movlb	0	; () banked
  9184  001AD2  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9185  001AD4  0012               	return	
  9186  001AD6                     i2l3863:
  9187                           
  9188                           ; BSR set to: 0
  9189                           ;interrupts.c: 40: return (1);
  9190  001AD6  0E00               	movlw	0
  9191  001AD8  0100               	movlb	0	; () banked
  9192  001ADA  0100               	movlb	0	; () banked
  9193  001ADC  6FB9               	movwf	(?i2_in_low_int+1)& (0+255),b
  9194  001ADE  0E01               	movlw	1
  9195  001AE0  0100               	movlb	0	; () banked
  9196  001AE2  6FB8               	movwf	?i2_in_low_int& (0+255),b
  9197  001AE4  0012               	return	
  9198  001AE6                     __end_ofi2_in_low_int:
  9199                           	opt stack 0
  9200                           pclatu	equ	0xFFB
  9201                           pclath	equ	0xFFA
  9202                           tblptru	equ	0xFF8
  9203                           tblptrh	equ	0xFF7
  9204                           tblptrl	equ	0xFF6
  9205                           tablat	equ	0xFF5
  9206                           prodh	equ	0xFF4
  9207                           prodl	equ	0xFF3
  9208                           intcon	equ	0xFF2
  9209                           postinc0	equ	0xFEE
  9210                           fsr0h	equ	0xFEA
  9211                           fsr0l	equ	0xFE9
  9212                           wreg	equ	0xFE8
  9213                           indf1	equ	0xFE7
  9214                           fsr1h	equ	0xFE2
  9215                           fsr1l	equ	0xFE1
  9216                           bsr	equ	0xFE0
  9217                           indf2	equ	0xFDF
  9218                           postinc2	equ	0xFDE
  9219                           postdec2	equ	0xFDD
  9220                           fsr2h	equ	0xFDA
  9221                           fsr2l	equ	0xFD9
  9222                           status	equ	0xFD8
  9223                           
  9224 ;; *************** function i2_in_high_int *****************
  9225 ;; Defined at:
  9226 ;;		line 24 in file "../src/interrupts.c"
  9227 ;; Parameters:    Size  Location     Type
  9228 ;;		None
  9229 ;; Auto vars:     Size  Location     Type
  9230 ;;		None
  9231 ;; Return value:  Size  Location     Type
  9232 ;;                  2    0[BANK0 ] int 
  9233 ;; Registers used:
  9234 ;;		wreg, status,2
  9235 ;; Tracked objects:
  9236 ;;		On entry : 0/0
  9237 ;;		On exit  : 0/0
  9238 ;;		Unchanged: 0/0
  9239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9240 ;;      Params:         0       2       0       0       0
  9241 ;;      Locals:         0       0       0       0       0
  9242 ;;      Temps:          0       0       0       0       0
  9243 ;;      Totals:         0       2       0       0       0
  9244 ;;Total ram usage:        2 bytes
  9245 ;; Hardware stack levels used:    1
  9246 ;; This function calls:
  9247 ;;		Nothing
  9248 ;; This function is called by:
  9249 ;;		_SleepIfOkay
  9250 ;;		i2_in_low_int
  9251 ;; This function uses a non-reentrant model
  9252 ;;
  9253                           
  9254                           	psect	text57
  9255  001FC4                     __ptext57:
  9256                           	opt stack 0
  9257  001FC4                     i2_in_high_int:
  9258                           	opt stack 17
  9259                           
  9260                           ;interrupts.c: 26: return (!INTCONbits.GIEH);
  9261                           
  9262                           ; BSR set to: 0
  9263                           ;incstack = 0
  9264  001FC4  0E00               	movlw	0
  9265  001FC6  AEF2               	btfss	intcon,7,c	;volatile
  9266  001FC8  0E01               	movlw	1
  9267  001FCA  0100               	movlb	0	; () banked
  9268  001FCC  0100               	movlb	0	; () banked
  9269  001FCE  6FB6               	movwf	?i2_in_high_int& (0+255),b
  9270  001FD0  0100               	movlb	0	; () banked
  9271  001FD2  6BB7               	clrf	(?i2_in_high_int+1)& (0+255),b
  9272  001FD4  0012               	return	
  9273  001FD6                     __end_ofi2_in_high_int:
  9274                           	opt stack 0
  9275                           pclatu	equ	0xFFB
  9276                           pclath	equ	0xFFA
  9277                           tblptru	equ	0xFF8
  9278                           tblptrh	equ	0xFF7
  9279                           tblptrl	equ	0xFF6
  9280                           tablat	equ	0xFF5
  9281                           prodh	equ	0xFF4
  9282                           prodl	equ	0xFF3
  9283                           intcon	equ	0xFF2
  9284                           postinc0	equ	0xFEE
  9285                           fsr0h	equ	0xFEA
  9286                           fsr0l	equ	0xFE9
  9287                           wreg	equ	0xFE8
  9288                           indf1	equ	0xFE7
  9289                           fsr1h	equ	0xFE2
  9290                           fsr1l	equ	0xFE1
  9291                           bsr	equ	0xFE0
  9292                           indf2	equ	0xFDF
  9293                           postinc2	equ	0xFDE
  9294                           postdec2	equ	0xFDD
  9295                           fsr2h	equ	0xFDA
  9296                           fsr2l	equ	0xFD9
  9297                           status	equ	0xFD8
  9298                           
  9299 ;; *************** function i2_check_msg *****************
  9300 ;; Defined at:
  9301 ;;		line 222 in file "../src/messages.c"
  9302 ;; Parameters:    Size  Location     Type
  9303 ;;  qptr            2    0[BANK0 ] PTR struct __msg_queue
  9304 ;;		 -> ToMainHigh_MQ(54), ToMainLow_MQ(54), 
  9305 ;; Auto vars:     Size  Location     Type
  9306 ;;		None
  9307 ;; Return value:  Size  Location     Type
  9308 ;;                  1    wreg      unsigned char 
  9309 ;; Registers used:
  9310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  9311 ;; Tracked objects:
  9312 ;;		On entry : 0/0
  9313 ;;		On exit  : 0/0
  9314 ;;		Unchanged: 0/0
  9315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9316 ;;      Params:         0       2       0       0       0
  9317 ;;      Locals:         0       0       0       0       0
  9318 ;;      Temps:          0       1       0       0       0
  9319 ;;      Totals:         0       3       0       0       0
  9320 ;;Total ram usage:        3 bytes
  9321 ;; Hardware stack levels used:    1
  9322 ;; This function calls:
  9323 ;;		Nothing
  9324 ;; This function is called by:
  9325 ;;		_SleepIfOkay
  9326 ;; This function uses a non-reentrant model
  9327 ;;
  9328                           
  9329                           	psect	text58
  9330  001E36                     __ptext58:
  9331                           	opt stack 0
  9332  001E36                     i2_check_msg:
  9333                           	opt stack 18
  9334                           
  9335                           ;messages.c: 223: return (qptr->queue[qptr->cur_read_ind].full);
  9336                           
  9337                           ; BSR set to: 0
  9338                           ;incstack = 0
  9339  001E36  0100               	movlb	0	; () banked
  9340  001E38  EE20 F035          	lfsr	2,53
  9341  001E3C  0100               	movlb	0	; () banked
  9342  001E3E  51B6               	movf	i2check_msg@qptr& (0+255),w,b
  9343  001E40  26D9               	addwf	fsr2l,f,c
  9344  001E42  0100               	movlb	0	; () banked
  9345  001E44  51B7               	movf	(i2check_msg@qptr+1)& (0+255),w,b
  9346  001E46  22DA               	addwfc	fsr2h,f,c
  9347  001E48  50DF               	movf	indf2,w,c
  9348  001E4A  0100               	movlb	0	; () banked
  9349  001E4C  6FB8               	movwf	??i2_check_msg& (0+255),b
  9350  001E4E  0100               	movlb	0	; () banked
  9351  001E50  51B8               	movf	??i2_check_msg& (0+255),w,b
  9352  001E52  0D0D               	mullw	13
  9353  001E54  50F3               	movf	prodl,w,c
  9354  001E56  0100               	movlb	0	; () banked
  9355  001E58  0100               	movlb	0	; () banked
  9356  001E5A  25B6               	addwf	i2check_msg@qptr& (0+255),w,b
  9357  001E5C  6ED9               	movwf	fsr2l,c
  9358  001E5E  50F4               	movf	prodh,w,c
  9359  001E60  0100               	movlb	0	; () banked
  9360  001E62  0100               	movlb	0	; () banked
  9361  001E64  21B7               	addwfc	(i2check_msg@qptr+1)& (0+255),w,b
  9362  001E66  6EDA               	movwf	fsr2h,c
  9363  001E68  50DF               	movf	indf2,w,c
  9364  001E6A  0012               	return	
  9365  001E6C                     __end_ofi2_check_msg:
  9366                           	opt stack 0
  9367                           pclatu	equ	0xFFB
  9368                           pclath	equ	0xFFA
  9369                           tblptru	equ	0xFF8
  9370                           tblptrh	equ	0xFF7
  9371                           tblptrl	equ	0xFF6
  9372                           tablat	equ	0xFF5
  9373                           prodh	equ	0xFF4
  9374                           prodl	equ	0xFF3
  9375                           intcon	equ	0xFF2
  9376                           postinc0	equ	0xFEE
  9377                           fsr0h	equ	0xFEA
  9378                           fsr0l	equ	0xFE9
  9379                           wreg	equ	0xFE8
  9380                           indf1	equ	0xFE7
  9381                           fsr1h	equ	0xFE2
  9382                           fsr1l	equ	0xFE1
  9383                           bsr	equ	0xFE0
  9384                           indf2	equ	0xFDF
  9385                           postinc2	equ	0xFDE
  9386                           postdec2	equ	0xFDD
  9387                           fsr2h	equ	0xFDA
  9388                           fsr2l	equ	0xFD9
  9389                           status	equ	0xFD8
  9390                           
  9391 ;; *************** function _enter_sleep_mode *****************
  9392 ;; Defined at:
  9393 ;;		line 202 in file "../src/messages.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;		None               void
  9400 ;; Registers used:
  9401 ;;		None
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3
  9407 ;;      Params:         0       0       0       0       0
  9408 ;;      Locals:         0       0       0       0       0
  9409 ;;      Temps:          0       0       0       0       0
  9410 ;;      Totals:         0       0       0       0       0
  9411 ;;Total ram usage:        0 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; This function calls:
  9414 ;;		Nothing
  9415 ;; This function is called by:
  9416 ;;		_SleepIfOkay
  9417 ;; This function uses a non-reentrant model
  9418 ;;
  9419                           
  9420                           	psect	text59
  9421  001FDE                     __ptext59:
  9422                           	opt stack 0
  9423  001FDE                     _enter_sleep_mode:
  9424                           	opt stack 18
  9425                           
  9426                           ;messages.c: 204: OSCCONbits.IDLEN = 1;
  9427                           
  9428                           ; BSR set to: 0
  9429                           ;incstack = 0
  9430  001FDE  8ED3               	bsf	4051,7,c	;volatile
  9431  001FE0  0003               	sleep		;# 
  9432  001FE2  0012               	return	
  9433  001FE4                     __end_of_enter_sleep_mode:
  9434                           	opt stack 0
  9435  0000                     pclatu	equ	0xFFB
  9436                           pclath	equ	0xFFA
  9437                           tblptru	equ	0xFF8
  9438                           tblptrh	equ	0xFF7
  9439                           tblptrl	equ	0xFF6
  9440                           tablat	equ	0xFF5
  9441                           prodh	equ	0xFF4
  9442                           prodl	equ	0xFF3
  9443                           intcon	equ	0xFF2
  9444                           postinc0	equ	0xFEE
  9445                           fsr0h	equ	0xFEA
  9446                           fsr0l	equ	0xFE9
  9447                           wreg	equ	0xFE8
  9448                           indf1	equ	0xFE7
  9449                           fsr1h	equ	0xFE2
  9450                           fsr1l	equ	0xFE1
  9451                           bsr	equ	0xFE0
  9452                           indf2	equ	0xFDF
  9453                           postinc2	equ	0xFDE
  9454                           postdec2	equ	0xFDD
  9455                           fsr2h	equ	0xFDA
  9456                           fsr2l	equ	0xFD9
  9457                           status	equ	0xFD8
  9458                           pclatu	equ	0xFFB
  9459                           pclath	equ	0xFFA
  9460                           tblptru	equ	0xFF8
  9461                           tblptrh	equ	0xFF7
  9462                           tblptrl	equ	0xFF6
  9463                           tablat	equ	0xFF5
  9464                           prodh	equ	0xFF4
  9465                           prodl	equ	0xFF3
  9466                           intcon	equ	0xFF2
  9467                           postinc0	equ	0xFEE
  9468                           fsr0h	equ	0xFEA
  9469                           fsr0l	equ	0xFE9
  9470                           wreg	equ	0xFE8
  9471                           indf1	equ	0xFE7
  9472                           fsr1h	equ	0xFE2
  9473                           fsr1l	equ	0xFE1
  9474                           bsr	equ	0xFE0
  9475                           indf2	equ	0xFDF
  9476                           postinc2	equ	0xFDE
  9477                           postdec2	equ	0xFDD
  9478                           fsr2h	equ	0xFDA
  9479                           fsr2l	equ	0xFD9
  9480                           status	equ	0xFD8
  9481                           
  9482                           	psect	param0
  9483  0000                     pclatu	equ	0xFFB
  9484                           pclath	equ	0xFFA
  9485                           tblptru	equ	0xFF8
  9486                           tblptrh	equ	0xFF7
  9487                           tblptrl	equ	0xFF6
  9488                           tablat	equ	0xFF5
  9489                           prodh	equ	0xFF4
  9490                           prodl	equ	0xFF3
  9491                           intcon	equ	0xFF2
  9492                           postinc0	equ	0xFEE
  9493                           fsr0h	equ	0xFEA
  9494                           fsr0l	equ	0xFE9
  9495                           wreg	equ	0xFE8
  9496                           indf1	equ	0xFE7
  9497                           fsr1h	equ	0xFE2
  9498                           fsr1l	equ	0xFE1
  9499                           bsr	equ	0xFE0
  9500                           indf2	equ	0xFDF
  9501                           postinc2	equ	0xFDE
  9502                           postdec2	equ	0xFDD
  9503                           fsr2h	equ	0xFDA
  9504                           fsr2l	equ	0xFD9
  9505                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         287
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     51     102
    BANK0           128     50     106
    BANK1           256    117     247
    BANK2           256      0      54
    BANK3           256      0       0

Pointer List with Targets:

    uart_lthread@uptr	PTR struct __uart_thread_struct size(2) Largest target is 2
		 -> main@uthread_data(BANK1[2]), 

    timer1_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    i2c_lthread@i2cptr	PTR struct __i2c_thread_struct size(2) Largest target is 2
		 -> main@i2cthread_data(BANK1[2]), 

    timer0_lthread@tptr	PTR struct __timer0_thread_struct size(2) Largest target is 2
		 -> main@t0thread_data(BANK1[2]), 

    memcpy@d1	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    memcpy@s1	PTR const void  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 54
		 -> ToMainLow_MQ.data(BANK1[10]), ToMainHigh_MQ.data(BANK0[10]), FromMainLow_MQ.data(BANK1[10]), FromMainHigh_MQ.data(BANK2[10]), 
		 -> ToMainLow_MQ.queue.data(BANK1[10]), ToMainHigh_MQ.queue.data(BANK0[10]), FromMainHigh_MQ.queue.data(BANK2[10]), FromMainLow_MQ.queue.data(BANK1[10]), 
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), 
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    i2c_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    init_timer1_lthread@tptr	PTR struct __timer1_thread_struct size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    timer0_lthread@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    timer0_lthread@msgval	PTR unsigned int  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    uart_retrieve_buffer@msgbuffer	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    init_uart_recv@uc	PTR struct __uart_comm size(2) Largest target is 23
		 -> main@uc(BANK1[23]), 

    uc_ptr	PTR struct __uart_comm size(2) Largest target is 23
		 -> NULL(NULL[0]), main@uc(BANK1[23]), 

    init_i2c@ic	PTR struct __i2c_comm size(2) Largest target is 35
		 -> main@ic(BANK1[35]), 

    i2c_master_send@msg	PTR unsigned char  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ic_ptr	PTR struct __i2c_comm size(2) Largest target is 35
		 -> NULL(NULL[0]), main@ic(BANK1[35]), 

    check_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    FromMainHigh_recvmsg@data	PTR void  size(2) Largest target is 2
		 -> timer0_int_handler@val(BANK0[2]), 

    FromMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), 

    FromMainHigh_sendmsg@data	PTR void  size(2) Largest target is 2
		 -> main@t1thread_data(BANK1[2]), 

    ToMainHigh_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainHigh_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainHigh_sendmsg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@uc(BANK1[23]), 

    ToMainLow_recvmsg@data	PTR void  size(2) Largest target is 11
		 -> main@msgbuffer(BANK1[11]), 

    ToMainLow_recvmsg@msgtype	PTR unsigned char  size(2) Largest target is 1
		 -> main@msgtype(BANK1[1]), 

    ToMainLow_sendmsg@data	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    recv_msg@msgtype	PTR unsigned char  size(2) Largest target is 2
		 -> timer0_int_handler@msgtype(BANK0[2]), main@msgtype(BANK1[1]), 

    recv_msg@data	PTR void  size(2) Largest target is 11
		 -> timer0_int_handler@val(BANK0[2]), main@msgbuffer(BANK1[11]), 

    recv_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    recv_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    sp__memcpy	PTR void  size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> timer0_int_handler@val(BANK0[2]), FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), 
		 -> ToMainLow_MQ(BANK1[54]), main@msgbuffer(BANK1[11]), 

    send_msg@data	PTR void  size(2) Largest target is 23
		 -> timer0_int_handler@val(BANK0[2]), NULL(NULL[0]), main@msgbuffer(BANK1[11]), main@t1thread_data(BANK1[2]), 
		 -> main@uc(BANK1[23]), 

    send_msg@qmsg	PTR struct __msg size(2) Largest target is 54
		 -> FromMainLow_MQ.queue(BANK1[52]), FromMainHigh_MQ.queue(BANK2[52]), ToMainHigh_MQ.queue(BANK0[52]), ToMainLow_MQ.queue(BANK1[52]), 
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    send_msg@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 

    init_queue@qptr	PTR struct __msg_queue size(2) Largest target is 54
		 -> FromMainHigh_MQ(BANK2[54]), FromMainLow_MQ(BANK1[54]), ToMainHigh_MQ(BANK0[54]), ToMainLow_MQ(BANK1[54]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _InterruptHandlerHigh in COMRAM

    None.

Critical Paths under _InterruptHandlerLow in COMRAM

    _InterruptHandlerLow->_uart_recv_int_handler
    _uart_send_int_handler->_WriteUSART
    _uart_recv_int_handler->_ToMainLow_sendmsg
    _uart_recv_int_handler->i1_ToMainHigh_sendmsg
    i1_ToMainHigh_sendmsg->i1_send_msg
    _timer1_int_handler->_ToMainLow_sendmsg
    _ToMainLow_sendmsg->i1_send_msg
    i1_send_msg->i1_memcpy

Critical Paths under _main in BANK0

    None.

Critical Paths under _InterruptHandlerHigh in BANK0

    _InterruptHandlerHigh->_timer0_int_handler
    _timer0_int_handler->_FromMainHigh_recvmsg
    i2_ToMainHigh_sendmsg->i2_send_msg
    i2_send_msg->i2_memcpy
    _FromMainHigh_recvmsg->i2_recv_msg
    i2_recv_msg->i2_memcpy
    _i2c_int_handler->_i2c_int_handler_master_rx
    _i2c_int_handler->_i2c_int_handler_master_tx
    _SleepIfOkay->i2_in_low_int
    i2_in_low_int->i2_in_high_int

Critical Paths under _InterruptHandlerLow in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_timer1_lthread
    _uart_lthread->_uart_retrieve_buffer
    _timer1_lthread->_FromMainHigh_sendmsg
    _FromMainHigh_sendmsg->_send_msg
    _init_queues->_init_queue
    _i2c_lthread->_ToMainHigh_sendmsg
    _ToMainHigh_sendmsg->_send_msg
    _send_msg->_memcpy
    _block_on_To_msgqueues->_in_main
    _in_main->_in_low_int
    _in_low_int->_in_high_int
    _ToMainLow_recvmsg->_recv_msg
    _ToMainHigh_recvmsg->_recv_msg
    _recv_msg->_memcpy

Critical Paths under _InterruptHandlerHigh in BANK1

    None.

Critical Paths under _InterruptHandlerLow in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _InterruptHandlerHigh in BANK2

    None.

Critical Paths under _InterruptHandlerLow in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _InterruptHandlerHigh in BANK3

    None.

Critical Paths under _InterruptHandlerLow in BANK3

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                84    84      0   15609
                                             36 BANK1     81    81      0
                         _OpenTimer0
                         _OpenTimer1
                          _OpenUSART
                 _ToMainHigh_recvmsg
                  _ToMainLow_recvmsg
              _block_on_To_msgqueues
                  _enable_interrupts
               _i2c_configure_master
                        _i2c_lthread
                           _init_i2c
                        _init_queues
                _init_timer1_lthread
                     _init_uart_recv
                     _timer0_lthread
                     _timer1_lthread
                       _uart_lthread
 ---------------------------------------------------------------------------------
 (1) _uart_lthread                                         8     0      8     966
                                              9 BANK1      8     0      8
               _uart_retrieve_buffer
 ---------------------------------------------------------------------------------
 (2) _uart_retrieve_buffer                                 9     5      4     322
                                              0 BANK1      9     5      4
 ---------------------------------------------------------------------------------
 (1) _timer1_lthread                                      10     2      8    2850
                                             26 BANK1     10     2      8
               _FromMainHigh_sendmsg
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     302
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (2) _FromMainHigh_sendmsg                                 4     1      3    2161
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (1) _timer0_lthread                                      10     2      8     294
                                              0 BANK1     10     2      8
 ---------------------------------------------------------------------------------
 (1) _init_uart_recv                                       2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_timer1_lthread                                  2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _init_queues                                          1     1      0     452
                                              4 BANK1      1     1      0
                         _init_queue
 ---------------------------------------------------------------------------------
 (2) _init_queue                                           4     2      2     452
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _init_i2c                                             2     0      2      96
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _i2c_lthread                                          9     1      8    3786
                                             26 BANK1      9     1      8
                 _ToMainHigh_sendmsg
                    _i2c_master_recv
                    _i2c_master_send
 ---------------------------------------------------------------------------------
 (2) _i2c_master_send                                     11     9      2     257
                                              0 BANK1     11     9      2
 ---------------------------------------------------------------------------------
 (2) _i2c_master_recv                                      1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ToMainHigh_sendmsg                                   4     1      3    2541
                                             22 BANK1      4     1      3
                           _send_msg
 ---------------------------------------------------------------------------------
 (3) _send_msg                                            12     6      6    1938
                                             10 BANK1     12     6      6
                             _memcpy
 ---------------------------------------------------------------------------------
 (1) _i2c_configure_master                                 1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _enable_interrupts                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _block_on_To_msgqueues                                1     1      0     283
                                              6 BANK1      1     1      0
                        _Delay1KTCYx
                          _check_msg
                            _in_main
 ---------------------------------------------------------------------------------
 (2) _in_main                                              2     0      2       0
                                              4 BANK1      2     0      2
                        _in_high_int
                         _in_low_int
 ---------------------------------------------------------------------------------
 (3) _in_low_int                                           2     0      2       0
                                              2 BANK1      2     0      2
                        _in_high_int
 ---------------------------------------------------------------------------------
 (4) _in_high_int                                          2     0      2       0
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (2) _check_msg                                            3     1      2     252
                                              0 BANK1      3     1      2
 ---------------------------------------------------------------------------------
 (2) _Delay1KTCYx                                          1     1      0      31
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _ToMainLow_recvmsg                                    5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (1) _ToMainHigh_recvmsg                                   5     1      4    2192
                                             24 BANK1      5     1      4
                           _recv_msg
 ---------------------------------------------------------------------------------
 (2) _recv_msg                                            14     7      7    1969
                                             10 BANK1     14     7      7
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              10     4      6     564
                                              0 BANK1     10     4      6
 ---------------------------------------------------------------------------------
 (1) _OpenUSART                                            6     4      2     375
                                              0 BANK1      6     4      2
 ---------------------------------------------------------------------------------
 (1) _OpenTimer1                                           1     1      0      93
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _OpenTimer0                                           1     1      0      62
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _InterruptHandlerLow                                 17    17      0    8087
                                             34 COMRAM    17    17      0
                 _timer1_int_handler
              _uart_recv_int_handler
              _uart_send_int_handler
 ---------------------------------------------------------------------------------
 (6) _uart_send_int_handler                                1     1      0      22
                                              1 COMRAM     1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (7) _WriteUSART                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_recv_int_handler                                8     8      0    5369
                                             26 COMRAM     8     8      0
                          _ReadUSART
                  _ToMainLow_sendmsg
               i1_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (7) i1_ToMainHigh_sendmsg                                 4     1      3    2608
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (7) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (6) _timer1_int_handler                                   3     3      0    2696
                                             26 COMRAM     3     3      0
                         _ReadTimer1
                  _ToMainLow_sendmsg
                        _WriteTimer1
 ---------------------------------------------------------------------------------
 (7) _WriteTimer1                                          4     2      2      88
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (7) _ToMainLow_sendmsg                                    4     1      3    2577
                                             22 COMRAM     4     1      3
                         i1_send_msg
 ---------------------------------------------------------------------------------
 (8) i1_send_msg                                          12     6      6    2299
                                             10 COMRAM    12     6      6
                           i1_memcpy
 ---------------------------------------------------------------------------------
 (9) i1_memcpy                                            10     4      6     662
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (7) _ReadTimer1                                           4     2      2      30
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _InterruptHandlerHigh                               14    14      0    6831
                                             36 BANK0     14    14      0
                        _SleepIfOkay
                    _i2c_int_handler
                 _timer0_int_handler
 ---------------------------------------------------------------------------------
 (11) _timer0_int_handler                                  7     7      0    6547
                                             29 BANK0      7     7      0
               _FromMainHigh_recvmsg
                        _WriteTimer0
               i2_ToMainHigh_sendmsg
 ---------------------------------------------------------------------------------
 (12) i2_ToMainHigh_sendmsg                                4     1      3    3231
                                             22 BANK0      4     1      3
                         i2_send_msg
 ---------------------------------------------------------------------------------
 (13) i2_send_msg                                         12     6      6    2859
                                             10 BANK0     12     6      6
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (12) _WriteTimer0                                         4     2      2     164
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (12) _FromMainHigh_recvmsg                                5     1      4    2970
                                             24 BANK0      5     1      4
                         i2_recv_msg
 ---------------------------------------------------------------------------------
 (13) i2_recv_msg                                         14     7      7    2747
                                             10 BANK0     14     7      7
                           i2_memcpy
 ---------------------------------------------------------------------------------
 (14) i2_memcpy                                           10     4      6    1108
                                              0 BANK0     10     4      6
 ---------------------------------------------------------------------------------
 (11) _i2c_int_handler                                     0     0      0       0
          _i2c_int_handler_master_rx
          _i2c_int_handler_master_tx
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_tx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (12) _i2c_int_handler_master_rx                           4     4      0       0
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (11) _SleepIfOkay                                         0     0      0     284
                   _enter_sleep_mode
                        i2_check_msg
                      i2_in_high_int
                       i2_in_low_int
 ---------------------------------------------------------------------------------
 (12) i2_in_low_int                                        2     0      2       0
                                              2 BANK0      2     0      2
                      i2_in_high_int
 ---------------------------------------------------------------------------------
 (13) i2_in_high_int                                       2     0      2       0
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (12) i2_check_msg                                         3     1      2     284
                                              0 BANK0      3     1      2
 ---------------------------------------------------------------------------------
 (12) _enter_sleep_mode                                    0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _OpenTimer0
   _OpenTimer1
   _OpenUSART
   _ToMainHigh_recvmsg
     _recv_msg
       _memcpy
   _ToMainLow_recvmsg
     _recv_msg
       _memcpy
   _block_on_To_msgqueues
     _Delay1KTCYx
     _check_msg
     _in_main
       _in_high_int
       _in_low_int
         _in_high_int
   _enable_interrupts
   _i2c_configure_master
   _i2c_lthread
     _ToMainHigh_sendmsg
       _send_msg
         _memcpy
     _i2c_master_recv
     _i2c_master_send
   _init_i2c
   _init_queues
     _init_queue
   _init_timer1_lthread
   _init_uart_recv
   _timer0_lthread
   _timer1_lthread
     _FromMainHigh_sendmsg
       _send_msg
         _memcpy
     ___lwmod
   _uart_lthread
     _uart_retrieve_buffer

 _InterruptHandlerLow (ROOT)
   _timer1_int_handler
     _ReadTimer1
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     _WriteTimer1
   _uart_recv_int_handler
     _ReadUSART
     _ToMainLow_sendmsg
       i1_send_msg
         i1_memcpy
     i1_ToMainHigh_sendmsg
       i1_send_msg
         i1_memcpy
   _uart_send_int_handler
     _WriteUSART

 _InterruptHandlerHigh (ROOT)
   _SleepIfOkay
     _enter_sleep_mode
     i2_check_msg
     i2_in_high_int
     i2_in_low_int
       i2_in_high_int
   _i2c_int_handler
     _i2c_int_handler_master_rx
     _i2c_int_handler_master_tx
   _timer0_int_handler
     _FromMainHigh_recvmsg
       i2_recv_msg
         i2_memcpy
     _WriteTimer0
     i2_ToMainHigh_sendmsg
       i2_send_msg
         i2_memcpy

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3FF      0       0      13        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      36       8       21.1%
BITBANK1           100      0       0      10        0.0%
BANK1              100     75      F7       6       96.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80     32      6A       5       82.8%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     33      66       1       80.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FD       9        0.0%
DATA                 0      0     1FD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Sat Mar 15 23:17:01 2014

                  main@uthread_data 01B5            _MQ_Main_Willing_to_block 0058  
             ?i2_ToMainHigh_sendmsg 00CC           __end_of_ToMainLow_recvmsg 1BAE  
                                bsr 000FE0           __end_of_ToMainLow_sendmsg 1F10  
                      __CFG_CP0$OFF 000000                   i2recv_msg@msgtype 00C3  
                 i2recv_msg@tlength 00CA                                 l306 0C56  
                               l315 11AC                                 l640 1446  
                               l633 1414                                 l565 1EC0  
                               l637 1434                                 l566 1EC2  
                               l638 1436                                 l591 1D58  
                               l639 1444                                 l592 1D5A  
                               l589 1D40                                 l877 1F32  
              __size_of_WriteTimer0 0012                __size_of_WriteTimer1 0012  
                               _buf 0034                      _FromMainLow_MQ 0116  
                               wreg 000FE8                        __CFG_IESO$ON 000000  
                      ?_in_high_int 0182                    ??_init_uart_recv 0184  
                   ReadTimer1@timer 0003   __end_of_i2c_int_handler_master_rx 0ABA  
 __end_of_i2c_int_handler_master_tx 08FE                 i2recv_msg@maxlength 00C2  
                              l1189 14F2                                l3241 1A6E  
                              l3401 03FE                                l3263 1B1A  
                              l3249 1A90                                l3453 1D42  
                              l3533 16D2                                l3381 0260  
                              l3527 16A6                                l3615 0F26  
                              l3481 1400                                l3721 0BDA  
                              l3393 0308                                l3377 01BC  
                              l3385 02B2                                l3369 017A  
                              l3635 19E4                                l3539 16FE  
                              l3707 0ADC                                l3563 125C  
                              l3555 1206                                l3395 035A  
                              l3379 020E                                l3387 02CA  
                              l3629 19C0                                l3717 0B60  
                              l3557 1232                                l3397 03AC  
                              l3831 1490                                l3823 12FA  
                              l3489 1416                                l3649 0CCA  
                              l3665 0D90                                l3833 14A2  
                              l3739 10F4                                l3835 14AA  
                              l3819 12BE                                l3597 174E  
                              l3839 14DE                                _LATB 000F8A  
                              u2737 1F34                                i1l84 007A  
                   _FromMainHigh_MQ 0200                       __CFG_FCMEN$ON 000000  
              _uart_retrieve_buffer 128C                                _buff 0048  
            ?_block_on_To_msgqueues 0001                                _main 00C4  
                              fsr0h 000FEA                                fsr1h 000FE2  
                              fsr0l 000FE9                                fsr2h 000FDA  
                              indf1 000FE7                                fsr1l 000FE1  
                              indf2 000FDF                                fsr2l 000FD9  
                       main@msgtype 01BC                          i1_send_msg 1336  
                              pclat 000FFA                         i2_check_msg 1E36  
                              prodh 000FF4                                prodl 000FF3  
                              start 00C0                          i2_recv_msg 0D94  
                     __CFG_FOSC2$ON 000000                          i2_send_msg 0FCE  
     __size_of_i2c_configure_master 0042                       ??_i2c_lthread 01A4  
         ToMainHigh_recvmsg@msgtype 019A                      send_msg@length 018E  
       __size_of_timer0_int_handler 008A                         _Delay1KTCYx 1F2E  
                             ?_main 0001                               _T0CON 000FD5  
                             _T1CON 000FCD                               i1l400 0430  
                   __end_of___lwmod 14FC                          i1memcpy@d1 0001  
                             i1l651 1F1E                               i2l333 0A18  
                             i1l397 06C0                               i2l335 0A34  
                             i2l336 0A4E                               i2l344 0738  
                             i2l329 092E                               i2l347 07C6  
                        i1memcpy@s1 0003         FromMainHigh_recvmsg@msgtype 00CE  
                             _RCREG 000FAE                               _RCSTA 000FAB  
                             _TMR0H 000FD7                               _TMR1H 000FCF  
                             _TMR0L 000FD6                               _TMR1L 000FCE  
                             _SPBRG 000FAF                               _TRISB 000F93  
                             _TXREG 000FAD                               _TXSTA 000FAC  
                        i2memcpy@d1 00B6                          i2memcpy@s1 00B8  
                      ?_init_queues 0001           __size_of_enter_sleep_mode 0006  
                   __end_of_in_main 1B2A                               _count 005B  
      __end_ofi1_ToMainHigh_sendmsg 1EEC          ToMainLow_recvmsg@maxlength 019E  
           timer0_lthread@msgbuffer 0188                               tablat 000FF5  
             ?_uart_retrieve_buffer 0182                               status 000FD8  
          i2ToMainHigh_sendmsg@data 00CD                    __end_ofi1_memcpy 1C72  
                  __end_ofi2_memcpy 1A5A                      WriteUSART@data 0001  
                   __initialization 1CEC              ??i2_ToMainHigh_sendmsg 00CF  
                      __end_of_main 0418                          _ReadTimer1 1FA0  
       __size_of_timer1_int_handler 0030          __size_of_ToMainLow_recvmsg 0042  
        __size_of_ToMainLow_sendmsg 0024       __size_of_FromMainHigh_recvmsg 0042  
             __size_ofi2_in_low_int 0046       __size_of_FromMainHigh_sendmsg 0036  
               __end_of_i2c_lthread 128C                              ??_main 01A6  
                   send_msg@msgtype 018F                       __activetblptr 000002  
                   send_msg@tlength 0193             ??_uart_recv_int_handler 001B  
                            i1l3201 069A                              i1l3053 1C60  
                            i1l3141 04BE                              i1l3213 0066  
                            i1l3047 1C44                              i1l3143 04CE  
                            i1l3071 1968                              i1l3161 0548  
                            i1l3129 0468                              i1l3171 05D8  
                            i1l3219 0070                              i1l3165 0568  
                            i1l3087 136E                              i1l3167 0596  
                            i1l3159 053E                              i1l3193 0670  
                            i1l3177 0612                              i1l3187 0640  
                            i1l3197 0694                              i1l2927 1F52  
                            i2l3305 18D2                          _OpenTimer0 1E9C  
                        _OpenTimer1 1D26                      __CFG_WDTEN$OFF 000000  
                            i2l3273 15C0                              i2l3287 1896  
                            i2l3279 15CA                              i2l3805 0830  
                            i2l3813 08D0                              i2l3807 08A0  
                            i2l3903 0E00                              i2l3809 08B8  
                            i2l3765 094C                              i2l3933 1A1E  
                            i2l3863 1AD6                              i2l3855 1AB4  
                            i2l3767 0964                              i2l3759 0900  
                            i2l3783 0A80                              i2l3919 0EC6  
                            i2l3779 0A68                              i2l3795 07AE  
                            i2l3787 06E2                              i2l3939 1A42  
                            i2l3879 102A                       ??_SleepIfOkay 00BA  
                __size_of_ReadUSART 001E                              _OSCCON 000FD3  
                            _SPBRGH 000FB0                              _SSPADD 000FC8  
                            _SSPBUF 000FC9                         ?i1_send_msg 000B  
                timer0_lthread@tptr 0182           uart_recv_int_handler@data 0022  
                       ?i2_recv_msg 00C0                        i2_in_low_int 1AA0  
                       ?i2_send_msg 00C0                      __CFG_XINST$OFF 000000  
                __size_of_OpenUSART 0092                     _i2c_int_handler 1860  
                   _i2c_master_recv 10D2                     _i2c_master_send 0ABA  
                  OpenTimer0@config 0182                              _ic_ptr 00E8  
                         ??___lwmod 0186                       main@msgbuffer 01A7  
                  __end_of_init_i2c 1688                    OpenTimer1@config 0182  
                            _length 0054                              _memcpy 199E  
                            clear_0 1CF2                              clear_1 1CFE  
                            clear_2 1D0A                              clear_3 1D16  
                            _uc_ptr 0065                              main@ic 01D4  
                            main@uc 01BD                    __end_of_recv_msg 0D94  
                         ??_in_main 0188                    __end_of_send_msg 0FCE  
             timer0_int_handler@val 00D8                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                       init_queue@i 0185            ToMainLow_recvmsg@msgtype 019A  
       ??_i2c_int_handler_master_rx 00B6         ??_i2c_int_handler_master_tx 00B6  
              __size_of_in_high_int 0012              ??_uart_retrieve_buffer 0186  
                i2c_lthread@msgtype 019E                     __CFG_FOSC$HSPLL 000000  
                        __accesstop 0080             __end_of__initialization 1D1C  
        __end_of_ToMainHigh_recvmsg 1BF0          __end_of_ToMainHigh_sendmsg 1DCA  
    __size_of_uart_send_int_handler 0068       __end_of_uart_send_int_handler 199E  
       __end_of_init_timer1_lthread 1F7C                 __end_of_SleepIfOkay 1936  
                       _i2c_lthread 11B4                          _WriteUSART 1F44  
                    __pcstackCOMRAM 0001              __size_ofi2_in_high_int 0012  
                       ?_ReadTimer1 0001                  __size_of_check_msg 0036  
              i1_ToMainHigh_sendmsg 1EC6                   __end_of_ReadUSART 1F2E  
         timer0_int_handler@msgtype 00D6                 __size_ofi1_send_msg 00AA  
                         ?i1_memcpy 0001       __size_of_InterruptHandlerHigh 1600  
       __end_of_InterruptHandlerLow 00C0                           ?i2_memcpy 00B6  
                     _ToMainHigh_MQ 0080                 __size_ofi2_recv_msg 0136  
                  _enter_sleep_mode 1FDE                 __size_ofi2_send_msg 0104  
              timer1_lthread@length 01A0                       ReadUSART@data 0001  
                 __end_of_OpenUSART 1472                       check_msg@qptr 0182  
              timer1_lthread@retval 01A5             ??_block_on_To_msgqueues 0188  
              __size_of_init_queues 006E                          __pbssBANK0 0080  
                        __pbssBANK1 0100                          __pbssBANK2 0200  
                       ?_OpenTimer0 0001                         ?_OpenTimer1 0001  
                        __pnvCOMRAM 0065             __end_of_i2c_int_handler 18CC  
                      ?i2_check_msg 00B6             __end_of_i2c_master_recv 11B4  
           __end_of_i2c_master_send 0C5E                  timer1_lthread@tptr 019C  
         _i2c_int_handler_master_rx 08FE           _i2c_int_handler_master_tx 06E0  
             uart_retrieve_buffer@i 0189               ?i1_ToMainHigh_sendmsg 0017  
                 recv_msg@maxlength 018E                     recv_msg@msgtype 018F  
                   recv_msg@tlength 0196                        ?_Delay1KTCYx 0001  
                  WriteTimer0@timer 00B8                             ?_memcpy 0182  
                  WriteTimer1@timer 0003                       ??_WriteTimer0 00B8  
                     ??_WriteTimer1 0003             __size_of_timer0_lthread 0012  
           __size_of_timer1_lthread 0072                 _sendToMotorPIC_flag 0061  
      __end_of_i2c_configure_master 1B6C                          ??i1_memcpy 0007  
                        _bufferFlag 0114                          ??i2_memcpy 00BC  
                  i1send_msg@length 000D                       i2_in_high_int 1FC4  
                           _SSPCON1 000FC6                 __size_of_ReadTimer1 0012  
                 __end_of_check_msg 1E00                           ?_init_i2c 0182  
                       _SleepIfOkay 18CC                           ?_recv_msg 018C  
                         _ADCResult 0050                          _in_low_int 1A5A  
                           __Hparam 0000                           ?_send_msg 018C  
                           __Lparam 0000          __end_of_timer0_int_handler 1586  
                       ?_WriteUSART 0001                    init_uart_recv@uc 0182  
                           ___lwmod 1472                     __CFG_STVREN$OFF 000000  
                           __pcinit 1CEC                     __size_of_memcpy 005E  
                        _init_queue 1706                             __ramtop 0400  
               __size_of_OpenTimer0 002A                 __size_of_OpenTimer1 0038  
                           __ptext0 00C4                             __ptext1 1CB0  
                           __ptext2 128C                             __ptext3 1780  
                           __ptext4 1472                             __ptext5 1D5E  
                           __ptext6 1F58                             __ptext7 1C72  
                           __ptext8 1F6A                             __ptext9 17F2  
                         _T0CONbits 000FD5                             _in_main 1AE6  
                         _T1CONbits 000FCD                 __end_of_WriteTimer0 1FC4  
               __end_of_WriteTimer1 1FA0                      ?i2_in_high_int 00B6  
                           _msgtype 005F       uart_retrieve_buffer@msgbuffer 0184  
                           _voltage 004D                      __pintcode_body 1586  
      __end_of_FromMainHigh_recvmsg 1C32                end_of_initialization 1D1C  
           timer1_lthread@msgbuffer 01A2        __end_of_FromMainHigh_sendmsg 1D94  
    __size_of_uart_recv_int_handler 02C8          FromMainHigh_sendmsg@length 019B  
                           memcpy@d 0188                             memcpy@n 0186  
                           memcpy@s 018A            i1ToMainHigh_sendmsg@data 0018  
     __end_of_uart_recv_int_handler 06E0              uart_recv_int_handler@i 0020  
                        ??_init_i2c 0184                       __Lmediumconst 0000  
                           int_func 1586                        ??i1_send_msg 0011  
                     ?_uart_lthread 018B             __size_of_init_uart_recv 003E  
                  ?_i2c_int_handler 0001                        ??i2_recv_msg 00C7  
                  ?_i2c_master_recv 0001                    ?_i2c_master_send 0182  
                        ??_recv_msg 0193                        ??i2_send_msg 00C6  
                        ??_send_msg 0192          __end_of_timer1_int_handler 1E9C  
                         _RCSTAbits 000FAB              ??i1_ToMainHigh_sendmsg 001A  
                           postdec2 000FDD                             postinc0 000FEE  
                           postinc2 000FDE           ToMainHigh_sendmsg@msgtype 0198  
     __size_ofi2_ToMainHigh_sendmsg 0036                      _last_reg_recvd 005C  
                __end_ofi1_send_msg 13E0         FromMainHigh_sendmsg@msgtype 0198  
                         _TRISCbits 000F94                  __end_ofi2_recv_msg 0ECA  
                __end_ofi2_send_msg 10D2                 __size_of_WriteUSART 0014  
     FromMainHigh_recvmsg@maxlength 00D2            timer1_int_handler@result 001C  
                    ??_uart_lthread 0193                   main@slave_address 01B4  
                         _TXSTAbits 000FAC                          main@length 01BB  
                       ?_in_low_int 0184               timer0_lthread@msgtype 0184  
              _i2c_configure_master 1B2A                        ?_i2c_lthread 019C  
              __size_ofi2_check_msg 0036            __end_of_enter_sleep_mode 1FE4  
                      ??_ReadTimer1 0003                  _ToMainHigh_recvmsg 1BAE  
                         i1memcpy@d 0007                  _ToMainHigh_sendmsg 1D94  
                         i1memcpy@n 0005                           i1memcpy@s 0009  
                       _BAUDCONbits 000FB8                      _timer0_lthread 1F58  
                       ?_init_queue 0182                           i2memcpy@d 00BC  
                       _WriteTimer0 1FB2                         _WriteTimer1 1F8E  
                         i2memcpy@n 00BA                           i2memcpy@s 00BE  
                    _timer1_lthread 1780                      __end_of_memcpy 19FC  
                 _enable_interrupts 1FD6                __size_of_Delay1KTCYx 0016  
__size_of_i2c_int_handler_master_rx 01BC  __size_of_i2c_int_handler_master_tx 021E  
               ?_ToMainHigh_recvmsg 019A                     ??i2_in_high_int 00B8  
               ?_ToMainHigh_sendmsg 0198                  ?_enable_interrupts 0001  
               start_initialization 1CEC                       ??_in_high_int 0184  
                         _ReadUSART 1F10       uart_recv_int_handler@checkSum 001F  
                     _checksum_flag 005A                   __size_ofi1_memcpy 0040  
       i1ToMainHigh_sendmsg@msgtype 0017                   __size_ofi2_memcpy 005E  
               ??_enable_interrupts 0182                        ??_OpenTimer0 0182  
                      ??_OpenTimer1 0182      __size_of_block_on_To_msgqueues 007E  
                __end_of_ReadTimer1 1FB2       __end_of_block_on_To_msgqueues 1706  
     __size_of_uart_retrieve_buffer 00AA                           _OpenUSART 13E0  
      __end_of_InterruptHandlerHigh 1608                          init_i2c@ic 0182  
              ??_ToMainHigh_recvmsg 019E                ??_ToMainHigh_sendmsg 019B  
             ?_i2c_configure_master 0001                   i2c_lthread@i2cptr 019C  
             _uart_send_int_handler 1936              __end_of_timer0_lthread 1F6A  
            __end_of_timer1_lthread 17F2           __end_of_enable_interrupts 1FDE  
                          ??_memcpy 0188               timer1_lthread@msgtype 019E  
              _FromMainHigh_recvmsg 1BF0                _FromMainHigh_sendmsg 1D5E  
      __size_of_init_timer1_lthread 0012                   i2c_lthread@length 01A0  
                __end_of_OpenTimer0 1EC6                  __end_of_OpenTimer1 1D5E  
                       __pbssCOMRAM 0034                          ?_ReadUSART 0001  
                     ??_init_queues 0186                       __pcstackBANK0 00B6  
                     __pcstackBANK1 0182                 __size_of_in_low_int 0046  
               __CFG_CCP2MX$DEFAULT 000000                     Delay1KTCYx@unit 0182  
          ToMainLow_sendmsg@msgtype 0017        __size_of_InterruptHandlerLow 00A8  
               __end_of_in_high_int 1F8E                          ?_OpenUSART 0182  
                      ?_SleepIfOkay 0001               ToMainLow_recvmsg@data 019C  
                      _ToMainLow_MQ 014C                 __size_of_init_queue 007A  
                    _init_uart_recv 1C72                           _check_msg 1DCA  
                         __pnvBANK0 00E8                   __size_of_init_i2c 0080  
                      recv_msg@data 0191                        ??_WriteUSART 0001  
                      recv_msg@qmsg 0198                        recv_msg@slot 0195  
                      recv_msg@qptr 018C          i2ToMainHigh_sendmsg@length 00CF  
                 __size_of_recv_msg 0136                           __pintcode 0008  
                 __size_of_send_msg 0104                     ?_timer0_lthread 0182  
                          ?___lwmod 0182               ?_FromMainHigh_recvmsg 00CE  
                   ?_timer1_lthread 019C               ?_FromMainHigh_sendmsg 0198  
                       __pintcodelo 0018                           _bufferLen 0052  
            ToMainHigh_recvmsg@data 019C                __end_of_uart_lthread 1CEC  
                          ?_in_main 0186                   WriteTimer0@timer0 00B6  
                _timer0_int_handler 14FC                   WriteTimer1@timer1 0001  
               uart_lthread@msgtype 018D               ToMainLow_sendmsg@data 0018  
        uart_retrieve_buffer@length 0182                 ?_timer0_int_handler 0001  
                __end_of_WriteUSART 1F58                    uart_lthread@uptr 018B  
            __end_of_init_uart_recv 1CB0                 __end_of_init_queues 1860  
             i2c_master_recv@length 0182                            _LATBbits 000F8A  
            ??_i2c_configure_master 0182                     i2check_msg@qptr 00B6  
                        ?_check_msg 0182                            _IPR1bits 000F9F  
                          _PIE1bits 000F9D                           _msgbuffer 0100  
                     ?i2_in_low_int 00B8                            i2u262_45 0812  
                          _PIR1bits 000F9E                            i2u259_45 09F8  
            ?_uart_send_int_handler 0001              ToMainHigh_sendmsg@data 0199  
                          _RCONbits 000FD0      uart_recv_int_handler@bufLength 001E  
                  __CFG_WDTPS$32768 000000                ??_timer0_int_handler 00D3  
              __size_of_i2c_lthread 00D8               i2c_master_send@length 018A  
        __size_of_enable_interrupts 0008                   i1send_msg@msgtype 000E  
                 i1send_msg@tlength 0012                timer0_lthread@length 0186  
                _timer1_int_handler 1E6C                            i1_memcpy 1C32  
              _InterruptHandlerHigh 0008                         ??_ReadUSART 0001  
                          i2_memcpy 19FC                timer0_lthread@msgval 018A  
          FromMainHigh_recvmsg@data 00D0                         _in_high_int 1F7C  
                      send_msg@data 0190                        send_msg@qmsg 0196  
                      send_msg@slot 0195                        send_msg@qptr 018C  
                        _ADCBuffer0 003E                          _ADCBuffer1 0043  
      __end_ofi2_ToMainHigh_sendmsg 1E36               uart_lthread@msgbuffer 0191  
               ?_timer1_int_handler 0001                     ?_init_uart_recv 0182  
                       ??_OpenUSART 0184                     OpenUSART@config 0187  
                    ??i2_in_low_int 00BA                            __Hparam0 0000  
             _uart_recv_int_handler 0418                        ??_in_low_int 0186  
                          __Lparam0 0000                   ?_enter_sleep_mode 0001  
            ??_FromMainHigh_recvmsg 00D2              ??_FromMainHigh_sendmsg 019B  
              ??_timer1_int_handler 001B       __size_ofi1_ToMainHigh_sendmsg 0026  
          __size_of_i2c_int_handler 006C                         _length_flag 005D  
                ??_enter_sleep_mode 00B6            __size_of_i2c_master_recv 00E2  
          __size_of_i2c_master_send 01A4                    __size_of___lwmod 008A  
                      ??_init_queue 0184                        ?_WriteTimer0 00B6  
                      ?_WriteTimer1 0001            FromMainHigh_sendmsg@data 0199  
           ToMainLow_sendmsg@length 001A                   main@t0thread_data 01B2  
             ?_InterruptHandlerHigh 0001                    __size_of_in_main 0044  
                 i2send_msg@msgtype 00C3         ToMainHigh_recvmsg@maxlength 019E  
                 i2send_msg@tlength 00C7             init_timer1_lthread@tptr 0182  
                       _init_queues 17F2                  __end_of_in_low_int 1AA0  
              _sendToSensorPIC_flag 0062                            __ptext10 1706  
                          __ptext11 1608                            __ptext20 1AE6  
                          __ptext12 11B4                            __ptext21 1A5A  
                          __ptext13 0ABA                            __ptext30 1D26  
                          __ptext22 1F7C                            __ptext14 10D2  
                          __ptext31 1E9C                            __ptext23 1DCA  
                          __ptext15 1D94                            __ptext40 1EEC  
                          __ptext24 1F2E                            __ptext16 0ECA  
                          __ptext41 1336                            __ptext33 1936  
                          __ptext25 1B6C                            __ptext17 1B2A  
                          __ptext50 0D94                            __ptext42 1C32  
                          __ptext34 1F44                            __ptext26 1BAE  
                          __ptext18 1FD6                            __ptext51 19FC  
                          __ptext43 1FA0                            __ptext35 0418  
                          __ptext27 0C5E                            __ptext19 1688  
                          __ptext52 1860                            __ptext36 1EC6  
                          __ptext28 199E                            __ptext53 06E0  
                          __ptext45 14FC                            __ptext37 1F10  
                          __ptext29 13E0                            __ptext54 08FE  
                          __ptext46 1E00                            __ptext38 1E6C  
                          __ptext55 18CC                            __ptext47 0FCE  
                          __ptext39 1F8E                            __ptext56 1AA0  
                          __ptext48 1FB2                            __ptext57 1FC4  
                          __ptext49 1BF0                            __ptext58 1E36  
                          __ptext59 1FDE                        _SSP1CON2bits 000FC5  
                    i1send_msg@data 000F      i2c_configure_master@slave_addr 0182  
                    i1send_msg@qmsg 0015                      i1send_msg@slot 0014  
                    i1send_msg@qptr 000B                  uart_lthread@length 018F  
          timer0_int_handler@length 00D4                        _sent_i2c_msg 0063  
                          _init_i2c 1608                 _init_timer1_lthread 1F6A  
                     __size_of_main 0354                       ??i2_check_msg 00B8  
                 main@t1thread_data 01B9                         ??_check_msg 0184  
                __end_of_init_queue 1780                __size_of_SleepIfOkay 006A  
                          _recv_msg 0C5E                            _msg_flag 005E  
                          _send_msg 0ECA                            _uartData 0064  
                    init_queue@qptr 0182               __size_of_uart_lthread 003C  
                    i2recv_msg@data 00C5                      i2recv_msg@qmsg 00CC  
                     ??_Delay1KTCYx 0182                      i2recv_msg@slot 00C9  
                    i2recv_msg@qptr 00C0        __end_of_uart_retrieve_buffer 1336  
               _InterruptHandlerLow 0018                ?_init_timer1_lthread 0182  
                       _OSCTUNEbits 000F9B                          _INTCONbits 000FF2  
                main@i2cthread_data 01B7                      OpenUSART@spbrg 0182  
                          memcpy@d1 0182                            memcpy@s1 0184  
             __end_ofi2_in_high_int 1FD6                    i2send_msg@length 00C2  
                          intlevel1 0000                            intlevel2 0000  
                      _msgtype_flag 0060                ?_InterruptHandlerLow 0001  
                  ___lwmod@dividend 0182              ?_uart_recv_int_handler 0001  
                      _uart_lthread 1CB0               _block_on_To_msgqueues 1688  
                  ??_timer0_lthread 018A         __size_of_ToMainHigh_recvmsg 0042  
       __size_of_ToMainHigh_sendmsg 0036                       _previousValue 0056  
                        _OSCCONbits 000FD3                    ??_timer1_lthread 01A4  
       i2ToMainHigh_sendmsg@msgtype 00CC            ToMainHigh_sendmsg@length 019B  
               __end_ofi2_check_msg 1E6C                i2_ToMainHigh_sendmsg 1E00  
             ??_init_timer1_lthread 0184              ??_InterruptHandlerHigh 00DA  
                 _ToMainLow_recvmsg 1B6C                   _ToMainLow_sendmsg 1EEC  
                   ___lwmod@divisor 0184                __end_ofi2_in_low_int 1AE6  
                ?_ToMainLow_recvmsg 019A                 __end_of_Delay1KTCYx 1F44  
                 ??_i2c_int_handler 00BA                     ___lwmod@counter 0187  
                ?_ToMainLow_sendmsg 0017                   ??_i2c_master_recv 0182  
                 ??_i2c_master_send 0184                  i2c_master_send@msg 0182  
                       _SSPCON2bits 000FC5          ?_i2c_int_handler_master_rx 0001  
        ?_i2c_int_handler_master_tx 0001                i2c_lthread@msgbuffer 01A2  
                    i2send_msg@data 00C4               ??_InterruptHandlerLow 0023  
               ??_ToMainLow_recvmsg 019E                      i2send_msg@qmsg 00CA  
                    i2send_msg@slot 00C9                      i2send_msg@qptr 00C0  
               ??_ToMainLow_sendmsg 001A          i1ToMainHigh_sendmsg@length 001A  
           ??_uart_send_int_handler 0002                    i2c_master_send@i 018B  
                      _USART_Status 0059  
